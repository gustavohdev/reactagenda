{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxListBox\", \"\", {});\n  a.extend(a.jqx._jqxListBox.prototype, {\n    defineInstance: function () {\n      var b = {\n        disabled: false,\n        checkboxSize: 16,\n        checkboxes: false,\n        width: null,\n        height: null,\n        items: new Array(),\n        multiple: false,\n        selectedIndex: -1,\n        selectedIndexes: new Array(),\n        source: null,\n        scrollBarSize: a.jqx.utilities.scrollBarSize,\n        enableHover: true,\n        enableSelection: true,\n        visualItems: new Array(),\n        groups: new Array(),\n        equalItemsWidth: true,\n        itemHeight: -1,\n        visibleItems: new Array(),\n        emptyGroupText: \"Group\",\n        hasThreeStates: false,\n        autoHeight: false,\n        autoItemsHeight: false,\n        roundedcorners: true,\n        touchMode: \"auto\",\n        displayMember: \"\",\n        groupMember: \"\",\n        valueMember: \"\",\n        searchMember: \"\",\n        searchMode: \"startswithignorecase\",\n        incrementalSearch: true,\n        incrementalSearchDelay: 1000,\n        incrementalSearchKeyDownDelay: 300,\n        allowDrag: false,\n        allowDrop: true,\n        dropAction: \"default\",\n        touchModeStyle: \"auto\",\n        keyboardNavigation: true,\n        enableMouseWheel: true,\n        multipleextended: false,\n        selectedValues: new Array(),\n        emptyString: \"\",\n        rtl: false,\n        rendered: null,\n        renderer: null,\n        dragStart: null,\n        dragEnd: null,\n        focusable: true,\n        ready: null,\n        _checkForHiddenParent: true,\n        autoBind: true,\n        _renderOnDemand: false,\n        filterable: false,\n        filterHeight: 27,\n        filterPlaceHolder: \"Looking for\",\n        filterDelay: 100,\n        filterChange: null,\n        aria: {\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        },\n        events: [\"select\", \"unselect\", \"change\", \"checkChange\", \"dragStart\", \"dragEnd\", \"bindingComplete\", \"itemAdd\", \"itemRemove\", \"itemUpdate\"]\n      };\n\n      if (this === a.jqx._jqxListBox.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (c) {\n      var b = this;\n\n      if (a.jqx.utilities.scrollBarSize != 15) {\n        b.scrollBarSize = a.jqx.utilities.scrollBarSize;\n      }\n\n      if (b.width == null) {\n        b.width = 200;\n      }\n\n      if (b.height == null) {\n        b.height = 200;\n      }\n\n      b.renderListBox();\n      var d = b;\n      a.jqx.utilities.resize(b.host, function () {\n        d._updateSize();\n      }, false, b._checkForHiddenParent);\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n\n      this._updateSize();\n    },\n    render: function () {\n      this.renderListBox();\n      this.refresh();\n    },\n    renderListBox: function () {\n      var p = this;\n      var o = p.element.nodeName.toLowerCase();\n\n      if (o == \"select\" || o == \"ul\" || o == \"ol\") {\n        p.field = p.element;\n\n        if (p.field.className) {\n          p._className = p.field.className;\n        }\n\n        var k = {\n          title: p.field.title\n        };\n\n        if (p.field.id.length) {\n          k.id = p.field.id.replace(/[^\\w]/g, \"_\") + \"_jqxListBox\";\n        } else {\n          k.id = a.jqx.utilities.createId() + \"_jqxListBox\";\n        }\n\n        var b = a(\"<div></div>\", k);\n\n        if (!p.width) {\n          p.width = a(p.field).width();\n        }\n\n        if (!p.height) {\n          p.height = a(p.field).outerHeight();\n        }\n\n        p.element.style.cssText = p.field.style.cssText;\n        a(p.field).hide().after(b);\n        var h = p.host.data();\n        p.host = b;\n        p.host.data(h);\n        p.element = b[0];\n        p.element.id = p.field.id;\n        p.field.id = k.id;\n\n        if (p._className) {\n          p.host.addClass(p._className);\n          a(p.field).removeClass(p._className);\n        }\n\n        if (p.field.tabIndex) {\n          var d = p.field.tabIndex;\n          p.field.tabIndex = -1;\n          p.element.tabIndex = d;\n        }\n      } else {\n        if (p.host.find(\"li\").length > 0 || p.host.find(\"option\").length > 0) {\n          var r = a.jqx.parseSourceTag(p.element);\n          p.source = r.items;\n        }\n      }\n\n      p.element.innerHTML = \"\";\n      var p = p;\n      var j = p.element.className;\n      j += \" \" + p.toThemeProperty(\"jqx-listbox\");\n      j += \" \" + p.toThemeProperty(\"jqx-reset\");\n      j += \" \" + p.toThemeProperty(\"jqx-rc-all\");\n      j += \" \" + p.toThemeProperty(\"jqx-widget\");\n      j += \" \" + p.toThemeProperty(\"jqx-widget-content\");\n      p.element.className = j;\n      var i = false;\n      var m = window.getComputedStyle(this.element);\n      var g = parseInt(m.borderLeftWidth) * 2;\n      var c = m.boxSizing;\n\n      if (this.element.offsetWidth === 0) {\n        g = 2;\n      }\n\n      if (c === \"border-box\" || isNaN(g)) {\n        g = 0;\n      }\n\n      if (p.width != null && p.width.toString().indexOf(\"%\") != -1) {\n        p.host.width(p.width);\n\n        if (g > 0) {\n          this.host.css(\"box-sizing\", \"border-box\");\n        }\n\n        i = true;\n      }\n\n      if (p.height != null && p.height.toString().indexOf(\"%\") != -1) {\n        p.host.height(p.height);\n\n        if (p.host.height() == 0) {\n          p.host.height(200);\n        }\n\n        i = true;\n      }\n\n      if (p.width != null && p.width.toString().indexOf(\"px\") != -1) {\n        p.element.style.width = parseInt(p.width) - g + \"px\";\n      } else {\n        if (p.width != undefined && !isNaN(p.width)) {\n          p.element.style.width = parseInt(p.width) - g + \"px\";\n        }\n      }\n\n      if (p.height != null && p.height.toString().indexOf(\"px\") != -1) {\n        p.element.style.height = parseInt(p.height) - g + \"px\";\n      } else {\n        if (p.height != undefined && !isNaN(p.height)) {\n          p.element.style.height = parseInt(p.height) - g + \"px\";\n        }\n      }\n\n      if (p.multiple || p.multipleextended || p.checkboxes) {\n        a.jqx.aria(p, \"aria-multiselectable\", true);\n      } else {\n        a.jqx.aria(p, \"aria-multiselectable\", false);\n      }\n\n      var f = \"<div style='-webkit-appearance: none; background: transparent; outline: none; width:100%; height: 100%; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div style='-webkit-appearance: none; border: none; background: transparent; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; align:left; left: 0px; top: 0px; valign:top; position: relative;'><div id='filter\" + p.element.id + \"' style='display: none; visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><input style='position: absolute;'/></div><div id='listBoxContent' style='-webkit-appearance: none; border: none; background: transparent; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='verticalScrollBar\" + p.element.id + \"' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='horizontalScrollBar\" + p.element.id + \"' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; border: none; position: absolute;'/></div></div>\";\n      p.host.attr(\"role\", \"listbox\");\n      p.element.innerHTML = f;\n\n      if (p._checkForHiddenParent) {\n        p._addInput();\n\n        if (!p.host.attr(\"tabIndex\")) {\n          p.host.attr(\"tabIndex\", 1);\n        }\n      }\n\n      p.filter = a(p.element.firstChild.firstChild.firstChild);\n      p.filterInput = a(p.filter[0].firstChild);\n      p.filterInput.attr(\"placeholder\", p.filterPlaceHolder);\n      p.filterInput.addClass(p.toThemeProperty(\"jqx-widget jqx-listbox-filter-input jqx-input jqx-rc-all\"));\n      p.addHandler(p.filterInput, \"keyup.textchange\", function (s) {\n        if (s.keyCode == 13) {\n          p._search(s);\n        } else {\n          if (p.filterDelay > 0) {\n            if (p._filterTimer) {\n              clearTimeout(p._filterTimer);\n            }\n\n            p._filterTimer = setTimeout(function () {\n              p._search(s);\n            }, p.filterDelay);\n          }\n        }\n\n        s.stopPropagation();\n      });\n      var l = a(p.element.firstChild.firstChild.firstChild.nextSibling.nextSibling);\n\n      if (!p.host.jqxButton) {\n        throw new Error(\"jqxListBox: Missing reference to jqxbuttons.js.\");\n        return;\n      }\n\n      if (!l.jqxScrollBar) {\n        throw new Error(\"jqxListBox: Missing reference to jqxscrollbar.js.\");\n        return;\n      }\n\n      var e = parseInt(p.host.height()) / 2;\n\n      if (e == 0) {\n        e = 10;\n      }\n\n      p.vScrollBar = l.jqxScrollBar({\n        _initialLayout: true,\n        vertical: true,\n        rtl: p.rtl,\n        theme: p.theme,\n        touchMode: p.touchMode,\n        largestep: e\n      });\n      var q = a(p.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling);\n      p.hScrollBar = q.jqxScrollBar({\n        _initialLayout: true,\n        vertical: false,\n        rtl: p.rtl,\n        touchMode: p.touchMode,\n        theme: p.theme\n      });\n      p.content = a(p.element.firstChild.firstChild.firstChild.nextSibling);\n      p.content[0].id = \"listBoxContent\" + p.element.id;\n      p.bottomRight = a(p.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling.nextSibling).addClass(p.toThemeProperty(\"jqx-listbox-bottomright\")).addClass(p.toThemeProperty(\"jqx-scrollbar-state-normal\"));\n      p.bottomRight[0].id = \"bottomRight\" + p.element.id;\n      p.vScrollInstance = a.data(p.vScrollBar[0], \"jqxScrollBar\").instance;\n      p.hScrollInstance = a.data(p.hScrollBar[0], \"jqxScrollBar\").instance;\n\n      if (p.isTouchDevice()) {\n        if (!(a.jqx.browser.msie && a.jqx.browser.version < 9)) {\n          var n = a(\"<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>\");\n          p.content.parent().append(n);\n          p.overlayContent = p.host.find(\".overlay\");\n\n          if (p.filterable) {\n            p.overlayContent.css(\"top\", \"30px\");\n          }\n        }\n      }\n\n      p._updateTouchScrolling();\n\n      p.host.addClass(\"jqx-disableselect\");\n\n      if (p.host.jqxDragDrop) {\n        window.jqxListBoxDragDrop();\n      }\n    },\n    _highlight: function (b, c) {\n      var d = c.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n      return b.replace(new RegExp(\"(\" + d + \")\", \"ig\"), function (e, f) {\n        return \"<b>\" + f + \"</b>\";\n      });\n    },\n    _addInput: function () {\n      var b = this.host.attr(\"name\");\n\n      if (b) {\n        this.host.attr(\"name\", \"\");\n      }\n\n      this.input = a(\"<input type='hidden'/>\");\n      this.host.append(this.input);\n      this.input.attr(\"name\", b);\n    },\n    _updateTouchScrolling: function () {\n      var b = this;\n\n      if (this.isTouchDevice()) {\n        b.enableHover = false;\n        var c = this.overlayContent ? this.overlayContent : this.content;\n        this.removeHandler(a(c), a.jqx.mobile.getTouchEventName(\"touchstart\") + \".touchScroll\");\n        this.removeHandler(a(c), a.jqx.mobile.getTouchEventName(\"touchmove\") + \".touchScroll\");\n        this.removeHandler(a(c), a.jqx.mobile.getTouchEventName(\"touchend\") + \".touchScroll\");\n        this.removeHandler(a(c), \"touchcancel.touchScroll\");\n        a.jqx.mobile.touchScroll(c, b.vScrollInstance.max, function (f, e) {\n          if (e != null && b.vScrollBar.css(\"visibility\") != \"hidden\") {\n            var d = b.vScrollInstance.value;\n            b.vScrollInstance.setPosition(e);\n            b._lastScroll = new Date();\n          }\n\n          if (f != null && b.hScrollBar.css(\"visibility\") != \"hidden\") {\n            var d = b.hScrollInstance.value;\n            b.hScrollInstance.setPosition(f);\n            b._lastScroll = new Date();\n          }\n        }, this.element.id, this.hScrollBar, this.vScrollBar);\n\n        if (b.vScrollBar.css(\"visibility\") != \"visible\" && b.hScrollBar.css(\"visibility\") != \"visible\") {\n          a.jqx.mobile.setTouchScroll(false, this.element.id);\n        } else {\n          a.jqx.mobile.setTouchScroll(true, this.element.id);\n        }\n\n        this._arrange();\n      }\n    },\n    isTouchDevice: function () {\n      var b = a.jqx.mobile.isTouchDevice();\n\n      if (this.touchMode == true) {\n        if (this.touchDevice) {\n          return true;\n        }\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n          return false;\n        }\n\n        this.touchDevice = true;\n        b = true;\n        a.jqx.mobile.setMobileSimulator(this.element);\n      } else {\n        if (this.touchMode == false) {\n          b = false;\n        }\n      }\n\n      if (b && this.touchModeStyle != false) {\n        this.scrollBarSize = a.jqx.utilities.touchScrollBarSize;\n      }\n\n      if (b) {\n        this.host.addClass(this.toThemeProperty(\"jqx-touch\"));\n      }\n\n      return b;\n    },\n    beginUpdate: function () {\n      this.updatingListBox = true;\n    },\n    endUpdate: function () {\n      this.updatingListBox = false;\n\n      this._addItems();\n\n      this._renderItems();\n    },\n    beginUpdateLayout: function () {\n      this.updating = true;\n    },\n    resumeUpdateLayout: function () {\n      this.updating = false;\n      this.vScrollInstance.value = 0;\n\n      this._render(false);\n    },\n    propertiesChangedHandler: function (b, c, d) {\n      if (d.width && d.height && Object.keys(d).length == 2) {\n        b._cachedItemHtml = new Array();\n        b.refresh();\n      }\n    },\n    propertyChangedHandler: function (b, c, e, d) {\n      if (this.isInitialized == undefined || this.isInitialized == false) {\n        return;\n      }\n\n      if (e == d) {\n        return;\n      }\n\n      if (b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && Object.keys(b.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (c == \"_renderOnDemand\") {\n        b._render(false, true);\n\n        if (b.selectedIndex != -1) {\n          var f = b.selectedIndex;\n          b.selectedIndex = -1;\n          b._stopEvents = true;\n          b.selectIndex(f, false, true);\n\n          if (b.selectedIndex == -1) {\n            b.selectedIndex = f;\n          }\n\n          b._stopEvents = false;\n        }\n      }\n\n      if (c == \"filterable\") {\n        b.refresh();\n      }\n\n      if (c == \"filterHeight\") {\n        b._arrange();\n      }\n\n      if (c == \"filterPlaceHolder\") {\n        b.filterInput.attr(\"placeholder\", d);\n      }\n\n      if (c == \"renderer\") {\n        b._cachedItemHtml = new Array();\n        b.refresh();\n      }\n\n      if (c == \"itemHeight\" || c === \"checkboxSize\") {\n        b.refresh();\n      }\n\n      if (c == \"source\" || c == \"checkboxes\") {\n        if (d == null && e && e.unbindBindingUpdate) {\n          e.unbindBindingUpdate(b.element.id);\n          e.unbindDownloadComplete(b.element.id);\n        }\n\n        b.clearSelection();\n        b.refresh();\n      }\n\n      if (c == \"scrollBarSize\" || c == \"equalItemsWidth\") {\n        if (d != e) {\n          b._updatescrollbars();\n        }\n      }\n\n      if (c == \"disabled\") {\n        b._renderItems();\n\n        b.vScrollBar.jqxScrollBar({\n          disabled: d\n        });\n        b.hScrollBar.jqxScrollBar({\n          disabled: d\n        });\n      }\n\n      if (c == \"touchMode\" || c == \"rtl\") {\n        b._removeHandlers();\n\n        b.vScrollBar.jqxScrollBar({\n          touchMode: d\n        });\n        b.hScrollBar.jqxScrollBar({\n          touchMode: d\n        });\n\n        if (c == \"touchMode\") {\n          if (!(a.jqx.browser.msie && a.jqx.browser.version < 9)) {\n            var h = a(\"<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>\");\n            b.content.parent().append(h);\n            b.overlayContent = b.host.find(\".overlay\");\n          }\n        }\n\n        if (b.filterable && b.filterInput) {\n          if (c == \"rtl\" && d) {\n            b.filterInput.addClass(b.toThemeProperty(\"jqx-rtl\"));\n          } else {\n            if (c == \"rtl\" && !d) {\n              b.filterInput.removeClass(b.toThemeProperty(\"jqx-rtl\"));\n            }\n          }\n\n          b._arrange();\n        }\n\n        b._updateTouchScrolling();\n\n        b._addHandlers();\n\n        b._render(false);\n      }\n\n      if (!this.updating) {\n        if (c == \"width\" || c == \"height\") {\n          b._updateSize();\n        }\n      }\n\n      if (c == \"theme\") {\n        if (e != d) {\n          b.hScrollBar.jqxScrollBar({\n            theme: b.theme\n          });\n          b.vScrollBar.jqxScrollBar({\n            theme: b.theme\n          });\n          b.host.removeClass();\n          b.host.addClass(b.toThemeProperty(\"jqx-listbox\"));\n          b.host.addClass(b.toThemeProperty(\"jqx-widget\"));\n          b.host.addClass(b.toThemeProperty(\"jqx-widget-content\"));\n          b.host.addClass(b.toThemeProperty(\"jqx-reset\"));\n          b.host.addClass(b.toThemeProperty(\"jqx-rc-all\"));\n          b.refresh();\n        }\n      }\n\n      if (c == \"selectedIndex\") {\n        b.clearSelection();\n        b.selectIndex(d, true);\n      }\n\n      if (c == \"displayMember\" || c == \"valueMember\") {\n        if (e != d) {\n          var g = b.selectedIndex;\n          b.refresh();\n          b.selectedIndex = g;\n          b.selectedIndexes[g] = g;\n        }\n\n        b._renderItems();\n      }\n\n      if (c == \"autoHeight\") {\n        if (e != d) {\n          b._render(false);\n        } else {\n          b._updatescrollbars();\n\n          b._renderItems();\n        }\n      }\n\n      if (b._checkForHiddenParent && a.jqx.isHidden(b.host)) {\n        a.jqx.utilities.resize(this.host, function () {\n          b._updateSize();\n        }, false, b._checkForHiddenParent);\n      }\n    },\n    loadFromSelect: function (g) {\n      if (g == null) {\n        return;\n      }\n\n      var c = \"#\" + g;\n      var d = a(c);\n\n      if (d.length > 0) {\n        var b = a.jqx.parseSourceTag(d[0]);\n        var f = b.items;\n        var e = b.index;\n        this.source = f;\n        this.fromSelect = true;\n        this.clearSelection();\n        this.selectedIndex = e;\n        this.selectedIndexes[this.selectedIndex] = this.selectedIndex;\n        this.refresh();\n      }\n    },\n    invalidate: function () {\n      this._cachedItemHtml = [];\n\n      this._renderItems();\n\n      this.virtualSize = null;\n\n      this._updateSize();\n    },\n    refresh: function (c) {\n      var b = this;\n\n      if (this.vScrollBar == undefined) {\n        return;\n      }\n\n      this.itemHeight = parseInt(this.itemHeight);\n      this._cachedItemHtml = [];\n      this.visibleItems = new Array();\n\n      var d = function (e) {\n        if (e == true) {\n          if (b.selectedIndex != -1) {\n            var f = b.selectedIndex;\n            b.selectedIndex = -1;\n            b._stopEvents = true;\n            b.selectIndex(f, false, true);\n\n            if (b.selectedIndex == -1) {\n              b.selectedIndex = f;\n            }\n\n            b._stopEvents = false;\n          }\n        }\n      };\n\n      if (this.itemswrapper != null) {\n        this.itemswrapper.remove();\n        this.itemswrapper = null;\n      }\n\n      if (a.jqx.dataAdapter && this.source != null && this.source._source) {\n        this.databind(this.source, c);\n        d(c);\n        return;\n      }\n\n      if (this.autoBind || !this.autoBind && !c) {\n        if (this.field) {\n          this.loadSelectTag();\n        }\n\n        this.items = this.loadItems(this.source);\n      }\n\n      this._render(false, c == true);\n\n      d(c);\n\n      this._raiseEvent(\"6\");\n    },\n    loadSelectTag: function () {\n      var b = a.jqx.parseSourceTag(this.field);\n      this.source = b.items;\n\n      if (this.selectedIndex == -1) {\n        this.selectedIndex = b.index;\n      }\n    },\n    _render: function (c, b) {\n      if (this._renderOnDemand) {\n        this.visibleItems = new Array();\n        this.renderedVisibleItems = new Array();\n\n        this._renderItems();\n\n        return;\n      }\n\n      this._addItems();\n\n      this._renderItems();\n\n      this.vScrollInstance.setPosition(0);\n      this._cachedItemHtml = new Array();\n\n      if (c == undefined || c) {\n        if (this.items != undefined && this.items != null) {\n          if (this.selectedIndex >= 0 && this.selectedIndex < this.items.length) {\n            this.selectIndex(this.selectedIndex, true, true, true);\n          }\n        }\n      }\n\n      if (this.allowDrag && this._enableDragDrop) {\n        this._enableDragDrop();\n\n        if (this.isTouchDevice()) {\n          this._removeHandlers();\n\n          if (this.overlayContent) {\n            this.overlayContent.remove();\n            this.overlayContent = null;\n          }\n\n          this._updateTouchScrolling();\n\n          this._addHandlers();\n\n          return;\n        }\n      }\n\n      this._updateTouchScrolling();\n\n      if (this.rendered) {\n        this.rendered();\n      }\n\n      if (this.ready) {\n        this.ready();\n      }\n    },\n    _hitTest: function (c, f) {\n      if (this.filterable) {\n        f -= this.filterHeight;\n\n        if (f < 0) {\n          f = 0;\n        }\n      }\n\n      var e = parseInt(this.vScrollInstance.value);\n\n      var b = this._searchFirstVisibleIndex(f + e, this.renderedVisibleItems);\n\n      if (this.renderedVisibleItems[b] != undefined && this.renderedVisibleItems[b].isGroup) {\n        return null;\n      }\n\n      if (this.renderedVisibleItems.length > 0) {\n        var d = this.renderedVisibleItems[this.renderedVisibleItems.length - 1];\n\n        if (d.height + d.top < f + e) {\n          return null;\n        }\n      }\n\n      b = this._searchFirstVisibleIndex(f + e);\n      return this.visibleItems[b];\n      return null;\n    },\n    _searchFirstVisibleIndex: function (f, g) {\n      if (f == undefined) {\n        f = parseInt(this.vScrollInstance.value);\n      }\n\n      var d = 0;\n\n      if (g == undefined || g == null) {\n        g = this.visibleItems;\n      }\n\n      var b = g.length;\n\n      while (d <= b) {\n        var c = parseInt((d + b) / 2);\n        var e = g[c];\n\n        if (e == undefined) {\n          break;\n        }\n\n        if (e.initialTop > f && e.initialTop + e.height > f) {\n          b = c - 1;\n        } else {\n          if (e.initialTop < f && e.initialTop + e.height <= f) {\n            d = c + 1;\n          } else {\n            return c;\n            break;\n          }\n        }\n      }\n\n      return 0;\n    },\n    _renderItems: function () {\n      if (this.items == undefined || this.items.length == 0) {\n        this.visibleItems = new Array();\n        return;\n      }\n\n      if (this.updatingListBox == true) {\n        return;\n      }\n\n      var O = this.isTouchDevice();\n      var H = this.vScrollInstance;\n      var h = this.hScrollInstance;\n      var g = parseInt(H.value);\n      var f = parseInt(h.value);\n\n      if (this.rtl) {\n        if (this.hScrollBar[0].style.visibility != \"hidden\") {\n          f = h.max - f;\n        }\n      }\n\n      var C = this.items.length;\n      var N = this.host.width();\n      var L = parseInt(this.content[0].style.width);\n      var b = L + parseInt(h.max);\n      var r = parseInt(this.vScrollBar[0].style.width) + 2;\n\n      if (this.vScrollBar[0].style.visibility == \"hidden\") {\n        r = 0;\n      }\n\n      if (this.hScrollBar[0].style.visibility != \"visible\") {\n        b = L;\n      }\n\n      var l = this._getVirtualItemsCount();\n\n      var M = new Array();\n      var G = 0;\n      var F = parseInt(this.element.style.height) + 2;\n\n      if (this.element.style.height.indexOf(\"%\") != -1) {\n        F = this.host.outerHeight();\n      }\n\n      if (isNaN(F)) {\n        F = 0;\n      }\n\n      var u = 0;\n      var t = 0;\n      var R = 0;\n\n      if (H.value == 0 || this.visibleItems.length == 0) {\n        for (var s = 0; s < this.items.length; s++) {\n          var z = this.items[s];\n\n          if (z.visible) {\n            z.top = -g;\n            z.initialTop = -g;\n\n            if (!z.isGroup && z.visible) {\n              this.visibleItems[t++] = z;\n              z.visibleIndex = t - 1;\n            }\n\n            this.renderedVisibleItems[R++] = z;\n            z.left = -f;\n            var c = z.top + z.height;\n\n            if (c >= 0 && z.top - z.height <= F) {\n              M[G++] = {\n                index: s,\n                item: z\n              };\n            }\n\n            g -= z.height;\n            g--;\n          }\n        }\n      }\n\n      var m = g > 0 ? this._searchFirstVisibleIndex(this.vScrollInstance.value, this.renderedVisibleItems) : 0;\n      var P = 0;\n      G = 0;\n      var A = this.vScrollInstance.value;\n      var K = 0;\n\n      while (P < 100 + F) {\n        var z = this.renderedVisibleItems[m];\n\n        if (z == undefined) {\n          break;\n        }\n\n        if (z.visible) {\n          z.left = -f;\n          var c = z.top + z.height - A;\n\n          if (c >= 0 && z.initialTop - A - z.height <= 2 * F) {\n            M[G++] = {\n              index: m,\n              item: z\n            };\n          }\n        }\n\n        m++;\n\n        if (z.visible) {\n          P += z.initialTop - A + z.height - P;\n        }\n\n        K++;\n\n        if (K > this.items.length - 1) {\n          break;\n        }\n      }\n\n      if (this._renderOnDemand) {\n        return;\n      }\n\n      var p = this.toThemeProperty(\"jqx-listitem-state-normal\") + \" \" + this.toThemeProperty(\"jqx-item\");\n      var i = this.toThemeProperty(\"jqx-listitem-state-group\");\n      var Q = this.toThemeProperty(\"jqx-listitem-state-disabled\") + \" \" + this.toThemeProperty(\"jqx-fill-state-disabled\");\n\n      if (this.checkboxes) {\n        p += \" checkboxes\";\n      }\n\n      var D = 0;\n      var n = this;\n\n      for (var s = 0; s < this.visualItems.length; s++) {\n        var E = this.visualItems[s];\n\n        var J = function () {\n          var y = E[0].firstChild;\n\n          if (n.checkboxes) {\n            y = E[0].lastChild;\n          }\n\n          if (y != null) {\n            y.style.visibility = \"hidden\";\n            y.className = \"\";\n          }\n\n          if (n.checkboxes) {\n            var S = E[0].firstChild;\n            S.style.visibility = \"hidden\";\n          }\n        };\n\n        if (s < M.length) {\n          var z = M[s].item;\n\n          if (z.initialTop - A >= F) {\n            J();\n            continue;\n          }\n\n          var B = a(E[0].firstChild);\n\n          if (this.checkboxes) {\n            B = a(E[0].lastChild);\n          }\n\n          if (B.length == 0) {\n            continue;\n          }\n\n          if (B[0] == null) {\n            continue;\n          }\n\n          B[0].className = \"\";\n          B[0].style.display = \"block\";\n          B[0].style.visibility = \"inherit\";\n          var q = \"\";\n\n          if (!z.isGroup && !this.selectedIndexes[z.index] >= 0) {\n            q = p;\n          } else {\n            q = i;\n          }\n\n          if (z.disabled || this.disabled) {\n            q += \" \" + Q;\n          }\n\n          if (this.roundedcorners) {\n            q += \" \" + this.toThemeProperty(\"jqx-rc-all\");\n          }\n\n          if (O) {\n            q += \" \" + this.toThemeProperty(\"jqx-listitem-state-normal-touch\");\n          }\n\n          B[0].className = q;\n\n          if (this.renderer) {\n            if (!z.key) {\n              z.key = this.generatekey();\n            }\n\n            if (!this._cachedItemHtml) {\n              this._cachedItemHtml = new Array();\n            }\n\n            if (this._cachedItemHtml[z.key]) {\n              if (B[0].innerHTML != this._cachedItemHtml[z.key]) {\n                B[0].innerHTML = this._cachedItemHtml[z.key];\n              }\n            } else {\n              var x = this.renderer(z.index, z.label, z.value);\n              B[0].innerHTML = x;\n              this._cachedItemHtml[z.key] = B[0].innerHTML;\n            }\n          } else {\n            if (this.itemHeight !== -1) {\n              var k = 2 + 2 * parseInt(B.css(\"padding-top\"));\n              B[0].style.lineHeight = z.height - k + \"px\";\n              B.css(\"vertical-align\", \"middle\");\n            }\n\n            if (z.html != null && z.html.toString().length > 0) {\n              B[0].innerHTML = z.html;\n            } else {\n              if (z.label != null || z.value != null) {\n                if (z.label != null) {\n                  if (B[0].innerHTML !== z.label) {\n                    B[0].innerHTML = z.label;\n                  }\n\n                  if (a.trim(z.label) == \"\") {\n                    B[0].innerHTML = this.emptyString;\n\n                    if (this.emptyString == \"\") {\n                      B[0].style.height = z.height - 8 + \"px\";\n                    }\n                  }\n\n                  if (!this.incrementalSearch && !z.disabled) {\n                    if (this.searchString != undefined && this.searchString != \"\") {\n                      B[0].innerHTML = this._highlight(z.label.toString(), this.searchString);\n                    }\n                  }\n                } else {\n                  if (z.label === null) {\n                    B[0].innerHTML = this.emptyString;\n\n                    if (this.emptyString == \"\") {\n                      B[0].style.height = z.height - 8 + \"px\";\n                    }\n                  } else {\n                    if (B[0].innerHTML !== z.value) {\n                      B[0].innerHTML = z.value;\n                    } else {\n                      if (z.label == \"\") {\n                        B[0].innerHTML = \" \";\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (z.label == \"\" || z.label == null) {\n                  B[0].innerHTML = \"\";\n                  B[0].style.height = z.height - 8 + \"px\";\n                }\n              }\n            }\n          }\n\n          E[0].style.left = z.left + \"px\";\n          E[0].style.top = z.initialTop - A + \"px\";\n          z.element = B[0];\n\n          if (this.isMaterialized() && !this.renderer) {\n            if (this._checkForHiddenParent) {\n              a(z.element).addClass(\"ripple\");\n              a.jqx.ripple(a(z.element));\n            }\n          }\n\n          if (z.title) {\n            B[0].title = z.title;\n          }\n\n          if (this.equalItemsWidth && !z.isGroup) {\n            if (u == 0) {\n              var d = parseInt(b);\n              var w = parseInt(B.outerWidth()) - parseInt(B.width());\n              d -= w;\n              var I = 1;\n\n              if (I != null) {\n                I = parseInt(I);\n              } else {\n                I = 0;\n              }\n\n              if (this.host.css(\"box-sizing\") === \"border-box\") {\n                d -= 2;\n              }\n\n              u = d;\n\n              if (this.checkboxes && this.hScrollBar[0].style.visibility == \"hidden\") {\n                u -= this.checkboxSize + 13;\n              }\n            }\n\n            if (L > this.virtualSize.width) {\n              B[0].style.width = u + \"px\";\n              z.width = u;\n            } else {\n              B[0].style.width = -4 + this.virtualSize.width + \"px\";\n              z.width = this.virtualSize.width - 4;\n            }\n          } else {\n            if (B.width() < this.host.width()) {\n              B.width(this.host.width() - 2);\n            }\n          }\n\n          if (this.rtl) {\n            B[0].style.textAlign = \"right\";\n          }\n\n          if (this.autoItemsHeight) {\n            B[0].style.whiteSpace = \"pre-line\";\n            B.width(u);\n            z.width = u;\n          }\n\n          D = 0;\n\n          if (this.checkboxes && !z.isGroup) {\n            if (D == 0) {\n              D = (z.height - this.checkboxSize - 3) / 2;\n              D = parseInt(D);\n              D++;\n            }\n\n            var e = a(E.children()[0]);\n            e[0].item = z;\n\n            if (!this.rtl) {\n              var o = this.checkboxSize + 9;\n\n              if (B[0].style.left != o + \"px\") {\n                B[0].style.left = o + \"px\";\n              }\n            } else {\n              if (B[0].style.left != \"0px\") {\n                B[0].style.left = \"0px\";\n              }\n            }\n\n            if (this.rtl) {\n              e.css(\"left\", 8 + z.width + \"px\");\n            }\n\n            e[0].style.top = D + \"px\";\n            e[0].style.display = \"block\";\n            e[0].style.visibility = \"inherit\";\n            var v = z.checked;\n            var j = z.checked ? \" \" + this.toThemeProperty(\"jqx-checkbox-check-checked\") : \"\";\n            e[0].setAttribute(\"checked\", z.checked);\n\n            if (e[0].firstChild && e[0].firstChild.firstChild && e[0].firstChild.firstChild.firstChild) {\n              if (e[0].firstChild.firstChild) {\n                if (v) {\n                  e[0].firstChild.firstChild.firstChild.className = j;\n                } else {\n                  if (v === false) {\n                    e[0].firstChild.firstChild.firstChild.className = \"\";\n                  } else {\n                    if (v === null) {\n                      e[0].firstChild.firstChild.firstChild.className = this.toThemeProperty(\"jqx-checkbox-check-indeterminate\");\n                    }\n                  }\n                }\n              }\n            }\n\n            if (a.jqx.ariaEnabled) {\n              if (v) {\n                E[0].setAttribute(\"aria-selected\", true);\n              } else {\n                E[0].removeAttribute(\"aria-selected\");\n              }\n            }\n          } else {\n            if (this.checkboxes) {\n              var e = a(E.children()[0]);\n              e.css({\n                display: \"none\",\n                visibility: \"inherit\"\n              });\n            }\n          }\n\n          if (!z.disabled && (!this.filterable && this.selectedIndexes[z.visibleIndex] >= 0 || z.selected && this.filterable)) {\n            B.addClass(this.toThemeProperty(\"jqx-listitem-state-selected\"));\n            B.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n            if (a.jqx.ariaEnabled) {\n              E[0].setAttribute(\"aria-selected\", true);\n              this._activeElement = E[0];\n            }\n          } else {\n            if (!this.checkboxes) {\n              if (a.jqx.ariaEnabled) {\n                E[0].removeAttribute(\"aria-selected\");\n              }\n            }\n          }\n        } else {\n          J();\n        }\n      }\n    },\n    generatekey: function () {\n      var b = function () {\n        return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n      };\n\n      return b() + b() + \"-\" + b() + \"-\" + b() + \"-\" + b() + \"-\" + b() + b() + b();\n    },\n    _calculateVirtualSize: function (l) {\n      if (this._renderOnDemand) {\n        return;\n      }\n\n      var p = 0;\n      var n = 2;\n      var g = 0;\n      var o = document.createElement(\"span\");\n\n      if (this.equalItemsWidth) {\n        a(o).css(\"float\", \"left\");\n      }\n\n      o.style.whiteSpace = \"pre\";\n      var h = 0;\n      var i = undefined === l ? this.host.outerHeight() : l + 2;\n      document.body.appendChild(o);\n      var e = this.items.length;\n      var j = this.host.width();\n\n      if (this.autoItemsHeight) {\n        j -= 10;\n\n        if (this.vScrollBar.css(\"visibility\") != \"hidden\") {\n          j -= 20;\n        }\n      }\n\n      if (this.autoItemsHeight || this.renderer || this.groups.length >= 1 || e > 0 && this.items[0].html != null && this.items[0].html != \"\") {\n        for (var g = 0; g < e; g++) {\n          var s = this.items[g];\n\n          if (s.isGroup && s.label == \"\" && s.html == \"\") {\n            continue;\n          }\n\n          if (!s.visible) {\n            continue;\n          }\n\n          var d = \"\";\n\n          if (!s.isGroup) {\n            d += this.toThemeProperty(\"jqx-widget jqx-listitem-state-normal jqx-rc-all\");\n          } else {\n            d += this.toThemeProperty(\"jqx-listitem-state-group jqx-rc-all\");\n          }\n\n          d += \" \" + this.toThemeProperty(\"jqx-fill-state-normal\");\n\n          if (this.isTouchDevice()) {\n            d += \" \" + this.toThemeProperty(\"jqx-touch\");\n          }\n\n          o.className = d;\n\n          if (this.autoItemsHeight) {\n            o.style.whiteSpace = \"pre-line\";\n            var u = this.checkboxSize + 9;\n            var c = this.checkboxes ? -u : 0;\n            o.style.width = c + j + \"px\";\n          }\n\n          if (this.renderer) {\n            var k = this.renderer(s.index, s.label, s.value);\n            o.innerHTML = k;\n          } else {\n            if (s.html != null && s.html.toString().length > 0) {\n              o.innerHTML = s.html;\n            } else {\n              if (s.label != null || s.value != null) {\n                if (s.label != null) {\n                  o.innerHTML = s.label;\n\n                  if (s.label == \"\") {\n                    o.innerHTML = \"Empty\";\n                  }\n                } else {\n                  o.innerHTML = s.value;\n                }\n              }\n            }\n          }\n\n          var r = o.offsetHeight;\n          var t = o.offsetWidth;\n\n          if (this.itemHeight > -1) {\n            r = this.itemHeight;\n          }\n\n          s.height = r;\n          s.width = t;\n          r++;\n          n += r;\n          p = Math.max(p, t);\n\n          if (n <= i) {\n            h++;\n          }\n        }\n      } else {\n        var n = 0;\n        var m = 0;\n        var b = \"\";\n        var v = 0;\n        var f = 0;\n        var q = -1;\n\n        for (var g = 0; g < e; g++) {\n          var s = this.items[g];\n\n          if (s.isGroup && s.label == \"\" && s.html == \"\") {\n            continue;\n          }\n\n          if (!s.visible) {\n            continue;\n          }\n\n          q++;\n          var d = \"\";\n\n          if (q == 0) {\n            d += this.toThemeProperty(\"jqx-listitem-state-normal jqx-rc-all\");\n            d += \" \" + this.toThemeProperty(\"jqx-fill-state-normal\");\n            d += \" \" + this.toThemeProperty(\"jqx-widget\");\n            d += \" \" + this.toThemeProperty(\"jqx-listbox\");\n            d += \" \" + this.toThemeProperty(\"jqx-widget-content\");\n\n            if (this.isTouchDevice()) {\n              d += \" \" + this.toThemeProperty(\"jqx-touch\");\n              d += \" \" + this.toThemeProperty(\"jqx-listitem-state-normal-touch\");\n            }\n\n            o.className = d;\n\n            if (this.autoItemsHeight) {\n              o.style.whiteSpace = \"pre-line\";\n              var u = this.checkboxSize + 9;\n              var c = this.checkboxes ? -u : 0;\n              o.style.width = c + j + \"px\";\n            }\n\n            if (s.html == null || s.label == \"\" || s.label == null) {\n              o.innerHTML = \"Item\";\n            } else {\n              if (s.html != null && s.html.toString().length > 0) {\n                o.innerHTML = s.html;\n              } else {\n                if (s.label != null || s.value != null) {\n                  if (s.label != null) {\n                    if (s.label.toString().match(new RegExp(\"\\\\w\")) != null || s.label.toString().match(new RegExp(\"\\\\d\")) != null) {\n                      o.innerHTML = s.label;\n                    } else {\n                      o.innerHTML = \"Item\";\n                    }\n                  } else {\n                    o.innerHTML = s.value;\n                  }\n                }\n              }\n            }\n\n            var r = 1 + o.offsetHeight;\n\n            if (this.itemHeight > -1) {\n              r = this.itemHeight;\n            }\n\n            m = r;\n          }\n\n          if (v != undefined) {\n            f = v;\n          }\n\n          if (s.html != null && s.html.toString().length > 0) {\n            v = Math.max(v, s.html.toString().length);\n\n            if (f != v) {\n              b = s.html;\n            }\n          } else {\n            if (s.label != null) {\n              v = Math.max(v, s.label.length);\n\n              if (f != v) {\n                b = s.label;\n              }\n            } else {\n              if (s.value != null) {\n                v = Math.max(v, s.value.length);\n\n                if (f != v) {\n                  b = s.value;\n                }\n              }\n            }\n          }\n\n          s.height = m;\n          n += m;\n          n++;\n\n          if (n <= i) {\n            h++;\n          }\n        }\n\n        o.innerHTML = b;\n        p = o.offsetWidth;\n      }\n\n      n += 2;\n\n      if (h < 10) {\n        h = 10;\n      }\n\n      if (this.filterable) {\n        n += this.filterHeight;\n      }\n\n      n -= 4;\n      o.parentNode.removeChild(o);\n      return {\n        width: p,\n        height: n,\n        itemsPerPage: h\n      };\n    },\n    _getVirtualItemsCount: function () {\n      if (this.virtualItemsCount == 0) {\n        var b = parseInt(this.host.height()) / 5;\n\n        if (b > this.items.length) {\n          b = this.items.length;\n        }\n\n        return b;\n      } else {\n        return this.virtualItemsCount;\n      }\n    },\n    _addItems: function (r) {\n      if (this._renderOnDemand) {\n        return;\n      }\n\n      var v = this;\n\n      if (v.updatingListBox == true) {\n        return;\n      }\n\n      if (v.items == undefined || v.items.length == 0) {\n        v.virtualSize = {\n          width: 0,\n          height: 0,\n          itemsPerPage: 0\n        };\n\n        v._updatescrollbars();\n\n        v.renderedVisibleItems = new Array();\n\n        if (v.itemswrapper) {\n          v.itemswrapper.children().remove();\n        }\n\n        return;\n      }\n\n      var h = v.host.height();\n\n      if (r == false) {\n        var b = v._calculateVirtualSize(h);\n\n        var g = b.itemsPerPage * 2;\n\n        if (v.autoHeight) {\n          g = v.items.length;\n        }\n\n        v.virtualItemsCount = Math.min(g, v.items.length);\n        var q = b.width;\n        v.virtualSize = b;\n\n        v._updatescrollbars();\n\n        return;\n      }\n\n      var n = this;\n      var l = 0;\n      v.visibleItems = new Array();\n      v.renderedVisibleItems = new Array();\n\n      v._removeHandlers();\n\n      if (v.allowDrag && v._enableDragDrop) {\n        v.itemswrapper = null;\n      }\n\n      if (v.itemswrapper == null) {\n        v.content[0].innerHTML = \"\";\n        v.itemswrapper = a('<div style=\"outline: 0 none; overflow:hidden; width:100%; position: relative;\"></div>');\n        v.itemswrapper[0].style.height = 2 * h + \"px\";\n        v.content[0].appendChild(v.itemswrapper[0]);\n      }\n\n      var b = v._calculateVirtualSize(h);\n\n      var g = b.itemsPerPage * 2;\n\n      if (v.autoHeight) {\n        g = v.items.length;\n      }\n\n      v.virtualItemsCount = Math.min(g, v.items.length);\n      var v = this;\n      var q = b.width;\n      v.virtualSize = b;\n      var c = Math.max(v.host.width(), 17 + b.width);\n      v.itemswrapper[0].style.width = c + \"px\";\n      var e = 0;\n      var i = \"\";\n      var f = a.jqx.browser.msie && a.jqx.browser.version < 9;\n      var s = f ? ' unselectable=\"on\"' : \"\";\n\n      for (var j = e; j < v.virtualItemsCount; j++) {\n        var u = v.items[j];\n        var p = \"listitem\" + j + v.element.id;\n\n        if (v.theme != \"\") {\n          i += \"<div\" + s + \" role='option' id='\" + p + \"' class='jqx-listitem-element jqx-listitem-element-\" + v.theme + \"'>\";\n        } else {\n          i += \"<div\" + s + \" role='option' id='\" + p + \"' class='jqx-listitem-element'>\";\n        }\n\n        if (v.checkboxes) {\n          var w = this.checkboxSize + 8;\n          i += '<div style=\"background-color: transparent; padding: 0; margin: 0; overflow:hidden; position: absolute; float: left; width: ' + w + \"px; height:  \" + w + 'px;\" class=\"' + v.toThemeProperty(\"jqx-checkbox\") + ' chkbox\">';\n          var o = '<div class=\"' + v.toThemeProperty(\"jqx-checkbox-default\") + \" \" + v.toThemeProperty(\"jqx-fill-state-normal\") + \" \" + v.toThemeProperty(\"jqx-rc-all\") + '\"><div style=\"cursor: pointer; width:  ' + this.checkboxSize + \"px; height:  \" + this.checkboxSize + 'px;\">';\n          var x = u.checked ? \" \" + v.toThemeProperty(\"jqx-checkbox-check-checked\") : \"\";\n          o += '<span style=\"width: ' + this.checkboxSize + \"px; height:  \" + this.checkboxSize + 'px;\" class=\"checkBoxCheck' + x + '\"></span>';\n          o += \"</div></div>\";\n          i += o;\n          i += \"</div>\";\n        }\n\n        i += \"<span\" + s + \" style='white-space: pre; -ms-touch-action: none;'></span></div>\";\n      }\n\n      if (n.WinJS) {\n        v.itemswrapper.html(i);\n      } else {\n        v.itemswrapper[0].innerHTML = i;\n      }\n\n      var d = v.itemswrapper.children();\n\n      for (var j = e; j < v.virtualItemsCount; j++) {\n        var u = v.items[j];\n        var t = a(d[j]);\n\n        if (v.allowDrag && v._enableDragDrop) {\n          t.addClass(\"draggable\");\n        }\n\n        if (v.checkboxes) {\n          var k = a(t.children()[0]);\n          t.css(\"float\", \"left\");\n          var m = a(t[0].firstChild);\n          m.css(\"float\", \"left\");\n        }\n\n        t[0].style.height = u.height + \"px\";\n        t[0].style.top = l + \"px\";\n        l += u.height + 1;\n        v.visualItems[j] = t;\n      }\n\n      v._addHandlers();\n\n      v._updatescrollbars();\n\n      if (v.autoItemsHeight) {\n        var b = v._calculateVirtualSize(h);\n\n        var g = b.itemsPerPage * 2;\n\n        if (v.autoHeight) {\n          g = v.items.length;\n        }\n\n        v.virtualItemsCount = Math.min(g, v.items.length);\n        var v = this;\n        var q = b.width;\n        v.virtualSize = b;\n\n        v._updatescrollbars();\n      }\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        v.host.attr(\"hideFocus\", true);\n        v.host.find(\"div\").attr(\"hideFocus\", true);\n      }\n    },\n    _updatescrollbars: function () {\n      var k = this;\n\n      if (!k.virtualSize) {\n        return;\n      }\n\n      var n = k.virtualSize.height;\n      var j = k.virtualSize.width;\n      var f = k.vScrollInstance;\n      var e = k.hScrollInstance;\n\n      k._arrange(false);\n\n      var l = false;\n      var o = k.host.outerWidth();\n      var m = k.host.outerHeight();\n      var b = 0;\n\n      if (j > o) {\n        b = k.hScrollBar.outerHeight() + 2;\n      }\n\n      if (n + b > m) {\n        var d = f.max;\n        f.max = 2 + parseInt(n) + b - parseInt(m - 2);\n\n        if (k.vScrollBar[0].style.visibility != \"inherit\") {\n          k.vScrollBar[0].style.visibility = \"inherit\";\n          l = true;\n        }\n\n        if (d != f.max) {\n          f._arrange();\n        }\n      } else {\n        if (k.vScrollBar[0].style.visibility != \"hidden\") {\n          k.vScrollBar[0].style.visibility = \"hidden\";\n          l = true;\n          f.setPosition(0);\n        }\n      }\n\n      var h = 0;\n\n      if (k.vScrollBar[0].style.visibility != \"hidden\") {\n        h = k.scrollBarSize + 6;\n      }\n\n      var g = k.checkboxes ? this.checkboxSize + 6 : 0;\n\n      if (k.autoItemsHeight) {\n        k.hScrollBar[0].style.visibility = \"hidden\";\n      } else {\n        if (j >= o - h - g) {\n          var i = e.max;\n\n          if (k.vScrollBar[0].style.visibility == \"inherit\") {\n            e.max = g + h + parseInt(j) - k.host.width() + 2;\n          } else {\n            e.max = g + parseInt(j) - k.host.width() + 4;\n          }\n\n          if (k.hScrollBar[0].style.visibility != \"inherit\") {\n            k.hScrollBar[0].style.visibility = \"inherit\";\n            l = true;\n          }\n\n          if (i != e.max) {\n            e._arrange();\n          }\n\n          if (k.vScrollBar[0].style.visibility == \"inherit\") {\n            f.max = 2 + parseInt(n) + k.hScrollBar.outerHeight() + 2 - parseInt(k.host.height());\n          }\n        } else {\n          if (k.hScrollBar[0].style.visibility != \"hidden\") {\n            k.hScrollBar[0].style.visibility = \"hidden\";\n            l = true;\n          }\n        }\n      }\n\n      e.setPosition(0);\n\n      if (l) {\n        k._arrange();\n      }\n\n      if (k.itemswrapper) {\n        k.itemswrapper[0].style.width = Math.max(0, Math.max(o - 2, 17 + j)) + \"px\";\n        k.itemswrapper[0].style.height = Math.max(0, 2 * m) + \"px\";\n      }\n\n      var c = k.isTouchDevice();\n\n      if (c) {\n        if (k.vScrollBar.css(\"visibility\") != \"visible\" && k.hScrollBar.css(\"visibility\") != \"visible\") {\n          a.jqx.mobile.setTouchScroll(false, k.element.id);\n        } else {\n          a.jqx.mobile.setTouchScroll(true, k.element.id);\n        }\n      }\n    },\n    clear: function () {\n      this.source = null;\n      this.visibleItems = new Array();\n      this.renderedVisibleItems = new Array();\n      this.itemsByValue = new Array();\n      this.clearSelection();\n      this.refresh();\n    },\n    clearSelection: function (b) {\n      for (var c = 0; c < this.selectedIndexes.length; c++) {\n        if (this.selectedIndexes[c] && this.selectedIndexes[c] != -1) {\n          this._raiseEvent(\"1\", {\n            index: c,\n            type: \"api\",\n            item: this.getVisibleItem(c),\n            originalEvent: null\n          });\n        }\n\n        this.selectedIndexes[c] = -1;\n      }\n\n      this.selectedIndex = -1;\n      this.selectedValue = null;\n      this.selectedValues = new Array();\n\n      if (b != false) {\n        this._renderItems();\n      }\n    },\n    unselectIndex: function (c, d) {\n      if (isNaN(c)) {\n        return;\n      }\n\n      this.selectedIndexes[c] = -1;\n      var g = false;\n\n      for (var e = 0; e < this.selectedIndexes.length; e++) {\n        var b = this.selectedIndexes[e];\n\n        if (b != -1 && b != undefined) {\n          g = true;\n        }\n      }\n\n      if (!g) {\n        this.selectedValue = null;\n        this.selectedIndex = -1;\n        var f = this.getVisibleItem(c);\n\n        if (f) {\n          if (this.selectedValues[f.value]) {\n            this.selectedValues[f.value] = null;\n          }\n        }\n      }\n\n      if (d == undefined || d == true) {\n        this._renderItems();\n\n        this._raiseEvent(\"1\", {\n          index: c,\n          type: \"api\",\n          item: this.getVisibleItem(c),\n          originalEvent: null\n        });\n      }\n\n      this._updateInputSelection();\n\n      this._raiseEvent(\"2\", {\n        index: c,\n        type: \"api\",\n        item: this.getItem(c)\n      });\n    },\n    getInfo: function () {\n      var d = this;\n      var c = this.getItems();\n      var b = this.getVisibleItems();\n\n      var e = function () {\n        var h = d.vScrollInstance.value;\n\n        if (d.filterable) {\n          h -= d.filterHeight;\n        }\n\n        var m = new Array();\n\n        for (var g = 0; g < b.length; g++) {\n          var j = b[g];\n\n          if (j) {\n            var f = j.initialTop;\n            var l = j.height;\n            var k = true;\n\n            if (f + l - h < 0 || f - h >= d.host.height()) {\n              k = false;\n            }\n\n            if (k) {\n              m.push(j);\n            }\n          }\n        }\n\n        return m;\n      }();\n\n      return {\n        items: c,\n        visibleItems: b,\n        viewItems: e\n      };\n    },\n    getItem: function (c) {\n      if (c == -1 || isNaN(c) || typeof c === \"string\") {\n        if (c === -1) {\n          return null;\n        }\n\n        return this.getItemByValue(c);\n      }\n\n      var b = null;\n      var d = a.each(this.items, function () {\n        if (this.index == c) {\n          b = this;\n          return false;\n        }\n      });\n      return b;\n    },\n    getVisibleItem: function (b) {\n      if (b == -1 || isNaN(b) || typeof b === \"string\") {\n        if (b === -1) {\n          return null;\n        }\n\n        return this.getItemByValue(b);\n      }\n\n      return this.visibleItems[b];\n    },\n    getVisibleItems: function () {\n      return this.visibleItems;\n    },\n    checkIndex: function (b, c, e) {\n      if (!this.checkboxes) {\n        return;\n      }\n\n      if (isNaN(b)) {\n        return;\n      }\n\n      if (b < 0 || b >= this.visibleItems.length) {\n        return;\n      }\n\n      if (this.visibleItems[b] != null && this.visibleItems[b].disabled) {\n        return;\n      }\n\n      if (this.disabled) {\n        return;\n      }\n\n      var d = this.getItem(b);\n\n      if (this.groups.length > 0 || this.filterable) {\n        var d = this.getVisibleItem(b);\n      }\n\n      if (d != null) {\n        var f = a(d.checkBoxElement);\n        d.checked = true;\n\n        if (c == undefined || c == true) {\n          this._updateCheckedItems();\n        }\n      }\n\n      if (e == undefined || e == true) {\n        this._raiseEvent(3, {\n          label: d.label,\n          value: d.value,\n          checked: true,\n          item: d\n        });\n      }\n    },\n    getCheckedItems: function () {\n      if (!this.checkboxes) {\n        return null;\n      }\n\n      var b = new Array();\n\n      if (this.items == undefined) {\n        return;\n      }\n\n      a.each(this.items, function () {\n        if (this.checked) {\n          b[b.length] = this;\n        }\n      });\n      return b;\n    },\n    checkAll: function (b) {\n      if (!this.checkboxes) {\n        return;\n      }\n\n      if (this.disabled) {\n        return;\n      }\n\n      var c = this;\n      a.each(this.items, function () {\n        var d = this;\n\n        if (b !== false && d.checked !== true) {\n          c._raiseEvent(3, {\n            label: d.label,\n            value: d.value,\n            checked: true,\n            item: d\n          });\n        }\n\n        this.checked = true;\n      });\n\n      this._updateCheckedItems();\n    },\n    uncheckAll: function (b) {\n      if (!this.checkboxes) {\n        return;\n      }\n\n      if (this.disabled) {\n        return;\n      }\n\n      var c = this;\n      a.each(this.items, function () {\n        var d = this;\n\n        if (b !== false && d.checked !== false) {\n          this.checked = false;\n\n          c._raiseEvent(3, {\n            label: d.label,\n            value: d.value,\n            checked: false,\n            item: d\n          });\n        }\n\n        this.checked = false;\n      });\n\n      this._updateCheckedItems();\n    },\n    uncheckIndex: function (b, c, e) {\n      if (!this.checkboxes) {\n        return;\n      }\n\n      if (isNaN(b)) {\n        return;\n      }\n\n      if (b < 0 || b >= this.visibleItems.length) {\n        return;\n      }\n\n      if (this.visibleItems[b] != null && this.visibleItems[b].disabled) {\n        return;\n      }\n\n      if (this.disabled) {\n        return;\n      }\n\n      var d = this.getItem(b);\n\n      if (this.groups.length > 0 || this.filterable) {\n        var d = this.getVisibleItem(b);\n      }\n\n      if (d != null) {\n        var f = a(d.checkBoxElement);\n        d.checked = false;\n\n        if (c == undefined || c == true) {\n          this._updateCheckedItems();\n        }\n      }\n\n      if (e == undefined || e == true) {\n        this._raiseEvent(3, {\n          label: d.label,\n          value: d.value,\n          checked: false,\n          item: d\n        });\n      }\n    },\n    indeterminateIndex: function (b, c, e) {\n      if (!this.checkboxes) {\n        return;\n      }\n\n      if (isNaN(b)) {\n        return;\n      }\n\n      if (b < 0 || b >= this.visibleItems.length) {\n        return;\n      }\n\n      if (this.visibleItems[b] != null && this.visibleItems[b].disabled) {\n        return;\n      }\n\n      if (this.disabled) {\n        return;\n      }\n\n      var d = this.getItem(b);\n\n      if (this.groups.length > 0 || this.filterable) {\n        var d = this.getVisibleItem(b);\n      }\n\n      if (d != null) {\n        var f = a(d.checkBoxElement);\n        d.checked = null;\n\n        if (c == undefined || c == true) {\n          this._updateCheckedItems();\n        }\n      }\n\n      if (e == undefined || e == true) {\n        this._raiseEvent(3, {\n          checked: null\n        });\n      }\n    },\n    getSelectedIndex: function () {\n      return this.selectedIndex;\n    },\n    getSelectedItems: function () {\n      var b = this.getVisibleItems();\n      var e = this.selectedIndexes;\n      var d = [];\n\n      for (var c in e) {\n        if (e[c] != -1) {\n          d[d.length] = b[c];\n        }\n      }\n\n      return d;\n    },\n    getSelectedItem: function () {\n      var b = this.getSelectedItems();\n\n      if (b && b.length > 0) {\n        return b[0];\n      }\n\n      return null;\n    },\n    _updateCheckedItems: function () {\n      var b = this.selectedIndex;\n      this.clearSelection(false);\n      var c = this.getCheckedItems();\n      this.selectedIndex = b;\n\n      this._renderItems();\n\n      var d = a.data(this.element, \"hoveredItem\");\n\n      if (d != null) {\n        a(d).addClass(this.toThemeProperty(\"jqx-listitem-state-hover\"));\n        a(d).addClass(this.toThemeProperty(\"jqx-fill-state-hover\"));\n      }\n\n      this._updateInputSelection();\n    },\n    getItemByValue: function (d) {\n      if (this.visibleItems == null) {\n        return;\n      }\n\n      if (d && d.value) {\n        d = d.value;\n      }\n\n      if (this.itemsByValue) {\n        return this.itemsByValue[a.trim(d).split(\" \").join(\"?\")];\n      }\n\n      var b = this.visibleItems;\n\n      for (var c = 0; c < b.length; c++) {\n        if (b[c].value == d) {\n          return b[c];\n          break;\n        }\n      }\n    },\n    checkItem: function (c) {\n      if (c != null) {\n        var b = this._getItemByParam(c);\n\n        return this.checkIndex(b.visibleIndex, true);\n      }\n\n      return false;\n    },\n    uncheckItem: function (c) {\n      if (c != null) {\n        var b = this._getItemByParam(c);\n\n        return this.uncheckIndex(b.visibleIndex, true);\n      }\n\n      return false;\n    },\n    indeterminateItem: function (c) {\n      if (c != null) {\n        var b = this._getItemByParam(c);\n\n        return this.indeterminateIndex(b.visibleIndex, true);\n      }\n\n      return false;\n    },\n    val: function (c) {\n      if (!this.input) {\n        return;\n      }\n\n      var d = function (f) {\n        for (var e in f) {\n          if (f.hasOwnProperty(e)) {\n            return false;\n          }\n        }\n\n        if (typeof c == \"number\") {\n          return false;\n        }\n\n        if (typeof c == \"date\") {\n          return false;\n        }\n\n        if (typeof c == \"boolean\") {\n          return false;\n        }\n\n        if (typeof c == \"string\") {\n          return false;\n        }\n\n        return true;\n      };\n\n      if (d(c) || arguments.length == 0) {\n        return this.input.val();\n      }\n\n      var b = this.getItemByValue(c);\n\n      if (b != null) {\n        this.selectItem(b);\n      }\n\n      if (this.input) {\n        return this.input.val();\n      }\n    },\n    selectItem: function (c) {\n      if (c != null) {\n        if (c.index == undefined) {\n          var b = this.getItemByValue(c);\n\n          if (b) {\n            c = b;\n          }\n        }\n\n        return this.selectIndex(c.visibleIndex, true);\n      } else {\n        this.clearSelection();\n      }\n\n      return false;\n    },\n    unselectItem: function (c) {\n      if (c != null) {\n        if (c.index == undefined) {\n          var b = this.getItemByValue(c);\n\n          if (b) {\n            c = b;\n          }\n        }\n\n        return this.unselectIndex(c.visibleIndex, true);\n      }\n\n      return false;\n    },\n    selectIndex: function (j, r, c, d, m, b) {\n      if (isNaN(j)) {\n        return;\n      }\n\n      var q = this.selectedIndex;\n\n      if (this.filterable) {\n        this.selectedIndex = -1;\n      }\n\n      if (j < -1 || j >= this.visibleItems.length) {\n        return;\n      }\n\n      if (this.visibleItems[j] != null && this.visibleItems[j].disabled) {\n        return;\n      }\n\n      if (this.disabled) {\n        return;\n      }\n\n      if (!this.multiple && !this.multipleextended && this.selectedIndex == j && !d && !this.checkboxes) {\n        if (this.visibleItems && this.items && this.visibleItems.length != this.items.length) {\n          h = this.getVisibleItem(j);\n\n          if (h) {\n            this.selectedValue = h.value;\n            this.selectedValues[h.value] = h.value;\n          }\n        }\n\n        return;\n      }\n\n      if (this.checkboxes) {\n        this._updateCheckedItems();\n\n        var p = q;\n\n        if (this.selectedIndex == j && !this.multiple) {\n          p = -1;\n        }\n\n        if (m == undefined) {\n          m = \"none\";\n        }\n\n        var h = this.getItem(j);\n        var s = this.getItem(p);\n\n        if (this.visibleItems && this.items && this.visibleItems.length != this.items.length) {\n          h = this.getVisibleItem(j);\n          s = this.getVisibleItem(p);\n        }\n\n        this._raiseEvent(\"1\", {\n          index: p,\n          type: m,\n          item: s,\n          originalEvent: b\n        });\n\n        this.selectedIndex = j;\n        this.selectedIndexes[p] = -1;\n        this.selectedIndexes[j] = j;\n\n        if (h) {\n          this.selectedValue = h.value;\n          this.selectedValues[h.value] = h.value;\n        }\n\n        this._raiseEvent(\"0\", {\n          index: j,\n          type: m,\n          item: h,\n          originalEvent: b\n        });\n\n        this._renderItems();\n\n        return;\n      }\n\n      this.focused = true;\n      var o = false;\n\n      if (this.selectedIndex != j) {\n        o = true;\n      }\n\n      var p = q;\n\n      if (this.selectedIndex == j && !this.multiple) {\n        p = -1;\n      }\n\n      if (m == undefined) {\n        m = \"none\";\n      }\n\n      var h = this.getItem(j);\n      var s = this.getItem(p);\n\n      if (this.visibleItems && this.items && this.visibleItems.length != this.items.length) {\n        h = this.getVisibleItem(j);\n        s = this.getVisibleItem(p);\n      }\n\n      if (d != undefined && d) {\n        this._raiseEvent(\"1\", {\n          index: p,\n          type: m,\n          item: s,\n          originalEvent: b\n        });\n\n        this.selectedIndex = j;\n        this.selectedIndexes[p] = -1;\n        this.selectedIndexes[j] = j;\n\n        if (h) {\n          this.selectedValue = h.value;\n          this.selectedValues[h.value] = h.value;\n        }\n\n        this._raiseEvent(\"0\", {\n          index: j,\n          type: m,\n          item: h,\n          originalEvent: b\n        });\n      } else {\n        var l = this;\n\n        var e = function (t, x, v, w, u, i) {\n          l._raiseEvent(\"1\", {\n            index: x,\n            type: v,\n            item: w,\n            originalEvent: i\n          });\n\n          l.selectedIndex = t;\n          l.selectedIndexes = [];\n          x = t;\n          l.selectedIndexes[t] = t;\n          l.selectedValues = new Array();\n\n          if (u) {\n            l.selectedValues[u.value] = u.value;\n          }\n\n          l._raiseEvent(\"0\", {\n            index: t,\n            type: v,\n            item: u,\n            originalEvent: i\n          });\n        };\n\n        var k = function (t, x, v, w, u, i) {\n          if (l.selectedIndexes[t] == undefined || l.selectedIndexes[t] == -1) {\n            l.selectedIndexes[t] = t;\n            l.selectedIndex = t;\n\n            if (u) {\n              l.selectedValues[u.value] = u.value;\n\n              l._raiseEvent(\"0\", {\n                index: t,\n                type: v,\n                item: u,\n                originalEvent: i\n              });\n            }\n          } else {\n            x = l.selectedIndexes[t];\n            w = l.getVisibleItem(x);\n\n            if (w) {\n              l.selectedValues[w.value] = null;\n            }\n\n            l.selectedIndexes[t] = -1;\n            l.selectedIndex = -1;\n\n            l._raiseEvent(\"1\", {\n              index: x,\n              type: v,\n              item: w,\n              originalEvent: i\n            });\n          }\n        };\n\n        if (this.multipleextended) {\n          if (!this._shiftKey && !this._ctrlKey) {\n            if (m != \"keyboard\" && m != \"mouse\") {\n              k(j, p, m, s, h, b);\n              l._clickedIndex = j;\n            } else {\n              this.clearSelection(false);\n              l._clickedIndex = j;\n              e(j, p, m, s, h, b);\n            }\n          } else {\n            if (this._ctrlKey) {\n              if (m == \"keyboard\") {\n                this.clearSelection(false);\n                l._clickedIndex = j;\n              }\n\n              k(j, p, m, s, h, b);\n            } else {\n              if (this._shiftKey) {\n                if (l._clickedIndex == undefined) {\n                  l._clickedIndex = p;\n                }\n\n                var f = Math.min(l._clickedIndex, j);\n                var n = Math.max(l._clickedIndex, j);\n                this.clearSelection(false);\n\n                for (var g = f; g <= n; g++) {\n                  l.selectedIndexes[g] = g;\n                  l.selectedValues[l.getVisibleItem(g).value] = l.getVisibleItem(g).value;\n\n                  l._raiseEvent(\"0\", {\n                    index: g,\n                    type: m,\n                    item: this.getVisibleItem(g),\n                    originalEvent: b\n                  });\n                }\n\n                if (m != \"keyboard\") {\n                  l.selectedIndex = l._clickedIndex;\n                } else {\n                  l.selectedIndex = j;\n                }\n              }\n            }\n          }\n        } else {\n          if (this.multiple) {\n            k(j, p, m, s, h, b);\n          } else {\n            if (h) {\n              this.selectedValue = h.value;\n            }\n\n            e(j, p, m, s, h, b);\n          }\n        }\n      }\n\n      if (c == undefined || c == true) {\n        this._renderItems();\n      }\n\n      if (r != undefined && r != null && r == true) {\n        this.ensureVisible(j);\n      }\n\n      this._raiseEvent(\"2\", {\n        index: j,\n        item: h,\n        oldItem: s,\n        type: m,\n        originalEvent: b\n      });\n\n      this._updateInputSelection();\n\n      return o;\n    },\n    _updateInputSelection: function () {\n      this._syncSelection();\n\n      var c = new Array();\n\n      if (this.input) {\n        if (this.selectedIndex == -1) {\n          this.input.val(\"\");\n        } else {\n          if (this.items) {\n            if (this.items[this.selectedIndex] != undefined) {\n              this.input.val(this.items[this.selectedIndex].value);\n              c.push(this.items[this.selectedIndex].value);\n            }\n          }\n        }\n\n        if (this.multiple || this.multipleextended || this.checkboxes) {\n          var b = !this.checkboxes ? this.getSelectedItems() : this.getCheckedItems();\n          var e = \"\";\n\n          if (b) {\n            for (var d = 0; d < b.length; d++) {\n              if (undefined != b[d]) {\n                if (d == b.length - 1) {\n                  e += b[d].value;\n                } else {\n                  e += b[d].value + \",\";\n                }\n\n                c.push(b[d].value);\n              }\n            }\n\n            this.input.val(e);\n          }\n        }\n      }\n\n      if (this.field && this.input) {\n        if (this.field.nodeName.toLowerCase() == \"select\") {\n          a.each(this.field, function (f, g) {\n            a(this).removeAttr(\"selected\");\n            this.selected = c.indexOf(this.value) >= 0;\n\n            if (this.selected) {\n              a(this).attr(\"selected\", true);\n            }\n          });\n        } else {\n          a.each(this.items, function (f, g) {\n            a(this.originalItem.originalItem).removeAttr(\"data-selected\");\n            this.selected = c.indexOf(this.value) >= 0;\n\n            if (this.selected) {\n              a(this.originalItem.originalItem).attr(\"data-selected\", true);\n            }\n          });\n        }\n      }\n    },\n    isIndexInView: function (c) {\n      if (isNaN(c)) {\n        return false;\n      }\n\n      if (!this.items) {\n        return false;\n      }\n\n      if (c < 0 || c >= this.items.length) {\n        return false;\n      }\n\n      var e = this.vScrollInstance.value;\n      var d = 0;\n\n      if (this.filterable) {\n        d = this.filterHeight;\n      }\n\n      var f = this.visibleItems[c];\n\n      if (f == undefined) {\n        return true;\n      }\n\n      var b = f.initialTop;\n      var g = f.height;\n\n      if (b - e < d || b - e + d + g >= this.host.outerHeight()) {\n        return false;\n      }\n\n      return true;\n    },\n    _itemsInPage: function () {\n      var b = 0;\n      var c = this;\n\n      if (this.items) {\n        a.each(this.items, function () {\n          if (this.initialTop + this.height >= c.content.height()) {\n            return false;\n          }\n\n          b++;\n        });\n      }\n\n      return b;\n    },\n    _firstItemIndex: function () {\n      if (this.visibleItems != null) {\n        if (this.visibleItems[0]) {\n          if (this.visibleItems[0].isGroup) {\n            return this._nextItemIndex(0);\n          } else {\n            return 0;\n          }\n        } else {\n          return 0;\n        }\n      }\n\n      return -1;\n    },\n    _lastItemIndex: function () {\n      if (this.visibleItems != null) {\n        if (this.visibleItems[this.visibleItems.length - 1]) {\n          if (this.visibleItems[this.visibleItems.length - 1].isGroup) {\n            return this._prevItemIndex(this.visibleItems.length - 1);\n          } else {\n            return this.visibleItems.length - 1;\n          }\n        } else {\n          return this.visibleItems.length - 1;\n        }\n      }\n\n      return -1;\n    },\n    _nextItemIndex: function (b) {\n      for (var c = b + 1; c < this.visibleItems.length; c++) {\n        if (this.visibleItems[c]) {\n          if (!this.visibleItems[c].disabled && !this.visibleItems[c].isGroup) {\n            return c;\n          }\n        }\n      }\n\n      return -1;\n    },\n    _prevItemIndex: function (b) {\n      for (var c = b - 1; c >= 0; c--) {\n        if (this.visibleItems[c]) {\n          if (!this.visibleItems[c].disabled && !this.visibleItems[c].isGroup) {\n            return c;\n          }\n        }\n      }\n\n      return -1;\n    },\n    clearFilter: function () {\n      this.filterInput.val(\"\");\n\n      this._updateItemsVisibility(\"\");\n    },\n    _search: function (c) {\n      var b = this;\n      var d = b.filterInput.val();\n\n      if (c.keyCode == 9) {\n        return;\n      }\n\n      if (b.searchMode == \"none\" || b.searchMode == null || b.searchMode == \"undefined\") {\n        return;\n      }\n\n      if (c.keyCode == 16 || c.keyCode == 17 || c.keyCode == 20) {\n        return;\n      }\n\n      if (c.keyCode == 37 || c.keyCode == 39) {\n        return false;\n      }\n\n      if (c.altKey || c.keyCode == 18) {\n        return;\n      }\n\n      if (c.keyCode >= 33 && c.keyCode <= 40) {\n        return;\n      }\n\n      if (c.ctrlKey || c.metaKey || b.ctrlKey) {\n        if (c.keyCode != 88 && c.keyCode != 86) {\n          return;\n        }\n      }\n\n      if (d === b.searchString) {\n        return;\n      }\n\n      b._updateItemsVisibility(d);\n    },\n    _updateItemsVisibility: function (h) {\n      var e = this.getItems();\n\n      if (e == undefined) {\n        return {\n          index: -1,\n          matchItem: new Array()\n        };\n      }\n\n      var f = this;\n      var d = -1;\n      var i = new Array();\n      var g = 0;\n      a.each(e, function (k) {\n        var m = \"\";\n\n        if (!this.isGroup) {\n          if (this.searchLabel) {\n            m = this.searchLabel;\n          } else {\n            if (this.label) {\n              m = this.label;\n            } else {\n              if (this.value) {\n                m = this.value;\n              } else {\n                if (this.title) {\n                  m = this.title;\n                } else {\n                  m = \"jqxItem\";\n                }\n              }\n            }\n          }\n\n          m = m.toString();\n          var l = false;\n\n          switch (f.searchMode) {\n            case \"containsignorecase\":\n              l = a.jqx.string.containsIgnoreCase(m, h);\n              break;\n\n            case \"contains\":\n              l = a.jqx.string.contains(m, h);\n              break;\n\n            case \"equals\":\n              l = a.jqx.string.equals(m, h);\n              break;\n\n            case \"equalsignorecase\":\n              l = a.jqx.string.equalsIgnoreCase(m, h);\n              break;\n\n            case \"startswith\":\n              l = a.jqx.string.startsWith(m, h);\n              break;\n\n            case \"startswithignorecase\":\n              l = a.jqx.string.startsWithIgnoreCase(m, h);\n              break;\n\n            case \"endswith\":\n              l = a.jqx.string.endsWith(m, h);\n              break;\n\n            case \"endswithignorecase\":\n              l = a.jqx.string.endsWithIgnoreCase(m, h);\n              break;\n          }\n\n          if (!l) {\n            this.visible = false;\n          }\n\n          if (l) {\n            i[g++] = this;\n            this.visible = true;\n            d = this.visibleIndex;\n          }\n\n          if (h == \"\") {\n            this.visible = true;\n            l = false;\n          }\n        }\n      });\n      f.renderedVisibleItems = new Array();\n      f.visibleItems = new Array();\n      f.vScrollInstance.setPosition(0, true);\n\n      f._addItems(false);\n\n      f._renderItems();\n\n      for (var b = 0; b < f.items.length; b++) {\n        f.selectedIndexes[b] = -1;\n      }\n\n      f.selectedIndex = -1;\n\n      for (var c in f.selectedValues) {\n        var h = f.selectedValues[c];\n        var j = f.getItemByValue(h);\n\n        if (j) {\n          if (j.visible) {\n            f.selectedIndex = j.visibleIndex;\n            f.selectedIndexes[j.visibleIndex] = j.visibleIndex;\n          }\n        }\n      }\n\n      f._syncSelection();\n\n      if (f.filterChange) {\n        f.filterChange(h);\n      }\n    },\n    _getMatches: function (g, d) {\n      if (g == undefined || g.length == 0) {\n        return -1;\n      }\n\n      if (d == undefined) {\n        d = 0;\n      }\n\n      var b = this.getItems();\n      var f = this;\n      var c = -1;\n      var e = 0;\n      a.each(b, function (h) {\n        var k = \"\";\n\n        if (!this.isGroup) {\n          if (this.searchLabel) {\n            k = this.searchLabel.toString();\n          } else {\n            if (this.label) {\n              k = this.label.toString();\n            } else {\n              if (this.value) {\n                k = this.value.toString();\n              } else {\n                if (this.title) {\n                  k = this.title.toString();\n                } else {\n                  k = \"jqxItem\";\n                }\n              }\n            }\n          }\n\n          var j = false;\n\n          switch (f.searchMode) {\n            case \"containsignorecase\":\n              j = a.jqx.string.containsIgnoreCase(k, g);\n              break;\n\n            case \"contains\":\n              j = a.jqx.string.contains(k, g);\n              break;\n\n            case \"equals\":\n              j = a.jqx.string.equals(k, g);\n              break;\n\n            case \"equalsignorecase\":\n              j = a.jqx.string.equalsIgnoreCase(k, g);\n              break;\n\n            case \"startswith\":\n              j = a.jqx.string.startsWith(k, g);\n              break;\n\n            case \"startswithignorecase\":\n              j = a.jqx.string.startsWithIgnoreCase(k, g);\n              break;\n\n            case \"endswith\":\n              j = a.jqx.string.endsWith(k, g);\n              break;\n\n            case \"endswithignorecase\":\n              j = a.jqx.string.endsWithIgnoreCase(k, g);\n              break;\n          }\n\n          if (j && this.visibleIndex >= d) {\n            c = this.visibleIndex;\n            return false;\n          }\n        }\n      });\n      return c;\n    },\n    findItems: function (e) {\n      var b = this.getItems();\n      var d = this;\n      var c = 0;\n      var f = new Array();\n      a.each(b, function (g) {\n        var j = \"\";\n\n        if (!this.isGroup) {\n          if (this.label) {\n            j = this.label;\n          } else {\n            if (this.value) {\n              j = this.value;\n            } else {\n              if (this.title) {\n                j = this.title;\n              } else {\n                j = \"jqxItem\";\n              }\n            }\n          }\n\n          var h = false;\n\n          switch (d.searchMode) {\n            case \"containsignorecase\":\n              h = a.jqx.string.containsIgnoreCase(j, e);\n              break;\n\n            case \"contains\":\n              h = a.jqx.string.contains(j, e);\n              break;\n\n            case \"equals\":\n              h = a.jqx.string.equals(j, e);\n              break;\n\n            case \"equalsignorecase\":\n              h = a.jqx.string.equalsIgnoreCase(j, e);\n              break;\n\n            case \"startswith\":\n              h = a.jqx.string.startsWith(j, e);\n              break;\n\n            case \"startswithignorecase\":\n              h = a.jqx.string.startsWithIgnoreCase(j, e);\n              break;\n\n            case \"endswith\":\n              h = a.jqx.string.endsWith(j, e);\n              break;\n\n            case \"endswithignorecase\":\n              h = a.jqx.string.endsWithIgnoreCase(j, e);\n              break;\n          }\n\n          if (h) {\n            f[c++] = this;\n          }\n        }\n      });\n      return f;\n    },\n    _syncSelection: function () {\n      var d = this;\n\n      if (d.filterable) {\n        if (d.items) {\n          for (var b = 0; b < d.items.length; b++) {\n            var c = d.items[b];\n            c.selected = false;\n          }\n        }\n\n        for (var b = 0; b < d.visibleItems.length; b++) {\n          var c = d.visibleItems[b];\n\n          if (d.selectedIndexes && d.selectedIndexes[b] == c.visibleIndex) {\n            c.selected = true;\n          }\n        }\n\n        if (d.itemswrapper) {\n          d._renderItems();\n        }\n      }\n    },\n    _handleKeyDown: function (n) {\n      var s = n.keyCode;\n      var k = this;\n      var g = k.selectedIndex;\n      var d = k.selectedIndex;\n      var l = false;\n\n      if (!this.keyboardNavigation || !this.enableSelection) {\n        return;\n      }\n\n      if (this.filterInput && n.target == this.filterInput[0]) {\n        return;\n      }\n\n      if (n.target instanceof HTMLInputElement && a(n.target).ischildof(this.host)) {\n        return;\n      }\n\n      var j = function () {\n        if (k.multiple || k.checkboxes) {\n          k.clearSelection(false);\n        }\n      };\n\n      if (n.altKey) {\n        s = -1;\n      }\n\n      if (s == 32 && this.checkboxes) {\n        var f = this.getItem(g);\n\n        if (f != null) {\n          k._updateItemCheck(f, g);\n\n          n.preventDefault();\n        }\n\n        k._searchString = \"\";\n        k.selectIndex(f.visibleIndex, false, true, true, \"keyboard\", n);\n\n        k._renderItems();\n\n        return;\n      }\n\n      if (k.incrementalSearch) {\n        var o = -1;\n\n        if (!k._searchString) {\n          k._searchString = \"\";\n        }\n\n        if ((s == 8 || s == 46) && k._searchString.length >= 1) {\n          k._searchString = k._searchString.substr(0, k._searchString.length - 1);\n        }\n\n        var r = String.fromCharCode(s);\n        var m = !isNaN(parseInt(r));\n        var i = false;\n\n        if (s >= 65 && s <= 97 || m || s == 8 || s == 32 || s == 46) {\n          if (!n.shiftKey) {\n            r = r.toLocaleLowerCase();\n          }\n\n          var e = 1 + k.selectedIndex;\n\n          if (s != 8 && s != 32 && s != 46) {\n            if (k._searchString.length > 0 && k._searchString.substr(0, 1) == r) {\n              e = 1 + k.selectedIndex;\n              k._searchString += r;\n            } else {\n              k._searchString += r;\n            }\n          }\n\n          if (s == 32) {\n            k._searchString += \" \";\n          }\n\n          var b = this._getMatches(k._searchString, e);\n\n          o = b;\n\n          if (o == k._lastMatchIndex || o == -1) {\n            var b = this._getMatches(k._searchString, 0);\n\n            o = b;\n          }\n\n          k._lastMatchIndex = o;\n\n          if (o >= 0) {\n            var h = function () {\n              j();\n              k.selectIndex(o, false, false, false, \"keyboard\", n);\n              var t = k.isIndexInView(o);\n\n              if (!t) {\n                k.ensureVisible(o);\n              } else {\n                k._renderItems();\n              }\n            };\n\n            if (k._toSelectTimer) {\n              clearTimeout(k._toSelectTimer);\n            }\n\n            k._toSelectTimer = setTimeout(function () {\n              h();\n            }, k.incrementalSearchKeyDownDelay);\n          }\n\n          i = true;\n        }\n\n        if (k._searchTimer != undefined) {\n          clearTimeout(k._searchTimer);\n        }\n\n        if (s == 27 || s == 13) {\n          k._searchString = \"\";\n        }\n\n        k._searchTimer = setTimeout(function () {\n          k._searchString = \"\";\n\n          k._renderItems();\n        }, k.incrementalSearchDelay);\n\n        if (o >= 0) {\n          return;\n        }\n\n        if (i) {\n          return false;\n        }\n      }\n\n      if (s == 33) {\n        var p = k._itemsInPage();\n\n        if (k.selectedIndex - p >= 0) {\n          j();\n          k.selectIndex(d - p, false, false, false, \"keyboard\", n);\n        } else {\n          j();\n          k.selectIndex(k._firstItemIndex(), false, false, false, \"keyboard\", n);\n        }\n\n        k._searchString = \"\";\n      }\n\n      if (s == 32 && this.checkboxes) {\n        var f = this.getItem(g);\n\n        if (f != null) {\n          k._updateItemCheck(f, g);\n\n          n.preventDefault();\n        }\n\n        k._searchString = \"\";\n      }\n\n      if (s == 36) {\n        j();\n        k.selectIndex(k._firstItemIndex(), false, false, false, \"keyboard\", n);\n        k._searchString = \"\";\n      }\n\n      if (s == 35) {\n        j();\n        k.selectIndex(k._lastItemIndex(), false, false, false, \"keyboard\", n);\n        k._searchString = \"\";\n      }\n\n      if (s == 34) {\n        var p = k._itemsInPage();\n\n        if (k.selectedIndex + p < k.visibleItems.length) {\n          j();\n          k.selectIndex(d + p, false, false, false, \"keyboard\", n);\n        } else {\n          j();\n          k.selectIndex(k._lastItemIndex(), false, false, false, \"keyboard\", n);\n        }\n\n        k._searchString = \"\";\n      }\n\n      if (s == 38) {\n        k._searchString = \"\";\n\n        if (k.selectedIndex > 0) {\n          var c = k._prevItemIndex(k.selectedIndex);\n\n          if (c != k.selectedIndex && c != -1) {\n            j();\n            k.selectIndex(c, false, false, false, \"keyboard\", n);\n          } else {\n            return true;\n          }\n        } else {\n          return false;\n        }\n      } else {\n        if (s == 40) {\n          k._searchString = \"\";\n\n          if (k.selectedIndex + 1 < k.visibleItems.length) {\n            var c = k._nextItemIndex(k.selectedIndex);\n\n            if (c != k.selectedIndex && c != -1) {\n              j();\n              k.selectIndex(c, false, false, false, \"keyboard\", n);\n            } else {\n              return true;\n            }\n          } else {\n            return false;\n          }\n        }\n      }\n\n      if (s == 35 || s == 36 || s == 38 || s == 40 || s == 34 || s == 33) {\n        var q = k.isIndexInView(k.selectedIndex);\n\n        if (!q) {\n          k.ensureVisible(k.selectedIndex);\n        } else {\n          k._renderItems();\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n    _updateItemCheck: function (b, c) {\n      if (this.disabled) {\n        return;\n      }\n\n      if (b.checked == true) {\n        b.checked = b.hasThreeStates && this.hasThreeStates ? null : false;\n      } else {\n        b.checked = b.checked != null;\n      }\n\n      switch (b.checked) {\n        case true:\n          this.checkIndex(c);\n          break;\n\n        case false:\n          this.uncheckIndex(c);\n          break;\n\n        default:\n          this.indeterminateIndex(c);\n          break;\n      }\n    },\n    wheel: function (d, c) {\n      if (c.autoHeight || !c.enableMouseWheel) {\n        d.returnValue = true;\n        return true;\n      }\n\n      if (c.disabled) {\n        return true;\n      }\n\n      var e = 0;\n\n      if (!d) {\n        d = window.event;\n      }\n\n      if (d.originalEvent && d.originalEvent.wheelDelta) {\n        d.wheelDelta = d.originalEvent.wheelDelta;\n      }\n\n      if (d.wheelDelta) {\n        e = d.wheelDelta / 120;\n      } else {\n        if (d.detail) {\n          e = -d.detail / 3;\n        }\n      }\n\n      if (e) {\n        var b = c._handleDelta(e);\n\n        if (b) {\n          if (d.preventDefault) {\n            d.preventDefault();\n          }\n\n          if (d.originalEvent != null) {\n            d.originalEvent.mouseHandled = true;\n          }\n\n          if (d.stopPropagation != undefined) {\n            d.stopPropagation();\n          }\n        }\n\n        if (b) {\n          b = false;\n          d.returnValue = b;\n          return b;\n        } else {\n          return false;\n        }\n      }\n\n      if (d.preventDefault) {\n        d.preventDefault();\n      }\n\n      d.returnValue = false;\n    },\n    _handleDelta: function (d) {\n      var c = this.vScrollInstance.value;\n\n      if (d < 0) {\n        this.scrollDown();\n      } else {\n        this.scrollUp();\n      }\n\n      var b = this.vScrollInstance.value;\n\n      if (c != b) {\n        return true;\n      }\n\n      return false;\n    },\n    focus: function () {\n      try {\n        this.focused = true;\n        this.host.focus();\n        var c = this;\n        setTimeout(function () {\n          c.host.focus();\n        }, 25);\n      } catch (b) {}\n    },\n    _removeHandlers: function () {\n      var b = this;\n      this.removeHandler(a(document), \"keydown.listbox\" + this.element.id);\n      this.removeHandler(a(document), \"keyup.listbox\" + this.element.id);\n      this.removeHandler(this.vScrollBar, \"valueChanged\");\n      this.removeHandler(this.hScrollBar, \"valueChanged\");\n\n      if (this._mousewheelfunc) {\n        this.removeHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      } else {\n        this.removeHandler(this.host, \"mousewheel\");\n      }\n\n      this.removeHandler(this.host, \"keydown\");\n      this.removeHandler(this.content, \"mouseleave\");\n      this.removeHandler(this.content, \"focus\");\n      this.removeHandler(this.content, \"blur\");\n      this.removeHandler(this.host, \"focus\");\n      this.removeHandler(this.host, \"blur\");\n      this.removeHandler(this.content, \"mouseenter\");\n      this.removeHandler(this.content, \"mouseup\");\n      this.removeHandler(this.content, \"mousedown\");\n      this.removeHandler(this.content, \"touchend\");\n\n      if (this._mousemovefunc) {\n        this.removeHandler(this.content, \"mousemove\", this._mousemovefunc);\n      } else {\n        this.removeHandler(this.content, \"mousemove\");\n      }\n\n      this.removeHandler(this.content, \"selectstart\");\n\n      if (this.overlayContent) {\n        this.removeHandler(this.overlayContent, a.jqx.mobile.getTouchEventName(\"touchend\"));\n      }\n    },\n    _updateSize: function () {\n      if (!this.virtualSize) {\n        this._oldheight = null;\n        this.virtualSize = this._calculateVirtualSize();\n      }\n\n      var b = this;\n\n      b._arrange();\n\n      if (b.host.height() != b._oldheight || b.host.width() != b._oldwidth) {\n        var c = b.host.width() != b._oldwidth;\n\n        if (b.autoItemsHeight) {\n          b._render(false);\n        } else {\n          if (b.items) {\n            if (b.items.length > 0 && b.virtualItemsCount * b.items[0].height < b._oldheight - 2) {\n              b._render(false);\n            } else {\n              var d = b.vScrollInstance.value;\n\n              b._updatescrollbars();\n\n              b._renderItems();\n\n              if (d < b.vScrollInstance.max) {\n                b.vScrollInstance.setPosition(d);\n              } else {\n                b.vScrollInstance.setPosition(b.vScrollInstance.max);\n              }\n            }\n          }\n        }\n\n        b._oldwidth = b.host.width();\n        b._oldheight = b.host.height();\n      }\n    },\n    _addHandlers: function () {\n      var l = this;\n      this.focused = false;\n      var m = false;\n      var j = 0;\n      var g = null;\n      var j = 0;\n      var b = 0;\n      var h = new Date();\n      var e = this.isTouchDevice();\n      this.addHandler(this.vScrollBar, \"valueChanged\", function (n) {\n        if (a.jqx.browser.msie && a.jqx.browser.version > 9) {\n          setTimeout(function () {\n            l._renderItems();\n          }, 1);\n        } else {\n          l._renderItems();\n        }\n      });\n      this.addHandler(this.hScrollBar, \"valueChanged\", function () {\n        l._renderItems();\n      });\n\n      if (this._mousewheelfunc) {\n        this.removeHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      }\n\n      this._mousewheelfunc = function (n) {\n        l.wheel(n, l);\n      };\n\n      this.addHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      this.addHandler(a(document), \"keydown.listbox\" + this.element.id, function (n) {\n        l._ctrlKey = n.ctrlKey || n.metaKey;\n        l._shiftKey = n.shiftKey;\n      });\n      this.addHandler(a(document), \"keyup.listbox\" + this.element.id, function (n) {\n        l._ctrlKey = n.ctrlKey || n.metaKey;\n        l._shiftKey = n.shiftKey;\n      });\n      this.addHandler(this.host, \"keydown\", function (n) {\n        return l._handleKeyDown(n);\n      });\n      this.addHandler(this.content, \"mouseleave\", function (n) {\n        l.focused = false;\n        var o = a.data(l.element, \"hoveredItem\");\n\n        if (o != null) {\n          a(o).removeClass(l.toThemeProperty(\"jqx-listitem-state-hover\"));\n          a(o).removeClass(l.toThemeProperty(\"jqx-fill-state-hover\"));\n          a.data(l.element, \"hoveredItem\", null);\n        }\n      });\n      this.addHandler(this.content, \"focus\", function (n) {\n        if (!l.disabled) {\n          l.host.addClass(l.toThemeProperty(\"jqx-fill-state-focus\"));\n          l.focused = true;\n        }\n      });\n      this.addHandler(this.content, \"blur\", function (n) {\n        l.focused = false;\n        l.host.removeClass(l.toThemeProperty(\"jqx-fill-state-focus\"));\n      });\n      this.addHandler(this.host, \"focus\", function (n) {\n        if (!l.disabled) {\n          l.host.addClass(l.toThemeProperty(\"jqx-fill-state-focus\"));\n          l.focused = true;\n        }\n      });\n      this.addHandler(this.host, \"blur\", function (n) {\n        if (a.jqx.browser.msie && a.jqx.browser.version < 9 && l.focused) {\n          return;\n        }\n\n        l.host.removeClass(l.toThemeProperty(\"jqx-fill-state-focus\"));\n        l.focused = false;\n      });\n      this.addHandler(this.content, \"mouseenter\", function (n) {\n        l.focused = true;\n      });\n      var c = a.jqx.utilities.hasTransform(this.host);\n      var f = l.isTouchDevice() && this.touchMode !== true;\n      var i = !f ? \"mousedown\" : \"touchend\";\n      var k = !f ? \"mouseup\" : \"touchend\";\n\n      if (this.overlayContent) {\n        this.addHandler(this.overlayContent, a.jqx.mobile.getTouchEventName(\"touchend\"), function (p) {\n          if (!l.enableSelection) {\n            return true;\n          }\n\n          if (f) {\n            l._newScroll = new Date();\n\n            if (l._newScroll - l._lastScroll < 500) {\n              return true;\n            }\n          }\n\n          var s = a.jqx.mobile.getTouches(p);\n          var t = s[0];\n\n          if (t != undefined) {\n            var n = l.host.offset();\n            var r = parseInt(t.pageX);\n            var q = parseInt(t.pageY);\n\n            if (l.touchMode == true) {\n              if (t._pageX != undefined) {\n                r = parseInt(t._pageX);\n                q = parseInt(t._pageY);\n              }\n            }\n\n            r = r - n.left;\n            q = q - n.top;\n\n            var o = l._hitTest(r, q);\n\n            if (o != null && !o.isGroup) {\n              l._newScroll = new Date();\n\n              if (l._newScroll - l._lastScroll < 500) {\n                return false;\n              }\n\n              if (l.checkboxes) {\n                l._updateItemCheck(o, o.visibleIndex);\n\n                return;\n              }\n\n              if (o.html.indexOf(\"href\") != -1) {\n                setTimeout(function () {\n                  l.selectIndex(o.visibleIndex, false, true, false, \"mouse\", p);\n                  l.content.trigger(\"click\");\n                  return false;\n                }, 100);\n              } else {\n                l.selectIndex(o.visibleIndex, false, true, false, \"mouse\", p);\n\n                if (p.preventDefault) {\n                  p.preventDefault();\n                }\n\n                l.content.trigger(\"click\");\n                return false;\n              }\n            }\n          }\n        });\n      } else {\n        var d = false;\n        this.addHandler(this.content, i, function (n) {\n          if (!l.enableSelection) {\n            return true;\n          }\n\n          d = true;\n\n          if (f) {\n            l._newScroll = new Date();\n\n            if (l._newScroll - l._lastScroll < 500) {\n              return false;\n            }\n          }\n\n          l.focused = true;\n\n          if (!l.isTouchDevice() && l.focusable) {\n            l.host.focus();\n          }\n\n          if (n.target.id != \"listBoxContent\" + l.element.id && l.itemswrapper[0] != n.target) {\n            var r = n.target;\n            var z = a(r).offset();\n            var q = l.host.offset();\n\n            if (c) {\n              var o = a.jqx.mobile.getLeftPos(r);\n              var t = a.jqx.mobile.getTopPos(r);\n              z.left = o;\n              z.top = t;\n              o = a.jqx.mobile.getLeftPos(l.element);\n              t = a.jqx.mobile.getTopPos(l.element);\n              q.left = o;\n              q.top = t;\n            }\n\n            var s = parseInt(z.top) - parseInt(q.top);\n            var v = parseInt(z.left) - parseInt(q.left);\n\n            var w = l._hitTest(v, s);\n\n            if (w != null && !w.isGroup) {\n              var p = function (y, x) {\n                if (!l._shiftKey) {\n                  l._clickedIndex = y.visibleIndex;\n                }\n\n                if (!l.checkboxes) {\n                  l.selectIndex(y.visibleIndex, false, true, false, \"mouse\", x);\n                } else {\n                  v = 20 + x.pageX - z.left;\n\n                  if (l.rtl) {\n                    var A = l.hScrollBar.css(\"visibility\") != \"hidden\" ? l.hScrollInstance.max : l.host.width();\n\n                    if (v <= l.host.width() - 20) {\n                      if (!l.allowDrag) {\n                        l._updateItemCheck(y, y.visibleIndex);\n\n                        l.selectIndex(y.visibleIndex, false, true, false, \"mouse\", x);\n                      } else {\n                        setTimeout(function () {\n                          if (!l._dragItem) {\n                            if (!d) {\n                              l._updateItemCheck(y, y.visibleIndex);\n\n                              l.selectIndex(y.visibleIndex, false, true, false, \"mouse\", x);\n                            }\n                          }\n                        }, 200);\n                      }\n                    }\n                  } else {\n                    if (v + l.hScrollInstance.value >= 20) {\n                      if (!l.allowDrag) {\n                        l._updateItemCheck(y, y.visibleIndex);\n\n                        l.selectIndex(y.visibleIndex, false, true, false, \"mouse\", x);\n                      } else {\n                        setTimeout(function () {\n                          if (!l._dragItem) {\n                            if (!d) {\n                              l._updateItemCheck(y, y.visibleIndex);\n\n                              l.selectIndex(y.visibleIndex, false, true, false, \"mouse\", x);\n                            }\n                          }\n                        }, 200);\n                      }\n                    }\n                  }\n                }\n              };\n\n              if (!w.disabled) {\n                if (w.html.indexOf(\"href\") != -1) {\n                  setTimeout(function () {\n                    p(w, n);\n                  }, 100);\n                } else {\n                  p(w, n);\n                }\n              }\n            }\n\n            if (i == \"mousedown\") {\n              var u = false;\n\n              if (n.which) {\n                u = n.which == 3;\n              } else {\n                if (n.button) {\n                  u = n.button == 2;\n                }\n              }\n\n              if (u) {\n                return true;\n              }\n            }\n          }\n\n          return true;\n        });\n      }\n\n      this.addHandler(this.content, \"mouseup\", function (n) {\n        l.vScrollInstance.handlemouseup(l, n);\n        d = false;\n      });\n\n      if (a.jqx.browser.msie) {\n        this.addHandler(this.content, \"selectstart\", function (n) {\n          return false;\n        });\n      }\n\n      var e = this.isTouchDevice();\n\n      if (this.enableHover && !e) {\n        this._mousemovefunc = function (n) {\n          if (e) {\n            return true;\n          }\n\n          if (!l.enableHover) {\n            return true;\n          }\n\n          var p = a.jqx.browser.msie == true && a.jqx.browser.version < 9 ? 0 : 1;\n\n          if (n.target == null) {\n            return true;\n          }\n\n          if (l.disabled) {\n            return true;\n          }\n\n          l.focused = true;\n          var r = l.vScrollInstance.isScrolling();\n\n          if (!r && n.target.id != \"listBoxContent\" + l.element.id) {\n            if (l.itemswrapper[0] != n.target) {\n              var t = n.target;\n              var B = a(t).offset();\n              var s = l.host.offset();\n\n              if (c) {\n                var o = a.jqx.mobile.getLeftPos(t);\n                var v = a.jqx.mobile.getTopPos(t);\n                B.left = o;\n                B.top = v;\n                o = a.jqx.mobile.getLeftPos(l.element);\n                v = a.jqx.mobile.getTopPos(l.element);\n                s.left = o;\n                s.top = v;\n              }\n\n              var u = parseInt(B.top) - parseInt(s.top);\n              var w = parseInt(B.left) - parseInt(s.left);\n\n              var A = l._hitTest(w, u);\n\n              if (A != null && !A.isGroup && !A.disabled) {\n                var q = a.data(l.element, \"hoveredItem\");\n\n                if (q != null) {\n                  a(q).removeClass(l.toThemeProperty(\"jqx-listitem-state-hover\"));\n                  a(q).removeClass(l.toThemeProperty(\"jqx-fill-state-hover\"));\n                }\n\n                a.data(l.element, \"hoveredItem\", A.element);\n                var z = a(A.element);\n                z.addClass(l.toThemeProperty(\"jqx-listitem-state-hover\"));\n                z.addClass(l.toThemeProperty(\"jqx-fill-state-hover\"));\n              }\n            }\n          }\n        };\n\n        this.addHandler(this.content, \"mousemove\", this._mousemovefunc);\n      }\n    },\n    _arrange: function (y) {\n      if (y == undefined) {\n        y = true;\n      }\n\n      var x = this;\n      var s = null;\n      var q = null;\n      var j = x.filterable ? x.filterHeight : 0;\n      var i = window.getComputedStyle(this.element);\n      var n = parseInt(i.borderLeftWidth) * 2;\n      var d = i.boxSizing;\n\n      if (this.element.offsetWidth === 0) {\n        n = 2;\n      }\n\n      if (d === \"border-box\" || isNaN(n)) {\n        n = 0;\n      }\n\n      var m = function (h) {\n        h = x.host.height() - n;\n\n        if (h == 0) {\n          h = 200;\n          x.host.height(h);\n        }\n\n        return h;\n      };\n\n      if (x.width != null && x.width.toString().indexOf(\"px\") != -1) {\n        s = x.width;\n      } else {\n        if (x.width != undefined && !isNaN(x.width)) {\n          s = x.width;\n        }\n      }\n\n      if (x.height != null && x.height.toString().indexOf(\"px\") != -1) {\n        q = x.height;\n      } else {\n        if (x.height != undefined && !isNaN(x.height)) {\n          q = x.height;\n        }\n      }\n\n      if (x.width != null && x.width.toString().indexOf(\"%\") != -1) {\n        x.host.css(\"width\", x.width);\n        s = x.host.width();\n      }\n\n      if (x.height != null && x.height.toString().indexOf(\"%\") != -1) {\n        x.host.css(\"height\", x.height);\n        q = m(q);\n      }\n\n      if (s != null) {\n        s = parseInt(s) - n;\n\n        if (parseInt(x.element.style.width) != parseInt(x.width)) {\n          x.element.style.width = parseInt(s) + \"px\";\n        }\n      }\n\n      if (!x.autoHeight) {\n        if (q != null) {\n          q = parseInt(q);\n\n          if (parseInt(x.element.style.height) != parseInt(x.height)) {\n            x.host.height(x.height);\n            m(q);\n          }\n        }\n      } else {\n        if (x.virtualSize) {\n          if (x.hScrollBar.css(\"visibility\") != \"hidden\") {\n            x.host.height(x.virtualSize.height + parseInt(x.scrollBarSize) + 3);\n            x.height = x.virtualSize.height + parseInt(x.scrollBarSize) + 3;\n            q = x.height;\n          } else {\n            x.host.height(x.virtualSize.height);\n            x.height = x.virtualSize.height;\n            q = x.virtualSize.height;\n          }\n        }\n      }\n\n      var c = x.scrollBarSize;\n\n      if (isNaN(c)) {\n        c = parseInt(c);\n\n        if (isNaN(c)) {\n          c = \"17px\";\n        } else {\n          c = c + \"px\";\n        }\n      }\n\n      c = parseInt(c);\n      var p = 4;\n      var f = 2;\n      var g = 1;\n\n      if (x.vScrollBar) {\n        if (x.vScrollBar[0].style.visibility != \"hidden\") {\n          g = c + p;\n        } else {\n          g = 0;\n          x.vScrollInstance.setPosition(0);\n        }\n      } else {\n        return;\n      }\n\n      if (c == 0) {\n        g = 0;\n        f = 0;\n      }\n\n      if (x.hScrollBar) {\n        if (x.hScrollBar[0].style.visibility != \"hidden\") {\n          f = c + p;\n        } else {\n          x.hScrollInstance.setPosition(0);\n          f = 0;\n        }\n      } else {\n        return;\n      }\n\n      if (x.autoItemsHeight) {\n        x.hScrollBar[0].style.visibility = \"hidden\";\n        f = 0;\n      }\n\n      if (q == null) {\n        q = 0;\n      }\n\n      var t = parseInt(q) - p - c;\n\n      if (t < 0) {\n        t = 0;\n      }\n\n      if (parseInt(x.hScrollBar[0].style.height) != c) {\n        if (parseInt(c) < 0) {\n          c = 0;\n        }\n\n        x.hScrollBar[0].style.height = parseInt(c) + \"px\";\n      }\n\n      if (x.hScrollBar[0].style.top != t + \"px\") {\n        x.hScrollBar[0].style.top = t + \"px\";\n        x.hScrollBar[0].style.left = \"0px\";\n      }\n\n      var b = s - c - p;\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      var o = b + \"px\";\n\n      if (x.hScrollBar[0].style.width != o) {\n        x.hScrollBar[0].style.width = o;\n      }\n\n      if (g <= 1) {\n        if (s >= 2) {\n          x.hScrollBar[0].style.width = parseInt(s - 2) + \"px\";\n        }\n      }\n\n      if (c != parseInt(x.vScrollBar[0].style.width)) {\n        x.vScrollBar[0].style.width = parseInt(c) + \"px\";\n      }\n\n      if (parseInt(q) - f != parseInt(x.vScrollBar[0].style.height)) {\n        var v = parseInt(q) - f;\n\n        if (v < 0) {\n          v = 0;\n        }\n\n        x.vScrollBar[0].style.height = v + \"px\";\n      }\n\n      if (s == null) {\n        s = 0;\n      }\n\n      var e = parseInt(s) - parseInt(c) - p + \"px\";\n\n      if (this.host.css(\"box-sizing\") === \"border-box\") {\n        e = parseInt(e) - 2 + \"px\";\n      }\n\n      if (e != x.vScrollBar[0].style.left) {\n        if (parseInt(e) >= 0) {\n          x.vScrollBar[0].style.left = e;\n        }\n\n        x.vScrollBar[0].style.top = \"0px\";\n      }\n\n      var l = x.vScrollInstance;\n      l.disabled = x.disabled;\n\n      if (y) {\n        l._arrange();\n      }\n\n      var r = x.hScrollInstance;\n      r.disabled = x.disabled;\n\n      if (y) {\n        r._arrange();\n      }\n\n      if (x.vScrollBar[0].style.visibility != \"hidden\" && x.hScrollBar[0].style.visibility != \"hidden\") {\n        x.bottomRight[0].style.visibility = \"inherit\";\n        x.bottomRight[0].style.left = 1 + parseInt(x.vScrollBar[0].style.left) + \"px\";\n        x.bottomRight[0].style.top = 1 + parseInt(x.hScrollBar[0].style.top) + \"px\";\n\n        if (x.rtl) {\n          x.bottomRight.css({\n            left: 0\n          });\n        }\n\n        x.bottomRight[0].style.width = parseInt(c) + 3 + \"px\";\n        x.bottomRight[0].style.height = parseInt(c) + 3 + \"px\";\n      } else {\n        x.bottomRight[0].style.visibility = \"hidden\";\n      }\n\n      if (parseInt(x.content[0].style.width) != parseInt(s) - g) {\n        var k = parseInt(s) - g;\n\n        if (k < 0) {\n          k = 0;\n        }\n\n        x.content[0].style.width = k + \"px\";\n      }\n\n      if (x.rtl) {\n        x.vScrollBar.css({\n          left: 0 + \"px\",\n          top: \"0px\"\n        });\n        x.hScrollBar.css({\n          left: x.vScrollBar.width() + 2 + \"px\"\n        });\n\n        if (x.vScrollBar[0].style.visibility != \"hidden\") {\n          x.content.css(\"margin-left\", 4 + x.vScrollBar.width());\n        } else {\n          x.content.css(\"margin-left\", 0);\n          x.hScrollBar.css({\n            left: \"0px\"\n          });\n        }\n\n        if (x.filterable && x.filterInput) {\n          x.filterInput.css({\n            left: x.vScrollBar.width() + 6 + \"px\"\n          });\n        }\n      }\n\n      if (parseInt(x.content[0].style.height) != parseInt(q) - f) {\n        var u = parseInt(q) - f;\n\n        if (u < 0) {\n          u = 0;\n        }\n\n        x.content[0].style.height = u + \"px\";\n        x.content[0].style.top = \"0px\";\n      }\n\n      if (j > 0) {\n        x.content[0].style.top = j + \"px\";\n        x.content[0].style.height = parseInt(x.content[0].style.height) - j + \"px\";\n      }\n\n      if (x.filterable) {\n        x.filterInput[0].style.height = j - 6 + \"px\";\n        x.filterInput[0].style.top = \"3px\";\n\n        if (!x.rtl) {\n          x.filterInput[0].style.left = parseInt(x.content.css(\"left\")) + 3 + \"px\";\n        }\n\n        x.filterInput[0].style.width = parseInt(x.content.css(\"width\")) - 7 + \"px\";\n        x.filter[0].style.display = \"block\";\n      } else {\n        x.filter[0].style.display = \"none\";\n      }\n\n      if (x.overlayContent) {\n        x.overlayContent.width(parseInt(s) - g);\n        x.overlayContent.height(parseInt(q) - f);\n      }\n    },\n    ensureVisible: function (i, j) {\n      if (isNaN(i)) {\n        var m = this.getItemByValue(i);\n\n        if (m) {\n          i = m.index;\n        }\n      }\n\n      var f = this.isIndexInView(i);\n\n      if (!f) {\n        if (i < 0) {\n          return;\n        }\n\n        if (this.autoHeight) {\n          var g = a.data(this.vScrollBar[0], \"jqxScrollBar\").instance;\n          g.setPosition(0);\n        } else {\n          for (var h = 0; h < this.visibleItems.length; h++) {\n            var m = this.visibleItems[h];\n\n            if (m.visibleIndex == i && !m.isGroup) {\n              var g = a.data(this.vScrollBar[0], \"jqxScrollBar\").instance;\n              var l = g.value;\n              var b = !this.filterable ? 0 : this.filterHeight + 2;\n              var e = this.hScrollBar.css(\"visibility\") === \"hidden\";\n              var d = e ? 0 : this.scrollBarSize + 4;\n\n              if (m.initialTop < l) {\n                g.setPosition(m.initialTop);\n\n                if (h == 0) {\n                  g.setPosition(0);\n                }\n              } else {\n                if (m.initialTop + m.height > l + this.host.height() - b) {\n                  var c = this.host.height();\n\n                  if (this.filterable) {\n                    g.setPosition(this.filterHeight + 2 + m.initialTop + m.height + 2 - c + d);\n                  } else {\n                    g.setPosition(m.initialTop + m.height + 2 - c + d);\n\n                    if (h === this.visibleItems.length - 1) {\n                      g.setPosition(g.max);\n                    }\n                  }\n\n                  if (j) {\n                    var l = g.value;\n                    var k = m.initialTop;\n\n                    if (this.filterable) {\n                      k = this.filterHeight + 2 + m.initialTop;\n                    }\n\n                    if (l + c < g.max) {\n                      g.setPosition(k);\n                    }\n                  }\n                }\n              }\n\n              break;\n            }\n          }\n        }\n      } else {\n        if (j) {\n          for (var h = 0; h < this.visibleItems.length; h++) {\n            var m = this.visibleItems[h];\n\n            if (m.visibleIndex == i && !m.isGroup) {\n              var l = this.vScrollInstance.value;\n              var k = m.initialTop;\n\n              if (this.filterable) {\n                k = this.filterHeight + 2 + m.initialTop;\n              }\n\n              if (l + this.host.height() < this.vScrollInstance.max) {\n                this.vScrollInstance.setPosition(k);\n              }\n            }\n          }\n        }\n      }\n\n      this._renderItems();\n    },\n    scrollTo: function (c, b) {\n      if (this.vScrollBar.css(\"visibility\") != \"hidden\") {\n        this.vScrollInstance.setPosition(b);\n      }\n\n      if (this.hScrollBar.css(\"visibility\") != \"hidden\") {\n        this.hScrollInstance.setPosition(c);\n      }\n    },\n    scrollDown: function () {\n      if (this.vScrollBar.css(\"visibility\") == \"hidden\") {\n        return false;\n      }\n\n      var b = this.vScrollInstance;\n\n      if (b.value + b.largestep <= b.max) {\n        b.setPosition(b.value + b.largestep);\n        return true;\n      } else {\n        b.setPosition(b.max);\n        return true;\n      }\n\n      return false;\n    },\n    scrollUp: function () {\n      if (this.vScrollBar.css(\"visibility\") == \"hidden\") {\n        return false;\n      }\n\n      var b = this.vScrollInstance;\n\n      if (b.value - b.largestep >= b.min) {\n        b.setPosition(b.value - b.largestep);\n        return true;\n      } else {\n        if (b.value != b.min) {\n          b.setPosition(b.min);\n          return true;\n        }\n      }\n\n      return false;\n    },\n    databind: function (b, d) {\n      this.records = new Array();\n      var f = b._source ? true : false;\n      var c = new a.jqx.dataAdapter(b, {\n        autoBind: false\n      });\n\n      if (f) {\n        c = b;\n        b = b._source;\n      }\n\n      var e = function (k) {\n        if (b.type != undefined) {\n          c._options.type = b.type;\n        }\n\n        if (b.formatdata != undefined) {\n          c._options.formatData = b.formatdata;\n        }\n\n        if (b.contenttype != undefined) {\n          c._options.contentType = b.contenttype;\n        }\n\n        if (b.async != undefined) {\n          c._options.async = b.async;\n        }\n      };\n\n      var h = function (q, r) {\n        var s = function (w) {\n          var D = null;\n\n          if (typeof w === \"string\") {\n            var z = w;\n            var A = w;\n            var C = \"\";\n          } else {\n            if (q.displayMember != undefined && q.displayMember != \"\") {\n              var A = w[q.valueMember];\n              var z = w[q.displayMember];\n            }\n          }\n\n          var C = \"\";\n\n          if (q.groupMember) {\n            C = w[q.groupMember];\n          } else {\n            if (w && w.group != undefined) {\n              C = w.group;\n            }\n          }\n\n          if (q.searchMember) {\n            D = w[q.searchMember];\n          } else {\n            if (w && w.searchLabel != undefined) {\n              D = w.searchLabel;\n            }\n          }\n\n          if (!q.valueMember && !q.displayMember) {\n            if (a.type(w) == \"string\") {\n              z = A = w.toString();\n            }\n          }\n\n          if (w && w.label != undefined) {\n            var z = w.label;\n          }\n\n          if (w && w.value != undefined) {\n            var A = w.value;\n          }\n\n          var B = false;\n\n          if (w && w.checked != undefined) {\n            B = w.checked;\n          }\n\n          var v = \"\";\n\n          if (w && w.html != undefined) {\n            v = w.html;\n          }\n\n          var t = true;\n\n          if (w && w.visible != undefined) {\n            t = w.visible;\n          }\n\n          var u = false;\n\n          if (w && w.disabled != undefined) {\n            u = w.disabled;\n          }\n\n          var y = false;\n\n          if (w && w.hasThreeStates != undefined) {\n            y = w.hasThreeStates;\n          }\n\n          var x = {};\n          x.label = z;\n          x.value = A;\n          x.searchLabel = D;\n          x.html = v;\n          x.visible = t;\n          x.originalItem = w;\n          x.group = C;\n          x.groupHtml = \"\";\n          x.disabled = u;\n          x.checked = B;\n          x.hasThreeStates = y;\n          return x;\n        };\n\n        if (r != undefined) {\n          var k = c._changedrecords[0];\n\n          if (k) {\n            a.each(c._changedrecords, function () {\n              var t = this.index;\n              var u = this.record;\n\n              if (r != \"remove\") {\n                var v = s(u);\n              }\n\n              switch (r) {\n                case \"update\":\n                  q.updateAt(v, t);\n                  break;\n\n                case \"add\":\n                  q.insertAt(v, t);\n                  break;\n\n                case \"remove\":\n                  q.removeAt(t);\n                  break;\n              }\n            });\n            return;\n          }\n        }\n\n        q.records = c.records;\n        var m = q.records.length;\n        var p = new Array();\n\n        for (var l = 0; l < m; l++) {\n          var n = q.records[l];\n          var o = s(n);\n          o.index = l;\n          p[l] = o;\n        }\n\n        q.items = q.loadItems(p, true);\n\n        q._render();\n\n        q._raiseEvent(\"6\");\n      };\n\n      e(this);\n      var i = this;\n\n      switch (b.datatype) {\n        case \"local\":\n        case \"array\":\n        default:\n          if (b.localdata != null || a.isArray(b)) {\n            c.unbindBindingUpdate(this.element.id);\n\n            if (this.autoBind || !this.autoBind && !d) {\n              c.dataBind();\n            }\n\n            h(this);\n            c.bindBindingUpdate(this.element.id, function (k) {\n              h(i, k);\n            });\n          }\n\n          break;\n\n        case \"json\":\n        case \"jsonp\":\n        case \"xml\":\n        case \"xhtml\":\n        case \"script\":\n        case \"text\":\n        case \"csv\":\n        case \"tab\":\n          if (b.localdata != null) {\n            c.unbindBindingUpdate(this.element.id);\n\n            if (this.autoBind || !this.autoBind && !d) {\n              c.dataBind();\n            }\n\n            h(this);\n            c.bindBindingUpdate(this.element.id, function () {\n              h(i);\n            });\n            return;\n          }\n\n          var j = {};\n\n          if (c._options.data) {\n            a.extend(c._options.data, j);\n          } else {\n            if (b.data) {\n              a.extend(j, b.data);\n            }\n\n            c._options.data = j;\n          }\n\n          var g = function () {\n            h(i);\n          };\n\n          c.unbindDownloadComplete(i.element.id);\n          c.bindDownloadComplete(i.element.id, g);\n\n          if (this.autoBind || !this.autoBind && !d) {\n            c.dataBind();\n          }\n\n      }\n    },\n    loadItems: function (m, o) {\n      if (m == null) {\n        this.groups = new Array();\n        this.items = new Array();\n        this.visualItems = new Array();\n        return;\n      }\n\n      var t = this;\n      var k = 0;\n      var d = 0;\n      var b = 0;\n      this.groups = new Array();\n      this.items = new Array();\n      this.visualItems = new Array();\n      var e = new Array();\n      this.itemsByValue = new Array();\n      a.map(m, function (x) {\n        if (x == undefined) {\n          return null;\n        }\n\n        var j = new a.jqx._jqxListBox.item();\n        var y = x.group;\n        var i = x.groupHtml;\n        var z = x.title;\n        var v = null;\n\n        if (t.searchMember) {\n          v = x[t.searchMember];\n        } else {\n          if (x && x.searchLabel != undefined) {\n            v = x.searchLabel;\n          }\n        }\n\n        if (z == null || z == undefined) {\n          z = \"\";\n        }\n\n        if (y == null || y == undefined) {\n          y = \"\";\n        }\n\n        if (t.groupMember) {\n          y = x[t.groupMember];\n        }\n\n        if (i == null || i == undefined) {\n          i = \"\";\n        }\n\n        if (!t.groups[y]) {\n          t.groups[y] = {\n            items: new Array(),\n            index: -1,\n            caption: y,\n            captionHtml: i\n          };\n          k++;\n          var u = k + \"jqxGroup\";\n          t.groups[u] = t.groups[y];\n          d++;\n          t.groups.length = d;\n        }\n\n        var w = t.groups[y];\n        w.index++;\n        w.items[w.index] = j;\n\n        if (typeof x === \"string\") {\n          j.label = x;\n          j.value = x;\n\n          if (arguments.length > 1 && arguments[1] && a.type(arguments[1]) == \"string\") {\n            j.label = x;\n            j.value = arguments[1];\n          }\n        } else {\n          if (x.label == null && x.value == null && x.html == null && x.group == null && x.groupHtml == null) {\n            j.label = x.toString();\n            j.value = x.toString();\n          } else {\n            j.label = x.label;\n            j.value = x.value;\n\n            if (j.label === undefined) {\n              j.label = x.value;\n            }\n\n            if (j.value === undefined) {\n              j.value = x.label;\n            }\n          }\n        }\n\n        if (typeof x != \"string\") {\n          if (x.label === undefined) {\n            if (t.displayMember != \"\") {\n              if (x[t.displayMember] != undefined) {\n                j.label = x[t.displayMember];\n              } else {\n                j.label = \"\";\n              }\n            }\n          }\n\n          if (x.value === undefined) {\n            if (t.valueMember != \"\") {\n              j.value = x[t.valueMember];\n            }\n          }\n        }\n\n        j.hasThreeStates = x.hasThreeStates != undefined ? x.hasThreeStates : true;\n        j.originalItem = x;\n\n        if (o) {\n          j.originalItem = x.originalItem;\n        }\n\n        j.title = z;\n\n        if (z && j.value === undefined && j.label === undefined) {\n          j.value = j.label = z;\n        }\n\n        j.html = x.html || \"\";\n\n        if (x.html && x.html != \"\") {\n          if (z && z != \"\") {}\n        }\n\n        if (typeof j.label === \"string\") {}\n\n        j.group = y;\n        j.checked = x.checked || false;\n        j.groupHtml = x.groupHtml || \"\";\n        j.disabled = x.disabled || false;\n        j.visible = x.visible != undefined ? x.visible : true;\n        j.searchLabel = v;\n        j.index = b;\n        e[b] = j;\n        b++;\n        return j;\n      });\n      var c = new Array();\n      var p = 0;\n\n      if (this.fromSelect == undefined || this.fromSelect == false) {\n        for (var h = 0; h < d; h++) {\n          var k = h + 1;\n          var n = k + \"jqxGroup\";\n          var r = this.groups[n];\n\n          if (r == undefined || r == null) {\n            break;\n          }\n\n          if (h == 0 && r.caption == \"\" && r.captionHtml == \"\" && d <= 1) {\n            for (var g = 0; g < r.items.length; g++) {\n              var q = r.items[g].value;\n\n              if (r.items[g].value == undefined || r.items[g].value == null) {\n                q = g;\n              }\n\n              this.itemsByValue[a.trim(q).split(\" \").join(\"?\")] = r.items[g];\n            }\n\n            return r.items;\n          } else {\n            var l = new a.jqx._jqxListBox.item();\n            l.isGroup = true;\n            l.label = r.caption;\n\n            if (r.caption == \"\" && r.captionHtml == \"\") {\n              r.caption = this.emptyGroupText;\n              l.label = r.caption;\n            }\n\n            l.html = r.captionHtml;\n            c[p] = l;\n            p++;\n          }\n\n          for (var f = 0; f < r.items.length; f++) {\n            c[p] = r.items[f];\n            var q = r.items[f].value;\n\n            if (r.items[f].value == \"\" || r.items[f].value == null) {\n              q = p;\n            }\n\n            t.itemsByValue[a.trim(q).split(\" \").join(\"?\")] = r.items[f];\n            p++;\n          }\n        }\n      } else {\n        var p = 0;\n        var s = new Array();\n        a.each(e, function () {\n          if (!s[this.group]) {\n            if (this.group != \"\") {\n              var i = new a.jqx._jqxListBox.item();\n              i.isGroup = true;\n              i.label = this.group;\n              c[p] = i;\n              p++;\n              s[this.group] = true;\n            }\n          }\n\n          c[p] = this;\n          var j = this.value;\n\n          if (this.value == \"\" || this.value == null) {\n            j = p - 1;\n          }\n\n          t.itemsByValue[a.trim(j).split(\" \").join(\"?\")] = this;\n          p++;\n        });\n      }\n\n      return c;\n    },\n    _mapItem: function (c) {\n      var b = new a.jqx._jqxListBox.item();\n\n      if (this.displayMember) {\n        if (c.label == undefined) {\n          c.label = c[this.displayMember];\n        }\n\n        if (c.value == undefined) {\n          c.value = c[this.valueMember];\n        }\n      }\n\n      if (typeof c === \"string\") {\n        b.label = c;\n        b.value = c;\n      } else {\n        if (typeof c === \"number\") {\n          b.label = c.toString();\n          b.value = c.toString();\n        } else {\n          b.label = c.label !== undefined ? c.label : c.value;\n          b.value = c.value !== undefined ? c.value : c.label;\n        }\n      }\n\n      if (b.label == undefined && b.value == undefined && b.html == undefined) {\n        b.label = b.value = c;\n      }\n\n      b.html = c.html || \"\";\n      b.group = c.group || \"\";\n      b.checked = c.checked || false;\n      b.title = c.title || \"\";\n      b.groupHtml = c.groupHtml || \"\";\n      b.disabled = c.disabled || false;\n      b.visible = c.visible || true;\n      return b;\n    },\n    addItem: function (b) {\n      return this.insertAt(b, this.items ? this.items.length : 0);\n    },\n    _getItemByParam: function (c) {\n      if (c != null) {\n        if (c.index == undefined) {\n          var b = this.getItemByValue(c);\n\n          if (b) {\n            c = b;\n          }\n        }\n      }\n\n      return c;\n    },\n    insertItem: function (d, b) {\n      var c = this._getItemByParam(d);\n\n      return this.insertAt(c, b);\n    },\n    updateItem: function (c, d) {\n      var b = this._getItemByParam(d);\n\n      if (b && b.index != undefined) {\n        return this.updateAt(c, b.index);\n      }\n\n      return false;\n    },\n    updateAt: function (d, c) {\n      if (d != null) {\n        var b = this._mapItem(d);\n\n        this.itemsByValue[a.trim(b.value).split(\" \").join(\"?\")] = this.items[c];\n        this.items[c].value = b.value;\n        this.items[c].label = b.label;\n        this.items[c].html = b.html;\n        this.items[c].disabled = b.disabled;\n\n        this._raiseEvent(\"9\", {\n          item: this.items[c]\n        });\n      }\n\n      this._cachedItemHtml = [];\n\n      this._renderItems();\n\n      if (this.rendered) {\n        this.rendered();\n      }\n    },\n    insertAt: function (l, f) {\n      if (l == null) {\n        return false;\n      }\n\n      this._cachedItemHtml = [];\n\n      if (this.items == undefined || this.items.length == 0) {\n        this.source = new Array();\n        this.refresh();\n\n        var g = this._mapItem(l);\n\n        g.index = 0;\n        this.items[this.items.length] = g;\n\n        this._addItems(true);\n\n        this._renderItems();\n\n        if (this.rendered) {\n          this.rendered();\n        }\n\n        if (this.allowDrag && this._enableDragDrop) {\n          this._enableDragDrop();\n        }\n\n        var k = g.value;\n\n        if (g.value == \"\" || g.value == null) {\n          k = f;\n        }\n\n        this.itemsByValue[a.trim(k).split(\" \").join(\"?\")] = g;\n        return false;\n      }\n\n      var g = this._mapItem(l);\n\n      if (f == -1 || f == undefined || f == null || f >= this.items.length) {\n        g.index = this.items.length;\n        this.items[this.items.length] = g;\n      } else {\n        var c = new Array();\n        var j = 0;\n        var e = false;\n        var h = 0;\n\n        for (var b = 0; b < this.items.length; b++) {\n          if (this.items[b].isGroup == false) {\n            if (h >= f && !e) {\n              c[j++] = g;\n              g.index = f;\n              h++;\n              e = true;\n            }\n          }\n\n          c[j] = this.items[b];\n\n          if (!this.items[b].isGroup) {\n            c[j].index = h;\n            h++;\n          }\n\n          j++;\n        }\n\n        this.items = c;\n      }\n\n      var k = g.value;\n\n      if (g.value == \"\" || g.value == null) {\n        k = f;\n      }\n\n      this.itemsByValue[a.trim(k).split(\" \").join(\"?\")] = g;\n      this.visibleItems = new Array();\n      this.renderedVisibleItems = new Array();\n      var d = a.data(this.vScrollBar[0], \"jqxScrollBar\").instance;\n      var i = d.value;\n      d.setPosition(0);\n\n      if (this.allowDrag && this._enableDragDrop || this.virtualSize && this.virtualSize.height < 10 + this.host.height()) {\n        this._addItems(true);\n      } else {\n        this._addItems(false);\n      }\n\n      if (this.groups.length > 1) {}\n\n      this._renderItems();\n\n      if (this.allowDrag && this._enableDragDrop) {\n        this._enableDragDrop();\n      }\n\n      d.setPosition(i);\n\n      this._raiseEvent(\"7\", {\n        item: g\n      });\n\n      if (this.rendered) {\n        this.rendered();\n      }\n\n      return true;\n    },\n    removeAt: function (j) {\n      if (j < 0 || j > this.items.length - 1) {\n        return false;\n      }\n\n      if (j == undefined) {\n        return false;\n      }\n\n      var d = this.items[j].height;\n      var o = this.items[j].value;\n\n      if (o == \"\" || o == null) {\n        o = j;\n      }\n\n      this.itemsByValue[a.trim(o).split(\" \").join(\"?\")] = null;\n      var k = this.items[j];\n\n      if (this.groups.length > 1) {\n        var h = new Array();\n\n        for (var b = 0; b < this.items.length; b++) {\n          if (!this.items[b].isGroup) {\n            h.push({\n              item: this.items[b],\n              key: b\n            });\n          }\n        }\n\n        if (h[j]) {\n          this.items.splice(h[j].key, 1);\n        } else {\n          return false;\n        }\n      } else {\n        this.items.splice(j, 1);\n      }\n\n      var c = new Array();\n      var n = 0;\n      var f = false;\n      var l = 0;\n\n      for (var b = 0; b < this.items.length; b++) {\n        c[n] = this.items[b];\n\n        if (!this.items[b].isGroup) {\n          c[n].index = l;\n          l++;\n        }\n\n        n++;\n      }\n\n      this.items = c;\n      var e = a.data(this.vScrollBar[0], \"jqxScrollBar\").instance;\n      var e = a.data(this.vScrollBar[0], \"jqxScrollBar\").instance;\n      var m = e.value;\n      e.setPosition(0);\n      this.visibleItems = new Array();\n      this.renderedVisibleItems = new Array();\n\n      if (this.items.length > 0) {\n        if (this.virtualSize) {\n          this.virtualSize.height -= d;\n          var p = this.virtualSize.itemsPerPage * 2;\n\n          if (this.autoHeight) {\n            p = this.items.length;\n          }\n\n          this.virtualItemsCount = Math.min(p, this.items.length);\n        }\n\n        this._updatescrollbars();\n      } else {\n        this._addItems();\n      }\n\n      this._renderItems();\n\n      if (this.allowDrag && this._enableDragDrop) {\n        this._enableDragDrop();\n      }\n\n      if (this.vScrollBar.css(\"visibility\") != \"hidden\") {\n        e.setPosition(m);\n      } else {\n        e.setPosition(0);\n      }\n\n      this.itemsByValue = new Array();\n\n      for (var g = 0; g < this.items.length; g++) {\n        var o = this.items[g].value;\n\n        if (this.items[g].value == \"\" || this.items[g].value == null) {\n          o = g;\n        }\n\n        this.itemsByValue[a.trim(o).split(\" \").join(\"?\")] = this.items[g];\n      }\n\n      this._raiseEvent(\"8\", {\n        item: k\n      });\n\n      if (this.items.length === 0) {\n        this.selectedIndex = -1;\n        this.selectedValue = null;\n\n        this._updateInputSelection();\n      }\n\n      if (this.rendered) {\n        this.rendered();\n      }\n\n      return true;\n    },\n    removeItem: function (e, f) {\n      var d = this._getItemByParam(e);\n\n      var b = -1;\n\n      if (d && d.index != undefined && f !== true) {\n        for (var c = 0; c < this.items.length; c++) {\n          if (this.items[c].label == d.label && this.items[c].value == d.value) {\n            b = c;\n            break;\n          }\n        }\n\n        if (b != -1) {\n          return this.removeAt(b);\n        }\n      }\n\n      if (b == -1) {\n        return this.removeAt(d.index);\n      }\n    },\n    getItems: function () {\n      return this.items;\n    },\n    disableItem: function (c) {\n      var b = this._getItemByParam(c);\n\n      this.disableAt(b.index);\n    },\n    enableItem: function (c) {\n      var b = this._getItemByParam(c);\n\n      this.enableAt(b.index);\n    },\n    disableAt: function (b) {\n      if (!this.items) {\n        return false;\n      }\n\n      if (b < 0 || b > this.items.length - 1) {\n        return false;\n      }\n\n      this.items[b].disabled = true;\n\n      this._renderItems();\n\n      return true;\n    },\n    enableAt: function (b) {\n      if (!this.items) {\n        return false;\n      }\n\n      if (b < 0 || b > this.items.length - 1) {\n        return false;\n      }\n\n      this.items[b].disabled = false;\n\n      this._renderItems();\n\n      return true;\n    },\n    destroy: function () {\n      if (this.source && this.source.unbindBindingUpdate) {\n        this.source.unbindBindingUpdate(this.element.id);\n      }\n\n      this._removeHandlers();\n\n      this.vScrollBar.jqxScrollBar(\"destroy\");\n      this.hScrollBar.jqxScrollBar(\"destroy\");\n      this.vScrollBar.remove();\n      this.hScrollBar.remove();\n      this.content.remove();\n      a.jqx.utilities.resize(this.host, null, true);\n      var b = a.data(this.element, \"jqxListBox\");\n      delete this.hScrollInstance;\n      delete this.vScrollInstance;\n      delete this.vScrollBar;\n      delete this.hScrollBar;\n      delete this.content;\n      delete this.bottomRight;\n      delete this.itemswrapper;\n      delete this.visualItems;\n      delete this.visibleItems;\n      delete this.items;\n      delete this.groups;\n      delete this.renderedVisibleItems;\n      delete this._mousewheelfunc;\n      delete this._mousemovefunc;\n      delete this._cachedItemHtml;\n      delete this.itemsByValue;\n      delete this._activeElement;\n      delete this.source;\n      delete this.events;\n\n      if (this.input) {\n        this.input.remove();\n        delete this.input;\n      }\n\n      if (b) {\n        delete b.instance;\n      }\n\n      this.host.removeData();\n      this.host.removeClass();\n      this.host.remove();\n      this.element = null;\n      delete this.element;\n      this.host = null;\n      delete this.set;\n      delete this.get;\n      delete this.call;\n      delete this.host;\n    },\n    _raiseEvent: function (g, c) {\n      if (this._stopEvents == true) {\n        return true;\n      }\n\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[g];\n      var e = c;\n      e.owner = this;\n\n      this._updateInputSelection();\n\n      var f = new a.Event(d);\n      f.owner = this;\n      f.args = e;\n\n      if (this.host != null) {\n        var b = this.host.trigger(f);\n      }\n\n      return b;\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx.parseSourceTag = function (c) {\n    var t = new Array();\n    var f = a(c).find(\"option\");\n    var C = a(c).find(\"optgroup\");\n    var s = false;\n\n    if (f.length === 0) {\n      f = a(c).find(\"li\");\n\n      if (f.length > 0) {\n        s = true;\n      }\n    }\n\n    if (f.length === 0) {\n      var D = [];\n      var q = a(c).find(\"tr\");\n      var d = a(c).find(\"th\");\n      var A = 0;\n\n      if (d.length === 0 && q.length > 0) {\n        d = a(q[0]).find(\"td\");\n        A = 1;\n      }\n\n      var v = [];\n      var B = [];\n      var D = [];\n\n      for (var x = 0; x < q.length; x++) {\n        var m = q[x];\n        var h = {};\n\n        if (x === A + 1) {\n          B = [];\n        }\n\n        for (var w = 0; w < d.length; w++) {\n          var g = a.trim(a(d[w]).text());\n          var b = a(m).find(\"td:eq(\" + w + \")\");\n          h[g] = a.trim(b.text());\n\n          if (x === A) {\n            v.push({\n              text: g,\n              dataField: g\n            });\n            B.push({\n              name: g\n            });\n          }\n\n          if (x === A + 1) {\n            var e = typeof h[g];\n            var z = \"\";\n\n            if (e === \"string\") {\n              if (h[g] === \"true\" || h[g] === \"false\") {\n                e = \"bool\";\n              } else {\n                if (!isNaN(parseFloat(h[g])) && h[g].indexOf(\"-\") === -1 && h[g].indexOf(\"/\") === -1) {\n                  e = \"number\";\n\n                  if (h[g].indexOf(\".\") >= 0) {\n                    z = \"f\";\n                  } else {\n                    z = \"n\";\n                  }\n                } else {\n                  if (h[g].indexOf(\"$\") >= 0 || h[g].indexOf(\"%\") >= 0) {\n                    e = \"number\";\n\n                    if (h[g].indexOf(\"$\") >= 0) {\n                      z = \"c\";\n                    }\n\n                    if (h[g].indexOf(\"%\") >= 0) {\n                      z = \"p\";\n                    }\n\n                    h[g] = h[g].replace(\"%\", \"\").replace(\"$\", \"\");\n                  } else {\n                    if (new Date(h[g]).toString() !== \"Invalid Date\") {\n                      e = \"date\";\n                      z = \"d\";\n                    }\n                  }\n                }\n              }\n            }\n\n            v[w].cellsformat = z;\n\n            if (e === \"number\") {\n              v[w].cellsalign = \"right\";\n              v[w].align = \"right\";\n            }\n\n            B.push({\n              name: g,\n              type: e\n            });\n          }\n        }\n\n        if (x >= 1) {\n          D[D.length] = h;\n        }\n      }\n\n      var u = {\n        localdata: D,\n        datatype: \"array\",\n        datafields: B\n      };\n      return {\n        source: new a.jqx.dataAdapter(u),\n        columns: v\n      };\n    }\n\n    var o = null;\n    var l = 0;\n    var o = -1;\n    var n = this;\n    var y = new Array();\n    a.each(f, function (j) {\n      var E = C.find(this).length > 0;\n      var G = null;\n\n      if (this.text != null && (this.label == null || this.label == \"\")) {\n        this.label = this.text;\n      }\n\n      if (s === true) {\n        this.label = a(this).text().trim();\n        this.selected = a(this).attr(\"data-selected\");\n        this.checked = this.selected;\n        this.value = a(this).attr(\"data-value\") || j;\n        this.disabled = a(this).attr(\"disabled\");\n      }\n\n      var F = {\n        style: this.style.cssText,\n        selected: this.selected,\n        html: this.innerHTML.trim(),\n        classes: this.className,\n        disabled: this.disabled,\n        value: this.value,\n        label: this.label,\n        title: this.title,\n        originalItem: this\n      };\n      var i = a.jqx.browser.msie && a.jqx.browser.version < 8;\n\n      if (i && !s) {\n        if (F.value == \"\" && this.text != null && this.text.length > 0) {\n          F.value = this.text;\n        }\n      }\n\n      if (E) {\n        G = C.find(this).parent()[0].label;\n        F.group = G;\n\n        if (!y[G]) {\n          y[G] = new Array();\n          y.length++;\n        }\n\n        y[G].push(F);\n      }\n\n      if (this.selected) {\n        o = j;\n      }\n\n      F.checked = this.selected;\n\n      if (F.label !== undefined) {\n        t.push(F);\n      }\n    });\n\n    if (y.length > 0) {\n      var p = new Array();\n\n      for (var r in y) {\n        if (r === \"indexOf\") {\n          continue;\n        }\n\n        var k = null;\n\n        for (var x = 0; x < C.length; x++) {\n          if (r === C[x].label || C[x].text) {\n            k = C[x];\n            break;\n          }\n        }\n\n        a.each(y[r], function (i, j) {\n          if (this.label !== undefined) {\n            p.push(this);\n          }\n        });\n      }\n    }\n\n    if (p && p.length > 0) {\n      return {\n        items: p,\n        index: o\n      };\n    } else {\n      return {\n        items: t,\n        index: o\n      };\n    }\n  };\n\n  a.jqx._jqxListBox.item = function () {\n    var b = {\n      group: \"\",\n      groupHtml: \"\",\n      selected: false,\n      isGroup: false,\n      highlighted: false,\n      value: null,\n      label: \"\",\n      html: null,\n      visible: true,\n      disabled: false,\n      element: null,\n      width: null,\n      height: null,\n      initialTop: null,\n      top: null,\n      left: null,\n      title: \"\",\n      index: -1,\n      checkBoxElement: null,\n      originalItem: null,\n      checked: false,\n      visibleIndex: -1\n    };\n    return b;\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}