{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxCalendar\", \"\", {});\n  a.extend(a.jqx._jqxCalendar.prototype, {\n    defineInstance: function () {\n      var b = {\n        disabled: false,\n        restrictedDates: new Array(),\n        multipleMonthRows: 1,\n        multipleMonthColumns: 1,\n        minDate: a.jqx._jqxDateTimeInput.getDateTime(new Date()),\n        maxDate: a.jqx._jqxDateTimeInput.getDateTime(new Date()),\n        min: new Date(1900, 0, 1),\n        max: new Date(2100, 0, 1),\n        navigationDelay: 400,\n        stepMonths: 1,\n        width: null,\n        height: null,\n        value: a.jqx._jqxDateTimeInput.getDateTime(new Date()),\n        firstDayOfWeek: 0,\n        showWeekNumbers: false,\n        showDayNames: true,\n        enableWeekend: false,\n        enableOtherMonthDays: true,\n        showOtherMonthDays: true,\n        rowHeaderWidth: 25,\n        columnHeaderHeight: 25,\n        titleHeight: 30,\n        dayNameFormat: \"firstTwoLetters\",\n        monthNameFormat: \"default\",\n        titleFormat: [\"MMMM yyyy\", \"yyyy\", \"yyyy\", \"yyyy\"],\n        enableViews: true,\n        readOnly: false,\n        culture: \"default\",\n        enableFastNavigation: true,\n        enableHover: true,\n        enableAutoNavigation: true,\n        enableTooltips: false,\n        backText: \"Back\",\n        forwardText: \"Forward\",\n        specialDates: new Array(),\n        keyboardNavigation: true,\n        selectionMode: \"default\",\n        selectableDays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        todayString: \"Today\",\n        clearString: \"Clear\",\n        showFooter: false,\n        selection: {\n          from: null,\n          to: null\n        },\n        canRender: true,\n        _checkForHiddenParent: true,\n        height: null,\n        rtl: false,\n        view: \"month\",\n        views: [\"month\", \"year\", \"decade\"],\n        changing: null,\n        change: null,\n        localization: {\n          backString: \"Back\",\n          forwardString: \"Forward\",\n          todayString: \"Today\",\n          clearString: \"Clear\",\n          calendar: {\n            name: \"Gregorian_USEnglish\",\n            \"/\": \"/\",\n            \":\": \":\",\n            firstDay: 0,\n            days: {\n              names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n              namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n              namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n            },\n            months: {\n              names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n              namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n            },\n            AM: [\"AM\", \"am\", \"AM\"],\n            PM: [\"PM\", \"pm\", \"PM\"],\n            eras: [{\n              name: \"A.D.\",\n              start: null,\n              offset: 0\n            }],\n            twoDigitYearMax: 2029,\n            patterns: {\n              d: \"M/d/yyyy\",\n              D: \"dddd, MMMM dd, yyyy\",\n              t: \"h:mm tt\",\n              T: \"h:mm:ss tt\",\n              f: \"dddd, MMMM dd, yyyy h:mm tt\",\n              F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n              M: \"MMMM dd\",\n              Y: \"yyyy MMMM\",\n              S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n              ISO: \"yyyy-MM-dd hh:mm:ss\"\n            }\n          }\n        },\n        events: [\"backButtonClick\", \"nextButtonClick\", \"valuechanged\", \"cellMouseDown\", \"cellMouseUp\", \"cellSelected\", \"cellUnselected\", \"change\", \"viewChange\"]\n      };\n\n      if (this === a.jqx._jqxCalendar.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n\n      this.minDate._setYear(1900);\n\n      this.minDate._setMonth(1);\n\n      this.minDate._setDay(1);\n\n      this.minDate._setHours(0);\n\n      this.minDate._setMinutes(0);\n\n      this.minDate._setSeconds(0);\n\n      this.minDate._setMilliseconds(0);\n\n      this.maxDate._setYear(2100);\n\n      this.maxDate._setMonth(1);\n\n      this.maxDate._setDay(1);\n\n      this.maxDate._setHours(0);\n\n      this.maxDate._setMinutes(0);\n\n      this.maxDate._setSeconds(0);\n\n      this.maxDate._setMilliseconds(0);\n\n      this.value._setHours(0);\n\n      this.value._setMinutes(0);\n\n      this.value._setSeconds(0);\n\n      this.value._setMilliseconds(0);\n\n      return b;\n    },\n    _createFromInput: function (d) {\n      var g = this;\n\n      if (g.element.nodeName.toLowerCase() == \"input\") {\n        g.field = g.element;\n\n        if (g.field.className) {\n          g._className = g.field.className;\n        }\n\n        var f = {\n          title: g.field.title\n        };\n\n        if (g.field.value) {\n          f.value = g.field.value;\n        }\n\n        if (g.field.checked) {\n          f.checked = true;\n        }\n\n        if (g.field.id.length) {\n          f.id = g.field.id.replace(/[^\\w]/g, \"_\") + \"_\" + d;\n        } else {\n          f.id = a.jqx.utilities.createId() + \"_\" + d;\n        }\n\n        if (g.field.getAttribute(\"min\")) {\n          var e = new Date(g.field.getAttribute(\"min\"));\n\n          if (e != \"Invalid Date\") {\n            g.min = e;\n          }\n        }\n\n        if (g.field.getAttribute(\"max\")) {\n          var c = new Date(g.field.getAttribute(\"max\"));\n\n          if (c != \"Invalid Date\") {\n            g.max = c;\n          }\n        }\n\n        var i = a(\"<div></div>\", f);\n        i[0].style.cssText = g.field.style.cssText;\n\n        if (!g.width) {\n          g.width = a(g.field).width();\n        }\n\n        if (!g.height) {\n          g.height = a(g.field).outerHeight();\n        }\n\n        a(g.field).hide().after(i);\n        var h = g.host.data();\n        g.host = i;\n        g.host.data(h);\n        g.element = i[0];\n        g.element.id = g.field.id;\n        g.field.id = f.id;\n\n        if (g._className) {\n          g.host.addClass(g._className);\n          a(g.field).removeClass(g._className);\n        }\n\n        if (g.field.tabIndex) {\n          var b = g.field.tabIndex;\n          g.field.tabIndex = -1;\n          g.element.tabIndex = b;\n        }\n      }\n    },\n    createInstance: function (i) {\n      var h = this;\n\n      h._createFromInput(\"jqxCalendar\");\n\n      this.setCalendarSize();\n\n      if (this.element.id === \"\") {\n        this.element.id = a.jqx.utilities.createId();\n      }\n\n      if (a.type(this.value) == \"date\") {\n        this.value = a.jqx._jqxDateTimeInput.getDateTime(this.value);\n      }\n\n      this.element.innerHTML = \"\";\n      this.host.attr(\"data-role\", \"calendar\");\n      var b = this.element.id;\n      var j = this;\n\n      this.propertyChangeMap.width = function (k, m, l, n) {\n        j.setCalendarSize();\n      };\n\n      this.propertyChangeMap.height = function (k, m, l, n) {\n        j.setCalendarSize();\n      };\n\n      if (a.global) {\n        a.global.preferCulture(this.culture);\n      }\n\n      if (this.culture != \"default\") {\n        if (a.global) {\n          a.global.preferCulture(this.culture);\n          this.localization.calendar = a.global.culture.calendar;\n        } else {\n          if (window.Globalize) {\n            var d = window.Globalize.culture(this.culture);\n            this.localization.calendar = d.calendar;\n          }\n        }\n\n        this.firstDayOfWeek = this.localization.calendar.firstDay;\n      }\n\n      if (this.localization.backString != \"Back\") {\n        this.backText = this.localization.backString;\n      }\n\n      if (this.localization.forwardString != \"Forward\") {\n        this.forwardText = this.localization.forwardString;\n      }\n\n      if (this.localization.todayString != \"Today\" && this.localization.todayString) {\n        this.todayString = this.localization.todayString;\n      }\n\n      if (this.localization.clearString != \"Clear\" && this.localization.clearString) {\n        this.clearString = this.localization.clearString;\n      }\n\n      if (this.localization.calendar && this.localization.calendar.firstDay != undefined && this.culture != \"default\") {\n        this.firstDayOfWeek = this.localization.calendar.firstDay;\n      }\n\n      this.setMaxDate(this.max, false);\n      this.setMinDate(this.min, false);\n\n      if (!this.host.attr(\"tabIndex\")) {\n        this.host.attr(\"tabIndex\", 0);\n      }\n\n      this.host.css(\"outline\", \"none\");\n      this.host.addClass(this.toThemeProperty(\"jqx-calendar\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n\n      this._addInput();\n\n      if (this.views.indexOf(\"month\") == -1) {\n        this.view = \"year\";\n      }\n\n      if (this.views.indexOf(\"year\") == -1 && this.views.indexOf(\"month\") == -1) {\n        this.view = \"decade\";\n      }\n\n      this.addHandler(this.host, \"keydown\", function (l) {\n        var k = true;\n\n        if (j.keyboardNavigation) {\n          if (j._handleKey != undefined) {\n            k = j._handleKey(l);\n\n            if (!k) {\n              if (l.stopPropagation) {\n                l.stopPropagation();\n              }\n\n              if (l.preventDefault) {\n                l.preventDefault();\n              }\n            }\n          }\n        }\n\n        return k;\n      });\n      var e = false;\n      var g = this;\n      var f = false;\n\n      if (j.width != null && j.width.toString().indexOf(\"%\") != -1) {\n        f = true;\n      }\n\n      if (j.height != null && j.height.toString().indexOf(\"%\") != -1) {\n        f = true;\n      }\n\n      a.jqx.utilities.resize(this.host, function () {\n        var k = g.host.find(\"#View\" + j.element.id);\n\n        if (!e) {\n          e = true;\n          g.render();\n        } else {\n          g.refreshTitle(k);\n        }\n\n        if (f) {\n          if (j.refreshTimer) {\n            clearTimeout(j.refreshTimer);\n          }\n\n          j.refreshTimer = setTimeout(function () {\n            j.refreshControl();\n          }, 1);\n        }\n      }, false, this._checkForHiddenParent);\n      var c = \"View\";\n\n      this.propertyChangeMap.disabled = function (k, m, l, n) {\n        if (n) {\n          k.host.addClass(j.toThemeProperty(\"jqx-fill-state-disabled\"));\n        } else {\n          k.host.removeClass(j.toThemeProperty(\"jqx-fill-state-disabled\"));\n        }\n\n        j.refreshControl();\n      };\n    },\n    _addInput: function () {\n      var b = this.host.attr(\"name\");\n      this.input = a(\"<input type='hidden'/>\");\n      this.host.append(this.input);\n\n      if (b) {\n        this.input.attr(\"name\", b);\n      }\n\n      this.input.val(this.getDate().toString());\n    },\n    setCalendarSize: function () {\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.host.width(this.width);\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.host.width(this.width);\n        }\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        this.host.css(\"width\", this.width);\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.host.height(this.height);\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.host.height(this.height);\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        this.host.css(\"height\", this.height);\n      }\n    },\n    _getYearAndMonthPart: function (c) {\n      if (!c) {\n        return new Date(1900, 0, 1);\n      }\n\n      var b = new Date(c.getFullYear(), c.getMonth(), 1);\n      return b;\n    },\n    _handleKey: function (p) {\n      if (this.readOnly) {\n        return true;\n      }\n\n      var A = p.keyCode;\n      var y = this;\n\n      var b = this._getSelectedDate();\n\n      if (b == undefined) {\n        if (this.view == \"month\" && (A == 37 || A == 38 || A == 39 || A == 40)) {\n          this.selectedDate = new Date(this.value.year, this.value.month - 1, 1);\n\n          this._selectDate(this.selectedDate, \"key\");\n\n          b = this.selectedDate;\n        } else {\n          return true;\n        }\n      }\n\n      if (p.altKey) {\n        return true;\n      }\n\n      if (this._animating) {\n        return false;\n      }\n\n      if (this.view != \"month\" && A == 13) {\n        var d = this._getSelectedCell();\n\n        this._setDateAndSwitchViews(d, p, \"keyboard\");\n      }\n\n      if (this.view == \"year\") {\n        var w = b.getMonth();\n\n        var j = this._getYearAndMonthPart(this.getMinDate());\n\n        var m = this._getYearAndMonthPart(this.getMaxDate());\n\n        switch (A) {\n          case 37:\n            if (w == 0) {\n              var h = new Date(b.getFullYear() - 1, 11, 1);\n\n              if (h >= j) {\n                this.selectedDate = h;\n                this.navigateBackward();\n              } else {\n                if (this.selectedDate != j) {\n                  this.selectedDate = j;\n                  this.navigateBackward();\n                }\n              }\n            } else {\n              var h = new Date(b.getFullYear(), w - 1, 1);\n\n              if (h >= j) {\n                this._selectDate(h, \"key\");\n              }\n            }\n\n            return false;\n\n          case 38:\n            var h = new Date(b.getFullYear(), w - 4, 1);\n\n            if (h < j) {\n              h = j;\n            }\n\n            if (w - 4 < 0) {\n              this.selectedDate = h;\n              this.navigateBackward();\n            } else {\n              this._selectDate(h, \"key\");\n            }\n\n            return false;\n\n          case 40:\n            var h = new Date(b.getFullYear(), w + 4, 1);\n\n            if (h > m) {\n              h = m;\n            }\n\n            if (w + 4 > 11) {\n              this.selectedDate = h;\n              this.navigateForward();\n            } else {\n              this._selectDate(h, \"key\");\n            }\n\n            return false;\n\n          case 39:\n            if (w == 11) {\n              var h = new Date(b.getFullYear() + 1, 0, 1);\n\n              if (h <= m) {\n                this.selectedDate = h;\n                this.navigateForward();\n              } else {\n                if (this.selectedDate != m) {\n                  this.selectedDate = m;\n                  this.navigateForward();\n                }\n              }\n            } else {\n              var h = new Date(b.getFullYear(), w + 1, 1);\n\n              if (h <= m) {\n                this._selectDate(h, \"key\");\n              }\n            }\n\n            return false;\n        }\n\n        return true;\n      }\n\n      if (this.view == \"decade\") {\n        var o = this._renderStartDate.getFullYear();\n\n        var k = this._renderEndDate.getFullYear();\n\n        var n = b.getFullYear();\n        var v = this.getMinDate().getFullYear();\n        var c = this.getMaxDate().getFullYear();\n\n        switch (A) {\n          case 37:\n            if (n - 1 >= v) {\n              if (n <= o) {\n                this.selectedDate = new Date(n - 1, b.getMonth(), 1);\n                this.navigateBackward();\n              } else {\n                this._selectDate(new Date(n - 1, b.getMonth(), 1), \"key\");\n              }\n            }\n\n            return false;\n\n          case 38:\n            var x = n - 4;\n\n            if (n - 4 < v) {\n              x = v;\n            }\n\n            if (x < o) {\n              this.selectedDate = new Date(x, b.getMonth(), 1);\n              this.navigateBackward();\n            } else {\n              this._selectDate(new Date(x, b.getMonth(), 1), \"key\");\n            }\n\n            return false;\n\n          case 40:\n            var x = n + 4;\n\n            if (x > c) {\n              x = c;\n            }\n\n            if (x > k) {\n              this.selectedDate = new Date(x, b.getMonth(), 1);\n              this.navigateForward();\n            } else {\n              this._selectDate(new Date(x, b.getMonth(), 1), \"key\");\n            }\n\n            return false;\n\n          case 39:\n            if (n + 1 <= c) {\n              if (n == k) {\n                this.selectedDate = new Date(n + 1, b.getMonth(), 1);\n                this.navigateForward();\n              } else {\n                this._selectDate(new Date(n + 1, b.getMonth(), 1), \"key\");\n              }\n            }\n\n            return false;\n        }\n\n        return true;\n      }\n\n      var u = new a.jqx._jqxDateTimeInput.getDateTime(b);\n      var f = this.getViewStart();\n      var e = this.getViewEnd();\n      var t = u;\n      var s = a.data(this.element, \"View\" + this.element.id);\n\n      if (s == undefined || s == null) {\n        return true;\n      }\n\n      if (A == 36) {\n        u._setDay(1);\n\n        if (this._isDisabled(u.dateTime)) {\n          return false;\n        }\n\n        this._selectDate(u.dateTime, \"key\");\n\n        return false;\n      }\n\n      if (A == 35) {\n        var r = this.value._daysInMonth(this.value.year, this.value.month);\n\n        u._setDay(r);\n\n        if (this._isDisabled(u.dateTime)) {\n          return false;\n        }\n\n        this._selectDate(u.dateTime, \"key\");\n\n        return false;\n      }\n\n      var g = 1;\n\n      if (p.ctrlKey) {\n        g = 12;\n      }\n\n      if (A == 34) {\n        var z = this.navigateForward(g);\n\n        if (z) {\n          u._addMonths(g);\n\n          if (this._isDisabled(u.dateTime)) {\n            return false;\n          }\n\n          this._selectDate(u.dateTime, \"key\");\n        }\n\n        return false;\n      }\n\n      if (A == 33) {\n        var z = this.navigateBackward(g);\n\n        if (z) {\n          u._addMonths(-g);\n\n          if (this._isDisabled(u.dateTime)) {\n            return false;\n          }\n\n          this._selectDate(u.dateTime, \"key\");\n        }\n\n        return false;\n      }\n\n      if (A == 38) {\n        u._addDays(-7);\n\n        if (u.dateTime < this.getMinDate()) {\n          return false;\n        }\n\n        if (u.dateTime < f) {\n          var z = this.navigateBackward();\n\n          if (!z) {\n            return false;\n          }\n        }\n\n        if (this._isDisabled(u.dateTime)) {\n          return false;\n        }\n\n        this._selectDate(u.dateTime, \"key\");\n\n        for (var q = 0; q < s.cells.length; q++) {\n          var d = s.cells[q];\n          var l = d.getDate();\n\n          if (d.isOtherMonth && d.isSelected && l <= u.dateTime) {\n            this.value.day = l.getDate();\n            this.navigateBackward();\n\n            this._selectDate(u.dateTime, \"key\");\n\n            break;\n          }\n        }\n\n        return false;\n      } else {\n        if (A == 40) {\n          u._addDays(7);\n\n          if (u.dateTime > this.getMaxDate()) {\n            return false;\n          }\n\n          if (u.dateTime > e) {\n            var z = this.navigateForward();\n\n            if (!z) {\n              return false;\n            }\n          }\n\n          if (this._isDisabled(u.dateTime)) {\n            return false;\n          }\n\n          this._selectDate(u.dateTime, \"key\");\n\n          for (var q = 0; q < s.cells.length; q++) {\n            var d = s.cells[q];\n            var l = d.getDate();\n\n            if (d.isOtherMonth && d.isSelected && l >= u.dateTime) {\n              this.value.day = l.getDate();\n              this.navigateForward();\n\n              this._selectDate(u.dateTime, \"key\");\n\n              break;\n            }\n          }\n\n          return false;\n        }\n      }\n\n      if (A == 37) {\n        u._addDays(-1);\n\n        if (u.dateTime < this.getMinDate()) {\n          return false;\n        }\n\n        if (u.dateTime < f) {\n          var z = this.navigateBackward();\n\n          if (!z) {\n            return false;\n          }\n        }\n\n        if (this._isDisabled(u.dateTime)) {\n          return false;\n        }\n\n        this._selectDate(u.dateTime, \"key\");\n\n        for (var q = 0; q < s.cells.length; q++) {\n          var d = s.cells[q];\n          var l = d.getDate();\n\n          if (d.isOtherMonth && d.isSelected && l <= u.dateTime) {\n            if (u.dateTime < this.getMinDate() || u.dateTime > this.getMaxDate()) {\n              return false;\n            }\n\n            if (this._isDisabled(u.dateTime)) {\n              return false;\n            }\n\n            this.navigateBackward();\n\n            this._selectDate(u.dateTime, \"key\");\n\n            break;\n          }\n        }\n\n        return false;\n      } else {\n        if (A == 39) {\n          u._addDays(1);\n\n          if (u.dateTime > this.getMaxDate()) {\n            return false;\n          }\n\n          if (u.dateTime > e) {\n            var z = this.navigateForward();\n\n            if (!z) {\n              return false;\n            }\n          }\n\n          if (this._isDisabled(u.dateTime)) {\n            return false;\n          }\n\n          this._selectDate(u.dateTime, \"key\");\n\n          for (var q = 0; q < s.cells.length; q++) {\n            var d = s.cells[q];\n            var l = d.getDate();\n\n            if (d.isOtherMonth && d.isSelected && l >= u.dateTime) {\n              if (u.dateTime < this.getMinDate() || u.dateTime > this.getMaxDate()) {\n                return false;\n              }\n\n              this.navigateForward();\n\n              this._selectDate(u.dateTime, \"key\");\n\n              break;\n            }\n          }\n\n          return false;\n        }\n      }\n\n      return true;\n    },\n    render: function () {\n      if (!this.canRender) {\n        return;\n      }\n\n      this.host.children().remove();\n\n      var c = this._renderSingleCalendar(\"View\" + this.element.id);\n\n      var b = this;\n      this.host.append(c);\n    },\n    addSpecialDate: function (b, c, d) {\n      if (this.multipleMonthRows == 1 && this.multipleMonthColumns == 1) {\n        var e = this.specialDates.length;\n        this.specialDates[e] = {\n          Date: b,\n          Class: c,\n          Tooltip: d\n        };\n        this.refreshControl();\n      }\n    },\n    refresh: function (c) {\n      var b = this;\n      this.render();\n      setTimeout(function () {\n        b.refreshControl();\n      });\n    },\n    invalidate: function () {\n      this.refreshControl();\n    },\n    refreshControl: function () {\n      if (this.multipleMonthRows == 1 && this.multipleMonthColumns == 1) {\n        this.refreshSingleCalendar(\"View\" + this.element.id, null);\n      }\n    },\n    getViewStart: function () {\n      var c = this.getVisibleDate();\n      var b = this.getFirstDayOfWeek(c);\n      return b.dateTime;\n    },\n    getViewEnd: function () {\n      var c = this.getViewStart();\n      var b = new a.jqx._jqxDateTimeInput.getDateTime(c);\n\n      b._addDays(41);\n\n      return b.dateTime;\n    },\n    refreshSingleCalendar: function (e, l) {\n      if (!this.canRender) {\n        return;\n      }\n\n      var j = this.host.find(\"#\" + e);\n      var f = this.getVisibleDate();\n      var c = this.getFirstDayOfWeek(f);\n      this.refreshCalendarCells(j, c, e);\n      this.refreshTitle(j);\n      this.refreshRowHeader(j, e);\n\n      if (this.selectedDate != undefined) {\n        this._selectDate(this.selectedDate);\n      }\n\n      var b = parseInt(this.month.css(\"padding-top\"));\n      var g = this.host.height() - 2 * b;\n      var k = g - this.titleHeight - this.columnHeaderHeight;\n\n      if (!this.showDayNames) {\n        k = this.month.height() - this.titleHeight;\n      }\n\n      if (this.showFooter) {\n        k -= 20;\n      }\n\n      var d = j.find(\"#cellsTable\" + e);\n      var i = j.find(\"#calendarRowHeader\" + e);\n      d.height(k);\n      i.height(k);\n    },\n    refreshRowHeader: function (s, m) {\n      if (!this.showWeekNumbers) {\n        return;\n      }\n\n      var c = this.getVisibleDate();\n      var h = this.getFirstDayOfWeek(c);\n      var n = h.dayOfWeek;\n      var t = this.getWeekOfYear(h);\n      var f = new a.jqx._jqxDateTimeInput.getDateTime(new Date(h.dateTime));\n\n      f._addDays(5);\n\n      f.dayOfWeek = f.dateTime.getDay();\n      var k = this.getWeekOfYear(f);\n      var e = this.rowHeader.find(\"table\");\n      e.width(this.rowHeaderWidth);\n      var g = h;\n      var q = new Array();\n\n      for (var p = 0; p < 6; p++) {\n        var o = t.toString();\n        var b = new a.jqx._jqxCalendar.cell(g.dateTime);\n        var l = p + 1 + this.element.id;\n        var j = a(e[0].rows[p].cells[0]);\n        b.element = j;\n        b.row = p;\n        b.column = 0;\n        var d = j.find(\"#headerCellContent\" + l);\n        d.addClass(this.toThemeProperty(\"jqx-calendar-row-cell\"));\n        d[0].innerHTML = t;\n        q[p] = b;\n        g = new a.jqx._jqxDateTimeInput.getDateTime(new Date(g._addWeeks(1)));\n        t = this.getWeekOfYear(g);\n      }\n\n      var r = a.data(this.element, s[0].id);\n      r.rowCells = q;\n\n      this._refreshOtherMonthRows(r, m);\n    },\n    _refreshOtherMonthRows: function (f, e) {\n      if (this.showOtherMonthDays) {\n        return;\n      }\n\n      this._displayLastRow(true, e);\n\n      this._displayFirstRow(true, e);\n\n      var d = false;\n      var g = false;\n\n      for (var c = 0; c < f.cells.length; c++) {\n        var b = f.cells[c];\n\n        if (b.isVisible && c < 7) {\n          d = true;\n        } else {\n          if (b.isVisible && c >= f.cells.length - 7) {\n            g = true;\n          }\n        }\n      }\n\n      if (!d) {\n        this._displayFirstRow(false, e);\n      }\n\n      if (!g) {\n        this._displayLastRow(false, e);\n      }\n    },\n    _displayLastRow: function (b, c) {\n      var g = this.host.find(\"#\" + c);\n      var f = g.find(\"#calendarRowHeader\" + g[0].id).find(\"table\");\n      var d = null;\n\n      if (this.showWeekNumbers) {\n        if (f[0].cells) {\n          var d = a(f[0].rows[5]);\n        }\n      }\n\n      var e = a(g.find(\"#cellTable\" + g[0].id)[0].rows[5]);\n\n      if (b) {\n        if (this.showWeekNumbers && d) {\n          d.css(\"display\", \"table-row\");\n        }\n\n        e.css(\"display\", \"table-row\");\n      } else {\n        if (this.showWeekNumbers && d) {\n          d.css(\"display\", \"none\");\n        }\n\n        e.css(\"display\", \"none\");\n      }\n    },\n    _displayFirstRow: function (b, c) {\n      var e = this.host.find(\"#\" + c);\n      var d = e.find(\"#calendarRowHeader\" + e[0].id).find(\"table\");\n      var f = null;\n\n      if (this.showWeekNumbers) {\n        if (d[0].cells) {\n          var f = a(d[0].rows[0]);\n        }\n      }\n\n      var g = a(e.find(\"#cellTable\" + e[0].id)[0].rows[0]);\n\n      if (b) {\n        if (this.showWeekNumbers && f) {\n          f.css(\"display\", \"table-row\");\n        }\n\n        g.css(\"display\", \"table-row\");\n      } else {\n        if (this.showWeekNumbers && f) {\n          f.css(\"display\", \"none\");\n        }\n\n        g.css(\"display\", \"none\");\n      }\n    },\n    _renderSingleCalendar: function (q, l) {\n      if (!this.canRender) {\n        return;\n      }\n\n      var n = this.host.find(\"#\" + q.toString());\n\n      if (n != null) {\n        n.remove();\n      }\n\n      var v = a(\"<div id='\" + q.toString() + \"'></div>\");\n      var b = this.getVisibleDate();\n      var m = this.getFirstDayOfWeek(b);\n      var e = new a.jqx._jqxDateTimeInput.getDateTime(m.dateTime);\n\n      e._addMonths(1);\n\n      var u = a.jqx._jqxCalendar.monthView(m, e, null, null, null, v);\n\n      if (l == undefined || l == null) {\n        this.host.append(v);\n        v[0].style.width = \"100%\";\n        v[0].style.height = \"100%\";\n      } else {\n        l.append(v);\n      }\n\n      a.data(this.element, q, u);\n      var t = parseInt(v.css(\"padding-top\"));\n      var s = this.host.height() - 2 * t;\n      var r = s - this.titleHeight - this.columnHeaderHeight;\n\n      if (!this.showDayNames) {\n        r = s - this.titleHeight;\n      }\n\n      if (this.showFooter) {\n        r -= 20;\n      }\n\n      if (this.rowHeaderWidth < 0) {\n        this.rowHeaderWidth = 0;\n      }\n\n      if (this.columnHeaderHeight < 0) {\n        this.columnHeaderHeight = 0;\n      }\n\n      if (this.titleHeight < 0) {\n        this.titleHeight = 0;\n      }\n\n      var g = this.rowHeaderWidth;\n      var k = this.columnHeaderHeight;\n\n      if (!this.showWeekNumbers) {\n        g = 0;\n      }\n\n      if (!this.showDayNames) {\n        k = 0;\n      }\n\n      var x = \"<div style='height:\" + this.titleHeight + \"px;'><table role='grid' style='margin: 0px; width: 100%; height: 100%; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr role='row' id='calendarTitle' width='100%'><td role='gridcell' NOWRAP id='leftNavigationArrow'></td><td aria-live='assertive' aria-atomic='true' role='gridcell' align='center' NOWRAP id='calendarTitleHeader'></td><td role='gridcell' NOWRAP id='rightNavigationArrow'></td></tr></table></div>\";\n      var c = \"<table role='grid' class='\" + this.toThemeProperty(\"jqx-calendar-month\") + \"' style='margin: 0px; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr role='row' id='calendarHeader' height='\" + k + \"'><td role='gridcell' id='selectCell' width='\" + g + \"'></td><td role='gridcell' colspan='2' style='border: none; padding-left: 2px; padding-right: 2px' id='calendarColumnHeader'></td></tr><tr role='row' id='calendarContent'><td role='gridcell' id='calendarRowHeader' valign='top' height='\" + r + \"' width='\" + g + \"'></td><td role='gridcell' valign='top' colspan='2' style='padding-left: 2px; padding-right: 2px' id='cellsTable' height='\" + r + \"'></td></tr></table>\";\n      var p = \"<div id='footer' style='margin: 0px; display: none; height:\" + d + \"px;'><table style='width: 100%; height: 100%; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr id='calendarFooter'><td align='right' id='todayButton'></td><td align='left' colspan='2' id=doneButton></td></tr></table></div>\";\n      v[0].innerHTML = x + c + p;\n      this.header = v.find(\"#calendarHeader\");\n      this.header[0].id = \"calendarHeader\" + q;\n      this.header.addClass(this.toThemeProperty(\"calendar-header\"));\n      this.columnHeader = v.find(\"#calendarColumnHeader\");\n      this.columnHeader[0].id = \"calendarColumnHeader\" + q;\n      this.table = v.find(\"#cellsTable\");\n      this.table[0].id = \"cellsTable\" + q;\n      this.rowHeader = v.find(\"#calendarRowHeader\");\n      this.rowHeader[0].id = \"calendarRowHeader\" + q;\n      this.selectCell = v.find(\"#selectCell\");\n      this.selectCell[0].id = \"selectCell\" + q;\n      this.title = v.find(\"#calendarTitle\");\n      this.title[0].id = \"calendarTitle\" + q;\n      this.leftButton = v.find(\"#leftNavigationArrow\");\n      this.leftButton[0].id = \"leftNavigationArrow\" + q;\n      this.titleHeader = v.find(\"#calendarTitleHeader\");\n      this.titleHeader[0].id = \"calendarTitleHeader\" + q;\n      this.rightButton = v.find(\"#rightNavigationArrow\");\n      this.rightButton[0].id = \"rightNavigationArrow\" + q;\n      this.footer = v.find(\"#calendarFooter\");\n      this._footer = v.find(\"#footer\");\n      this._footer[0].id = \"footer\" + q;\n      this.footer[0].id = \"calendarFooter\" + q;\n      this.todayButton = v.find(\"#todayButton\");\n      this.todayButton[0].id = \"todayButton\" + q;\n      this.doneButton = v.find(\"#doneButton\");\n      this.doneButton[0].id = \"doneButton\" + q;\n      this.title.addClass(this.toThemeProperty(\"jqx-calendar-title-container\"));\n      var d = 20;\n\n      if (this.showFooter) {\n        this._footer.css(\"display\", \"block\");\n      }\n\n      v.find(\"tr\").addClass(this.toThemeProperty(\"jqx-reset\"));\n      v.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      v.addClass(this.toThemeProperty(\"jqx-calendar-month-container\"));\n      this.month = v;\n      this.selectCell.addClass(this.toThemeProperty(\"jqx-reset\"));\n      this.selectCell.addClass(this.toThemeProperty(\"jqx-calendar-top-left-header\"));\n\n      if (this.showWeekNumbers) {\n        this._renderRowHeader(v);\n      } else {\n        this.table[0].colSpan = 3;\n        this.columnHeader[0].colSpan = 3;\n        this.rowHeader.css(\"display\", \"none\");\n        this.selectCell.css(\"display\", \"none\");\n      }\n\n      if (this.showFooter) {\n        this.footer.height(20);\n        var j = a(\"<a href='javascript:;'>\" + this.todayString + \"</a>\");\n        j.appendTo(this.todayButton);\n        var i = a(\"<a href='javascript:;'>\" + this.clearString + \"</a>\");\n        i.appendTo(this.doneButton);\n        i.addClass(this.toThemeProperty(\"jqx-calendar-footer\"));\n        j.addClass(this.toThemeProperty(\"jqx-calendar-footer\"));\n        var o = this;\n        var f = \"mousedown\";\n\n        if (a.jqx.mobile.isTouchDevice()) {\n          f = a.jqx.mobile.getTouchEventName(\"touchstart\");\n        }\n\n        this.addHandler(j, f, function () {\n          if (o.today) {\n            o.today();\n          } else {\n            o.setDate(new Date(), \"mouse\");\n          }\n\n          return false;\n        });\n        this.addHandler(i, f, function () {\n          if (o.clear) {\n            o.clear();\n          } else {\n            o.setDate(null, \"mouse\");\n          }\n\n          return false;\n        });\n      }\n\n      if (this.view != \"month\") {\n        this.header.hide();\n      }\n\n      if (this.showDayNames && this.view == \"month\") {\n        this.renderColumnHeader(v);\n      }\n\n      this.oldView = this.view;\n      this.renderCalendarCells(v, m, q);\n\n      if (l == undefined || l == null) {\n        this.renderTitle(v);\n      }\n\n      this._refreshOtherMonthRows(u, q);\n\n      v.find(\"tbody\").css({\n        border: \"none\",\n        background: \"transparent\"\n      });\n\n      if (this.selectedDate != undefined) {\n        this._selectDate(this.selectedDate);\n      }\n\n      var w = this;\n      this.addHandler(this.host, \"focus\", function () {\n        w.focus();\n      });\n      return v;\n    },\n    _getTitleFormat: function () {\n      switch (this.view) {\n        case \"month\":\n          return this.titleFormat[0];\n\n        case \"year\":\n          return this.titleFormat[1];\n\n        case \"decade\":\n          return this.titleFormat[2];\n\n        case \"centuries\":\n          return this.titleFormat[3];\n      }\n    },\n    renderTitle: function (t) {\n      var k = a(\"<div role='button' style='float: left;'></div>\");\n      var l = a(\"<div role='button' style='float: right;'></div>\");\n      var o = this.title;\n      o.addClass(this.toThemeProperty(\"jqx-reset\"));\n      o.addClass(this.toThemeProperty(\"jqx-widget-header\"));\n      o.addClass(this.toThemeProperty(\"jqx-calendar-title-header\"));\n      var e = o.find(\"td\");\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        if (e.css(\"background-color\") != \"transparent\") {\n          var g = o.css(\"background-color\");\n          e.css(\"background-color\", g);\n        }\n\n        if (e.css(\"background-image\") != \"transparent\") {\n          var d = o.css(\"background-image\");\n          var p = o.css(\"background-repeat\");\n          var c = o.css(\"background-position\");\n          e.css(\"background-image\", d);\n          e.css(\"background-repeat\", p);\n          e.css(\"background-position\", \"left center scroll\");\n        }\n      } else {\n        e.css(\"background-color\", \"transparent\");\n      }\n\n      if (this.disabled) {\n        o.addClass(this.toThemeProperty(\"jqx-calendar-title-header-disabled\"));\n      }\n\n      k.addClass(this.toThemeProperty(\"jqx-calendar-title-navigation\"));\n      k.addClass(this.toThemeProperty(\"jqx-icon-arrow-left\"));\n      k.appendTo(this.leftButton);\n      var m = this.leftButton;\n      l.addClass(this.toThemeProperty(\"jqx-calendar-title-navigation\"));\n      l.addClass(this.toThemeProperty(\"jqx-icon-arrow-right\"));\n      l.appendTo(this.rightButton);\n      var b = this.rightButton;\n\n      if (this.enableTooltips) {\n        if (a(m).jqxTooltip) {\n          a(m).jqxTooltip({\n            name: this.element.id,\n            position: \"mouse\",\n            theme: this.theme,\n            content: this.backText\n          });\n          a(b).jqxTooltip({\n            name: this.element.id,\n            position: \"mouse\",\n            theme: this.theme,\n            content: this.forwardText\n          });\n        }\n      }\n\n      var n = this.titleHeader;\n\n      var v = this._format(this.value.dateTime, this._getTitleFormat(), this.culture);\n\n      if (this.view == \"decade\") {\n        var q = this._format(this._renderStartDate, this._getTitleFormat(), this.culture);\n\n        var j = this._format(this._renderEndDate, this._getTitleFormat(), this.culture);\n\n        v = q + \" - \" + j;\n      } else {\n        if (this.view == \"centuries\") {\n          var q = this._format(this._renderCenturyStartDate, this._getTitleFormat(), this.culture);\n\n          var j = this._format(this._renderCenturyEndDate, this._getTitleFormat(), this.culture);\n\n          v = q + \" - \" + j;\n        }\n      }\n\n      var f = a(\"<div style='background: transparent; margin: 0; padding: 0; border: none;'>\" + v + \"</div>\");\n      n.append(f);\n      f.addClass(this.toThemeProperty(\"jqx-calendar-title-content\"));\n      var s = parseInt(k.width());\n      var i = t.width() - 2 * s;\n      var r = n.find(\".jqx-calendar-title-content\").width(i);\n      a.data(k, \"navigateLeft\", this);\n      a.data(l, \"navigateRight\", this);\n      var h = a.jqx.mobile.isTouchDevice();\n\n      if (!this.disabled) {\n        var u = this;\n        this.addHandler(n, \"mousedown\", function (A) {\n          if (u.enableViews) {\n            if (!u._viewAnimating && !u._animating) {\n              var x = u.view;\n              u.oldView = x;\n\n              switch (u.view) {\n                case \"month\":\n                  u.view = \"year\";\n                  break;\n\n                case \"year\":\n                  u.view = \"decade\";\n                  break;\n              }\n\n              if (u.views.indexOf(\"year\") == -1 && u.view == \"year\") {\n                u.view = \"decade\";\n              }\n\n              if (u.views.indexOf(\"decade\") == -1 && u.view == \"decade\") {\n                u.view = x;\n              }\n\n              if (x != u.view) {\n                var z = \"View\" + u.element.id;\n                var B = u.host.find(\"#\" + z);\n                var y = u.getVisibleDate();\n                var w = u.getFirstDayOfWeek(y);\n                u.renderCalendarCells(B, w, z, true);\n                u.refreshTitle(B);\n\n                u._raiseEvent(\"8\");\n              }\n            }\n\n            return false;\n          }\n        });\n        this.addHandler(k, \"mousedown\", function (x) {\n          if (!u._animating) {\n            a.data(k, \"navigateLeftRepeat\", true);\n            var w = a.data(k, \"navigateLeft\");\n\n            if (w.enableFastNavigation && !h) {\n              w.startRepeat(w, k, true, u.navigationDelay + 200);\n            }\n\n            w.navigateBackward(u.stepMonths, \"arrow\");\n            x.stopPropagation();\n            x.preventDefault();\n            return w._raiseEvent(0, x);\n          } else {\n            return false;\n          }\n        });\n        this.addHandler(k, \"mouseup\", function (w) {\n          a.data(k, \"navigateLeftRepeat\", false);\n        });\n        this.addHandler(k, \"mouseleave\", function (w) {\n          a.data(k, \"navigateLeftRepeat\", false);\n        });\n        this.addHandler(l, \"mousedown\", function (x) {\n          if (!u._animating) {\n            a.data(l, \"navigateRightRepeat\", true);\n            var w = a.data(l, \"navigateRight\");\n\n            if (w.enableFastNavigation && !h) {\n              w.startRepeat(w, l, false, u.navigationDelay + 200);\n            }\n\n            w.navigateForward(u.stepMonths, \"arrow\");\n            x.stopPropagation();\n            x.preventDefault();\n            return w._raiseEvent(1, x);\n          } else {\n            return false;\n          }\n        });\n        this.addHandler(l, \"mouseup\", function (w) {\n          a.data(l, \"navigateRightRepeat\", false);\n        });\n        this.addHandler(l, \"mouseleave\", function (w) {\n          a.data(l, \"navigateRightRepeat\", false);\n        });\n      }\n    },\n    refreshTitle: function (f) {\n      var g = this._format(this.value.dateTime, this._getTitleFormat(), this.culture);\n\n      if (this.view == \"decade\") {\n        var d = this._format(this._renderStartDate, this._getTitleFormat(), this.culture);\n\n        var b = this._format(this._renderEndDate, this._getTitleFormat(), this.culture);\n\n        g = d + \" - \" + b;\n      } else {\n        if (this.view == \"centuries\") {\n          var d = this._format(this._renderCenturyStartDate, this._getTitleFormat(), this.culture);\n\n          var b = this._format(this._renderCenturyEndDate, this._getTitleFormat(), this.culture);\n\n          g = d + \" - \" + b;\n        }\n      }\n\n      var e = this.titleHeader;\n\n      if (this.titleHeader) {\n        var c = e.find(\".jqx-calendar-title-content\");\n        var h = a(\"<div style='background: transparent; margin: 0; padding: 0; border: none;'>\" + g + \"</div>\");\n        e.append(h);\n        h.addClass(this.toThemeProperty(\"jqx-calendar-title-content\"));\n\n        if (c != null) {\n          c.remove();\n        }\n      }\n    },\n    startRepeat: function (d, b, f, e) {\n      var c = window.setTimeout(function () {\n        var g = a.data(b, \"navigateLeftRepeat\");\n\n        if (!f) {\n          g = a.data(b, \"navigateRightRepeat\");\n        }\n\n        if (g) {\n          if (e < 25) {\n            e = 25;\n          }\n\n          if (f) {\n            d.navigateBackward(1, \"arrow\");\n            d.startRepeat(d, b, true, e);\n          } else {\n            d.navigateForward(1, \"arrow\");\n            c = d.startRepeat(d, b, false, e);\n          }\n        } else {\n          window.clearTimeout(c);\n          return;\n        }\n      }, e);\n    },\n    navigateForward: function (h, g) {\n      if (h == undefined || h == null) {\n        h = this.stepMonths;\n      }\n\n      var f = this.value.year;\n\n      if (this.view == \"decade\") {\n        f = this._renderStartDate.getFullYear() + 12;\n\n        if (this._renderEndDate.getFullYear() >= this.getMaxDate().getFullYear()) {\n          return;\n        }\n      } else {\n        if (this.view == \"year\") {\n          f = this.value.year + 1;\n        } else {\n          if (this.view == \"centuries\") {\n            f = this.value.year + 100;\n          }\n        }\n      }\n\n      if (this.view != \"month\") {\n        var b = this.getMaxDate().getFullYear();\n\n        if (b < f || f > b) {\n          f = b;\n        }\n\n        if (this.value.year == f) {\n          if (this.view === \"decade\") {\n            if (this.value.year > this._renderEndDate.getFullYear()) {\n              this.value.year = f;\n              this.value.month = 1;\n              this.value.day = 1;\n            } else {\n              return;\n            }\n          } else {\n            return;\n          }\n        }\n\n        this.value.year = f;\n        this.value.month = 1;\n        this.value.day = 1;\n      }\n\n      var c = this.value.day;\n      var i = this.value.month;\n\n      if (i + h <= 12) {\n        var e = this.value._daysInMonth(this.value.year, this.value.month + h);\n\n        if (c > e) {\n          c = e;\n        }\n      }\n\n      if (this.view == \"month\") {\n        var d = new Date(this.value.year, this.value.month - 1 + h, c);\n\n        if (g == \"arrow\" && this.selectableDays.length == 7 && this.selectionMode != \"range\") {\n          this.selectedDate = new Date(this.value.year, this.value.month - 1 + h, 1);\n        }\n      } else {\n        var d = new Date(this.value.year, this.value.month - 1, c);\n      }\n\n      return this.navigateTo(d);\n    },\n    navigateBackward: function (g, f) {\n      if (g == undefined || g == null) {\n        g = this.stepMonths;\n      }\n\n      var e = this.value.year;\n\n      if (this.view == \"decade\") {\n        e = this._renderStartDate.getFullYear() - 12;\n      } else {\n        if (this.view == \"year\") {\n          e = this.value.year - 1;\n        } else {\n          if (this.view == \"centuries\") {\n            e = this.value.year - 100;\n          }\n        }\n      }\n\n      if (this.view != \"month\") {\n        var i = this.getMinDate().getFullYear();\n\n        if (e < i) {\n          e = i;\n        }\n\n        if (this.view == \"decade\") {\n          if (this._renderStartDate) {\n            if (this._renderStartDate.getFullYear() == e) {\n              return;\n            }\n          }\n        }\n\n        this.value.year = e;\n        this.value.month = 1;\n        this.value.day = 1;\n      }\n\n      var b = this.value.day;\n      var h = this.value.month;\n\n      if (h - g >= 1) {\n        var d = this.value._daysInMonth(this.value.year, this.value.month - g);\n\n        if (b > d) {\n          b = d;\n        }\n      }\n\n      if (this.view == \"month\") {\n        var c = new Date(this.value.year, this.value.month - 1 - g, b);\n\n        if (f == \"arrow\" && this.selectableDays.length == 7 && this.selectionMode != \"range\") {\n          this.selectedDate = new Date(this.value.year, this.value.month - 1 - g, 1);\n        }\n      } else {\n        var c = new Date(this.value.year, this.value.month - 1, b);\n      }\n\n      return this.navigateTo(c);\n    },\n    _isRestrictedRange: function (d, c) {\n      if (d > c) {\n        return true;\n      }\n\n      var b = d;\n\n      while (b.valueOf() <= c.valueOf()) {\n        if (this._isRestrictedDate(b)) {\n          return true;\n        }\n\n        b.setDate(b.getDate() + 1);\n      }\n\n      return false;\n    },\n    _hasUnrestrictedRanges: function (d, c) {\n      if (d > c) {\n        return false;\n      }\n\n      var b = d;\n\n      while (b.valueOf() <= c.valueOf()) {\n        if (!this._isRestrictedDate(b)) {\n          return true;\n        }\n\n        b.setDate(b.getDate() + 1);\n      }\n\n      return false;\n    },\n    _getNextUnrestrictedDay: function (d, c) {\n      if (d > c) {\n        return null;\n      }\n\n      var b = d;\n\n      while (b.valueOf() <= c.valueOf()) {\n        if (!this._isRestrictedDate(b)) {\n          return b;\n        }\n\n        b.setDate(b.getDate() + 1);\n      }\n\n      return null;\n    },\n    _isRestrictedDate: function (d) {\n      var c = this;\n\n      if (!a.isArray(c.restrictedDates)) {\n        return false;\n      }\n\n      for (var g = 0; g < c.restrictedDates.length; g++) {\n        var b = c.restrictedDates[g];\n\n        if (typeof b == \"object\" && b.from != undefined && b.to != undefined) {\n          var f = b.from;\n          var e = b.to;\n\n          if (d.valueOf() >= f.valueOf() && d.valueOf() <= e.valueOf()) {\n            return true;\n          }\n        } else {\n          if (b.getMonth() == d.getMonth() && b.getDate() == d.getDate() && b.getFullYear() == d.getFullYear()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    _isDisabled: function (d) {\n      var e = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var b = d.getDay();\n      var c = e[b];\n\n      if (this.selectableDays.indexOf(c) == -1) {\n        return true;\n      }\n\n      if (this._isRestrictedDate(d)) {\n        return true;\n      }\n\n      return false;\n    },\n    refreshCalendarCells: function (x, f, m) {\n      if (this.view == \"year\" || this.view == \"decade\" || this.view == \"centuries\") {\n        this.refreshViews(x, f, m);\n        return;\n      }\n\n      var s = this.table;\n      var q = s.find(\"#cellTable\" + m.toString());\n      var e = f;\n      var c = new Array();\n      var n = 0;\n      var u = new a.jqx._jqxDateTimeInput.getDateTime(new Date());\n\n      for (var p = 0; p < 6; p++) {\n        for (var o = 0; o < 7; o++) {\n          var d = p + 1;\n          var h = o;\n\n          if (this.rtl) {\n            h = 6 - h;\n          }\n\n          var t = h + 1;\n          var l = \"#cell\" + d + t + this.element.id;\n          var w = new Date(e.dateTime.getFullYear(), e.dateTime.getMonth(), e.dateTime.getDate());\n          var b = new a.jqx._jqxCalendar.cell(w);\n          var g = a(q[0].rows[p].cells[t - 1]);\n          g[0].id = l.substring(1);\n          b.element = g;\n          b.row = p;\n          b.column = o;\n          b.isVisible = true;\n          b.isOtherMonth = false;\n          b.isToday = false;\n          b.isWeekend = false;\n          b.isHighlighted = false;\n          b.isSelected = false;\n\n          if (e.month != this.value.month) {\n            b.isOtherMonth = true;\n            b.isVisible = this.showOtherMonthDays;\n          }\n\n          if (this._isRestrictedDate(w)) {\n            b.isRestricted = true;\n            b.isDisabled = true;\n          }\n\n          if (!b.isDisabled) {\n            if (w < this.getMinDate() || w > this.getMaxDate() || this._isDisabled(w)) {\n              b.isDisabled = true;\n            }\n          }\n\n          if (e.month == u.month && e.day == u.day && e.year == u.year) {\n            b.isToday = true;\n          }\n\n          if (e.isWeekend()) {\n            b.isWeekend = true;\n          }\n\n          a.data(this.element, \"cellContent\" + l.substring(1), b);\n          a.data(this.element, l.substring(1), b);\n          c[n] = b;\n          n++;\n          a.jqx.utilities.html(g, e.day);\n\n          this._applyCellStyle(b, g, g);\n\n          e = new a.jqx._jqxDateTimeInput.getDateTime(new Date(e._addDays(1)));\n        }\n      }\n\n      var v = a.data(this.element, x[0].id);\n\n      if (v != undefined && v != null) {\n        v.cells = c;\n      }\n\n      this.renderedCells = c;\n\n      this._refreshOtherMonthRows(v, m);\n    },\n    _getDecadeAndCenturiesData: function () {\n      var k = new Array();\n      var p = new Array();\n      var c = this.getMaxDate().getFullYear() - this.getMinDate().getFullYear();\n\n      if (c < 12) {\n        c = 12;\n      }\n\n      var f = this.getMinDate();\n      var b = this.getMaxDate();\n      var l = this.value.dateTime.getFullYear();\n\n      if (this.view == \"decade\") {\n        if (l + 12 > b.getFullYear()) {\n          l = b.getFullYear() - 11;\n        }\n\n        if (l < f.getFullYear()) {\n          l = f.getFullYear();\n        }\n\n        for (var h = 0; h < c; h++) {\n          var d = new Date(f.getFullYear() + h, 0, 1);\n\n          if (f.getFullYear() <= l && l <= d.getFullYear()) {\n            var g = new Date(d.getFullYear(), d.getMonth(), 1);\n\n            for (var e = 0; e < 12; e++) {\n              var o = new Date(g.getFullYear() + e, this.value.dateTime.getMonth(), this.value.dateTime.getDate());\n              var m = o.getFullYear();\n\n              if (f.getFullYear() <= m && m <= b.getFullYear()) {\n                k.push(m);\n                p.push(o);\n\n                if (e == 0) {\n                  this._renderStartDate = o;\n                }\n\n                this._renderEndDate = o;\n              } else {\n                k.push(m);\n                p.push(o);\n              }\n            }\n\n            break;\n          }\n        }\n      } else {\n        if (this.view == \"centuries\") {\n          for (var h = 0; h < c; h += 120) {\n            var d = new Date(f.getFullYear() + h + 120, 0, 1);\n\n            if (f.getFullYear() <= l && l <= d.getFullYear()) {\n              var g = new Date(d.getFullYear() - 130, d.getMonth(), 1);\n\n              if (g < f) {\n                g = f;\n              }\n\n              for (var e = 0; e < 12; e++) {\n                var n = new Date(g.getFullYear() + e * 10, g.getMonth(), 1);\n\n                if (g.getFullYear() >= f.getFullYear() && n.getFullYear() <= b.getFullYear()) {\n                  k.push(\"<span style='visibility: hidden;'>-</span>\" + n.getFullYear() + \"-\" + (n.getFullYear() + 9));\n                  p.push(n);\n\n                  if (e == 0) {\n                    this._renderCenturyStartDate = n;\n                  }\n\n                  this._renderCenturyEndDate = new Date(n.getFullYear() + 9, 0, 1);\n                }\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      return {\n        years: k,\n        dates: p\n      };\n    },\n    refreshViews: function (A, m, s) {\n      var B = this;\n      var c = new Array();\n      var w = A.find(\"#cellTable\" + s.toString());\n\n      var D = this._getDecadeAndCenturiesData();\n\n      var l = D.years;\n      var C = D.dates;\n      var t = 0;\n      var f = this.getMinDate();\n      var n = this.getMaxDate();\n\n      for (var v = 0; v < 3; v++) {\n        for (var u = 0; u < 4; u++) {\n          var d = v + 1;\n          var q = u;\n\n          if (this.rtl) {\n            q = 3 - q;\n          }\n\n          var x = q + 1;\n          var z = new Date(this.value.dateTime);\n          z.setDate(1);\n          z.setMonth(v * 4 + q);\n          var b = new a.jqx._jqxCalendar.cell(z);\n          var e = w[0].rows[\"row\" + (1 + v) + this.element.id];\n          var o = a(e.cells[u]);\n          b.isSelected = false;\n          b.isVisible = true;\n          b.element = o;\n          b.row = v;\n          b.column = u;\n          b.index = c.length;\n          var p = \"\";\n\n          if (this.view == \"year\") {\n            var h = this.localization.calendar.months.names;\n            var g = h[v * 4 + q];\n\n            switch (this.monthNameFormat) {\n              case \"default\":\n                g = this.localization.calendar.months.namesAbbr[v * 4 + q];\n                break;\n\n              case \"shortest\":\n                g = this.localization.calendar.months.namesShort[v * 4 + q];\n                break;\n\n              case \"firstTwoLetters\":\n                g = g.substring(0, 2);\n                break;\n\n              case \"firstLetter\":\n                g = g.substring(0, 1);\n                break;\n            }\n\n            p = g;\n          } else {\n            if (this.view == \"decade\" || this.view == \"centuries\") {\n              p = l[v * 4 + q];\n\n              if (undefined == p) {\n                p = \"<span style='cursor: default; visibility: hidden;'>2013</span>\";\n              }\n\n              b.setDate(C[v * 4 + q]);\n            }\n          }\n\n          var z = b.getDate();\n\n          if (this.view == \"year\") {\n            if (z.getMonth() == this.getDate().getMonth() && z.getFullYear() == this.getDate().getFullYear()) {\n              b.isSelected = true;\n            }\n          } else {\n            if (z.getFullYear() == this.getDate().getFullYear()) {\n              b.isSelected = true;\n            }\n          }\n\n          if (this.view == \"year\") {\n            if (this._getYearAndMonthPart(z) < this._getYearAndMonthPart(f)) {\n              b.isDisabled = true;\n            }\n\n            if (this._getYearAndMonthPart(z) > this._getYearAndMonthPart(n)) {\n              b.isDisabled = true;\n            }\n          } else {\n            if (z.getFullYear() < f.getFullYear()) {\n              b.isDisabled = true;\n            }\n\n            if (z.getFullYear() > n.getFullYear()) {\n              b.isDisabled = true;\n            }\n          }\n\n          a.jqx.utilities.html(o, p);\n          c[t] = b;\n          t++;\n        }\n      }\n\n      var y = a.data(this.element, A[0].id);\n\n      if (y != undefined && y != null) {\n        y.cells = c;\n      }\n\n      this.renderedCells = c;\n\n      this._applyCellStyles();\n    },\n    _createViewClone: function () {\n      var b = this.host.find(\".jqx-calendar-month\");\n      var c = b.clone();\n      c.css(\"position\", \"absolute\");\n      c.css(\"top\", b.position().top);\n      c.width(this.month.width());\n      return c;\n    },\n    _addCellsTable: function (h, g) {\n      var e = this;\n      var c = this.showFooter ? 20 : 0;\n\n      if (this.view != \"month\") {\n        g.height(this.month.height() - this.titleHeight);\n      } else {\n        g.height(this.month.height() - this.titleHeight - this.columnHeaderHeight - c);\n      }\n\n      this._viewAnimating = true;\n      var b = this.host.find(\".jqx-calendar-month-container\");\n      b.css(\"position\", \"relative\");\n      var d = this.host.find(\".jqx-calendar-month\");\n\n      var f = this._createViewClone();\n\n      b.append(f);\n\n      if (this.view != \"month\") {\n        this.header.fadeOut(0);\n\n        if (this.showWeekNumbers) {\n          this.rowHeader.fadeOut(0);\n        }\n\n        if (this.showFooter) {\n          this._footer.fadeOut(0);\n        }\n      } else {\n        this.header.fadeIn(this.navigationDelay + 200);\n\n        if (this.showWeekNumbers) {\n          this.rowHeader.fadeIn(this.navigationDelay + 200);\n        }\n\n        if (this.showFooter) {\n          this._footer.fadeIn(this.navigationDelay + 200);\n        }\n      }\n\n      h.children().remove();\n      h.append(g);\n\n      this._animateViews(f, g, function () {\n        if (!e.selectedDate && e.selectionMode != \"range\") {\n          e.selectedDate = e.renderedCells[0].getDate();\n        }\n\n        try {\n          e.renderedCells[0].element.focus();\n          setTimeout(function () {\n            e.renderedCells[0].element.focus();\n          }, 10);\n        } catch (i) {}\n\n        e._viewAnimating = false;\n      });\n\n      g.addClass(this.toThemeProperty(\"jqx-calendar-view\"));\n    },\n    _animateViews: function (c, b, e) {\n      var d = this;\n      d._viewAnimating = true;\n\n      if (d.oldView == d.view) {\n        c.remove();\n        b.fadeOut(0);\n        b.fadeIn(0);\n        e();\n        return;\n      }\n\n      c.fadeOut(this.navigationDelay + 100, function () {\n        c.remove();\n      });\n      b.fadeOut(0);\n      b.fadeIn(this.navigationDelay + 200, function () {\n        e();\n      });\n    },\n    focus: function () {\n      if (this.disabled) {\n        return;\n      }\n\n      try {\n        if (this.renderedCells && this.renderedCells.length > 0) {\n          var d = this;\n          var c = false;\n\n          if (!d.selectedDate && d.selectionMode != \"range\") {\n            this.setDate(new Date(), \"mouse\");\n          }\n\n          this.element.focus();\n        }\n      } catch (b) {}\n    },\n    renderViews: function (E, n, v) {\n      var F = this;\n      var e = new Array();\n      var z = a(\"<table role='grid' style='border-color: transparent; width: 100%; height: 100%;' cellspacing='2' cellpadding='0' id=cellTable\" + v.toString() + \"><tr role='row' id='row1\" + this.element.id + \"'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row' id='row2\" + this.element.id + \"'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row' id='row3\" + this.element.id + \"'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>\");\n      var q = this.host.find(\".jqx-calendar-month-container\");\n      q.css(\"position\", \"relative\");\n      var A = E.find(\"#cellsTable\" + E[0].id);\n      A[0].style.borderColor = \"transparent\";\n\n      var I = this._getDecadeAndCenturiesData();\n\n      var m = I.years;\n      var H = I.dates;\n      var w = 0;\n      var g = this.getMinDate();\n      var o = this.getMaxDate();\n      var t = new Date(this.value.dateTime);\n      t.setDate(1);\n\n      for (var y = 0; y < 3; y++) {\n        for (var x = 0; x < 4; x++) {\n          var d = y + 1;\n          var u = x;\n\n          if (this.rtl) {\n            u = 3 - u;\n          }\n\n          var B = u + 1;\n          var f = z[0].rows[\"row\" + (1 + y) + this.element.id];\n          var D = new Date(t);\n          D.setMonth(y * 4 + u);\n          var c = new a.jqx._jqxCalendar.cell(D);\n          var p = a(f.cells[x]);\n          c.isVisible = true;\n          c.element = p;\n          c.row = y;\n          c.column = x;\n          c.index = e.length;\n          c.isSelected = false;\n          var s = \"\";\n\n          if (this.view == \"year\") {\n            if (D.getMonth() == this.getDate().getMonth() && D.getFullYear() == this.getDate().getFullYear()) {\n              c.isSelected = true;\n            }\n\n            var l = this.localization.calendar.months.names;\n            var h = l[y * 4 + u];\n\n            switch (this.monthNameFormat) {\n              case \"default\":\n                h = this.localization.calendar.months.namesAbbr[y * 4 + u];\n                break;\n\n              case \"shortest\":\n                h = this.localization.calendar.months.namesShort[y * 4 + u];\n                break;\n\n              case \"firstTwoLetters\":\n                h = h.substring(0, 2);\n                break;\n\n              case \"firstLetter\":\n                h = h.substring(0, 1);\n                break;\n            }\n\n            s = h;\n          } else {\n            if (this.view == \"decade\" || this.view == \"centuries\") {\n              s = m[y * 4 + u];\n              c.setDate(H[y * 4 + u]);\n\n              if (c.getDate().getFullYear() == this.getDate().getFullYear()) {\n                c.isSelected = true;\n              }\n\n              if (undefined == s) {\n                s = \"<span style='cursor: default; visibility: hidden;'>2013</span>\";\n              }\n            }\n          }\n\n          var D = c.getDate();\n\n          if (this.view == \"year\") {\n            var b = new Date(D);\n            b.setDate(1);\n            b.setHours(0, 0, 0, 0);\n            b.setMonth(D.getMonth() + 1);\n            b = new Date(b.valueOf() - 1);\n\n            if (this._getYearAndMonthPart(D) < this._getYearAndMonthPart(g) || this._getYearAndMonthPart(D) > this._getYearAndMonthPart(o) || !this._hasUnrestrictedRanges(D, b)) {\n              c.isDisabled = true;\n            }\n          } else {\n            var G = new Date(D);\n            G.setMonth(0);\n            G.setDate(1);\n            G.setHours(0, 0, 0, 0);\n            G.setFullYear(D.getFullYear() + 1);\n            G = new Date(G.valueOf() - 1);\n\n            if (D.getFullYear() < g.getFullYear() || D.getFullYear() > o.getFullYear() || !this._hasUnrestrictedRanges(D, G)) {\n              c.isDisabled = true;\n            }\n          }\n\n          a.jqx.utilities.html(p, s);\n          e[w] = c;\n          w++;\n        }\n      }\n\n      a.each(e, function () {\n        var j = this.element;\n        var i = this;\n\n        if (!F.disabled) {\n          F.addHandler(j, \"mousedown\", function (k) {\n            F._setDateAndSwitchViews(i, k, \"mouse\");\n          });\n          F.addHandler(j, \"mouseover\", function (r) {\n            var k = F.renderedCells[i.index];\n\n            if (F.view != \"centuries\" && k.element.html().toLowerCase().indexOf(\"span\") != -1) {\n              return;\n            }\n\n            k.isHighlighted = true;\n\n            F._applyCellStyle(k, k.element, k.element);\n          });\n          F.addHandler(j, \"mouseout\", function (r) {\n            var k = F.renderedCells[i.index];\n\n            if (F.view != \"centuries\" && k.element.html().toLowerCase().indexOf(\"span\") != -1) {\n              return;\n            }\n\n            k.isHighlighted = false;\n\n            F._applyCellStyle(k, k.element, k.element);\n          });\n        }\n      });\n      var C = a.data(this.element, E[0].id);\n\n      if (C != undefined && C != null) {\n        C.cells = e;\n      }\n\n      this.renderedCells = e;\n\n      this._addCellsTable(A, z);\n\n      this._applyCellStyles();\n    },\n    _setDateAndSwitchViews: function (m, d, j) {\n      if (!this._viewAnimating && !this._animating) {\n        var g = this.getDate();\n        var e = this.renderedCells[m.index].getDate();\n        var k = this.value.dateTime.getDate();\n        var l = new Date(e);\n\n        if (this.views.indexOf(\"month\") != -1) {\n          l.setDate(k);\n        } else {\n          l.setDate(1);\n          e.setDate(1);\n        }\n\n        if (l.getMonth() == e.getMonth()) {\n          e = l;\n        }\n\n        var i = this.getMinDate();\n        var c = this.getMaxDate();\n\n        if (this.view == \"year\") {\n          if (this._getYearAndMonthPart(e) < this._getYearAndMonthPart(i)) {\n            return;\n          }\n\n          if (this._getYearAndMonthPart(e) > this._getYearAndMonthPart(c)) {\n            return;\n          }\n        } else {\n          if (e.getFullYear() < i.getFullYear()) {\n            return;\n          }\n\n          if (e.getFullYear() > c.getFullYear()) {\n            return;\n          }\n        }\n\n        if (this.selectionMode != \"range\") {\n          this._selectDate(e, j);\n        }\n\n        this.oldView = this.view;\n\n        switch (this.view) {\n          case \"year\":\n            this.view = \"month\";\n            break;\n\n          case \"decade\":\n            this.view = \"year\";\n            break;\n        }\n\n        if (this.views.indexOf(\"month\") == -1) {\n          this.view = \"year\";\n        }\n\n        if (this.views.indexOf(\"year\") == -1) {\n          this.view = \"decade\";\n        }\n\n        if (this.view == \"year\") {\n          if (this._getYearAndMonthPart(e) < this._getYearAndMonthPart(i)) {\n            e = i;\n          }\n\n          if (this._getYearAndMonthPart(e) > this._getYearAndMonthPart(c)) {\n            e = c;\n          }\n        } else {\n          if (e.getFullYear() < i.getFullYear()) {\n            e = i;\n          }\n\n          if (e.getFullYear() > c.getFullYear()) {\n            e = c;\n          }\n        }\n\n        if (this.changing && this.selectedDate && (this.selectedDate.getFullYear() != e.getFullYear() || this.selectedDate.getMonth() != e.getMonth() || this.selectedDate.getDate() != e.getDate())) {\n          e = this.selectedDate;\n        }\n\n        this.value._setYear(e.getFullYear());\n\n        this.value._setDay(e.getDate());\n\n        this.value._setMonth(e.getMonth() + 1);\n\n        this.value._setDay(e.getDate());\n\n        var h = this.getVisibleDate();\n        var b = this.getFirstDayOfWeek(h);\n        var f = \"View\" + this.element.id;\n        this.renderCalendarCells(this.month, b, f, true);\n        this.refreshTitle(this.month);\n\n        if (this.showWeekNumbers) {\n          this.refreshRowHeader(this.month, f);\n        }\n\n        if (this.views.length == 3) {\n          if (this.view == \"month\") {\n            if (this.selectionMode != \"range\") {\n              this._selectDate(this.selectedDate, \"view\");\n            } else {\n              var n = this;\n              a.each(this.renderedCells, function (r) {\n                var o = this;\n                var t = o.getDate();\n                var p = a(o.element);\n                var q = p;\n\n                if (p.length == 0) {\n                  return false;\n                }\n\n                var s = function (v) {\n                  if (v == null) {\n                    return new Date();\n                  }\n\n                  var u = new Date();\n                  u.setHours(0, 0, 0, 0);\n                  u.setFullYear(v.getFullYear(), v.getMonth(), v.getDate());\n                  return u;\n                };\n\n                if (!o.isOtherMonth && s(t).toString() == s(e).toString()) {\n                  n.value._setMonth(e.getMonth() + 1);\n\n                  n.value._setDay(e.getDate());\n\n                  n.value._setYear(e.getFullYear());\n                }\n\n                o.isSelected = false;\n                o.isDisabled = false;\n\n                if (s(t) < s(n.selection.from) && n._clicks == 1) {\n                  o.isDisabled = true;\n                }\n\n                if (n.getMaxDate() < t) {\n                  o.isDisabled = true;\n                }\n\n                if (n.getMinDate() > t) {\n                  o.isDisabled = true;\n                }\n\n                if (n._isDisabled(t)) {\n                  o.isDisabled = true;\n                }\n\n                if (!o.isDisabled) {\n                  if (s(t) >= s(n.selection.from) && s(t) <= s(n.selection.to)) {\n                    o.isSelected = true;\n                  }\n                }\n              });\n\n              this._applyCellStyles();\n            }\n          }\n        }\n\n        if (this.view != \"month\") {\n          if (this.oldView == \"year\" || this.views.indexOf(\"year\") == -1 && this.view == \"decade\") {\n            if (j != \"keyboard\") {\n              this._raiseEvent(\"3\");\n            }\n\n            this._raiseEvent(\"5\", {\n              selectionType: \"mouse\"\n            });\n          }\n        }\n\n        this._raiseEvent(\"8\");\n      }\n    },\n    renderCalendarCells: function (D, m, s, q) {\n      if (this.view == \"year\" || this.view == \"decade\" || this.view == \"centuries\") {\n        this.renderViews(D, m, s);\n        return;\n      }\n\n      var x = a(\"<table role='grid' style='width: 100%; height: 100%; border-color: transparent;' cellspacing='2' cellpadding='1' id=cellTable\" + s.toString() + \"><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>\");\n      var y = this.table;\n      y[0].style.borderColor = \"transparent\";\n\n      if (q == undefined) {\n        var g = y.find(\"#cellTable\" + s.toString());\n\n        if (g != null) {\n          g.remove();\n        }\n\n        y.append(x);\n      }\n\n      var l = m;\n      var b = this.showDayNames ? 1 : 0;\n      var f = this.showWeekNumbers ? 1 : 0;\n      var d = new Array();\n      var t = 0;\n      var v = (D.width() - this.rowHeaderWidth - 2) / 7;\n\n      if (!this.showWeekNumbers) {\n        v = (D.width() - 2) / 7;\n      }\n\n      v = parseInt(v);\n      var A = new a.jqx._jqxDateTimeInput.getDateTime(new Date());\n\n      for (var w = 0; w < 6; w++) {\n        for (var u = 0; u < 7; u++) {\n          var e = w + 1;\n          var o = u;\n\n          if (this.rtl) {\n            o = 6 - o;\n          }\n\n          var z = o + 1;\n          var p = \"#cell\" + e + z + this.element.id;\n          var C = new Date(l.dateTime.getFullYear(), l.dateTime.getMonth(), l.dateTime.getDate());\n          var c = new a.jqx._jqxCalendar.cell(C);\n          var n = a(x[0].rows[w].cells[z - 1]);\n          n[0].id = p.substring(1);\n          c.isVisible = true;\n          c.isDisabled = false;\n\n          if (l.month != this.value.month) {\n            c.isOtherMonth = true;\n            c.isVisible = this.showOtherMonthDays;\n          }\n\n          if (this._isRestrictedDate(C)) {\n            c.isRestricted = true;\n            c.isDisabled = true;\n          }\n\n          if (!c.isDisabled) {\n            if (C < this.getMinDate() || C > this.getMaxDate() || this._isDisabled(C)) {\n              c.isDisabled = true;\n            }\n          }\n\n          if (l.month == A.month && l.day == A.day && l.year == A.year) {\n            c.isToday = true;\n          }\n\n          if (l.isWeekend()) {\n            c.isWeekend = true;\n          }\n\n          c.element = n;\n          c.row = b;\n          c.column = f;\n          a.jqx.utilities.html(n, l.day);\n          l = new a.jqx._jqxDateTimeInput.getDateTime(new Date(l._addDays(1)));\n          a.data(this.element, \"cellContent\" + p.substring(1), c);\n          a.data(this.element, \"\" + p.substring(1), c);\n          var E = this;\n\n          if (E.isMaterialized()) {\n            a(n).addClass(\"ripple\");\n            a.jqx.ripple(a(n));\n          }\n\n          this.addHandler(n, \"mousedown\", function (I) {\n            if (!E.readOnly && !E.disabled) {\n              var H = a(I.target);\n              var j = a.data(E.element, H[0].id);\n\n              var i = E._raiseEvent(3, I);\n\n              if (j != null && j != undefined) {\n                var r = j.getDate();\n\n                if (E.getMinDate() <= r && r <= E.getMaxDate()) {\n                  if (!j.isDisabled) {\n                    if (j.isOtherMonth && E.enableAutoNavigation) {\n                      if (j.row < 2) {\n                        E.navigateBackward();\n                      } else {\n                        E.navigateForward();\n                      }\n\n                      E._selectDate(j.getDate(), \"mouse\", I.shiftKey);\n                    } else {\n                      var F = new Date(E.getDate());\n\n                      E._selectDate(j.getDate(), \"mouse\", I.shiftKey);\n\n                      E.value._setYear(r.getFullYear());\n\n                      E.value._setDay(1);\n\n                      E.value._setMonth(r.getMonth() + 1);\n\n                      E.value._setDay(r.getDate());\n\n                      var G = E.host.find(\".jqx-calendar-month\");\n                      G.stop();\n                      G.css(\"margin-left\", \"0px\");\n                      var k = E.getDate();\n\n                      E._raiseEvent(\"2\");\n\n                      if (j.isOtherMonth) {\n                        E._raiseEvent(\"5\", {\n                          selectionType: \"mouse\"\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n\n              return false;\n            }\n          });\n\n          if (!E.disabled) {\n            var h = function (F, j) {\n              if (!E.readOnly) {\n                var r = a(F.target);\n                var i = a.data(E.element, r[0].id);\n\n                if (i != null && i != undefined) {\n                  var k = i.getDate();\n\n                  if (E.getMinDate() <= k && k <= E.getMaxDate()) {\n                    i.isHighlighted = j;\n\n                    E._applyCellStyle(i, i.element, r);\n                  }\n                }\n              }\n            };\n\n            this.addHandler(n, \"mouseenter\", function (i) {\n              h(i, true);\n              return false;\n            });\n            this.addHandler(n, \"mouseleave\", function (i) {\n              h(i, false);\n              return false;\n            });\n          }\n\n          f++;\n          d[t] = c;\n          t++;\n        }\n\n        f = 0;\n        b++;\n      }\n\n      var B = a.data(this.element, D[0].id);\n\n      if (B != undefined && B != null) {\n        B.cells = d;\n      }\n\n      this.renderedCells = d;\n\n      if (q != undefined) {\n        this._addCellsTable(y, x);\n      }\n\n      this._applyCellStyles();\n\n      this._refreshOtherMonthRows(B, s);\n    },\n    setMaxDate: function (b, c) {\n      if (b != null && typeof b == \"string\") {\n        b = new Date(b);\n\n        if (b == \"Invalid Date\") {\n          return;\n        }\n      }\n\n      this.maxDate = a.jqx._jqxDateTimeInput.getDateTime(b);\n\n      if (c !== false) {\n        this.render();\n      }\n    },\n    getMaxDate: function () {\n      if (this.maxDate != null && this.maxDate != undefined) {\n        return this.maxDate.dateTime;\n      }\n\n      return null;\n    },\n    setMinDate: function (b, c) {\n      if (b != null && typeof b == \"string\") {\n        b = new Date(b);\n\n        if (b == \"Invalid Date\") {\n          return;\n        }\n      }\n\n      this.minDate = a.jqx._jqxDateTimeInput.getDateTime(b);\n\n      if (c !== false) {\n        this.render();\n      }\n    },\n    getMinDate: function () {\n      if (this.minDate != null && this.minDate != undefined) {\n        return this.minDate.dateTime;\n      }\n\n      return null;\n    },\n    navigateTo: function (g, i) {\n      if (this.view == \"month\") {\n        var h = this.getMinDate();\n        var d = new Date(this.getMaxDate().getFullYear(), this.getMaxDate().getMonth() + 1, this.getMaxDate().getDate());\n\n        if (g < this._getYearAndMonthPart(h) || g > this._getYearAndMonthPart(d)) {\n          return false;\n        }\n      } else {\n        if (g && (g.getFullYear() < this.getMinDate().getFullYear() || g.getFullYear() > this.getMaxDate().getFullYear())) {\n          return false;\n        }\n      }\n\n      if (g == null) {\n        return false;\n      }\n\n      if (i == undefined) {\n        var j = this;\n\n        if (this._animating) {\n          return;\n        }\n\n        this._animating = true;\n        var e = this.host.find(\".jqx-calendar-month-container\");\n        var k = a(\"<div></div>\");\n        k[0].style.width = \"100%\";\n        k[0].style.height = \"100%\";\n        k[0].style.overflow = \"hidden\";\n        k[0].style.position = \"relative\";\n        k[0].style.left = \"0px\";\n        k[0].style.top = \"-100%\";\n        e.append(k);\n\n        if (this._viewClone) {\n          this._viewClone.stop();\n\n          this._viewClone.remove();\n        }\n\n        if (this._newViewClone) {\n          this._newViewClone.stop();\n\n          this._newViewClone.remove();\n        }\n\n        var m = this.host.find(\".jqx-calendar-month\");\n        m.stop();\n        m.css(\"margin-left\", \"0px\");\n        var b = m.clone();\n        this._viewClone = b;\n        var l = new Date(this.value.dateTime);\n\n        this.value._setYear(g.getFullYear());\n\n        this.value._setDay(g.getDate());\n\n        this.value._setMonth(g.getMonth() + 1);\n\n        var c = parseInt(this.month.css(\"padding-top\"));\n        j.refreshControl();\n        k.css(\"overflow\", \"hidden\");\n        e.css(\"position\", \"relative\");\n        e.css(\"overflow\", \"hidden\");\n        b.css(\"position\", \"absolute\");\n        b.css(\"top\", m.position().top - c);\n        k.append(b);\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n          this.month.css(\"position\", \"relative\");\n          this.month.css(\"overflow\", \"hidden\");\n          this.table.css(\"position\", \"relative\");\n          this.table.css(\"overflow\", \"hidden\");\n        }\n\n        var f = -this.month.width();\n\n        if (g < l) {\n          if (this.view == \"month\" && g.getMonth() != l.getMonth()) {\n            f = this.month.width();\n          } else {\n            if (g.getFullYear() != l.getFullYear()) {\n              f = this.month.width();\n            }\n          }\n        }\n\n        b.animate({\n          marginLeft: parseInt(f) + \"px\"\n        }, this.navigationDelay, function () {\n          b.remove();\n        });\n        var n = m.clone();\n        this._newViewClone = n;\n        n.css(\"position\", \"absolute\");\n        n.css(\"top\", m.position().top - c);\n        k.append(n);\n        n.css(\"margin-left\", -f);\n        m.css(\"visibility\", \"hidden\");\n        n.animate({\n          marginLeft: \"0px\"\n        }, this.navigationDelay, function () {\n          n.remove();\n          m.css(\"visibility\", \"inherit\");\n          k.remove();\n          j._animating = false;\n        });\n      } else {\n        this.value._setYear(g.getFullYear());\n\n        this.value._setDay(g.getDate());\n\n        this.value._setMonth(g.getMonth() + 1);\n\n        var m = this.host.find(\".jqx-calendar-month\");\n        m.stop();\n        m.css(\"margin-left\", \"0px\");\n        this.refreshControl();\n      }\n\n      this._raiseEvent(\"2\");\n\n      this._raiseEvent(\"8\");\n\n      return true;\n    },\n    setDate: function (b) {\n      if (b != null && typeof b == \"string\") {\n        b = new Date(b);\n      }\n\n      if (this.canRender == false) {\n        this.canRender = true;\n        this.render();\n      }\n\n      this.navigateTo(b, \"api\");\n\n      this._selectDate(b);\n\n      if (this.selectionMode == \"range\") {\n        this._selectDate(b, \"mouse\");\n      }\n\n      return true;\n    },\n    val: function (b) {\n      if (arguments.length != 0) {\n        if (b == null) {\n          this.setDate(null);\n        }\n\n        if (b instanceof Date) {\n          this.setDate(b);\n        }\n\n        if (typeof b == \"string\") {\n          this.setDate(b);\n        }\n      }\n\n      return this.getDate();\n    },\n    getDate: function () {\n      if (this.selectedDate == undefined) {\n        return new Date();\n      }\n\n      return this.selectedDate;\n    },\n    getValue: function () {\n      if (this.value == undefined) {\n        return new Date();\n      }\n\n      return this.value.dateTime;\n    },\n    setRange: function (c, b) {\n      if (this.canRender == false) {\n        this.canRender = true;\n        this.render();\n      }\n\n      this.navigateTo(c, \"api\");\n\n      this._selectDate(c, \"mouse\");\n\n      this._selectDate(b, \"mouse\");\n    },\n    getRange: function () {\n      return this.selection;\n    },\n    _selectDate: function (d, g, c) {\n      if (this.selectionMode == \"none\") {\n        return;\n      }\n\n      if (g == null || g == undefined) {\n        g = \"none\";\n      }\n\n      if (c == null || c == undefined) {\n        c = false;\n      }\n\n      var i = a.data(this.element, \"View\" + this.element.id);\n\n      if (i == undefined || i == null) {\n        return;\n      }\n\n      if (this.changing) {\n        if (d && this.selectedDate) {\n          if (this.selectedDate.getFullYear() != d.getFullYear() || this.selectedDate.getDate() != d.getDate() || this.selectedDate.getMonth() != d.getMonth()) {\n            var j = this.changing(this.selectedDate, d);\n          }\n\n          if (j) {\n            d = j;\n          }\n        }\n      }\n\n      var k = this;\n\n      if (this.input) {\n        if (d != null) {\n          this.input.val(d.toString());\n        } else {\n          this.input.val(\"\");\n        }\n      }\n\n      var e = this.selectedDate;\n      this.selectedDate = d;\n\n      if (this.view != \"month\") {\n        if (e != d) {\n          this._raiseEvent(7, {\n            selectionType: g\n          });\n        }\n\n        a.each(this.renderedCells, function (p) {\n          var l = this;\n          var q = l.getDate();\n          var m = a(l.element);\n          var o = m.find(\"#cellContent\" + m[0].id);\n\n          if (d == null) {\n            l.isSelected = false;\n            l.isDisabled = false;\n          } else {\n            l.isSelected = false;\n\n            if (q) {\n              if (q.getMonth() == d.getMonth() && k.view == \"year\" && q.getFullYear() == d.getFullYear() || k.view == \"decade\" && q.getFullYear() == d.getFullYear()) {\n                l.isSelected = true;\n\n                try {\n                  if (g != \"none\") {\n                    l.element.focus();\n                  }\n                } catch (n) {}\n              }\n            }\n          }\n\n          k._applyCellStyle(l, m, m);\n        });\n\n        if (this.change) {\n          this.change(d);\n        }\n\n        return;\n      }\n\n      if (this.view == \"month\") {\n        if (this.selectionMode == \"range\" && g == \"key\") {\n          var f = this.getVisibleDate();\n          var b = this.getFirstDayOfWeek(f);\n          this.refreshCalendarCells(this.month, b, \"View\" + this.element.id);\n        }\n      }\n\n      var h = false;\n      a.each(this.renderedCells, function (r) {\n        var w = this;\n        var o = w.getDate();\n        var v = a(w.element);\n        var l = v;\n\n        if (v.length == 0) {\n          return false;\n        }\n\n        if (d == null) {\n          w.isSelected = false;\n          w.isDisabled = false;\n\n          if (r == 0) {\n            k.selection = {\n              from: null,\n              to: null\n            };\n\n            k._raiseEvent(\"2\");\n\n            k._raiseEvent(\"5\", {\n              selectionType: g\n            });\n          }\n        } else {\n          if (k.selectionMode != \"range\" || g == \"key\") {\n            if (o.getDate() == d.getDate() && o.getMonth() == d.getMonth() && o.getFullYear() == d.getFullYear() && w.isSelected) {\n              k._applyCellStyle(w, v, l);\n\n              k._raiseEvent(\"5\", {\n                selectionType: g\n              });\n\n              return;\n            }\n\n            if (w.isSelected) {\n              k._raiseEvent(\"6\", {\n                selectionType: g\n              });\n            }\n\n            w.isSelected = false;\n\n            if (o.getDate() == d.getDate() && o.getMonth() == d.getMonth() && o.getFullYear() == d.getFullYear()) {\n              w.isSelected = true;\n\n              if (r == 0) {\n                k.selection = {\n                  date: d\n                };\n              }\n\n              try {\n                if (g != \"none\") {\n                  w.element.focus();\n                  k.host.focus();\n                }\n              } catch (s) {}\n\n              if (!w.isOtherMonth) {\n                k.value._setMonth(d.getMonth() + 1);\n\n                k.value._setDay(d.getDate());\n\n                k.value._setYear(d.getFullYear());\n\n                k._raiseEvent(\"2\");\n\n                k._raiseEvent(\"5\", {\n                  selectionType: g\n                });\n              }\n            }\n\n            if (k.selectionMode == \"range\") {\n              k._clicks = 0;\n              k.selection = {\n                from: d,\n                to: d\n              };\n            }\n          } else {\n            if (k.selectionMode == \"range\") {\n              if (g == \"view\") {\n                w.isSelected = false;\n                w.isDisabled = false;\n\n                if (k.getMaxDate() < o) {\n                  w.isDisabled = true;\n                }\n\n                if (k.getMinDate() > o) {\n                  w.isDisabled = true;\n                }\n\n                if (k._isRestrictedDate(o)) {\n                  w.isDisabled = true;\n                  w.isRestricted = true;\n                }\n\n                if (!w.isDisabled && k._isDisabled(o)) {\n                  w.isDisabled = true;\n                }\n\n                k._applyCellStyle(w, v, l);\n\n                return true;\n              }\n\n              if (r == 0) {\n                if (g != \"none\") {\n                  if (k._clicks == undefined) {\n                    k._clicks = 0;\n                  }\n\n                  k._clicks++;\n\n                  if (c) {\n                    k._clicks++;\n                  }\n\n                  if (k._clicks == 1) {\n                    k.selection = {\n                      from: d,\n                      to: d\n                    };\n                  } else {\n                    var u = k.selection.from;\n                    var q = u <= d ? u : d;\n                    var t = u <= d ? d : u;\n\n                    if (q) {\n                      var m = new Date(q.getFullYear(), q.getMonth(), q.getDate());\n                    }\n\n                    if (t) {\n                      var n = new Date(t.getFullYear(), t.getMonth(), t.getDate(), 23, 59, 59);\n                    }\n\n                    k.selection = {\n                      from: m,\n                      to: n\n                    };\n                    k._clicks = 0;\n                  }\n                } else {\n                  if (k.selection == null || k.selection.from == null) {\n                    k.selection = {\n                      from: d,\n                      to: d\n                    };\n\n                    if (k._clicks == undefined) {\n                      k._clicks = 0;\n                    }\n\n                    k._clicks++;\n\n                    if (k._clicks == 2) {\n                      k._clicks = 0;\n                    }\n                  }\n                }\n              }\n\n              var p = function (y) {\n                if (y == null) {\n                  return new Date();\n                }\n\n                var x = new Date();\n                x.setHours(0, 0, 0, 0);\n                x.setFullYear(y.getFullYear(), y.getMonth(), y.getDate());\n                return x;\n              };\n\n              if (!w.isOtherMonth && p(o).toString() == p(d).toString()) {\n                k.value._setMonth(d.getMonth() + 1);\n\n                k.value._setDay(d.getDate());\n\n                k.value._setYear(d.getFullYear());\n\n                k._raiseEvent(\"2\");\n\n                k._raiseEvent(\"5\", {\n                  selectionType: g\n                });\n              }\n\n              w.isSelected = false;\n              w.isDisabled = h;\n\n              if (p(o) < p(k.selection.from) && k._clicks == 1) {\n                w.isDisabled = true;\n              }\n\n              if (k.getMaxDate() < o) {\n                w.isDisabled = true;\n              }\n\n              if (k.getMinDate() > o) {\n                w.isDisabled = true;\n              }\n\n              if (k._isRestrictedDate(o)) {\n                w.isRestricted = true;\n                w.isDisabled = true;\n              }\n\n              if (!w.isDisabled && k._isDisabled(o)) {\n                w.isDisabled = true;\n              }\n\n              if (!w.isDisabled) {\n                if (p(o) >= p(k.selection.from) && p(o) <= p(k.selection.to)) {\n                  w.isSelected = true;\n                }\n              } else {\n                if (!k.allowRestrictedDaysInRange && p(o) >= p(k.selection.from) && k.selection.to == k.selection.from) {\n                  h = true;\n                }\n              }\n            }\n          }\n        }\n\n        k._applyCellStyle(w, v, l);\n      });\n\n      if (k.selectionMode == \"range\" && k._clicks == 0) {\n        k._raiseEvent(7, {\n          selectionType: g\n        });\n\n        return;\n      } else {\n        if (k.selectionMode == \"range\") {\n          return;\n        }\n      }\n\n      if (e != d) {\n        k._raiseEvent(7, {\n          selectionType: g\n        });\n\n        if (this.change) {\n          this.change(d);\n        }\n      }\n    },\n    _getSelectedDate: function () {\n      var d = a.data(this.element, \"View\" + this.element.id);\n\n      if (d == undefined || d == null) {\n        return;\n      }\n\n      if (this.view != \"month\") {\n        return this.selectedDate;\n      }\n\n      for (var c = 0; c < d.cells.length; c++) {\n        var b = d.cells[c];\n        var e = b.getDate();\n\n        if (b.isSelected) {\n          return e;\n        }\n      }\n\n      if (this.selectedDate) {\n        return this.selectedDate;\n      }\n    },\n    _getSelectedCell: function () {\n      var d = a.data(this.element, \"View\" + this.element.id);\n\n      if (d == undefined || d == null) {\n        return;\n      }\n\n      for (var c = 0; c < d.cells.length; c++) {\n        var b = d.cells[c];\n        var e = b.getDate();\n\n        if (b.isSelected) {\n          return b;\n        }\n      }\n    },\n    _applyCellStyle: function (c, d, g) {\n      var e = this;\n\n      if (g == null || g != null && g.length == 0) {\n        g = d;\n      }\n\n      var b = \"\";\n      b = this.toThemeProperty(\"jqx-rc-all\");\n      b += \" \" + this.toThemeProperty(\"jqx-item\");\n\n      if (this.disabled || c.isDisabled && !c.isRestricted) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-disabled\");\n        b += \" \" + this.toThemeProperty(\"jqx-fill-state-disabled\");\n      }\n\n      if (!this.disabled && c.isRestricted) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-restrictedDate\");\n      }\n\n      if (c.isOtherMonth && this.enableOtherMonthDays && c.isVisible) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-othermonth\");\n      }\n\n      if (c.isWeekend && this.enableWeekend && c.isVisible && c.isVisible) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-weekend\");\n      }\n\n      if (this.isMaterialized()) {\n        b += \" ripple\";\n      }\n\n      if (!c.isVisible) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-hidden\");\n      } else {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell\");\n\n        if (this.view != \"month\") {\n          if (g.length > 0 && g.html().toLowerCase().indexOf(\"span\") != -1) {\n            g.css(\"cursor\", \"default\");\n          }\n        }\n      }\n\n      g.removeAttr(\"aria-selected\");\n\n      if (c.isSelected && c.isVisible) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-selected\");\n        b += \" \" + this.toThemeProperty(\"jqx-fill-state-pressed\");\n        g.attr(\"aria-selected\", true);\n        this.host.removeAttr(\"aria-activedescendant\").attr(\"aria-activedescendant\", g[0].id);\n        var f = c.getDate();\n\n        if (this._isDisabled(f)) {\n          b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-selected-invalid\");\n        }\n      }\n\n      if (c.isHighlighted && c.isVisible && this.enableHover) {\n        if (!c.isDisabled) {\n          b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-hover\");\n          b += \" \" + this.toThemeProperty(\"jqx-fill-state-hover\");\n        }\n      }\n\n      b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-\" + this.view);\n\n      if (c.isToday && c.isVisible) {\n        b += \" \" + this.toThemeProperty(\"jqx-calendar-cell-today\");\n      }\n\n      g[0].className = b;\n\n      if (this.specialDates.length > 0) {\n        var h = this;\n        a.each(this.specialDates, function () {\n          if (this.Class != undefined && this.Class != null && this.Class != \"\") {\n            g.removeClass(this.Class);\n          } else {\n            g.removeClass(e.toThemeProperty(\"jqx-calendar-cell-specialDate\"));\n          }\n\n          var i = c.getDate();\n\n          if (i.getFullYear() == this.Date.getFullYear() && i.getMonth() == this.Date.getMonth() && i.getDate() == this.Date.getDate()) {\n            if (c.tooltip == null && this.Tooltip != null) {\n              c.tooltip = this.Tooltip;\n\n              if (a(g).jqxTooltip) {\n                var j = this.Class;\n                a(g).jqxTooltip({\n                  value: {\n                    cell: c,\n                    specialDate: this.Date\n                  },\n                  name: h.element.id,\n                  content: this.Tooltip,\n                  position: \"mouse\",\n                  theme: h.theme,\n                  opening: function (k) {\n                    if (g.hasClass(e.toThemeProperty(\"jqx-calendar-cell-specialDate\"))) {\n                      return true;\n                    }\n\n                    if (g.hasClass(j)) {\n                      return true;\n                    }\n\n                    return false;\n                  }\n                });\n              }\n            }\n\n            g.removeClass(e.toThemeProperty(\"jqx-calendar-cell-othermonth\"));\n            g.removeClass(e.toThemeProperty(\"jqx-calendar-cell-weekend\"));\n\n            if (this.Class == undefined || this.Class == \"\") {\n              g.addClass(e.toThemeProperty(\"jqx-calendar-cell-specialDate\"));\n              return false;\n            } else {\n              g.addClass(this.Class);\n              return false;\n            }\n          }\n        });\n      }\n    },\n    _applyCellStyles: function () {\n      var f = a.data(this.element, \"View\" + this.element.id);\n\n      if (f == undefined || f == null) {\n        return;\n      }\n\n      for (var e = 0; e < f.cells.length; e++) {\n        var b = f.cells[e];\n        var c = a(b.element);\n        var d = c.find(\"#cellContent\" + c[0].id);\n\n        if (d.length == 0) {\n          d = c;\n        }\n\n        this._applyCellStyle(b, c, d);\n      }\n    },\n    getWeekOfYear: function (d) {\n      var j = new Date(d.dateTime);\n      var h = this.firstDayOfWeek;\n      var e = new Date(j.getFullYear(), 0, 1);\n      var i = e.getDay() - h;\n      i = i >= 0 ? i : i + 7;\n      var c = Math.floor((j.getTime() - e.getTime() - (j.getTimezoneOffset() - e.getTimezoneOffset()) * 60000) / 86400000) + 1;\n      var f;\n\n      if (i < 4) {\n        f = Math.floor((c + i - 1) / 7) + 1;\n\n        if (f > 52) {\n          var g = new Date(j.getFullYear() + 1, 0, 1);\n          var b = g.getDay() - h;\n          b = b >= 0 ? b : b + 7;\n          f = b < 4 ? 1 : 53;\n        }\n      } else {\n        f = Math.floor((c + i - 1) / 7);\n      }\n\n      return f;\n    },\n    renderColumnHeader: function (w) {\n      if (!this.showDayNames) {\n        return;\n      }\n\n      var t = a(\"<table role='grid' style='border-spacing: 0px; border-collapse: collapse; width: 100%; height: 100%;' cellspacing='0' cellpadding='1'><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>\");\n      t.find(\"table\").addClass(this.toThemeProperty(\"jqx-reset\"));\n      t.find(\"tr\").addClass(this.toThemeProperty(\"jqx-reset\"));\n      t.find(\"td\").css({\n        background: \"transparent\",\n        padding: 1,\n        margin: 0,\n        border: \"none\"\n      });\n      t.addClass(this.toThemeProperty(\"jqx-reset\"));\n      t.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      t.addClass(this.toThemeProperty(\"jqx-calendar-column-header\"));\n      this.columnHeader.append(t);\n      var d = this.getVisibleDate();\n      var h = this.getFirstDayOfWeek(d);\n      var m = h.dayOfWeek;\n      var x = this.getWeekOfYear(h);\n      var q = this.firstDayOfWeek;\n      var v = this.localization.calendar.days.names;\n      var n = new Array();\n      var g = h;\n      var o = (w.width() - this.rowHeaderWidth - 2) / 7;\n\n      if (!this.showWeekNumbers) {\n        o = (w.width() - 2) / 7;\n      }\n\n      for (var s = 0; s < 7; s++) {\n        var f = v[q];\n\n        if (this.rtl) {\n          f = v[6 - q];\n        }\n\n        switch (this.dayNameFormat) {\n          case \"default\":\n            f = this.localization.calendar.days.namesAbbr[q];\n\n            if (this.rtl) {\n              f = this.localization.calendar.days.namesAbbr[6 - q];\n            }\n\n            break;\n\n          case \"shortest\":\n            f = this.localization.calendar.days.namesShort[q];\n\n            if (this.rtl) {\n              f = this.localization.calendar.days.namesShort[6 - q];\n            }\n\n            break;\n\n          case \"firstTwoLetters\":\n            f = f.substring(0, 2);\n            break;\n\n          case \"firstLetter\":\n            f = f.substring(0, 1);\n            break;\n        }\n\n        var b = new a.jqx._jqxCalendar.cell(g.dateTime);\n        var k = s + 1;\n        var l = k + this.element.id;\n        var j = a(t[0].rows[0].cells[s]);\n        var p = s;\n\n        if (this.enableTooltips) {\n          if (a(j).jqxTooltip) {\n            a(j).jqxTooltip({\n              name: this.element.id,\n              content: v[q],\n              theme: this.theme,\n              position: \"mouse\"\n            });\n          }\n        }\n\n        if (q >= 6) {\n          q = 0;\n        } else {\n          q++;\n        }\n\n        s = p;\n        b.element = j;\n        b.row = 0;\n        b.column = s + 1;\n\n        var e = this._textwidth(f);\n\n        var c = \"<div style='padding: 0; margin: 0; border: none; background: transparent;' id='columnCell\" + l + \"'>\" + f + \"</div>\";\n        j.append(c);\n        j.find(\"#columnCell\" + l).addClass(this.toThemeProperty(\"jqx-calendar-column-cell\"));\n        j.width(o);\n\n        if (this.disabled) {\n          j.find(\"#columnCell\" + l).addClass(this.toThemeProperty(\"jqx-calendar-column-cell-disabled\"));\n        }\n\n        if (e > 0 && o > 0) {\n          while (e > j.width()) {\n            if (f.length == 0) {\n              break;\n            }\n\n            f = f.substring(0, f.length - 1);\n            a.jqx.utilities.html(j.find(\"#columnCell\" + l), f);\n            e = this._textwidth(f);\n          }\n        }\n\n        n[s] = b;\n        g = new a.jqx._jqxDateTimeInput.getDateTime(new Date(g._addDays(1)));\n      }\n\n      if (parseInt(this.columnHeader.width()) > parseInt(this.month.width())) {\n        this.columnHeader.width(this.month.width());\n      }\n\n      var u = a.data(this.element, w[0].id);\n      u.columnCells = n;\n    },\n    _format: function (d, e, b) {\n      var f = false;\n\n      try {\n        if (window.Globalize != undefined) {\n          f = true;\n        } else {\n          if (document.Globalize) {\n            window.Globalize = document.Globalize;\n            f = true;\n          }\n        }\n      } catch (c) {\n        if (document.Globalize) {\n          window.Globalize = document.Globalize;\n          f = true;\n        }\n      }\n\n      if (document.Globalize) {\n        window.Globalize = document.Globalize;\n        f = true;\n      }\n\n      if (a.global) {\n        a.global.culture.calendar = this.localization.calendar;\n        return a.global.format(d, e, this.culture);\n      } else {\n        if (f) {\n          try {\n            if (window.Globalize.cultures[this.culture]) {\n              window.Globalize.cultures[this.culture].calendar = this.localization.calendar;\n              return window.Globalize.format(d, e, this.culture);\n            } else {\n              return window.Globalize.format(d, e, this.culture);\n            }\n          } catch (c) {\n            return window.Globalize.format(d, e);\n          }\n        } else {\n          if (a.jqx.dataFormat) {\n            return a.jqx.dataFormat.formatdate(d, e, this.localization.calendar);\n          }\n        }\n      }\n    },\n    _textwidth: function (d) {\n      var c = a(\"<span>\" + d + \"</span>\");\n      c.addClass(this.toThemeProperty(\"jqx-calendar-column-cell\"));\n      a(this.host).append(c);\n      var b = c.width();\n      c.remove();\n      return b;\n    },\n    _textheight: function (d) {\n      var c = a(\"<span>\" + d + \"</span>\");\n      a(this.host).append(c);\n      var b = c.height();\n      c.remove();\n      return b;\n    },\n    _renderRowHeader: function (k) {\n      var g = this.getVisibleDate();\n      var c = this.getFirstDayOfWeek(g);\n      var f = c.dayOfWeek;\n      var s = this.getWeekOfYear(c);\n      var o = new a.jqx._jqxDateTimeInput.getDateTime(new Date(c.dateTime));\n\n      o._addDays(5);\n\n      o.dayOfWeek = o.dateTime.getDay();\n      var m = this.getWeekOfYear(o);\n\n      if (53 == s && o.dateTime.getMonth() == 0) {\n        s = 1;\n      }\n\n      var l = a(\"<table style='overflow: hidden; width: 100%; height: 100%;' cellspacing='0' cellpadding='1'><tr><td></td></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr></table>\");\n      l.find(\"table\").addClass(this.toThemeProperty(\"jqx-reset\"));\n      l.find(\"td\").addClass(this.toThemeProperty(\"jqx-reset\"));\n      l.find(\"tr\").addClass(this.toThemeProperty(\"jqx-reset\"));\n      l.addClass(this.toThemeProperty(\"jqx-calendar-row-header\"));\n      l.width(this.rowHeaderWidth);\n      this.rowHeader.append(l);\n      var d = c;\n      var r = new Array();\n\n      for (var h = 0; h < 6; h++) {\n        var e = s.toString();\n        var q = new a.jqx._jqxCalendar.cell(d.dateTime);\n        var j = h + 1 + this.element.id;\n        var p = a(l[0].rows[h].cells[0]);\n        q.element = p;\n        q.row = h;\n        q.column = 0;\n        var b = \"<div style='background: transparent; border: none; padding: 0; margin: 0;' id ='headerCellContent\" + j + \"'>\" + e + \"</div>\";\n        p.append(b);\n        p.find(\"#headerCellContent\" + j).addClass(this.toThemeProperty(\"jqx-calendar-row-cell\"));\n        r[h] = q;\n        d = new a.jqx._jqxDateTimeInput.getDateTime(new Date(d._addWeeks(1)));\n        s = this.getWeekOfYear(d);\n      }\n\n      var n = a.data(this.element, k[0].id);\n      n.rowCells = r;\n    },\n    getFirstDayOfWeek: function (e) {\n      var d = e;\n\n      if (this.firstDayOfWeek < 0 || this.firstDayOfWeek > 6) {\n        this.firstDayOfWeek = 6;\n      }\n\n      var c = d.dayOfWeek - this.firstDayOfWeek;\n\n      if (c <= 0) {\n        c += 7;\n      }\n\n      var b = a.jqx._jqxDateTimeInput.getDateTime(d._addDays(-c));\n\n      return b;\n    },\n    getVisibleDate: function () {\n      var c = new a.jqx._jqxDateTimeInput.getDateTime(new Date(this.value.dateTime));\n\n      if (c < this.minDate) {\n        c = this.minDate;\n      }\n\n      if (c > this.maxDate) {\n        this.visibleDate = this.maxDate;\n      }\n\n      c.dateTime.setHours(0);\n      var d = c.day;\n\n      var b = a.jqx._jqxDateTimeInput.getDateTime(c._addDays(-d + 1));\n\n      c = b;\n      return c;\n    },\n    destroy: function (b) {\n      a.jqx.utilities.resize(this.host, null, true);\n      this.host.removeClass();\n\n      if (b != false) {\n        this.host.remove();\n      }\n    },\n    _raiseEvent: function (d, i) {\n      if (i == undefined) {\n        i = {\n          owner: null\n        };\n      }\n\n      var h = this.events[d];\n      var g = i ? i : {};\n      g.owner = this;\n      var c = new a.Event(h);\n      c.owner = this;\n      c.args = g;\n\n      if (d == 0 || d == 1 || d == 2 || d == 3 || d == 4 || d == 5 || d == 6 || d == 7 || d == 8) {\n        c.args.date = c.args.selectedDate = this.getDate();\n        c.args.range = this.getRange();\n        var e = this.getViewStart();\n        var f = this.getViewEnd();\n        c.args.view = {\n          from: e,\n          to: f\n        };\n      }\n\n      if (d == 7) {\n        var b = g.selectionType;\n\n        if (!b) {\n          b = null;\n        }\n\n        if (b == \"key\") {\n          b = \"keyboard\";\n        }\n\n        if (b == \"none\") {\n          b = null;\n        }\n\n        g.type = b;\n      }\n\n      var j = this.host.trigger(c);\n\n      if (d == 0 || d == 1) {\n        j = false;\n      }\n\n      return j;\n    },\n    propertyMap: function (b) {\n      if (b == \"value\") {\n        if (this.selectionMode != \"range\") {\n          return this.getDate();\n        } else {\n          return this.getRange();\n        }\n      }\n\n      return null;\n    },\n    _setSize: function () {\n      var d = this.host.find(\"#View\" + this.element.id);\n\n      if (d.length > 0) {\n        this.setCalendarSize();\n        d[0].style.height = \"100%\";\n        d[0].style.width = \"100%\";\n        var c = this.month.height() - this.titleHeight - this.columnHeaderHeight;\n        var b = \"View\" + this.element.id;\n        d.find(\"#cellsTable\" + b).height(c);\n        d.find(\"#calendarRowHeader\" + b).height(c);\n        this.refreshControl();\n      }\n    },\n    resize: function () {\n      this._setSize();\n    },\n    clear: function () {\n      if (this.selectionMode == \"range\") {\n        this._clicks = 1;\n        this.setRange(null, null);\n\n        this._raiseEvent(7);\n      } else {\n        this.setDate(null, \"mouse\");\n      }\n\n      this._clicks = 0;\n      this.selection = {\n        from: null,\n        to: null\n      };\n    },\n    today: function () {\n      if (this.selectionMode == \"range\") {\n        this.setRange(new Date(), new Date());\n      } else {\n        this.setDate(new Date(), \"mouse\");\n      }\n    },\n    propertiesChangedHandler: function (b, c, d) {\n      if (d.width && d.height && Object.keys(d).length == 2) {\n        b._setSize();\n      }\n    },\n    propertyChangedHandler: function (d, e, g, f) {\n      if (this.isInitialized == undefined || this.isInitialized == false) {\n        return;\n      }\n\n      if (d.batchUpdate && d.batchUpdate.width && d.batchUpdate.height && Object.keys(d.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (e == \"enableHover\") {\n        return;\n      }\n\n      if (e == \"keyboardNavigation\") {\n        return;\n      }\n\n      if (e == \"localization\") {\n        if (this.localization) {\n          if (this.localization.backString) {\n            this.backText = this.localization.backString;\n          }\n\n          if (this.localization.forwardString) {\n            this.forwardText = this.localization.forwardString;\n          }\n\n          if (this.localization.todayString) {\n            this.todayString = this.localization.todayString;\n          }\n\n          if (this.localization.clearString) {\n            this.clearString = this.localization.clearString;\n          }\n\n          this.firstDayOfWeek = this.localization.calendar.firstDay;\n        }\n      }\n\n      if (e == \"culture\") {\n        try {\n          if (a.global) {\n            a.global.preferCulture(d.culture);\n            d.localization.calendar = a.global.culture.calendar;\n          } else {\n            if (window.Globalize) {\n              var b = window.Globalize.culture(d.culture);\n              d.localization.calendar = b.calendar;\n            }\n          }\n\n          if (d.localization.calendar && d.localization.calendar.firstDay != undefined && d.culture != \"default\") {\n            d.firstDayOfWeek = d.localization.calendar.firstDay;\n          }\n        } catch (c) {}\n      }\n\n      if (e == \"views\") {\n        if (d.views.indexOf(\"month\") == -1) {\n          d.view = \"year\";\n        }\n\n        if (d.views.indexOf(\"year\") == -1 && d.views.indexOf(\"month\") == -1) {\n          d.view = \"decade\";\n        }\n\n        d.render();\n        return;\n      }\n\n      if (e == \"showFooter\") {\n        d.render();\n      }\n\n      if (e == \"width\" || e == \"height\") {\n        d._setSize();\n\n        return;\n      } else {\n        if (e == \"theme\") {\n          a.jqx.utilities.setTheme(g, f, d.host);\n        } else {\n          if (e == \"rowHeaderWidth\" || e == \"showWeekNumbers\") {\n            d.render();\n          } else {\n            d.view = \"month\";\n            d.render();\n            d.refreshControl();\n          }\n        }\n      }\n\n      if (e === \"firstDayOfWeek\") {\n        d.refreshControl();\n      }\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxCalendar.cell = function (c) {\n    var b = {\n      dateTime: new a.jqx._jqxDateTimeInput.getDateTime(c),\n      _date: c,\n      getDate: function () {\n        return this._date;\n      },\n      setDate: function (d) {\n        this.dateTime = new a.jqx._jqxDateTimeInput.getDateTime(d);\n        this._date = d;\n      },\n      isToday: false,\n      isWeekend: false,\n      isOtherMonth: false,\n      isVisible: true,\n      isSelected: false,\n      isHighlighted: false,\n      element: null,\n      row: -1,\n      column: -1,\n      tooltip: null\n    };\n    return b;\n  };\n\n  a.jqx._jqxCalendar.monthView = function (c, h, d, b, f, e) {\n    var g = {\n      start: c,\n      end: h,\n      cells: d,\n      rowCells: b,\n      columnCells: f,\n      element: e\n    };\n    return g;\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}