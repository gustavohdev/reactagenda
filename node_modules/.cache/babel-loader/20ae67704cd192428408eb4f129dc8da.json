{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxRadioButton\", \"\", {});\n  a.extend(a.jqx._jqxRadioButton.prototype, {\n    defineInstance: function () {\n      var b = {\n        animationShowDelay: 300,\n        animationHideDelay: 300,\n        width: null,\n        height: null,\n        boxSize: \"16px\",\n        checked: false,\n        hasThreeStates: false,\n        disabled: false,\n        enableContainerClick: true,\n        locked: false,\n        groupName: \"\",\n        rtl: false,\n        changeType: null,\n        _canFocus: true,\n        aria: {\n          \"aria-checked\": {\n            name: \"checked\",\n            type: \"boolean\"\n          },\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        },\n        events: [\"checked\", \"unchecked\", \"indeterminate\", \"change\"]\n      };\n\n      if (this === a.jqx._jqxRadioButton.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (b) {\n      var c = this;\n\n      c._createFromInput(\"RadioButton\");\n\n      c.render();\n    },\n    _createFromInput: function (c) {\n      var j = this;\n\n      if (j.element.nodeName.toLowerCase() == \"input\") {\n        j.field = j.element;\n\n        if (j.field.className) {\n          j._className = j.field.className;\n        }\n\n        var l = {\n          title: j.field.title\n        };\n\n        if (j.field.value) {\n          l.value = j.field.value;\n        }\n\n        if (j.field.checked) {\n          l.checked = true;\n        }\n\n        if (j.field.id.length) {\n          l.id = j.field.id.replace(/[^\\w]/g, \"_\") + \"_\" + c;\n        } else {\n          l.id = a.jqx.utilities.createId() + \"_\" + c;\n        }\n\n        var e = j.element.nextSibling;\n        var h = false;\n\n        if (e && (e.nodeName == \"#text\" || e.nodeName == \"span\")) {\n          h = true;\n        }\n\n        var k = 0;\n        var b = a(\"<div></div>\", l);\n\n        if (h) {\n          b.append(e);\n          var i = a(\"<span>\" + a(e).text() + \"</span>\");\n          i.appendTo(a(document.body));\n          k += i.width();\n          i.remove();\n        }\n\n        b[0].style.cssText = j.field.style.cssText;\n\n        if (!j.width) {\n          j.width = a(j.field).width() + k + 10;\n        }\n\n        if (!j.height) {\n          j.height = a(j.field).outerHeight() + 10;\n        }\n\n        a(j.field).hide().after(b);\n        var g = j.host.data();\n        j.host = b;\n        j.host.data(g);\n        j.element = b[0];\n        j.element.id = j.field.id;\n        j.field.id = l.id;\n\n        if (j._className) {\n          j.host.addClass(j._className);\n          a(j.field).removeClass(j._className);\n        }\n\n        if (j.field.tabIndex) {\n          var d = j.field.tabIndex;\n          j.field.tabIndex = -1;\n          j.element.tabIndex = d;\n        }\n      }\n    },\n    render: function () {\n      this.setSize();\n      var e = this;\n\n      this.propertyChangeMap.width = function (i, k, j, l) {\n        e.setSize();\n      };\n\n      this.propertyChangeMap.height = function (i, k, j, l) {\n        e.setSize();\n      };\n\n      if (this.radiobutton) {\n        this.radiobutton.remove();\n      }\n\n      if (!this.width) {\n        this.host.css(\"overflow-x\", \"visible\");\n      }\n\n      if (!this.height) {\n        this.host.css(\"overflow-y\", \"visible\");\n      }\n\n      if (this.boxSize == null) {\n        this.boxSize = 16;\n      }\n\n      var h = parseInt(this.boxSize) + \"px\";\n      var g = \"16px\";\n      var f = Math.floor((parseInt(this.boxSize) - 16) / 2);\n      var b = f;\n      f += \"px\";\n      b += \"px\";\n      var c = parseInt(this.boxSize) / 2 + \"px\";\n\n      if (this.boxSize != \"16px\") {\n        this.radiobutton = a('<div><div style=\"width: ' + h + \"; height: \" + h + ';\"><span style=\"position: relative; left: ' + f + \"; top: \" + b + \"; width: \" + g + \"; height: \" + g + ';\"></span></div></div>');\n      } else {\n        this.radiobutton = a('<div><div style=\"width: ' + h + \"; height: \" + h + ';\"><span style=\"width: ' + c + \"; height: \" + c + ';\"></span></div></div>');\n      }\n\n      this.host.attr(\"role\", \"radio\");\n      this.host.prepend(this.radiobutton);\n\n      if (!this.disabledContainer) {\n        if (!this.host.attr(\"tabIndex\")) {\n          this.host.attr(\"tabIndex\", 0);\n        }\n\n        this.clear = a('<div style=\"clear: both;\"></div>');\n        this.host.append(this.clear);\n      }\n\n      this.checkMark = a(this.radiobutton[0].firstChild.firstChild);\n      this.box = this.radiobutton;\n      this._supportsRC = true;\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n        this._supportsRC = false;\n      }\n\n      this.box.addClass(this.toThemeProperty(\"jqx-fill-state-normal\"));\n      this.box.addClass(this.toThemeProperty(\"jqx-radiobutton-default\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget\"));\n\n      if (this.disabled) {\n        this.disable();\n      }\n\n      this.host.addClass(this.toThemeProperty(\"jqx-radiobutton\"));\n\n      if (this.locked) {\n        this.host.css(\"cursor\", \"auto\");\n      }\n\n      var d = this.element.getAttribute(\"checked\");\n\n      if (d == \"checked\" || d == \"true\" || d == true) {\n        this.checked = true;\n      }\n\n      this._addInput();\n\n      this._render();\n\n      this._addHandlers();\n\n      a.jqx.aria(this);\n\n      this._centerBox();\n\n      if (this.isMaterialized()) {\n        a(this.radiobutton).addClass(\"ripple\");\n        a.jqx.ripple(a(this.radiobutton), this.host, \"radiobutton\");\n      }\n    },\n    _centerBox: function () {\n      if (this.height && this.height.toString().indexOf(\"%\") == -1 && this.box) {\n        var b = parseInt(this.height);\n        this.host.css(\"line-height\", b + \"px\");\n        var c = b - parseInt(this.boxSize) - 1;\n        c /= 2;\n        this.box.css(\"margin-top\", parseInt(c));\n      }\n    },\n    _addInput: function () {\n      var b = this.host.attr(\"name\");\n      this.input = a(\"<input type='hidden'/>\");\n      this.host.append(this.input);\n\n      if (b) {\n        this.input.attr(\"name\", b);\n      }\n    },\n    refresh: function (b) {\n      if (!b) {\n        this.setSize();\n\n        this._render();\n      }\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n      this.setSize();\n    },\n    setSize: function () {\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.host.width(this.width);\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.host.width(this.width);\n        } else {\n          if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n            this.element.style.width = this.width;\n          }\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.host.height(this.height);\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.host.height(this.height);\n        } else {\n          if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n            this.element.style.height = this.height;\n          }\n        }\n      }\n\n      this._centerBox();\n    },\n    _addHandlers: function () {\n      var b = this;\n      this.addHandler(this.box, \"click\", function (c) {\n        if (!b.disabled && !b.enableContainerClick) {\n          b.changeType = \"mouse\";\n          b.toggle(\"click\");\n          c.preventDefault();\n          return false;\n        }\n      });\n      this.addHandler(this.host, \"keydown\", function (c) {\n        if (!b.disabled && !b.locked) {\n          if (c.keyCode == 32) {\n            if (!b._canFocus) {\n              return true;\n            }\n\n            b.changeType = \"keyboard\";\n            b.toggle(\"click\");\n            c.preventDefault();\n            return false;\n          }\n        }\n      });\n      this.addHandler(this.host, \"mousedown\", function (c) {\n        if (!b.disabled && b.enableContainerClick) {\n          b.clickTime = new Date();\n          b.changeType = \"mouse\";\n          b.toggle(\"click\");\n\n          if (b._canFocus) {\n            b.focus();\n          }\n\n          c.preventDefault();\n          return false;\n        }\n      });\n      this.addHandler(this.host, \"selectstart\", function (c) {\n        if (!b.disabled && b.enableContainerClick) {\n          c.preventDefault();\n        }\n      });\n      this.addHandler(this.host, \"mouseup\", function (c) {\n        if (!b.disabled && b.enableContainerClick) {\n          c.preventDefault();\n        }\n      });\n      this.addHandler(this.host, \"focus\", function (c) {\n        if (!b.disabled && b.enableContainerClick && !b.locked) {\n          a(b.radiobutton).removeClass(\"active\");\n\n          if (!b.clickTime || b.clickTime && new Date() - b.clickTime > 300) {\n            a(b.radiobutton).addClass(\"active\");\n          }\n\n          b.box.addClass(b.toThemeProperty(\"jqx-radiobutton-hover\"));\n          b.box.addClass(b.toThemeProperty(\"jqx-fill-state-focus\"));\n          c.preventDefault();\n          return false;\n        }\n      });\n      this.addHandler(this.host, \"blur\", function (c) {\n        a(b.radiobutton).removeClass(\"active\");\n\n        if (!b.disabled && b.enableContainerClick && !b.locked) {\n          b.box.removeClass(b.toThemeProperty(\"jqx-radiobutton-hover\"));\n          b.box.removeClass(b.toThemeProperty(\"jqx-fill-state-focus\"));\n          c.preventDefault();\n          return false;\n        }\n      });\n      this.addHandler(this.host, \"mouseenter\", function (c) {\n        if (!b.disabled && b.enableContainerClick && !b.locked) {\n          b.box.addClass(b.toThemeProperty(\"jqx-radiobutton-hover\"));\n          b.box.addClass(b.toThemeProperty(\"jqx-fill-state-hover\"));\n          c.preventDefault();\n          return false;\n        }\n      });\n      this.addHandler(this.host, \"mouseleave\", function (c) {\n        if (!b.disabled && b.enableContainerClick && !b.locked) {\n          b.box.removeClass(b.toThemeProperty(\"jqx-radiobutton-hover\"));\n          b.box.removeClass(b.toThemeProperty(\"jqx-fill-state-hover\"));\n          c.preventDefault();\n          return false;\n        }\n      });\n      this.addHandler(this.box, \"mouseenter\", function () {\n        if (!b.disabled && !b.enableContainerClick) {\n          b.box.addClass(b.toThemeProperty(\"jqx-radiobutton-hover\"));\n          b.box.addClass(b.toThemeProperty(\"jqx-fill-state-hover\"));\n        }\n      });\n      this.addHandler(this.box, \"mouseleave\", function () {\n        if (!b.disabled && !b.enableContainerClick) {\n          b.box.removeClass(b.toThemeProperty(\"jqx-radiobutton-hover\"));\n          b.box.removeClass(b.toThemeProperty(\"jqx-fill-state-hover\"));\n        }\n      });\n    },\n    focus: function () {\n      try {\n        this.host.focus();\n      } catch (b) {}\n    },\n    _removeHandlers: function () {\n      this.removeHandler(this.box, \"click\");\n      this.removeHandler(this.box, \"mouseenter\");\n      this.removeHandler(this.box, \"mouseleave\");\n      this.removeHandler(this.host, \"click\");\n      this.removeHandler(this.host, \"mouseup\");\n      this.removeHandler(this.host, \"mousedown\");\n      this.removeHandler(this.host, \"selectstart\");\n      this.removeHandler(this.host, \"mouseenter\");\n      this.removeHandler(this.host, \"mouseleave\");\n      this.removeHandler(this.host, \"keydown\");\n      this.removeHandler(this.host, \"focus\");\n      this.removeHandler(this.host, \"blur\");\n    },\n    _render: function () {\n      if (this.boxSize == null) {\n        this.boxSize = 13;\n      }\n\n      this.box.width(this.boxSize);\n      this.box.height(this.boxSize);\n\n      if (!this.disabled) {\n        if (this.enableContainerClick) {\n          this.host.css(\"cursor\", \"pointer\");\n        } else {\n          this.host.css(\"cursor\", \"auto\");\n        }\n      } else {\n        this.disable();\n      }\n\n      if (this.rtl) {\n        this.box.addClass(this.toThemeProperty(\"jqx-radiobutton-rtl\"));\n        this.host.addClass(this.toThemeProperty(\"jqx-rtl\"));\n      }\n\n      this.updateStates();\n    },\n    val: function (b) {\n      if (arguments.length == 0 || typeof b == \"object\") {\n        return this.checked;\n      }\n\n      if (typeof b == \"string\") {\n        if (b == \"true\") {\n          this.check(\"api\");\n        }\n\n        if (b == \"false\") {\n          this.uncheck(\"api\");\n        }\n\n        if (b == \"\") {\n          this.indeterminate(\"api\");\n        }\n      } else {\n        if (b == true) {\n          this.check(\"api\");\n        }\n\n        if (b == false) {\n          this.uncheck(\"api\");\n        }\n\n        if (b == null) {\n          this.indeterminate(\"api\");\n        }\n      }\n\n      return this.checked;\n    },\n    check: function (d) {\n      this.checked = true;\n      var e = this;\n      this.checkMark.removeClass();\n      this.checkMark.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n      if (a.jqx.browser.msie) {\n        if (!this.disabled) {\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-checked\"));\n        } else {\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-disabled\"));\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-checked\"));\n        }\n      } else {\n        if (!this.disabled) {\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-checked\"));\n        } else {\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-disabled\"));\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-checked\"));\n        }\n\n        this.checkMark.css(\"opacity\", 0);\n        this.checkMark.stop().animate({\n          opacity: 1\n        }, this.animationShowDelay, function () {});\n      }\n\n      var f = a.find(\".jqx-radiobutton\");\n\n      if (this.groupName == null) {\n        this.groupName = \"\";\n      }\n\n      a.each(f, function () {\n        var g = a(this).jqxRadioButton(\"groupName\");\n\n        if (g == e.groupName && this != e.element) {\n          a(this).jqxRadioButton(\"uncheck\", \"api\");\n        }\n      });\n      var b = this.changeType;\n\n      this._raiseEvent(\"0\");\n\n      this.changeType = b;\n\n      this._raiseEvent(\"3\", {\n        type: d,\n        checked: true\n      });\n\n      if (this.checkMark.height() == 0) {\n        var c = parseInt(this.boxSize) / 2;\n        this.checkMark.height(c);\n        this.checkMark.width(c);\n      } else {\n        if (this.boxSize != \"13px\") {\n          var c = parseInt(this.boxSize) / 2;\n          this.checkMark.height(c);\n          this.checkMark.width(c);\n          this.checkMark.css(\"margin-left\", 1 + c / 4);\n          this.checkMark.css(\"margin-top\", 1 + c / 4);\n        }\n      }\n\n      this.input.val(this.checked);\n      a.jqx.aria(this, \"aria-checked\", this.checked);\n      this.host.attr(\"checked\", this.checked);\n    },\n    uncheck: function (c) {\n      var e = this.checked;\n      this.checked = false;\n      var d = this;\n\n      if (a.jqx.browser.msie) {\n        d.checkMark.removeClass();\n      } else {\n        this.checkMark.css(\"opacity\", 1);\n        this.checkMark.stop().animate({\n          opacity: 0\n        }, this.animationHideDelay, function () {\n          d.checkMark.removeClass();\n        });\n      }\n\n      if (e) {\n        var b = this.changeType;\n\n        this._raiseEvent(\"1\");\n\n        this.changeType = b;\n\n        this._raiseEvent(\"3\", {\n          type: c,\n          checked: false\n        });\n      }\n\n      this.input.val(this.checked);\n      a.jqx.aria(this, \"aria-checked\", this.checked);\n      this.host.attr(\"checked\", this.checked);\n    },\n    indeterminate: function (c) {\n      var d = this.checked;\n      this.checked = null;\n      this.checkMark.removeClass();\n\n      if (a.jqx.browser.msie) {\n        this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-indeterminate\"));\n      } else {\n        this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-indeterminate\"));\n        this.checkMark.css(\"opacity\", 0);\n        this.checkMark.stop().animate({\n          opacity: 1\n        }, this.animationShowDelay, function () {});\n      }\n\n      if (d != null) {\n        var b = this.changeType;\n\n        this._raiseEvent(\"2\");\n\n        this.changeType = b;\n\n        this._raiseEvent(\"3\", {\n          type: c,\n          checked: null\n        });\n      }\n\n      this.input.val(this.checked);\n      a.jqx.aria(this, \"aria-checked\", \"undefined\");\n      this.host.attr(\"checked\", \"undefined\");\n    },\n    toggle: function (c) {\n      if (this.disabled) {\n        return;\n      }\n\n      if (this.locked) {\n        return;\n      }\n\n      var b = this.checked;\n\n      if (this.checked == true) {\n        this.checked = this.hasTreeStates ? null : true;\n      } else {\n        this.checked = true;\n      }\n\n      if (b != this.checked) {\n        this.updateStates(c);\n      }\n\n      this.input.val(this.checked);\n    },\n    updateStates: function (b) {\n      if (this.checked) {\n        this.check(b);\n      } else {\n        if (this.checked == false) {\n          this.uncheck(b);\n        } else {\n          if (this.checked == null) {\n            this.indeterminate(b);\n          }\n        }\n      }\n    },\n    disable: function () {\n      this.disabled = true;\n\n      if (this.checked == true) {\n        this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-disabled\"));\n      } else {\n        if (this.checked == null) {\n          this.checkMark.addClass(this.toThemeProperty(\"jqx-radiobutton-check-indeterminate-disabled\"));\n        }\n      }\n\n      this.box.addClass(this.toThemeProperty(\"jqx-radiobutton-disabled\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n      a.jqx.aria(this, \"aria-disabled\", this.disabled);\n    },\n    enable: function () {\n      this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n\n      if (this.checked == true) {\n        this.checkMark.removeClass(this.toThemeProperty(\"jqx-radiobutton-check-disabled\"));\n      } else {\n        if (this.checked == null) {\n          this.checkMark.removeClass(this.toThemeProperty(\"jqx-radiobutton-check-indeterminate-disabled\"));\n        }\n      }\n\n      this.box.removeClass(this.toThemeProperty(\"jqx-radiobutton-disabled\"));\n      this.disabled = false;\n      a.jqx.aria(this, \"aria-disabled\", this.disabled);\n    },\n    destroy: function () {\n      this._removeHandlers();\n\n      this.host.remove();\n    },\n    _raiseEvent: function (g, e) {\n      var c = this.events[g];\n      var f = new a.Event(c);\n      f.owner = this;\n\n      if (!e) {\n        e = {};\n      }\n\n      e.type = this.changeType;\n      this.changeType = null;\n      f.args = e;\n\n      try {\n        var b = this.host.trigger(f);\n      } catch (d) {}\n\n      return b;\n    },\n    propertiesChangedHandler: function (b, c, d) {\n      if (d.width && d.height && Object.keys(d).length == 2) {\n        b.setSize();\n      }\n    },\n    propertyChangedHandler: function (b, c, e, d) {\n      if (this.isInitialized == undefined || this.isInitialized == false) {\n        return;\n      }\n\n      if (b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && Object.keys(b.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (c == this.enableContainerClick && !this.disabled && !this.locked) {\n        if (d) {\n          this.host.css(\"cursor\", \"pointer\");\n        } else {\n          this.host.css(\"cursor\", \"auto\");\n        }\n      }\n\n      if (c == \"rtl\") {\n        if (d) {\n          b.box.addClass(b.toThemeProperty(\"jqx-radiobutton-rtl\"));\n          b.host.addClass(b.toThemeProperty(\"jqx-rtl\"));\n        } else {\n          b.box.removeClass(b.toThemeProperty(\"jqx-radiobutton-rtl\"));\n          b.host.removeClass(b.toThemeProperty(\"jqx-rtl\"));\n        }\n      }\n\n      if (c == \"boxSize\") {\n        b.render();\n      }\n\n      if (c == \"checked\") {\n        switch (d) {\n          case true:\n            this.check(\"api\");\n            break;\n\n          case false:\n            this.uncheck(\"api\");\n            break;\n\n          case null:\n            this.indeterminate();\n            break;\n        }\n      }\n\n      if (c == \"theme\") {\n        a.jqx.utilities.setTheme(e, d, this.host);\n      }\n\n      if (c == \"disabled\") {\n        if (d) {\n          this.disable();\n        } else {\n          this.enable();\n        }\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}