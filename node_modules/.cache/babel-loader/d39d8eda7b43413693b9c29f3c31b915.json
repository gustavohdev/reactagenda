{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxComboBox\", \"\", {});\n  a.extend(a.jqx._jqxComboBox.prototype, {\n    defineInstance: function () {\n      var b = {\n        disabled: false,\n        width: 200,\n        height: 25,\n        items: new Array(),\n        selectedIndex: -1,\n        selectedItems: new Array(),\n        _selectedItems: new Array(),\n        source: null,\n        autoItemsHeight: false,\n        scrollBarSize: a.jqx.utilities.scrollBarSize,\n        arrowSize: 17,\n        enableHover: true,\n        enableSelection: true,\n        visualItems: new Array(),\n        groups: new Array(),\n        equalItemsWidth: true,\n        itemHeight: -1,\n        visibleItems: new Array(),\n        hint: true,\n        emptyGroupText: \"Group\",\n        emptyString: \"\",\n        ready: null,\n        openDelay: 250,\n        closeDelay: 300,\n        animationType: \"default\",\n        dropDownWidth: \"auto\",\n        dropDownHeight: \"200px\",\n        autoDropDownHeight: false,\n        enableBrowserBoundsDetection: false,\n        dropDownHorizontalAlignment: \"left\",\n        dropDownVerticalAlignment: \"bottom\",\n        dropDownContainer: \"default\",\n        searchMode: \"startswithignorecase\",\n        autoComplete: false,\n        remoteAutoComplete: false,\n        remoteAutoCompleteDelay: 500,\n        selectionMode: \"default\",\n        minLength: 2,\n        displayMember: \"\",\n        valueMember: \"\",\n        groupMember: \"\",\n        searchMember: \"\",\n        keyboardSelection: true,\n        renderer: null,\n        autoOpen: false,\n        template: \"\",\n        checkboxes: false,\n        promptText: \"\",\n        placeHolder: \"\",\n        rtl: false,\n        listBox: null,\n        validateSelection: null,\n        showCloseButtons: true,\n        renderSelectedItem: null,\n        search: null,\n        popupZIndex: 2000,\n        searchString: null,\n        multiSelect: false,\n        showArrow: true,\n        _disabledItems: new Array(),\n        touchMode: \"auto\",\n        autoBind: true,\n        aria: {\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        },\n        events: [\"open\", \"close\", \"select\", \"unselect\", \"change\", \"checkChange\", \"bindingComplete\", \"itemAdd\", \"itemRemove\", \"itemUpdate\"]\n      };\n\n      if (this === a.jqx._jqxComboBox.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (b) {\n      var c = this;\n      this.host.attr(\"role\", \"combobox\");\n      a.jqx.aria(this, \"aria-autocomplete\", \"both\");\n\n      if (a.jqx._jqxListBox == null || a.jqx._jqxListBox == undefined) {\n        throw new Error(\"jqxComboBox: Missing reference to jqxlistbox.js.\");\n      }\n\n      a.jqx.aria(this);\n\n      if (this.promptText != \"\") {\n        this.placeHolder = this.promptText;\n      }\n\n      this.render();\n    },\n    render: function () {\n      var i = this;\n      var b = i.element.nodeName.toLowerCase();\n\n      if (b == \"select\" || b == \"ul\" || b == \"ol\") {\n        i.field = i.element;\n\n        if (i.field.className) {\n          i._className = i.field.className;\n        }\n\n        var h = {\n          title: i.field.title\n        };\n\n        if (i.field.id.length) {\n          h.id = i.field.id.replace(/[^\\w]/g, \"_\") + \"_jqxComboBox\";\n        } else {\n          h.id = a.jqx.utilities.createId() + \"_jqxComboBox\";\n        }\n\n        var d = a(\"<div></div>\", h);\n\n        if (!i.width) {\n          i.width = a(i.field).width();\n        }\n\n        if (!i.height) {\n          i.height = a(i.field).outerHeight();\n        }\n\n        i.element.style.cssText = i.field.style.cssText;\n        a(i.field).hide().after(d);\n        var t = i.host.data();\n        i.host = d;\n        i.host.data(t);\n        i.element = d[0];\n        i.element.id = i.field.id;\n        i.field.id = h.id;\n\n        if (i._className) {\n          i.host.addClass(i._className);\n          a(i.field).removeClass(i._className);\n        }\n\n        if (i.field.tabIndex) {\n          var c = i.field.tabIndex;\n          i.field.tabIndex = -1;\n          i.element.tabIndex = c;\n        }\n\n        if (i.field.innerHTML != \"\") {\n          var k = a.jqx.parseSourceTag(i.field);\n          i.source = k.items;\n\n          if (i.selectedIndex == -1) {\n            i.selectedIndex = k.index;\n          }\n        }\n      } else {\n        if (i.host.find(\"li\").length > 0 || i.host.find(\"option\").length > 0) {\n          var k = a.jqx.parseSourceTag(i.element);\n          i.source = k.items;\n        }\n      }\n\n      i.removeHandlers();\n      i.isanimating = false;\n      i.id = a.jqx.utilities.createId();\n      i.element.innerHTML = \"\";\n      var m = a(\"<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='padding: 0; margin: 0; border: none; background-color: transparent; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' style='padding: 0; margin: 0; border-top: none; border-bottom: none; float: left; position: absolute;'/><div id='dropdownlistArrow' role='button' style='padding: 0; margin: 0; border-left-width: 1px; border-bottom-width: 0px; border-top-width: 0px; border-right-width: 0px; float: right; position: absolute;'/></div></div>\");\n      i.comboStructure = m;\n\n      if (a.jqx._jqxListBox == null || a.jqx._jqxListBox == undefined) {\n        throw \"jqxComboBox: Missing reference to jqxlistbox.js.\";\n      }\n\n      i.touch = a.jqx.mobile.isTouchDevice();\n\n      if (i.touchMode === true) {\n        i.touch = true;\n      }\n\n      i.host.append(m);\n      i.dropdownlistWrapper = i.host.find(\"#dropdownlistWrapper\");\n      i.dropdownlistArrow = i.host.find(\"#dropdownlistArrow\");\n      i.dropdownlistContent = i.host.find(\"#dropdownlistContent\");\n      i.dropdownlistContent.addClass(i.toThemeProperty(\"jqx-combobox-content\"));\n      i.dropdownlistContent.addClass(i.toThemeProperty(\"jqx-widget-content\"));\n      i.dropdownlistWrapper[0].id = \"dropdownlistWrapper\" + i.element.id;\n      i.dropdownlistArrow[0].id = \"dropdownlistArrow\" + i.element.id;\n      i.dropdownlistContent[0].id = \"dropdownlistContent\" + i.element.id;\n\n      if (i.template) {\n        i.dropdownlistArrow.addClass(i.toThemeProperty(\"jqx-\" + i.template + \"\"));\n      }\n\n      i.dropdownlistContent.append(a('<input autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"box-sizing: border-box; margin: 0; padding: 0; padding-left: 3px; padding-right: 3px; border: 0;\" type=\"textarea\"/>'));\n      i.input = i.dropdownlistContent.find(\"input\");\n      i.input.addClass(i.toThemeProperty(\"jqx-combobox-input\"));\n      i.input.addClass(i.toThemeProperty(\"jqx-widget-content\"));\n\n      if (i.host.attr(\"tabindex\")) {\n        i.input.attr(\"tabindex\", i.host.attr(\"tabindex\"));\n        i.host.removeAttr(\"tabindex\");\n      }\n\n      var j = a(\"<label></label\");\n\n      if (this.hint) {\n        j[0].innerHTML = this.placeHolder;\n      }\n\n      j.addClass(i.toThemeProperty(\"jqx-input-label\"));\n      i.dropdownlistWrapper.append(j);\n      i.label = j;\n      var r = a(\"<span></span>\");\n      i.dropdownlistWrapper.append(r);\n      r.addClass(i.toThemeProperty(\"jqx-input-bar\"));\n      i.bar = r;\n      var i = this;\n\n      if (i.template) {\n        i.bar.addClass(i.toThemeProperty(\"jqx-\" + i.template));\n        i.label.addClass(i.toThemeProperty(\"jqx-\" + i.template));\n      }\n\n      i._addInput();\n\n      if (i.rtl) {\n        i.input.css({\n          direction: \"rtl\"\n        });\n        i.dropdownlistContent.addClass(i.toThemeProperty(\"jqx-combobox-content-rtl\"));\n      }\n\n      try {\n        var q = \"listBox\" + i.id;\n        var g = a(a.find(\"#\" + q));\n\n        if (g.length > 0) {\n          g.remove();\n        }\n\n        a.jqx.aria(this, \"aria-owns\", q);\n        a.jqx.aria(this, \"aria-haspopup\", true);\n        a.jqx.aria(this, \"aria-multiline\", false);\n\n        if (i.listBoxContainer) {\n          i.listBoxContainer.jqxListBox(\"destroy\");\n        }\n\n        if (i.container) {\n          i.container.remove();\n        }\n\n        var l = a(\"<div style='overflow: hidden; border: none; background-color: transparent; position: absolute;' id='listBox\" + i.id + \"'><div id='innerListBox\" + i.id + \"'></div></div>\");\n        l.hide();\n\n        if (i.dropDownContainer == \"element\") {\n          l.appendTo(i.host);\n        } else {\n          l.appendTo(document.body);\n        }\n\n        i.container = l;\n        i.listBoxContainer = a(a.find(\"#innerListBox\" + i.id));\n        var p = i.width;\n\n        if (i.dropDownWidth != \"auto\") {\n          p = i.dropDownWidth;\n        }\n\n        if (i.dropDownHeight == null) {\n          i.dropDownHeight = 200;\n        }\n\n        i.container.width(parseInt(p) + 25);\n        i.container.height(parseInt(i.dropDownHeight) + 25);\n        i._ready = false;\n        i.addHandler(i.listBoxContainer, \"bindingComplete\", function (e) {\n          if (!i.listBox) {\n            i.listBox = a.data(i.listBoxContainer[0], \"jqxListBox\").instance;\n          }\n\n          if (!i._ready) {\n            if (i.ready) {\n              i.ready();\n            }\n\n            i._ready = true;\n          }\n\n          i._raiseEvent(\"6\");\n        });\n        i.addHandler(i.listBoxContainer, \"itemAdd\", function (e) {\n          i._raiseEvent(\"7\", e.args);\n        });\n        i.addHandler(i.listBoxContainer, \"itemRemove\", function (e) {\n          i._raiseEvent(\"8\", e.args);\n        });\n        i.addHandler(i.listBoxContainer, \"itemUpdate\", function (e) {\n          i._raiseEvent(\"9\", e.args);\n        });\n        var o = true;\n        i.listBoxContainer.jqxListBox({\n          autoItemsHeight: i.autoItemsHeight,\n          _checkForHiddenParent: false,\n          allowDrop: false,\n          allowDrag: false,\n          checkboxes: i.checkboxes,\n          emptyString: i.emptyString,\n          autoBind: !i.remoteAutoComplete && i.autoBind,\n          renderer: i.renderer,\n          rtl: i.rtl,\n          itemHeight: i.itemHeight,\n          selectedIndex: i.selectedIndex,\n          incrementalSearch: false,\n          width: p,\n          scrollBarSize: i.scrollBarSize,\n          autoHeight: i.autoDropDownHeight,\n          height: i.dropDownHeight,\n          groupMember: i.groupMember,\n          searchMember: i.searchMember,\n          displayMember: i.displayMember,\n          valueMember: i.valueMember,\n          source: i.source,\n          theme: i.theme,\n          rendered: function () {\n            i.listBox = a.data(i.listBoxContainer[0], \"jqxListBox\").instance;\n\n            if (i.remoteAutoComplete) {\n              if (i.autoDropDownHeight) {\n                i.container.height(i.listBox.virtualSize.height + 25);\n                i.listBoxContainer.height(i.listBox.virtualSize.height);\n\n                i.listBox._arrange();\n              } else {\n                i.listBox._arrange();\n\n                i.listBox.ensureVisible(0);\n\n                i.listBox._renderItems();\n\n                i.container.height(i.listBoxContainer.height() + 25);\n              }\n\n              if (i.searchString != undefined && i.searchString.length >= i.minLength) {\n                var e = i.listBoxContainer.jqxListBox(\"items\");\n\n                if (e) {\n                  if (e.length > 0) {\n                    if (!i.isOpened()) {\n                      i.open();\n                    }\n                  } else {\n                    i.close();\n                  }\n                } else {\n                  i.close();\n                }\n              } else {\n                i.close();\n              }\n            } else {\n              i.renderSelection(\"mouse\");\n\n              if (i.multiSelect) {\n                i.doMultiSelect(false);\n              }\n            }\n\n            if (i.rendered) {\n              i.rendered();\n            }\n          }\n        });\n\n        if (i.dropDownContainer == \"element\") {\n          i.listBoxContainer.css({\n            position: \"absolute\",\n            top: 0,\n            left: 0\n          });\n        } else {\n          i.listBoxContainer.css({\n            position: \"absolute\",\n            zIndex: i.popupZIndex,\n            top: 0,\n            left: 0\n          });\n        }\n\n        i.listBoxContainer.css(\"border-top-width\", \"1px\");\n        i.listBoxContainer.addClass(i.toThemeProperty(\"jqx-popup\"));\n\n        if (a.jqx.browser.msie) {\n          i.listBoxContainer.addClass(i.toThemeProperty(\"jqx-noshadow\"));\n        }\n\n        if (i.template) {\n          i.listBoxContainer.addClass(i.toThemeProperty(\"jqx-\" + i.template + \"-item\"));\n        }\n\n        i.listBox = a.data(i.listBoxContainer[0], \"jqxListBox\").instance;\n        i.listBox.enableSelection = i.enableSelection;\n        i.listBox.enableHover = i.enableHover;\n        i.listBox.equalItemsWidth = i.equalItemsWidth;\n\n        i.listBox._arrange();\n\n        i.addHandler(i.listBoxContainer, \"unselect\", function (e) {\n          if (!i.multiSelect) {\n            i._raiseEvent(\"3\", {\n              index: e.args.index,\n              type: e.args.type,\n              item: e.args.item\n            });\n          }\n        });\n        i.addHandler(i.listBoxContainer, \"change\", function (e) {\n          if (!i.multiSelect) {\n            i.selectedIndex = i.listBox.selectedIndex;\n\n            i._raiseEvent(\"4\", {\n              index: e.args.index,\n              type: e.args.type,\n              item: e.args.item\n            });\n          }\n        });\n\n        if (i.animationType == \"none\") {\n          i.container.css(\"display\", \"none\");\n        } else {\n          i.container.hide();\n        }\n\n        o = false;\n      } catch (s) {\n        throw s;\n      }\n\n      var i = this;\n      i.input.attr(\"disabled\", i.disabled);\n      var f = a.jqx.browser.msie && a.jqx.browser.version < 8;\n\n      if (!f) {\n        if (i.isMaterialized() && i.hint) {\n          i.label[0].innerHTML = i.placeHolder;\n        } else {\n          i.input.attr(\"placeholder\", i.placeHolder);\n        }\n      }\n\n      i.propertyChangeMap.disabled = function (e, v, u, w) {\n        if (w) {\n          e.host.addClass(i.toThemeProperty(\"jqx-combobox-state-disabled\"));\n          e.host.addClass(i.toThemeProperty(\"jqx-fill-state-disabled\"));\n          e.dropdownlistContent.addClass(i.toThemeProperty(\"jqx-combobox-content-disabled\"));\n        } else {\n          e.host.removeClass(i.toThemeProperty(\"jqx-combobox-state-disabled\"));\n          e.host.removeClass(i.toThemeProperty(\"jqx-fill-state-disabled\"));\n          e.dropdownlistContent.removeClass(i.toThemeProperty(\"jqx-combobox-content-disabled\"));\n        }\n\n        e.input.attr(\"disabled\", e.disabled);\n        a.jqx.aria(e, \"aria-disabled\", e.disabled);\n        e.input.attr(\"disabled\", e.disabled);\n      };\n\n      if (i.disabled) {\n        i.host.addClass(i.toThemeProperty(\"jqx-combobox-state-disabled\"));\n        i.host.addClass(i.toThemeProperty(\"jqx-fill-state-disabled\"));\n        i.dropdownlistContent.addClass(i.toThemeProperty(\"jqx-combobox-content-disabled\"));\n      }\n\n      i.host.addClass(i.toThemeProperty(\"jqx-combobox-state-normal\"));\n      i.host.addClass(i.toThemeProperty(\"jqx-combobox\"));\n      i.host.addClass(i.toThemeProperty(\"jqx-rc-all\"));\n      i.host.addClass(i.toThemeProperty(\"jqx-widget\"));\n      i.host.addClass(i.toThemeProperty(\"jqx-widget-content\"));\n      i.dropdownlistArrowIcon = a(\"<div></div>\");\n\n      if (i.dropDownVerticalAlignment == \"top\") {\n        i.dropdownlistArrowIcon.addClass(i.toThemeProperty(\"jqx-icon-arrow-up\"));\n      } else {\n        i.dropdownlistArrowIcon.addClass(i.toThemeProperty(\"jqx-icon-arrow-down\"));\n      }\n\n      i.dropdownlistArrowIcon.addClass(i.toThemeProperty(\"jqx-icon\"));\n      i.dropdownlistArrow.append(i.dropdownlistArrowIcon);\n      i.dropdownlistArrow.addClass(i.toThemeProperty(\"jqx-combobox-arrow-normal\"));\n      i.dropdownlistArrow.addClass(i.toThemeProperty(\"jqx-fill-state-normal\"));\n\n      if (!i.rtl) {\n        i.dropdownlistArrow.addClass(i.toThemeProperty(\"jqx-rc-r\"));\n      } else {\n        i.dropdownlistArrow.addClass(i.toThemeProperty(\"jqx-rc-l\"));\n      }\n\n      i._setSize();\n\n      i._updateHandlers();\n\n      i.addHandler(i.input, \"keyup.textchange\", function (e) {\n        if (i._writeTimer) {\n          clearTimeout(i._writeTimer);\n        }\n\n        i._writeTimer = setTimeout(function () {\n          var u = i._search(e);\n\n          if (i.cinput && i.input) {\n            if (!i.displayMember) {\n              i.cinput[0].value = i.input[0].value;\n            } else {\n              i._updateInputSelection();\n            }\n          }\n        }, 50);\n      });\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        if (i.host.parents(\".jqx-window\").length > 0) {\n          var n = i.host.parents(\".jqx-window\").css(\"z-index\");\n          l.css(\"z-index\", n + 10);\n          i.listBoxContainer.css(\"z-index\", n + 10);\n        }\n      }\n\n      if (i.checkboxes) {\n        i.input.attr(\"readonly\", true);\n        a.jqx.aria(this, \"aria-readonly\", true);\n      } else {\n        a.jqx.aria(this, \"aria-readonly\", false);\n      }\n\n      if (!i.remoteAutoComplete) {\n        i.searchString = \"\";\n      }\n\n      this.bar.css(\"top\", this.host.height());\n    },\n    _addInput: function () {\n      var b = this.host.attr(\"name\");\n      this.cinput = a(\"<input type='hidden'/>\");\n      this.host.append(this.cinput);\n\n      if (b) {\n        this.cinput.attr(\"name\", b);\n      }\n    },\n    _updateInputSelection: function () {\n      if (this.cinput) {\n        var c = new Array();\n\n        if (this.selectedIndex == -1) {\n          this.cinput.val(\"\");\n        } else {\n          var e = this.getSelectedItem();\n\n          if (e != null) {\n            this.cinput.val(e.value);\n            c.push(e.value);\n          } else {\n            this.cinput.val(this.dropdownlistContent.text());\n          }\n        }\n\n        if (this.checkboxes || this.multiSelect) {\n          if (!this.multiSelect) {\n            var b = this.getCheckedItems();\n          } else {\n            var b = this.getSelectedItems();\n          }\n\n          var f = \"\";\n\n          if (b != null) {\n            for (var d = 0; d < b.length; d++) {\n              if (d == b.length - 1) {\n                f += b[d].value;\n              } else {\n                f += b[d].value + \",\";\n              }\n\n              c.push(b[d].value);\n            }\n          }\n\n          this.cinput.val(f);\n        }\n\n        if (this.field && this.cinput) {\n          if (this.field.nodeName.toLowerCase() == \"select\") {\n            a.each(this.field, function (g, h) {\n              a(this).removeAttr(\"selected\");\n              this.selected = c.indexOf(this.value) >= 0;\n\n              if (this.selected) {\n                a(this).attr(\"selected\", true);\n              }\n            });\n          } else {\n            a.each(this.items, function (g, h) {\n              a(this.originalItem.originalItem).removeAttr(\"data-selected\");\n              this.selected = c.indexOf(this.value) >= 0;\n\n              if (this.selected) {\n                a(this.originalItem.originalItem).attr(\"data-selected\", true);\n              }\n            });\n          }\n        }\n      }\n    },\n    _search: function (d) {\n      var i = this;\n\n      if (d.keyCode == 9) {\n        return;\n      }\n\n      if (i.searchMode == \"none\" || i.searchMode == null || i.searchMode == \"undefined\") {\n        return;\n      }\n\n      if (d.keyCode == 16 || d.keyCode == 17 || d.keyCode == 20) {\n        return;\n      }\n\n      if (i.checkboxes) {\n        return;\n      }\n\n      if (i.multiSelect) {\n        var l = a(\"<span style='visibility: hidden; white-space: nowrap;'>\" + document.createTextNode(i.input.val()) + \"</span>\");\n        l.addClass(i.toThemeProperty(\"jqx-widget\"));\n        a(document.body).append(l);\n        var e = l.width() + 15;\n        l.remove();\n\n        if (e > i.host.width()) {\n          e = i.host.width();\n        }\n\n        if (e < 25) {\n          e = 25;\n        }\n\n        i.input.css(\"width\", e + \"px\");\n\n        if (i.selectedItems.length == 0) {\n          i.input.css(\"width\", \"100%\");\n\n          if (!i.isMaterialized()) {\n            i.input.attr(\"placeholder\", i.placeHolder);\n          }\n        } else {\n          if (!i.isMaterialized()) {\n            i.input.attr(\"placeholder\", \"\");\n          }\n        }\n\n        var j = parseInt(this._findPos(i.host[0])[1]) + parseInt(i.host.outerHeight()) - 1 + \"px\";\n        var r = false;\n\n        if (r != null && r) {\n          j = a.jqx.mobile.getTopPos(this.element) + parseInt(i.host.outerHeight());\n\n          if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n            j = parseInt(j) - this._getBodyOffset().top + \"px\";\n          }\n        }\n\n        i.container.css(\"top\", j);\n        var o = parseInt(i.host.height());\n        i.dropdownlistArrow.height(o);\n      }\n\n      if (!i.isanimating) {\n        if (d.altKey && d.keyCode == 38) {\n          i.hideListBox(\"altKey\");\n          return false;\n        }\n\n        if (d.altKey && d.keyCode == 40) {\n          if (!i.isOpened()) {\n            i.showListBox(\"altKey\");\n          }\n\n          return false;\n        }\n      }\n\n      if (d.keyCode == 37 || d.keyCode == 39) {\n        return false;\n      }\n\n      if (d.altKey || d.keyCode == 18) {\n        return;\n      }\n\n      if (d.keyCode >= 33 && d.keyCode <= 40) {\n        return;\n      }\n\n      if (d.ctrlKey || i.ctrlKey) {\n        if (d.keyCode != 88 && d.keyCode != 86) {\n          return;\n        }\n      }\n\n      var k = i.input.val();\n\n      if (k.length == 0 && !i.autoComplete) {\n        i.listBox.searchString = i.input.val();\n        i.listBox.clearSelection();\n        i.hideListBox(\"search\");\n        i.searchString = i.input.val();\n        return;\n      }\n\n      if (i.remoteAutoComplete) {\n        var i = this;\n\n        var q = function () {\n          i.listBox.vScrollInstance.value = 0;\n        };\n\n        if (k.length >= i.minLength) {\n          if (!d.ctrlKey && !d.altKey) {\n            if (i.searchString != k) {\n              var c = i.listBoxContainer.jqxListBox(\"source\");\n\n              if (c == null) {\n                i.listBoxContainer.jqxListBox({\n                  source: i.source\n                });\n              }\n\n              if (i._searchTimer) {\n                clearTimeout(i._searchTimer);\n              }\n\n              if (d.keyCode != 13 && d.keyCode != 27) {\n                i._searchTimer = setTimeout(function () {\n                  q();\n\n                  if (i.autoDropDownHeight) {\n                    i.listBox.autoHeight = true;\n                  }\n\n                  i.searchString = i.input.val();\n\n                  if (i.search != null) {\n                    i.search(i.input.val());\n                  } else {\n                    throw \"'search' function is not defined\";\n                  }\n                }, i.remoteAutoCompleteDelay);\n              }\n            }\n\n            i.searchString = k;\n          }\n        } else {\n          if (i._searchTimer) {\n            clearTimeout(i._searchTimer);\n          }\n\n          q();\n          i.searchString = \"\";\n          i.search(\"\");\n          i.listBoxContainer.jqxListBox({\n            source: null\n          });\n        }\n\n        return;\n      }\n\n      var i = this;\n\n      if (k === i.searchString) {\n        return;\n      }\n\n      if (!(d.keyCode == \"27\" || d.keyCode == \"13\")) {\n        var n = i.input[0].value;\n\n        var g = i._updateItemsVisibility(k);\n\n        var m = g.matchItems;\n\n        if (i.autoComplete && i.autoItemsHeight) {\n          i.input[0].value = n;\n        }\n\n        var h = g.index;\n\n        if (!i.autoComplete && !i.remoteAutoComplete) {\n          if (!i.multiSelect || i.multiSelect && h >= 0) {\n            i.listBox.selectIndex(h);\n            var f = i.listBox.isIndexInView(h);\n\n            if (!f) {\n              i.listBox.ensureVisible(h);\n            } else {\n              i.listBox._renderItems();\n            }\n          }\n        }\n\n        if (i.autoComplete && m.length === 0) {\n          i.hideListBox(\"search\");\n        }\n      }\n\n      if (d.keyCode == \"13\") {\n        var b = i.container.css(\"display\") == \"block\";\n\n        if (b && !i.isanimating) {\n          i.hideListBox(\"keyboard\");\n          i._oldvalue = i.listBox.selectedValue;\n          return;\n        }\n      } else {\n        if (d.keyCode == \"27\") {\n          var b = i.container.css(\"display\") == \"block\";\n\n          if (b && !i.isanimating) {\n            if (!i.multiSelect) {\n              var p = i.listBox.getVisibleItem(i._oldvalue);\n\n              if (p) {\n                var i = this;\n                setTimeout(function () {\n                  if (i.autoComplete) {\n                    i._updateItemsVisibility(\"\");\n                  }\n\n                  i.listBox.selectIndex(p.index);\n                  i.renderSelection(\"api\");\n                }, i.closeDelay);\n              } else {\n                i.clearSelection();\n              }\n            } else {\n              i.input.val(\"\");\n              i.listBox.selectedValue = null;\n            }\n\n            i.hideListBox(\"keyboard\");\n            i.renderSelection(\"api\");\n            d.preventDefault();\n            return false;\n          }\n        } else {\n          if (!i.isOpened() && !i.opening && !d.ctrlKey) {\n            if (i.listBox.visibleItems && i.listBox.visibleItems.length > 0) {\n              if (i.input.val() != i.searchString && i.searchString != undefined && h != -1) {\n                i.showListBox(\"search\");\n              }\n            }\n          }\n\n          i.searchString = i.input.val();\n\n          if (i.searchString == \"\") {\n            if (!i.listBox.itemsByValue[\"\"]) {\n              h = -1;\n\n              if (!i.multiSelect) {\n                i.clearSelection();\n              }\n            }\n          }\n\n          var p = i.listBox.getVisibleItem(h);\n\n          if (p != undefined) {\n            i._updateInputSelection();\n          }\n        }\n      }\n    },\n    val: function (c) {\n      if (!this.input) {\n        return \"\";\n      }\n\n      var d = function (f) {\n        for (var e in f) {\n          if (f.hasOwnProperty(e)) {\n            return false;\n          }\n        }\n\n        if (typeof c == \"number\") {\n          return false;\n        }\n\n        if (typeof c == \"date\") {\n          return false;\n        }\n\n        if (typeof c == \"boolean\") {\n          return false;\n        }\n\n        if (typeof c == \"string\") {\n          return false;\n        }\n\n        return true;\n      };\n\n      if (d(c) || arguments.length == 0) {\n        var b = this.getSelectedItem();\n\n        if (b) {\n          return b.value;\n        }\n\n        return this.input.val();\n      } else {\n        var b = this.getItemByValue(c);\n\n        if (b != null) {\n          this.selectItem(b);\n        } else {\n          this.input.val(c);\n        }\n\n        return this.input.val();\n      }\n    },\n    focus: function () {\n      var c = this;\n\n      var b = function () {\n        c.input.focus();\n        var d = c.input.val();\n\n        c._setSelection(0, d.length);\n      };\n\n      b();\n      setTimeout(function () {\n        b();\n      }, 10);\n    },\n    _setSelection: function (e, b) {\n      try {\n        if (\"selectionStart\" in this.input[0]) {\n          this.input[0].focus();\n          this.input[0].setSelectionRange(e, b);\n        } else {\n          var c = this.input[0].createTextRange();\n          c.collapse(true);\n          c.moveEnd(\"character\", b);\n          c.moveStart(\"character\", e);\n          c.select();\n        }\n      } catch (d) {}\n    },\n    setContent: function (b) {\n      this.input.val(b);\n    },\n    _updateItemsVisibility: function (k) {\n      var i = this.getItems();\n\n      if (i == undefined) {\n        return {\n          index: -1,\n          matchItem: new Array()\n        };\n      }\n\n      var f = this;\n      var g = -1;\n      var l = new Array();\n      var j = 0;\n      a.each(i, function (o) {\n        var q = \"\";\n\n        if (!this.isGroup) {\n          if (this.searchLabel) {\n            q = this.searchLabel;\n          } else {\n            if (this.label) {\n              q = this.label;\n            } else {\n              if (this.value) {\n                q = this.value;\n              } else {\n                if (this.title) {\n                  q = this.title;\n                } else {\n                  q = \"jqxItem\";\n                }\n              }\n            }\n          }\n\n          q = q.toString();\n          var p = false;\n\n          switch (f.searchMode) {\n            case \"containsignorecase\":\n              p = a.jqx.string.containsIgnoreCase(q, k);\n              break;\n\n            case \"contains\":\n              p = a.jqx.string.contains(q, k);\n              break;\n\n            case \"equals\":\n              p = a.jqx.string.equals(q, k);\n              break;\n\n            case \"equalsignorecase\":\n              p = a.jqx.string.equalsIgnoreCase(q, k);\n              break;\n\n            case \"startswith\":\n              p = a.jqx.string.startsWith(q, k);\n              break;\n\n            case \"startswithignorecase\":\n              p = a.jqx.string.startsWithIgnoreCase(q, k);\n              break;\n\n            case \"endswith\":\n              p = a.jqx.string.endsWith(q, k);\n              break;\n\n            case \"endswithignorecase\":\n              p = a.jqx.string.endsWithIgnoreCase(q, k);\n              break;\n          }\n\n          if (f.autoComplete && !p) {\n            this.visible = false;\n          }\n\n          if (p && f.autoComplete) {\n            l[j++] = this;\n            this.visible = true;\n            g = this.visibleIndex;\n          }\n\n          if (k == \"\" && f.autoComplete) {\n            this.visible = true;\n            p = false;\n          }\n\n          if (f.multiSelect) {\n            this.disabled = false;\n\n            if (f.selectedItems.indexOf(this.value) >= 0 || f._disabledItems.indexOf(this.value) >= 0) {\n              this.disabled = true;\n              p = false;\n            }\n          }\n\n          if (!f.multiSelect) {\n            if (p && !f.autoComplete) {\n              g = this.visibleIndex;\n              return false;\n            }\n          } else {\n            if (p && !f.autoComplete) {\n              if (g === -1) {\n                g = this.visibleIndex;\n              }\n\n              return true;\n            }\n          }\n        }\n      });\n      this.listBox.searchString = k;\n      var f = this;\n\n      var h = function () {\n        if (!f.multiSelect) {\n          return;\n        }\n\n        var o = 0;\n        var r = false;\n        var q = null;\n\n        for (var p = 0; p < f.listBox.items.length; p++) {\n          f.listBox.selectedIndexes[p] = -1;\n\n          if (!f.listBox.items[p].disabled) {\n            if (r == false) {\n              q = f.listBox.items[p];\n              o = q.visibleIndex;\n              r = true;\n            }\n          }\n        }\n\n        f.listBox.selectedIndex = -1;\n        f.listBox.selectedIndex = o;\n        f.listBox.selectedIndexes[o] = o;\n\n        if (f.listBox.visibleItems.length > 0) {\n          if (q) {\n            f.listBox.selectedValue = q.value;\n          } else {\n            f.listBox.selectedValue = null;\n          }\n        } else {\n          f.listBox.selectedValue = null;\n        }\n\n        f.listBox.ensureVisible(0);\n      };\n\n      if (!this.autoComplete) {\n        h();\n        return {\n          index: g,\n          matchItems: l\n        };\n      }\n\n      this.listBox.renderedVisibleItems = new Array();\n      var b = this.listBox.vScrollInstance.value;\n      this.listBox.vScrollInstance.value = 0;\n      this.listBox.visibleItems = new Array();\n\n      this.listBox._renderItems();\n\n      var e = this.listBox.selectedValue;\n      var n = this.listBox.getItemByValue(e);\n\n      if (!this.multiSelect) {\n        if (n) {\n          if (n.visible) {\n            this.listBox.selectedIndex = n.visibleIndex;\n\n            for (var d = 0; d < this.listBox.items.length; d++) {\n              this.listBox.selectedIndexes[d] = -1;\n            }\n\n            this.listBox.selectedIndexes[n.visibleIndex] = n.visibleIndex;\n          } else {\n            for (var d = 0; d < this.listBox.items.length; d++) {\n              this.listBox.selectedIndexes[d] = -1;\n            }\n\n            this.listBox.selectedIndex = -1;\n          }\n        }\n      } else {\n        h();\n      }\n\n      this.listBox._renderItems();\n\n      var m = this.listBox._calculateVirtualSize().height;\n\n      if (m < b) {\n        b = 0;\n        this.listBox.vScrollInstance.refresh();\n      }\n\n      if (this.autoDropDownHeight) {\n        this._disableSelection = true;\n\n        if (this.listBox.autoHeight != this.autoDropDownHeight) {\n          this.listBoxContainer.jqxListBox({\n            autoHeight: this.autoDropDownHeight\n          });\n        }\n\n        this.container.height(m + 25);\n        this.listBox.invalidate();\n        this._disableSelection = false;\n      } else {\n        if (m < parseInt(this.dropDownHeight)) {\n          var c = this.listBox.hScrollBar[0].style.visibility == \"hidden\" ? 0 : 20;\n          this.listBox.height = c + m;\n          this.container.height(m + 25 + c);\n          this.listBox.invalidate();\n        } else {\n          this.listBox.height = parseInt(this.dropDownHeight);\n          this.container.height(parseInt(this.dropDownHeight) + 25);\n          this.listBox.invalidate();\n        }\n      }\n\n      this.listBox.vScrollInstance.setPosition(b);\n      return {\n        index: g,\n        matchItems: l\n      };\n    },\n    findItems: function (e) {\n      var b = this.getItems();\n      var d = this;\n      var c = 0;\n      var f = new Array();\n      a.each(b, function (g) {\n        var j = \"\";\n\n        if (!this.isGroup) {\n          if (this.label) {\n            j = this.label;\n          } else {\n            if (this.value) {\n              j = this.value;\n            } else {\n              if (this.title) {\n                j = this.title;\n              } else {\n                j = \"jqxItem\";\n              }\n            }\n          }\n\n          var h = false;\n\n          switch (d.searchMode) {\n            case \"containsignorecase\":\n              h = a.jqx.string.containsIgnoreCase(j, e);\n              break;\n\n            case \"contains\":\n              h = a.jqx.string.contains(j, e);\n              break;\n\n            case \"equals\":\n              h = a.jqx.string.equals(j, e);\n              break;\n\n            case \"equalsignorecase\":\n              h = a.jqx.string.equalsIgnoreCase(j, e);\n              break;\n\n            case \"startswith\":\n              h = a.jqx.string.startsWith(j, e);\n              break;\n\n            case \"startswithignorecase\":\n              h = a.jqx.string.startsWithIgnoreCase(j, e);\n              break;\n\n            case \"endswith\":\n              h = a.jqx.string.endsWith(j, e);\n              break;\n\n            case \"endswithignorecase\":\n              h = a.jqx.string.endsWithIgnoreCase(j, e);\n              break;\n          }\n\n          if (h) {\n            f[c++] = this;\n          }\n        }\n      });\n      return f;\n    },\n    _resetautocomplete: function () {\n      a.each(this.listBox.items, function (b) {\n        this.visible = true;\n      });\n      this.listBox.vScrollInstance.value = 0;\n\n      this.listBox._addItems();\n\n      this.listBox.autoHeight = false;\n      this.listBox.height = this.dropDownHeight;\n      this.container.height(parseInt(this.dropDownHeight) + 25);\n      this.listBoxContainer.height(parseInt(this.dropDownHeight));\n\n      this.listBox._arrange();\n\n      this.listBox._addItems();\n\n      this.listBox._renderItems();\n    },\n    getItems: function () {\n      var b = this.listBox.items;\n      return b;\n    },\n    getVisibleItems: function () {\n      return this.listBox.getVisibleItems();\n    },\n    _setSize: function () {\n      var b = window.getComputedStyle(this.element);\n      var c = parseInt(b.borderLeftWidth) * 2;\n      var h = b.boxSizing;\n\n      if (h === \"border-box\" || isNaN(c)) {\n        c = 0;\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = parseInt(this.width) - c + \"px\";\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = parseInt(this.width) - c + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = parseInt(this.height) - c + \"px\";\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = parseInt(this.height) - c + \"px\";\n        }\n      }\n\n      var g = false;\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        g = true;\n        this.element.style.width = this.width;\n\n        if (c > 0) {\n          this.host.css(\"box-sizing\", \"border-box\");\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        g = true;\n        this.element.style.height = this.height;\n      }\n\n      if (g) {\n        var e = this;\n        var d = this.host.width();\n\n        if (this.dropDownWidth != \"auto\") {\n          d = this.dropDownWidth;\n        }\n\n        this.listBoxContainer.jqxListBox({\n          width: d\n        });\n        this.container.width(parseInt(d) + 25);\n\n        this._arrange();\n      }\n\n      var e = this;\n\n      var f = function () {\n        if (e.multiSelect) {\n          e.host.height(e.height);\n        }\n\n        e._arrange();\n\n        if (e.multiSelect) {\n          e.host.height(\"auto\");\n        }\n      };\n\n      e.oldWidth = e.host.width();\n      e.oldHeight = e.host.height();\n      a.jqx.utilities.resize(this.host, function () {\n        var i = e.host.width();\n        var j = e.host.height();\n\n        if (i != e.oldWidth || j != e.oldHeight) {\n          f();\n          e.hideListBox(\"api\");\n        }\n\n        e.oldWidth = i;\n        e.oldHeight = j;\n      });\n    },\n    isOpened: function () {\n      var c = this;\n      var b = a.data(document.body, \"openedCombojqxListBox\" + this.element.id);\n\n      if (this.container.css(\"display\") != \"block\") {\n        return false;\n      }\n\n      if (b != null && b == c.listBoxContainer) {\n        return true;\n      }\n\n      return false;\n    },\n    _updateHandlers: function () {\n      var e = this;\n      var d = false;\n      this.removeHandlers();\n\n      if (this.multiSelect) {\n        this.addHandler(this.dropdownlistContent, \"click\", function (f) {\n          if (f.target.href) {\n            return false;\n          }\n\n          e.input.focus();\n          setTimeout(function () {\n            e.input.focus();\n          }, 10);\n        });\n        this.addHandler(this.dropdownlistContent, \"focus\", function (f) {\n          if (f.target.href) {\n            return false;\n          }\n\n          e.input.focus();\n          setTimeout(function () {\n            e.input.focus();\n          }, 10);\n        });\n      }\n\n      if (!this.touch) {\n        if (this.host.parents()) {\n          this.addHandler(this.host.parents(), \"scroll.combobox\" + this.element.id, function (f) {\n            var g = e.isOpened();\n\n            if (g) {\n              e.close();\n            }\n          });\n        }\n\n        this.addHandler(this.host, \"mouseenter\", function () {\n          if (!e.disabled && e.enableHover) {\n            d = true;\n            e.host.addClass(e.toThemeProperty(\"jqx-combobox-state-hover\"));\n\n            if (e.dropDownVerticalAlignment == \"top\") {\n              e.dropdownlistArrowIcon.addClass(e.toThemeProperty(\"jqx-icon-arrow-up\"));\n            } else {\n              e.dropdownlistArrowIcon.addClass(e.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n            }\n\n            e.dropdownlistArrow.addClass(e.toThemeProperty(\"jqx-combobox-arrow-hover\"));\n            e.dropdownlistArrow.addClass(e.toThemeProperty(\"jqx-fill-state-hover\"));\n          }\n        });\n        this.addHandler(this.host, \"mouseleave\", function () {\n          if (!e.disabled && e.enableHover) {\n            e.host.removeClass(e.toThemeProperty(\"jqx-combobox-state-hover\"));\n            e.dropdownlistArrowIcon.removeClass(e.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n            e.dropdownlistArrowIcon.removeClass(e.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n            e.dropdownlistArrow.removeClass(e.toThemeProperty(\"jqx-combobox-arrow-hover\"));\n            e.dropdownlistArrow.removeClass(e.toThemeProperty(\"jqx-fill-state-hover\"));\n            d = false;\n          }\n        });\n      }\n\n      if (e.autoOpen) {\n        this.addHandler(this.host, \"mouseenter\", function () {\n          var f = e.isOpened();\n\n          if (!f && e.autoOpen) {\n            e.open();\n            e.host.focus();\n          }\n        });\n        this.addHandler(a(document), \"mousemove.\" + e.id, function (f) {\n          var m = e.isOpened();\n\n          if (m && e.autoOpen) {\n            var j = e.host.coord();\n            var k = j.top;\n            var i = j.left;\n            var g = e.container.coord();\n            var n = g.left;\n            var l = g.top;\n            var h = true;\n\n            if (f.pageY >= k && f.pageY <= k + e.host.height() + 2) {\n              if (f.pageX >= i && f.pageX < i + e.host.width()) {\n                h = false;\n              }\n            }\n\n            if (f.pageY >= l && f.pageY <= l + e.container.height() - 20) {\n              if (f.pageX >= n && f.pageX < n + e.container.width()) {\n                h = false;\n              }\n            }\n\n            if (h) {\n              e.close();\n            }\n          }\n        });\n      }\n\n      var c = \"mousedown\";\n\n      if (this.touch) {\n        c = a.jqx.mobile.getTouchEventName(\"touchstart\");\n      }\n\n      var b = function (h) {\n        if (!e.disabled) {\n          var f = e.container.css(\"display\") == \"block\";\n\n          if (!e.isanimating) {\n            if (f) {\n              e.hideListBox(\"api\");\n\n              if (!a.jqx.mobile.isTouchDevice()) {\n                e.input.focus();\n                setTimeout(function () {\n                  e.input.focus();\n                }, 10);\n              }\n\n              return true;\n            } else {\n              if (e.autoDropDownHeight) {\n                e.container.height(e.listBoxContainer.height() + 25);\n                var g = e.listBoxContainer.jqxListBox(\"autoHeight\");\n\n                if (!g) {\n                  e.listBoxContainer.jqxListBox({\n                    autoHeight: e.autoDropDownHeight\n                  });\n\n                  e.listBox._arrange();\n\n                  e.listBox.ensureVisible(0);\n\n                  e.listBox._renderItems();\n\n                  e.container.height(e.listBoxContainer.height() + 25);\n                }\n              }\n\n              e.showListBox(\"api\");\n\n              if (!a.jqx.mobile.isTouchDevice()) {\n                setTimeout(function () {\n                  e.input.focus();\n                }, 10);\n              } else {\n                return true;\n              }\n            }\n          }\n        }\n      };\n\n      this.addHandler(this.dropdownlistArrow, c, function (f) {\n        b(f);\n      });\n      this.addHandler(this.dropdownlistArrowIcon, c, function (f) {});\n      this.addHandler(this.host, \"focus\", function () {\n        e.focus();\n      });\n      this.addHandler(this.input, \"focus\", function (f) {\n        e.focused = true;\n        e.host.addClass(e.toThemeProperty(\"jqx-combobox-state-focus\"));\n        e.host.addClass(e.toThemeProperty(\"jqx-fill-state-focus\"));\n        e.bar.addClass(\"focused\");\n        e.label.addClass(\"focused\");\n        e.dropdownlistContent.addClass(e.toThemeProperty(\"jqx-combobox-content-focus\"));\n\n        if (f.stopPropagation) {\n          f.stopPropagation();\n        }\n      });\n      this.addHandler(this.input, \"blur\", function () {\n        e.focused = false;\n        e.bar.removeClass(\"focused\");\n        e.label.removeClass(\"focused\");\n\n        if (!e.isOpened() && !e.opening) {\n          if (e.selectionMode == \"dropDownList\") {\n            e._selectOldValue();\n          }\n\n          e.host.removeClass(e.toThemeProperty(\"jqx-combobox-state-focus\"));\n          e.host.removeClass(e.toThemeProperty(\"jqx-fill-state-focus\"));\n          e.dropdownlistContent.removeClass(e.toThemeProperty(\"jqx-combobox-content-focus\"));\n        }\n\n        if (e._searchTimer) {\n          clearTimeout(e._searchTimer);\n        }\n      });\n      this.addHandler(a(document), \"mousedown.\" + this.id, e.closeOpenedListBox, {\n        that: this,\n        listbox: this.listBox,\n        id: this.id\n      });\n\n      if (this.touch) {\n        this.addHandler(a(document), a.jqx.mobile.getTouchEventName(\"touchstart\") + \".\" + this.id, e.closeOpenedListBox, {\n          that: this,\n          listbox: this.listBox,\n          id: this.id\n        });\n      }\n\n      this.addHandler(this.host, \"keydown\", function (k) {\n        var h = e.container.css(\"display\") == \"block\";\n        e.ctrlKey = k.ctrlKey;\n\n        if (e.host.css(\"display\") == \"none\") {\n          return true;\n        }\n\n        if (k.keyCode == \"13\" || k.keyCode == \"9\") {\n          if (h && !e.isanimating) {\n            if (e.listBox.selectedIndex != -1) {\n              e.renderSelection(\"mouse\");\n              var f = e.listBox.selectedIndex;\n              var j = e.listBox.getVisibleItem(f);\n\n              if (j) {\n                e.listBox.selectedValue = j.value;\n              }\n\n              e._setSelection(e.input.val().length, e.input.val().length);\n\n              e.hideListBox(\"keyboard\");\n            }\n\n            if (k.keyCode == \"13\") {\n              e._oldvalue = e.listBox.selectedValue;\n            }\n\n            if (!e.keyboardSelection) {\n              e._raiseEvent(\"2\", {\n                index: e.selectedIndex,\n                type: \"keyboard\",\n                item: e.getItem(e.selectedIndex)\n              });\n            }\n\n            if (k.keyCode == \"9\") {\n              return true;\n            }\n\n            return false;\n          }\n        }\n\n        if (k.keyCode == 115) {\n          if (!e.isanimating) {\n            if (!e.isOpened()) {\n              e.showListBox(\"keyboard\");\n            } else {\n              if (e.isOpened()) {\n                e.hideListBox(\"keyboard\");\n              }\n            }\n          }\n\n          return false;\n        }\n\n        if (k.altKey) {\n          if (e.host.css(\"display\") == \"block\") {\n            if (!e.isanimating) {\n              if (k.keyCode == 38) {\n                if (e.isOpened()) {\n                  e.hideListBox(\"altKey\");\n                }\n              } else {\n                if (k.keyCode == 40) {\n                  if (!e.isOpened()) {\n                    e.showListBox(\"altKey\");\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (k.keyCode == \"27\" || k.keyCode == \"9\") {\n          if (e.isOpened() && !e.isanimating) {\n            if (k.keyCode == \"27\") {\n              if (!e.multiSelect) {\n                var j = e.listBox.getItemByValue(e._oldvalue);\n\n                if (j) {\n                  setTimeout(function () {\n                    if (e.autoComplete) {\n                      e._updateItemsVisibility(\"\");\n                    }\n\n                    e.listBox.selectIndex(j.index);\n                    e.renderSelection(\"api\");\n                  }, e.closeDelay);\n                } else {\n                  e.clearSelection();\n                }\n              } else {\n                e.listBox.selectedValue = null;\n                e.input.val(\"\");\n              }\n            }\n\n            e.hideListBox(\"keyboard\");\n\n            if (k.keyCode == \"9\") {\n              return true;\n            }\n\n            e.renderSelection(\"api\");\n            k.preventDefault();\n            return false;\n          }\n        }\n\n        var g = k.keyCode;\n\n        if (h && !e.disabled && g != 8) {\n          return e.listBox._handleKeyDown(k);\n        } else {\n          if (!e.disabled && !h) {\n            var g = k.keyCode;\n\n            if (g == 33 || g == 34 || g == 35 || g == 36 || g == 38 || g == 40) {\n              return e.listBox._handleKeyDown(k);\n            }\n          }\n        }\n\n        if (g === 8 && e.multiSelect) {\n          if (e.input.val().length === 0) {\n            var i = e.selectedItems[e.selectedItems.length - 1];\n            e.selectedItems.pop();\n\n            e._selectedItems.pop();\n\n            if (i) {\n              e._raiseEvent(\"3\", {\n                index: i.index,\n                type: \"keyboard\",\n                item: i\n              });\n\n              e._raiseEvent(\"4\", {\n                index: i.index,\n                type: \"keyboard\",\n                item: i\n              });\n            }\n\n            e.listBox.selectedValue = null;\n            e.doMultiSelect();\n            return false;\n          }\n        }\n\n        if (e.isMaterialized() && e.hint) {\n          setTimeout(function () {\n            if (e.input[0].value.length === 0) {\n              e.element.removeAttribute(\"hint\");\n              e.label[0].innerHTML = e.placeHolder;\n            } else {\n              if (e.hint) {\n                e.element.setAttribute(\"hint\", true);\n              }\n            }\n          });\n        }\n      });\n      this.addHandler(this.listBoxContainer, \"checkChange\", function (f) {\n        e.renderSelection(\"mouse\");\n\n        e._updateInputSelection();\n\n        e._raiseEvent(5, {\n          label: f.args.label,\n          value: f.args.value,\n          checked: f.args.checked,\n          item: f.args.item\n        });\n      });\n      this.addHandler(this.listBoxContainer, \"select\", function (f) {\n        if (!e.disabled) {\n          if (f.args.type != \"keyboard\" || e.keyboardSelection) {\n            e.renderSelection(f.args.type);\n\n            if (!e.multiSelect) {\n              e._raiseEvent(\"2\", {\n                index: f.args.index,\n                type: f.args.type,\n                item: f.args.item\n              });\n            }\n\n            if (f.args.type == \"mouse\") {\n              e._oldvalue = e.listBox.selectedValue;\n\n              if (!e.checkboxes) {\n                e.hideListBox(\"mouse\");\n\n                if (!e.touch) {\n                  e.input.focus();\n                } else {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      });\n\n      if (this.listBox != null && this.listBox.content != null) {\n        this.addHandler(this.listBox.content, \"click\", function (f) {\n          if (!e.disabled) {\n            if (e.listBox.itemswrapper) {\n              if (f.target === e.listBox.itemswrapper[0]) {\n                return true;\n              }\n            }\n\n            if (f.target && f.target.className) {\n              if (f.target.className.indexOf(\"jqx-fill-state-disabled\") >= 0) {\n                return true;\n              }\n            }\n\n            e.renderSelection(\"mouse\");\n            e._oldvalue = e.listBox.selectedValue;\n\n            if (!e.touch && !e.ishiding) {\n              if (!e.checkboxes) {\n                e.hideListBox(\"mouse\");\n                e.input.focus();\n              }\n            }\n\n            if (e.touch === true) {\n              if (!e.checkboxes) {\n                e.hideListBox(\"mouse\");\n              }\n            }\n          }\n        });\n      }\n    },\n    _selectOldValue: function () {\n      var c = this;\n\n      if (c.listBox.selectedIndex == -1) {\n        if (!c.multiSelect) {\n          var b = c.listBox.getItemByValue(c._oldvalue);\n\n          if (b) {\n            setTimeout(function () {\n              if (c.autoComplete) {\n                c._updateItemsVisibility(\"\");\n              }\n\n              c.listBox.selectIndex(b.index);\n              c.renderSelection(\"api\");\n            }, c.closeDelay);\n          } else {\n            c.clearSelection();\n            c.listBox.selectIndex(0);\n            c.renderSelection(\"api\");\n          }\n        } else {\n          c.listBox.selectedValue = null;\n          c.input.val(\"\");\n        }\n      } else {\n        c.renderSelection(\"api\");\n      }\n    },\n    removeHandlers: function () {\n      var c = this;\n\n      if (this.dropdownlistWrapper != null) {\n        this.removeHandler(this.dropdownlistWrapper, \"mousedown\");\n      }\n\n      if (this.dropdownlistContent) {\n        this.removeHandler(this.dropdownlistContent, \"click\");\n        this.removeHandler(this.dropdownlistContent, \"focus\");\n      }\n\n      this.removeHandler(this.host, \"keydown\");\n      this.removeHandler(this.host, \"focus\");\n\n      if (this.input != null) {\n        this.removeHandler(this.input, \"focus\");\n        this.removeHandler(this.input, \"blur\");\n      }\n\n      this.removeHandler(this.host, \"mouseenter\");\n      this.removeHandler(this.host, \"mouseleave\");\n      this.removeHandler(a(document), \"mousemove.\" + c.id);\n\n      if (this.listBoxContainer) {\n        this.removeHandler(this.listBoxContainer, \"checkChange\");\n        this.removeHandler(this.listBoxContainer, \"select\");\n      }\n\n      if (this.host.parents()) {\n        this.removeHandler(this.host.parents(), \"scroll.combobox\" + this.element.id);\n      }\n\n      if (this.dropdownlistArrowIcon && this.dropdownlistArrow) {\n        var b = \"mousedown\";\n\n        if (this.touch) {\n          b = a.jqx.mobile.getTouchEventName(\"touchstart\");\n        }\n\n        this.removeHandler(this.dropdownlistArrowIcon, b);\n        this.removeHandler(this.dropdownlistArrow, b);\n      }\n    },\n    getItem: function (b) {\n      var c = this.listBox.getItem(b);\n      return c;\n    },\n    getItemByValue: function (c) {\n      var b = this.listBox.getItemByValue(c);\n      return b;\n    },\n    getVisibleItem: function (b) {\n      var c = this.listBox.getVisibleItem(b);\n      return c;\n    },\n    renderSelection: function (j) {\n      if (j == undefined || j == \"none\") {\n        return;\n      }\n\n      if (this._disableSelection === true) {\n        return;\n      }\n\n      if (this.listBox == null) {\n        return;\n      }\n\n      if (this.multiSelect) {\n        return;\n      }\n\n      var k = this.listBox.visibleItems[this.listBox.selectedIndex];\n\n      if (this.autoComplete && !this.checkboxes) {\n        if (this.listBox.selectedValue !== undefined) {\n          var k = this.getItemByValue(this.listBox.selectedValue);\n        }\n      }\n\n      if (this.checkboxes) {\n        var f = this.getCheckedItems();\n\n        if (f != null && f.length > 0) {\n          k = f[0];\n        } else {\n          k = null;\n        }\n      }\n\n      if (this.hint) {\n        this.label[0].innerHTML = this.placeHolder;\n      }\n\n      if (k != null) {\n        if (this.hint) {\n          this.element.setAttribute(\"hint\", true);\n        }\n      } else {\n        this.element.removeAttribute(\"hint\");\n      }\n\n      this.bar.css(\"top\", this.host.height());\n\n      if (k == null) {\n        var d = a.jqx.browser.msie && a.jqx.browser.version < 8;\n        this.input.val(\"\");\n        this.input.attr(\"value\", \"\");\n\n        if (!d) {\n          if (this.isMaterialized()) {\n            this.label[0].innerHTML = this.placeHolder;\n            this.input.removeAttr(\"placeholder\");\n          } else {\n            this.input.attr(\"placeholder\", this.placeHolder);\n          }\n        }\n\n        this._updateInputSelection();\n\n        return;\n      }\n\n      this.selectedIndex = this.listBox.selectedIndex;\n      var c = a(\"<span></span>\");\n\n      if (k.label != undefined && k.label != null && k.label.toString().length > 0) {\n        a.jqx.utilities.html(c, k.label);\n      } else {\n        if (k.value != undefined && k.value != null && k.value.toString().length > 0) {\n          a.jqx.utilities.html(c, k.value);\n        } else {\n          if (k.title != undefined && k.title != null && k.title.toString().length > 0) {\n            a.jqx.utilities.html(c, k.title);\n          } else {\n            a.jqx.utilities.html(c, this.emptyString);\n          }\n        }\n      }\n\n      var b = c.outerHeight();\n\n      if (this.checkboxes) {\n        var g = this.getCheckedItems();\n        var h = \"\";\n\n        for (var e = 0; e < g.length; e++) {\n          if (e == g.length - 1) {\n            h += g[e].label;\n          } else {\n            h += g[e].label + \", \";\n          }\n        }\n\n        this.input.val(h);\n      } else {\n        this.input.val(c.text());\n      }\n\n      c.remove();\n\n      this._updateInputSelection();\n\n      if (this.renderSelectedItem) {\n        var l = this.renderSelectedItem(this.listBox.selectedIndex, k);\n\n        if (l != undefined) {\n          this.input[0].value = l;\n        }\n      }\n\n      this.input.attr(\"value\", this.input.val());\n\n      if (this.listBox && this.listBox._activeElement) {\n        a.jqx.aria(this, \"aria-activedescendant\", this.listBox._activeElement.id);\n      }\n    },\n    dataBind: function () {\n      this.listBoxContainer.jqxListBox({\n        source: this.source\n      });\n      this.renderSelection(\"mouse\");\n\n      if (this.source == null) {\n        this.clearSelection();\n      }\n    },\n    clear: function () {\n      this.listBoxContainer.jqxListBox({\n        source: null\n      });\n      this.clearSelection();\n    },\n    clearSelection: function (b) {\n      this.selectedIndex = -1;\n      this.listBox.clearSelection();\n      this.input.val(\"\");\n\n      if (this.multiSelect) {\n        this.listBox.selectedValue = \"\";\n        this.selectedItems = new Array();\n        this._selectedItems = new Array();\n        this.doMultiSelect(false);\n      }\n    },\n    unselectIndex: function (c, d) {\n      if (isNaN(c)) {\n        return;\n      }\n\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      this.listBox.unselectIndex(c, d);\n      this.renderSelection(\"mouse\");\n\n      if (this.multiSelect) {\n        if (c >= 0) {\n          var b = this.getItem(c);\n          var e = this.selectedItems.indexOf(b.value);\n\n          if (e >= 0) {\n            if (b.value === this.listBox.selectedValue) {\n              this.listBox.selectedValue = null;\n            }\n\n            this.selectedItems.splice(e, 1);\n\n            this._selectedItems.splice(e, 1);\n          }\n        }\n\n        this.doMultiSelect(false);\n      }\n    },\n    selectIndex: function (b, d, e, c) {\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      this.listBox.selectIndex(b, d, e, c);\n      this.renderSelection(\"mouse\");\n      this.selectedIndex = b;\n\n      if (this.multiSelect) {\n        this.doMultiSelect();\n      }\n    },\n    selectItem: function (b) {\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      if (this.listBox != undefined) {\n        this.listBox.selectedIndex = -1;\n        this.listBox.selectItem(b);\n        this.selectedIndex = this.listBox.selectedIndex;\n        this.renderSelection(\"mouse\");\n\n        if (this.multiSelect) {\n          this.doMultiSelect(false);\n        }\n      }\n    },\n    unselectItem: function (d) {\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      if (this.listBox != undefined) {\n        this.listBox.unselectItem(d);\n        this.renderSelection(\"mouse\");\n\n        if (this.multiSelect) {\n          var b = this.getItemByValue(d);\n\n          if (b) {\n            var c = this.selectedItems.indexOf(b.value);\n\n            if (c >= 0) {\n              if (b.value === this.listBox.selectedValue) {\n                this.listBox.selectedValue = null;\n              }\n\n              this.selectedItems.splice(c, 1);\n\n              this._selectedItems.splice(c, 1);\n            }\n          }\n\n          this.doMultiSelect(false);\n        }\n      }\n    },\n    checkItem: function (b) {\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      if (this.listBox != undefined) {\n        this.listBox.checkItem(b);\n      }\n    },\n    uncheckItem: function (b) {\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      if (this.listBox != undefined) {\n        this.listBox.uncheckItem(b);\n      }\n    },\n    indeterminateItem: function (b) {\n      if (this.autoComplete) {\n        this._updateItemsVisibility(\"\");\n      }\n\n      if (this.listBox != undefined) {\n        this.listBox.indeterminateItem(b);\n      }\n    },\n    getSelectedValue: function () {\n      return this.listBox.selectedValue;\n    },\n    getSelectedIndex: function () {\n      if (!this.multiSelect) {\n        return this.listBox.selectedIndex;\n      } else {\n        if (this.remoteAutoComplete && this.multiSelect && this._selectedItems.length > 0) {\n          return this.getSelectedItems()[0].index;\n        }\n\n        if (this._selectedItems && this._selectedItems.length > 0) {\n          return this.getSelectedItems()[0].index;\n        }\n      }\n    },\n    getSelectedItem: function () {\n      if (!this.multiSelect) {\n        return this.getVisibleItem(this.listBox.selectedIndex);\n      } else {\n        if (this.remoteAutoComplete && this.multiSelect && this._selectedItems.length > 0) {\n          return this.getSelectedItems()[0];\n        }\n\n        if (this._selectedItems && this._selectedItems.length > 0) {\n          return this.getSelectedItems()[0];\n        }\n\n        return null;\n      }\n    },\n    getSelectedItems: function () {\n      if (this.remoteAutoComplete && this.multiSelect) {\n        return this._selectedItems;\n      }\n\n      var c = new Array();\n      var b = this;\n      a.each(this.selectedItems, function () {\n        var d = b.getItemByValue(this);\n\n        if (d) {\n          c.push(d);\n        } else {\n          var d = b._selectedItems[this];\n\n          if (d) {\n            c.push(d);\n          }\n        }\n      });\n      return c;\n    },\n    getCheckedItems: function () {\n      return this.listBox.getCheckedItems();\n    },\n    checkIndex: function (b) {\n      this.listBox.checkIndex(b);\n    },\n    uncheckIndex: function (b) {\n      this.listBox.uncheckIndex(b);\n    },\n    indeterminateIndex: function (b) {\n      this.listBox.indeterminateIndex(b);\n    },\n    checkAll: function () {\n      this.listBox.checkAll();\n      this.renderSelection(\"mouse\");\n    },\n    uncheckAll: function () {\n      this.listBox.uncheckAll();\n      this.renderSelection(\"mouse\");\n    },\n    insertAt: function (c, b) {\n      if (c == null) {\n        return false;\n      }\n\n      return this.listBox.insertAt(c, b);\n    },\n    addItem: function (b) {\n      return this.listBox.addItem(b);\n    },\n    removeAt: function (c) {\n      var b = this.listBox.removeAt(c);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    removeItem: function (c) {\n      var b = this.listBox.removeItem(c);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    updateItem: function (c, d) {\n      var b = this.listBox.updateItem(c, d);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    updateAt: function (d, c) {\n      var b = this.listBox.updateAt(d, c);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    ensureVisible: function (b) {\n      return this.listBox.ensureVisible(b);\n    },\n    disableAt: function (b) {\n      var c = this.getVisibleItem(b);\n\n      if (c) {\n        this._disabledItems.push(c.value);\n      }\n\n      return this.listBox.disableAt(b);\n    },\n    enableAt: function (b) {\n      var c = this.getVisibleItem(b);\n\n      if (c) {\n        this._disabledItems.splice(this._disabledItems.indexOf(c.value), 1);\n      }\n\n      return this.listBox.enableAt(b);\n    },\n    disableItem: function (b) {\n      var b = this.getVisibleItem(b);\n\n      if (b) {\n        this._disabledItems.push(b.value);\n      }\n\n      return this.listBox.disableItem(b);\n    },\n    enableItem: function (b) {\n      var b = this.getVisibleItem(b);\n\n      if (b) {\n        this._disabledItems.splice(this._disabledItems.indexOf(b.value), 1);\n      }\n\n      return this.listBox.enableItem(b);\n    },\n    _findPos: function (c) {\n      while (c && (c.type == \"hidden\" || c.nodeType != 1 || a.expr.filters.hidden(c))) {\n        c = c.nextSibling;\n      }\n\n      if (c) {\n        var b = a(c).coord(true);\n        return [b.left, b.top];\n      }\n    },\n    testOffset: function (h, f, c) {\n      var g = h.outerWidth();\n      var j = h.outerHeight();\n      var i = a(window).width() + a(window).scrollLeft();\n      var e = a(window).height() + a(window).scrollTop();\n\n      if (f.left + g > i) {\n        if (g > this.host.width()) {\n          var d = this.host.coord().left;\n          var b = g - this.host.width();\n          f.left = d - b + 2;\n        }\n      }\n\n      if (f.left < 0) {\n        f.left = parseInt(this.host.coord().left) + \"px\";\n      }\n\n      f.top -= Math.min(f.top, f.top + j > e && e > j ? Math.abs(j + c + 23) : 0);\n      return f;\n    },\n    open: function () {\n      if (!this.isOpened() && !this.opening) {\n        this.showListBox(\"api\");\n      }\n    },\n    close: function () {\n      if (this.isOpened()) {\n        this.hideListBox(\"api\");\n      }\n    },\n    _getBodyOffset: function () {\n      var c = 0;\n      var b = 0;\n\n      if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n        c = parseInt(a(\"body\").css(\"border-top-width\"));\n\n        if (isNaN(c)) {\n          c = 0;\n        }\n      }\n\n      if (a(\"body\").css(\"border-left-width\") != \"0px\") {\n        b = parseInt(a(\"body\").css(\"border-left-width\"));\n\n        if (isNaN(b)) {\n          b = 0;\n        }\n      }\n\n      return {\n        left: b,\n        top: c\n      };\n    },\n    showListBox: function (n) {\n      if (this.listBox.items && this.listBox.items.length == 0) {\n        return;\n      }\n\n      if (n == \"search\" && !this.autoComplete && !this.remoteAutoComplete) {\n        if (this.autoDropDownHeight) {\n          this.container.height(this.listBoxContainer.height() + 25);\n        }\n      }\n\n      this.element.setAttribute(\"opened\", true);\n\n      if (this.autoComplete || this.multiSelect && !this.remoteAutoComplete) {\n        if (n != \"search\") {\n          this._updateItemsVisibility(\"\");\n\n          if (this.multiSelect) {\n            var r = this.getVisibleItems();\n\n            for (var x = 0; x < r.length; x++) {\n              if (!r[x].disabled) {\n                this.ensureVisible(x);\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (this.remoteAutoComplete) {\n        this.listBox.clearSelection();\n      }\n\n      if (n != \"search\") {\n        this._oldvalue = this.listBox.selectedValue;\n      }\n\n      a.jqx.aria(this, \"aria-expanded\", true);\n\n      if (this.dropDownWidth == \"auto\" && this.width != null && this.width.indexOf && this.width.indexOf(\"%\") != -1) {\n        if (this.listBox.host.width() != this.host.width()) {\n          var u = this.element.offsetWidth;\n          this.listBoxContainer.jqxListBox({\n            width: u\n          });\n          this.listBoxContainer[0].style.width = u + \"px\";\n          this.container.width(parseInt(u) + 25);\n        }\n      }\n\n      if (this.dropDownWidth == \"auto\" && this.host.css(\"border-left-width\") === \"0px\") {\n        var u = this.element.offsetWidth;\n        this.listBoxContainer.jqxListBox({\n          width: u + 1\n        });\n        this.container.width(parseInt(u) + 25);\n      }\n\n      var j = this;\n      var h = this.listBoxContainer;\n      var z = this.listBox;\n      var e = a(window).scrollTop();\n      var f = a(window).scrollLeft();\n      var p = parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + \"px\";\n      var d,\n          s = parseInt(Math.round(this.host.coord(true).left));\n      d = s + \"px\";\n\n      if (this.dropDownContainer === \"element\") {\n        p = parseInt(this.host.outerHeight()) - 1 + \"px\";\n        d = 0;\n      }\n\n      var y = a.jqx.mobile.isSafariMobileBrowser() || a.jqx.mobile.isWindowsPhone();\n      this.ishiding = false;\n      var g = a.jqx.utilities.hasTransform(this.host);\n\n      if (g || y != null && y) {\n        d = a.jqx.mobile.getLeftPos(this.element);\n        p = a.jqx.mobile.getTopPos(this.element) + parseInt(this.host.outerHeight());\n\n        if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n          p = parseInt(p) - this._getBodyOffset().top + \"px\";\n        }\n\n        if (a(\"body\").css(\"border-left-width\") != \"0px\") {\n          d = parseInt(d) - this._getBodyOffset().left + \"px\";\n        }\n      }\n\n      this.host.addClass(this.toThemeProperty(\"jqx-combobox-state-selected\"));\n\n      if (this.dropDownVerticalAlignment == \"top\") {\n        this.dropdownlistArrowIcon.addClass(this.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n      } else {\n        this.dropdownlistArrowIcon.addClass(this.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n      }\n\n      this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-combobox-arrow-selected\"));\n      this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-combobox-state-focus\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      this.dropdownlistContent.addClass(this.toThemeProperty(\"jqx-combobox-content-focus\"));\n      this.container.css(\"left\", d);\n      this.container.css(\"top\", p);\n\n      z._arrange();\n\n      var c = true;\n      var b = false;\n\n      if (this.dropDownHorizontalAlignment == \"right\" || this.rtl) {\n        var l = this.container.outerWidth();\n        var v = Math.abs(l - this.host.width());\n\n        if (l > this.host.width()) {\n          this.container.css(\"left\", 25 + parseInt(Math.round(s)) - v + \"px\");\n        } else {\n          this.container.css(\"left\", 25 + parseInt(Math.round(s)) + v + \"px\");\n        }\n      }\n\n      if (this.dropDownVerticalAlignment == \"top\") {\n        var w = h.height();\n        b = true;\n        h.css(\"top\", 23);\n        h.addClass(this.toThemeProperty(\"jqx-popup-up\"));\n        var o = parseInt(this.host.outerHeight());\n        var m = parseInt(p) - Math.abs(w + o + 23);\n        this.container.css(\"top\", m);\n      }\n\n      if (this.enableBrowserBoundsDetection) {\n        var k = this.testOffset(h, {\n          left: parseInt(this.container.css(\"left\")),\n          top: parseInt(p)\n        }, parseInt(this.host.outerHeight()));\n\n        if (parseInt(this.container.css(\"top\")) != k.top) {\n          b = true;\n          h.css(\"top\", 23);\n          h.addClass(this.toThemeProperty(\"jqx-popup-up\"));\n        } else {\n          h.css(\"top\", 0);\n        }\n\n        this.container.css(\"top\", k.top);\n        this.container.css(\"top\", k.top);\n\n        if (parseInt(this.container.css(\"left\")) != k.left) {\n          this.container.css(\"left\", k.left);\n        }\n      }\n\n      if (this.animationType == \"none\") {\n        this.container.css(\"display\", \"block\");\n        a.data(document.body, \"openedCombojqxListBoxParent\", j);\n        a.data(document.body, \"openedCombojqxListBox\" + j.element.id, h);\n        h.css(\"margin-top\", 0);\n        h.css(\"opacity\", 1);\n      } else {\n        this.container.css(\"display\", \"block\");\n        var q = h.outerHeight();\n        h.stop();\n\n        if (this.animationType == \"fade\") {\n          h.css(\"margin-top\", 0);\n          h.css(\"opacity\", 0);\n          h.animate({\n            opacity: 1\n          }, this.openDelay, function () {\n            j.isanimating = false;\n            j.opening = false;\n            a.data(document.body, \"openedCombojqxListBoxParent\", j);\n            a.data(document.body, \"openedCombojqxListBox\" + j.element.id, h);\n          });\n        } else {\n          h.css(\"opacity\", 1);\n\n          if (b) {\n            h.css(\"margin-top\", q);\n          } else {\n            h.css(\"margin-top\", -q);\n          }\n\n          this.isanimating = true;\n          this.opening = true;\n          h.animate({\n            \"margin-top\": 0\n          }, this.openDelay, function () {\n            j.isanimating = false;\n            j.opening = false;\n            a.data(document.body, \"openedCombojqxListBoxParent\", j);\n            a.data(document.body, \"openedCombojqxListBox\" + j.element.id, h);\n          });\n        }\n      }\n\n      z._renderItems();\n\n      if (!b) {\n        this.host.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n        h.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n        this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n      } else {\n        this.host.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n        h.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n        this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      }\n\n      h.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n\n      this._raiseEvent(\"0\", z);\n    },\n    doMultiSelect: function (c) {\n      if (this.checkboxes) {\n        this.multiSelect = false;\n      }\n\n      var e = this;\n\n      if (!this.multiSelect) {\n        var g = e.dropdownlistContent.find(\".jqx-button\");\n        var d = \"mousedown\";\n\n        if (this.touch) {\n          d = a.jqx.mobile.getTouchEventName(\"touchstart\");\n        }\n\n        this.removeHandler(g, d);\n        this.removeHandler(g.find(\".jqx-icon-close\"), d);\n        g.remove();\n        var f = this.listBox.items;\n\n        if (!f) {\n          return;\n        }\n\n        for (var b = 0; b < f.length; b++) {\n          f[b].disabled = false;\n        }\n\n        this.listBox._renderItems();\n\n        this.selectedItems = new Array();\n        this._selectedItems = new Array();\n        return;\n      }\n\n      if (this.validateSelection) {\n        var k = this.validateSelection(this.listBox.selectedValue);\n\n        if (!k) {\n          return;\n        }\n      }\n\n      var h = this.selectedItems;\n\n      if (this.listBox.selectedValue) {\n        if (this.selectedItems.indexOf(this.listBox.selectedValue) === -1) {\n          var j = this.getItemByValue(this.listBox.selectedValue);\n\n          if (j && j.visible) {\n            this.selectedItems.push(this.listBox.selectedValue);\n\n            this._selectedItems.push(j);\n\n            this._raiseEvent(\"2\", {\n              index: j.index,\n              item: j\n            });\n\n            this._raiseEvent(\"4\", {\n              index: j.index,\n              item: j\n            });\n          }\n        }\n\n        this.listBox.selectedIndex = 0;\n      }\n\n      var f = this.listBox.items;\n\n      if (!f) {\n        return;\n      }\n\n      for (var b = 0; b < f.length; b++) {\n        f[b].disabled = false;\n\n        if (this.selectedItems.indexOf(f[b].value) >= 0 || this._disabledItems.indexOf(this.value) >= 0) {\n          f[b].disabled = true;\n        }\n      }\n\n      this.listBox._renderItems();\n\n      this.searchString = \"\";\n      this.input.val(\"\");\n      var f = \"\";\n      var d = \"mousedown\";\n      var g = e.dropdownlistContent.find(\".jqx-button\");\n\n      if (this.touch) {\n        d = a.jqx.mobile.getTouchEventName(\"touchstart\");\n      }\n\n      this.removeHandler(g, d);\n      this.removeHandler(g.find(\".jqx-icon-close\"), d);\n      g.remove();\n      e.input.detach();\n\n      if (this.selectedItems.length > 0) {\n        e.input.css(\"width\", \"25px\");\n\n        if (this.isMaterialized() && e.hint) {\n          e.label[0].innerHTML = this.placeHolder;\n        } else {\n          e.input.attr(\"placeholder\", \"\");\n        }\n      } else {\n        e.input.css(\"width\", \"100%\");\n\n        if (e.isMaterialized() && e.hint) {\n          e.label[0].innerHTML = this.placeHolder;\n        } else {\n          e.input.attr(\"placeholder\", this.placeHolder);\n        }\n      }\n\n      if (e.isMaterialized()) {\n        if (e.hint) {\n          setTimeout(function () {\n            if (e.selectedItems.length === 0) {\n              e.element.removeAttribute(\"hint\");\n              e.label[0].innerHTML = e.placeHolder;\n            } else {\n              if (e.hint) {\n                e.element.setAttribute(\"hint\", true);\n              }\n            }\n          });\n        }\n      }\n\n      a.each(this.selectedItems, function (l) {\n        var n = e.getItemByValue(this);\n\n        if (!n || e.remoteAutoComplete) {\n          n = e._selectedItems[l];\n        }\n\n        var p = a('<div style=\"overflow: hidden; float: left;\"></div>');\n        p.addClass(e.toThemeProperty(\"jqx-button\"));\n        p.addClass(e.toThemeProperty(\"jqx-combobox-multi-item\"));\n        p.addClass(e.toThemeProperty(\"jqx-fill-state-normal\"));\n        p.addClass(e.toThemeProperty(\"jqx-rc-all\"));\n\n        if (n) {\n          var q = n.label;\n\n          if (e.renderSelectedItem) {\n            var i = e.renderSelectedItem(l, n);\n\n            if (i) {\n              q = i;\n            }\n          }\n\n          if (p[0].innerHTML == \"\") {\n            p[0].innerHTML = '<a data-value=\"' + n.value + '\" style=\"float: left;\" href=\"#\">' + q + \"</a>\";\n          }\n\n          if (e.rtl) {\n            p[0].innerHTML = '<a data-value=\"' + n.value + '\" style=\"float: right;\" href=\"#\">' + q + \"</a>\";\n          }\n\n          var o = !e.rtl ? \"right\" : \"left\";\n\n          if (e.showCloseButtons) {\n            var m = '<div style=\"position: relative; overflow: hidden; float: ' + o + '; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"' + e.toThemeProperty(\"jqx-icon-close\") + '\"></div></div>';\n\n            if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n              m = '<div style=\"position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"' + e.toThemeProperty(\"jqx-icon-close\") + '\"></div></div>';\n            }\n\n            if (e.rtl) {\n              var m = '<div style=\"position: relative; overflow: hidden; float: ' + o + '; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"' + e.toThemeProperty(\"jqx-icon-close\") + '\"></div></div>';\n\n              if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n                m = '<div style=\"position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"' + e.toThemeProperty(\"jqx-icon-close\") + '\"></div></div>';\n              }\n            }\n\n            p[0].innerHTML += m;\n          }\n        } else {\n          if (p[0].innerHTML == \"\") {\n            p[0].innerHTML = '<a href=\"#\"></a>';\n          }\n        }\n\n        e.dropdownlistContent.append(p);\n      });\n      e.dropdownlistContent.append(e.input);\n      e.input.val(\"\");\n\n      if (c !== false) {\n        e.input.focus();\n        setTimeout(function () {\n          e.input.focus();\n        }, 10);\n      }\n\n      var g = e.dropdownlistContent.find(\".jqx-button\");\n\n      if (this.touchMode === true) {\n        d = \"mousedown\";\n      }\n\n      this.addHandler(g, d, function (l) {\n        if (l.target.className.indexOf(\"jqx-icon-close\") >= 0) {\n          return true;\n        }\n\n        if (e.disabled) {\n          return true;\n        }\n\n        var m = a(l.target).attr(\"data-value\");\n        var i = e.getItemByValue(m);\n\n        if (i) {\n          e.listBox.selectedValue = null;\n          e.listBox.clearSelection();\n        }\n\n        e.listBox.scrollTo(0, 0);\n        e.open();\n\n        if (l.preventDefault) {\n          l.preventDefault();\n        }\n\n        if (l.stopPropagation) {\n          l.stopPropagation();\n        }\n\n        return false;\n      });\n      this.addHandler(g.find(\".jqx-icon-close\"), d, function (p) {\n        if (e.disabled) {\n          return;\n        }\n\n        var r = a(p.target).parent().parent().find(\"a\").attr(\"data-value\");\n        var o = e.getItemByValue(r);\n\n        if (o || e.remoteAutoComplete && !o && e.selectedItems.indexOf(r) >= 0) {\n          e.listBox.selectedValue = null;\n          var l = e.selectedItems.indexOf(r);\n          var n = o && o.index >= 0 ? o.index : l;\n\n          if (l >= 0) {\n            e.selectedItems.splice(l, 1);\n            var q = e._selectedItems[l];\n\n            if (!q) {\n              q = o;\n            }\n\n            e._selectedItems.splice(l, 1);\n\n            e._raiseEvent(\"3\", {\n              index: n,\n              type: \"mouse\",\n              item: q\n            });\n\n            e._raiseEvent(\"4\", {\n              index: n,\n              type: \"mouse\",\n              item: q\n            });\n\n            e.doMultiSelect();\n          } else {\n            for (var m = 0; m < e.selectedItems.length; m++) {\n              var q = e.selectedItems[m];\n\n              if (q == r) {\n                e.selectedItems.splice(m, 1);\n\n                e._selectedItems.splice(m, 1);\n\n                e._raiseEvent(\"3\", {\n                  index: n,\n                  type: \"mouse\",\n                  item: o\n                });\n\n                e._raiseEvent(\"4\", {\n                  index: n,\n                  type: \"mouse\",\n                  item: o\n                });\n\n                e.doMultiSelect();\n                break;\n              }\n            }\n          }\n        }\n      });\n\n      if (this.isMaterialized()) {\n        this.host.height(this.dropdownlistContent.height());\n      }\n\n      this.bar.css(\"top\", this.host.height());\n      e.dropdownlistArrow.height(this.host.height());\n\n      e._updateInputSelection();\n    },\n    hideListBox: function (h) {\n      var f = this.listBoxContainer;\n      var g = this.listBox;\n      var c = this.container;\n\n      if (this.container[0].style.display == \"none\") {\n        return;\n      }\n\n      this.element.setAttribute(\"opened\", false);\n      a.jqx.aria(this, \"aria-expanded\", false);\n\n      if (h == \"keyboard\" || h == \"mouse\") {\n        this.listBox.searchString = \"\";\n      }\n\n      if (h == \"keyboard\" || h == \"mouse\" && this.multiSelect) {\n        this.doMultiSelect();\n      }\n\n      var d = this;\n      a.data(document.body, \"openedCombojqxListBox\" + this.element.id, null);\n\n      if (this.animationType == \"none\") {\n        this.opening = false;\n        this.container.css(\"display\", \"none\");\n      } else {\n        if (!this.ishiding) {\n          var b = f.outerHeight();\n          f.css(\"margin-top\", 0);\n          f.stop();\n          this.opening = false;\n          this.isanimating = true;\n          var e = -b;\n\n          if (parseInt(this.container.coord().top) < parseInt(this.host.coord().top)) {\n            e = b;\n          }\n\n          if (this.animationType == \"fade\") {\n            f.css({\n              opacity: 1\n            });\n            f.animate({\n              opacity: 0\n            }, this.closeDelay, function () {\n              d.isanimating = false;\n              c.css(\"display\", \"none\");\n              d.ishiding = false;\n            });\n          } else {\n            f.animate({\n              \"margin-top\": e\n            }, this.closeDelay, function () {\n              d.isanimating = false;\n              c.css(\"display\", \"none\");\n              d.ishiding = false;\n            });\n          }\n        }\n      }\n\n      this.ishiding = true;\n      this.host.removeClass(this.toThemeProperty(\"jqx-combobox-state-selected\"));\n      this.dropdownlistArrowIcon.removeClass(this.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n      this.dropdownlistArrowIcon.removeClass(this.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n      this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-combobox-arrow-selected\"));\n      this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n      if (!this.focused) {\n        this.host.removeClass(this.toThemeProperty(\"jqx-combobox-state-focus\"));\n        this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n        this.dropdownlistContent.removeClass(this.toThemeProperty(\"jqx-combobox-content-focus\"));\n      }\n\n      this.host.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n      f.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      f.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n      f.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n\n      this._raiseEvent(\"1\", g);\n    },\n    closeOpenedListBox: function (e) {\n      var d = e.data.that;\n      var b = a(e.target);\n      var c = e.data.listbox;\n\n      if (c == null) {\n        return true;\n      }\n\n      if (a(e.target).ischildof(d.host)) {\n        return;\n      }\n\n      var f = d;\n      var g = false;\n      a.each(b.parents(), function () {\n        if (this.className != \"undefined\") {\n          if (this.className.indexOf) {\n            if (this.className.indexOf(\"jqx-listbox\") != -1) {\n              g = true;\n              return false;\n            }\n\n            if (this.className.indexOf(\"jqx-combobox\") != -1) {\n              if (d.element.id == this.id) {\n                g = true;\n              }\n\n              return false;\n            }\n          }\n        }\n      });\n\n      if (c != null && !g) {\n        if (d.isOpened()) {\n          d.hideListBox(\"api\");\n          d.input.blur();\n        }\n      }\n\n      return true;\n    },\n    loadFromSelect: function (b) {\n      this.listBox.loadFromSelect(b);\n      this.clearSelection();\n    },\n    refresh: function (b) {\n      this._setSize();\n\n      this._arrange();\n\n      if (this.listBox) {\n        this.renderSelection();\n      }\n    },\n    resize: function () {\n      this._setSize();\n\n      this._arrange();\n    },\n    _arrange: function () {\n      var d = parseInt(this.host.width());\n      var j = parseInt(this.host.height());\n      var e = this.arrowSize;\n      var f = this.arrowSize;\n      var h = 1;\n\n      if (!this.showArrow) {\n        f = 0;\n        e = 0;\n        this.dropdownlistArrow.hide();\n        h = 0;\n        this.host.css(\"cursor\", \"arrow\");\n      } else {\n        if (this.dropdownlistArrow[0].style.display === \"none\") {\n          this.dropdownlistArrow.show();\n        }\n      }\n\n      var b = d - f - 1 * h;\n\n      if (b > 0) {\n        this.dropdownlistContent[0].style.width = b + \"px\";\n      }\n\n      if (this.rtl) {\n        this.dropdownlistContent[0].style.width = -1 + b + \"px\";\n      }\n\n      this.dropdownlistContent[0].style.height = j + \"px\";\n      this.dropdownlistContent[0].style.left = \"0px\";\n      this.dropdownlistContent[0].style.top = \"0px\";\n      this.dropdownlistArrow[0].style.width = f + \"px\";\n      this.dropdownlistArrow[0].style.height = j + \"px\";\n      this.dropdownlistArrow[0].style.left = 1 + b + \"px\";\n      this.input[0].style.width = \"100%\";\n\n      if (!this.multiSelect) {\n        this.input.height(j);\n      }\n\n      var c = this.input.height();\n\n      if (c == 0) {\n        c = parseInt(this.input.css(\"font-size\")) + 3;\n      }\n\n      if (this.input[0].className.indexOf(\"jqx-rc-all\") == -1) {\n        this.input.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      }\n\n      var i = parseInt(j) / 2 - parseInt(c) / 2;\n\n      if (i > 0) {}\n\n      if (this.rtl) {\n        this.dropdownlistArrow.css(\"left\", \"0px\");\n        this.dropdownlistContent.css(\"left\", this.dropdownlistArrow.width());\n\n        if (a.jqx.browser.msie && a.jqx.browser.version <= 8) {\n          this.dropdownlistContent.css(\"left\", 1 + this.dropdownlistArrow.width());\n        }\n      }\n\n      if (this.multiSelect) {\n        this.input.css(\"float\", \"left\");\n        this.input.width(25);\n        this.dropdownlistWrapper.parent().css(\"height\", \"auto\");\n        this.dropdownlistContent.css(\"height\", \"auto\");\n        this.dropdownlistWrapper.css(\"height\", \"auto\");\n        this.dropdownlistContent.css(\"position\", \"relative\");\n        this.dropdownlistContent.css(\"cursor\", \"text\");\n        this.host.css(\"height\", \"auto\");\n        this.host.css(\"min-height\", this.height);\n        this.dropdownlistContent.css(\"min-height\", this.height);\n        var j = parseInt(this.host.height());\n        this.dropdownlistArrow.height(j);\n        var g = parseInt(this.host.css(\"min-height\"));\n        var i = parseInt(g) / 2 - parseInt(c) / 2;\n\n        if (i > 0) {\n          this.input.css(\"margin-top\", i);\n        }\n\n        if (this.isMaterialized()) {\n          this.host.height(this.dropdownlistContent.height());\n        }\n\n        this.bar.css(\"top\", this.host.height());\n        this.dropdownlistArrow.height(this.host.height());\n      }\n    },\n    destroy: function () {\n      if (this.source && this.source.unbindBindingUpdate) {\n        this.source.unbindBindingUpdate(this.element.id);\n        this.source.unbindBindingUpdate(this.listBoxContainer[0].id);\n        this.source.unbindDownloadComplete(this.element.id);\n        this.source.unbindDownloadComplete(this.listBoxContainer[0].id);\n      }\n\n      a.jqx.utilities.resize(this.host, null, true);\n      this.removeHandler(this.listBoxContainer, \"select\");\n      this.removeHandler(this.listBoxContainer, \"unselect\");\n      this.removeHandler(this.listBoxContainer, \"change\");\n      this.removeHandler(this.listBoxContainer, \"bindingComplete\");\n      this.removeHandler(this.dropdownlistWrapper, \"selectstart\");\n      this.removeHandler(this.dropdownlistWrapper, \"mousedown\");\n      this.removeHandler(this.host, \"keydown\");\n      this.removeHandler(this.listBoxContainer, \"select\");\n      this.removeHandler(this.listBox.content, \"click\");\n      this.removeHandlers();\n      this.removeHandler(this.input, \"keyup.textchange\");\n      this.listBoxContainer.jqxListBox(\"destroy\");\n      this.listBoxContainer.remove();\n      this.host.removeClass();\n      this.removeHandler(a(document), \"mousedown.\" + this.id, this.closeOpenedListBox);\n\n      if (this.touch) {\n        this.removeHandler(a(document), a.jqx.mobile.getTouchEventName(\"touchstart\") + \".\" + this.id);\n      }\n\n      this.cinput.remove();\n      delete this.cinput;\n      this.dropdownlistArrow.remove();\n      delete this.dropdownlistArrow;\n      this.dropdownlistArrowIcon.remove();\n      delete this.dropdownlistArrowIcon;\n      delete this.dropdownlistWrapper;\n      delete this.listBoxContainer;\n      delete this.input;\n      delete this.dropdownlistContent;\n      delete this.comboStructure;\n      this.container.remove();\n      delete this.listBox;\n      delete this.container;\n      var b = a.data(this.element, \"jqxComboBox\");\n\n      if (b) {\n        delete b.instance;\n      }\n\n      this.host.removeData();\n      this.host.remove();\n      delete this.host;\n      delete this.set;\n      delete this.get;\n      delete this.call;\n      delete this.element;\n    },\n    _raiseEvent: function (g, c) {\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[g];\n      var e = c;\n      e.owner = this;\n      var f = new a.Event(d);\n      f.owner = this;\n\n      if (g == 2 || g == 3 || g == 4 || g == 5 || g == 6 || g == 7 || g == 8 || g == 9) {\n        f.args = c;\n      }\n\n      var b = this.host.trigger(f);\n      return b;\n    },\n    propertiesChangedHandler: function (b, c, e) {\n      if (e.width && e.height && Object.keys(e).length == 2) {\n        b._setSize();\n\n        if (c == \"width\") {\n          if (b.dropDownWidth == \"auto\") {\n            var d = b.host.width();\n            b.listBoxContainer.jqxListBox({\n              width: d\n            });\n            b.container.width(parseInt(d) + 25);\n          }\n        }\n\n        b._arrange();\n\n        b.close();\n      }\n    },\n    propertyChangedHandler: function (e, k, c, j) {\n      if (e.isInitialized == undefined || e.isInitialized == false) {\n        return;\n      }\n\n      if (e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && Object.keys(e.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (k == \"template\") {\n        e.listBoxContainer.removeClass(e.toThemeProperty(\"jqx-\" + c + \"-item\"));\n        e.listBoxContainer.addClass(e.toThemeProperty(\"jqx-\" + e.template + \"-item\"));\n        e.dropDownListArrow.removeClass(e.toThemeProperty(\"jqx-\" + c + \"\"));\n        e.dropDownListArrow.addClass(e.toThemeProperty(\"jqx-\" + e.template + \"\"));\n        var g = this;\n        g.bar.removeClass(g.toThemeProperty(\"jqx-\" + c));\n        g.label.removeClass(g.toThemeProperty(\"jqx-\" + c));\n        g.bar.addClass(g.toThemeProperty(\"jqx-\" + g.template));\n        g.label.addClass(g.toThemeProperty(\"jqx-\" + g.template));\n      }\n\n      if (k == \"dropDownVerticalAlignment\") {\n        e.close();\n        e.dropdownlistArrowIcon.removeClass(e.toThemeProperty(\"jqx-icon-arrow-up\"));\n        e.dropdownlistArrowIcon.removeClass(e.toThemeProperty(\"jqx-icon-arrow-down\"));\n\n        if (e.dropDownVerticalAlignment == \"top\") {\n          e.dropdownlistArrowIcon.addClass(e.toThemeProperty(\"jqx-icon-arrow-up\"));\n        } else {\n          e.dropdownlistArrowIcon.addClass(e.toThemeProperty(\"jqx-icon-arrow-down\"));\n        }\n\n        e.listBoxContainer.css(\"top\", 0);\n        e.listBoxContainer.removeClass(this.toThemeProperty(\"jqx-popup-up\"));\n      }\n\n      if (k == \"autoItemsHeight\") {\n        e.listBoxContainer.jqxListBox({\n          autoItemsHeight: j\n        });\n      }\n\n      if (k == \"itemHeight\") {\n        e.listBoxContainer.jqxListBox({\n          itemHeight: j\n        });\n      }\n\n      if (k == \"renderSelectedItem\") {\n        e.renderSelection(\"mouse\");\n      }\n\n      if (k == \"renderer\") {\n        e.listBoxContainer.jqxListBox({\n          renderer: j\n        });\n      }\n\n      if (k == \"enableSelection\") {\n        e.listBoxContainer.jqxListBox({\n          enableSelection: j\n        });\n      }\n\n      if (k == \"enableHover\") {\n        e.listBoxContainer.jqxListBox({\n          enableHover: j\n        });\n      }\n\n      if (k === \"touchMode\") {\n        e.listBoxContainer.jqxListBox({\n          touchMode: j\n        });\n        e.touch = a.jqx.mobile.isTouchDevice();\n\n        if (e.touchMode === true) {\n          e.touch = true;\n        }\n\n        e._updateHandlers();\n      }\n\n      if (k == \"multiSelect\") {\n        if (j) {\n          e.doMultiSelect(false);\n        } else {\n          var h = e.listBox.items;\n          var d = -1;\n\n          for (var f = 0; f < h.length; f++) {\n            h[f].disabled = false;\n\n            if (e.selectedItems.indexOf(h[f].value) >= 0 || e._disabledItems.indexOf(e.value) >= 0) {\n              h[f].disabled = true;\n              d = h[f].index;\n            }\n          }\n\n          e.doMultiSelect(false);\n\n          e.listBox._renderItems();\n\n          if (!h) {\n            return;\n          }\n\n          e.listBox.selectedIndex = d;\n          e.renderSelection(\"mouse\");\n          e.dropdownlistWrapper.parent().css(\"height\", \"100%\");\n          e.dropdownlistContent.css(\"height\", \"100\");\n          e.dropdownlistWrapper.css(\"height\", \"100\");\n          e.dropdownlistContent.css(\"position\", \"relative\");\n          e.host.css(\"min-height\", null);\n\n          e._setSize();\n\n          e._arrange();\n        }\n      }\n\n      if (k == \"showArrow\") {\n        e._arrange();\n\n        if (e.multiSelect) {\n          e.doMultiSelect(false);\n        }\n      }\n\n      if (k == \"placeHolder\") {\n        if (e.isMaterialized()) {\n          e.label.innerHTML = e.placeHolder;\n        } else {\n          e.input.attr(\"placeholder\", e.placeHolder);\n        }\n      }\n\n      if (k == \"popupZIndex\") {\n        e.listBoxContainer.css({\n          zIndex: e.popupZIndex\n        });\n      }\n\n      if (k == \"promptText\") {\n        e.placeHolder = j;\n      }\n\n      if (k == \"autoOpen\") {\n        e._updateHandlers();\n      }\n\n      if (k == \"renderer\") {\n        e.listBox.renderer = e.renderer;\n      }\n\n      if (k == \"itemHeight\") {\n        e.listBox.itemHeight = j;\n      }\n\n      if (k == \"source\") {\n        e.input.val(\"\");\n        e.listBoxContainer.jqxListBox({\n          source: e.source\n        });\n        e.renderSelection(\"mouse\");\n\n        if (e.source == null) {\n          e.clearSelection();\n        }\n\n        if (e.multiSelect) {\n          e.selectedItems = new Array();\n          e._selectedItems = new Array();\n          e.doMultiSelect(false);\n        }\n      }\n\n      if (k == \"rtl\") {\n        if (j) {\n          e.dropdownlistArrow.css(\"float\", \"left\");\n          e.dropdownlistContent.css(\"float\", \"right\");\n        } else {\n          e.dropdownlistArrow.css(\"float\", \"right\");\n          e.dropdownlistContent.css(\"float\", \"left\");\n        }\n\n        e.listBoxContainer.jqxListBox({\n          rtl: e.rtl\n        });\n      }\n\n      if (k == \"displayMember\" || k == \"valueMember\") {\n        e.listBoxContainer.jqxListBox({\n          displayMember: e.displayMember,\n          valueMember: e.valueMember\n        });\n        e.renderSelection(\"mouse\");\n      }\n\n      if (k == \"autoDropDownHeight\") {\n        e.listBoxContainer.jqxListBox({\n          autoHeight: e.autoDropDownHeight\n        });\n\n        if (e.autoDropDownHeight) {\n          e.container.height(e.listBoxContainer.height() + 25);\n        } else {\n          e.listBoxContainer.jqxListBox({\n            height: e.dropDownHeight\n          });\n          e.container.height(parseInt(e.dropDownHeight) + 25);\n        }\n\n        e.listBox._arrange();\n\n        e.listBox._updatescrollbars();\n      }\n\n      if (k == \"dropDownHeight\") {\n        if (!e.autoDropDownHeight) {\n          e.listBoxContainer.jqxListBox({\n            height: e.dropDownHeight\n          });\n          e.container.height(parseInt(e.dropDownHeight) + 25);\n        }\n      }\n\n      if (k == \"dropDownWidth\" || k == \"scrollBarSize\") {\n        var b = e.width;\n\n        if (e.dropDownWidth != \"auto\") {\n          b = e.dropDownWidth;\n        }\n\n        e.listBoxContainer.jqxListBox({\n          width: b,\n          scrollBarSize: e.scrollBarSize\n        });\n        e.container.width(parseInt(b) + 25);\n      }\n\n      if (k == \"autoComplete\") {\n        e._resetautocomplete();\n      }\n\n      if (k == \"checkboxes\") {\n        e.listBoxContainer.jqxListBox({\n          checkboxes: e.checkboxes\n        });\n\n        if (e.checkboxes) {\n          e.input.attr(\"readonly\", true);\n          a.jqx.aria(e, \"aria-readonly\", true);\n        } else {\n          a.jqx.aria(e, \"aria-readonly\", false);\n        }\n      }\n\n      if (k == \"theme\" && j != null) {\n        e.listBoxContainer.jqxListBox({\n          theme: j\n        });\n        e.listBoxContainer.addClass(e.toThemeProperty(\"jqx-popup\"));\n\n        if (a.jqx.browser.msie) {\n          e.listBoxContainer.addClass(e.toThemeProperty(\"jqx-noshadow\"));\n        }\n\n        a.jqx.utilities.setTheme(c, j, e.host);\n      }\n\n      if (k == \"rtl\") {\n        e.render();\n        e.refresh();\n      }\n\n      if (k == \"width\" || k == \"height\") {\n        e._setSize();\n\n        if (k == \"width\") {\n          if (e.dropDownWidth == \"auto\") {\n            var b = e.host.width();\n            e.listBoxContainer.jqxListBox({\n              width: b\n            });\n            e.container.width(parseInt(b) + 25);\n          }\n        }\n\n        e._arrange();\n\n        e.close();\n      }\n\n      if (k == \"selectedIndex\") {\n        e.listBox.selectIndex(j);\n        e.renderSelection(\"mouse\");\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}