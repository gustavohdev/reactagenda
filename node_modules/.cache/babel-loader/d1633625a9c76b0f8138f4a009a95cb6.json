{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxNumberInput\", \"\", {});\n  a.extend(a.jqx._jqxNumberInput.prototype, {\n    defineInstance: function () {\n      var b = {\n        value: 0,\n        decimal: 0,\n        min: -99999999,\n        max: 99999999,\n        width: 200,\n        validationMessage: \"Invalid value\",\n        height: 25,\n        textAlign: \"right\",\n        readOnly: false,\n        promptChar: \"_\",\n        decimalDigits: 2,\n        decimalSeparator: \".\",\n        groupSeparator: \",\",\n        groupSize: 3,\n        symbol: \"\",\n        symbolPosition: \"left\",\n        digits: 8,\n        negative: false,\n        negativeSymbol: \"-\",\n        disabled: false,\n        inputMode: \"advanced\",\n        spinButtons: false,\n        spinButtonsWidth: 18,\n        spinButtonsStep: 1,\n        autoValidate: true,\n        spinMode: \"advanced\",\n        enableMouseWheel: true,\n        touchMode: \"auto\",\n        allowNull: true,\n        placeHolder: \"\",\n        changeType: null,\n        template: \"\",\n        rtl: false,\n        hint: true,\n        events: [\"valueChanged\", \"textchanged\", \"mousedown\", \"mouseup\", \"keydown\", \"keyup\", \"keypress\", \"change\"],\n        aria: {\n          \"aria-valuenow\": {\n            name: \"decimal\",\n            type: \"number\"\n          },\n          \"aria-valuemin\": {\n            name: \"min\",\n            type: \"number\"\n          },\n          \"aria-valuemax\": {\n            name: \"max\",\n            type: \"number\"\n          },\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        },\n        invalidArgumentExceptions: [\"invalid argument exception\"]\n      };\n\n      if (this === a.jqx._jqxNumberInput.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (b) {\n      if (this.promptChar === \"\") {\n        this.promptChar = \" \";\n      }\n\n      var d = this.host.attr(\"value\");\n\n      if (d != undefined) {\n        this.decimal = d;\n      }\n\n      if (this.decimal === 0) {\n        if (this.value != null) {\n          this.decimal = this.value;\n        } else {\n          if (this.value === null && this.decimal !== 0) {\n            this.value = this.decimal;\n          }\n        }\n      }\n\n      var c = this;\n\n      c._createFromInput(\"jqxNumberInput\");\n\n      this.render();\n    },\n    _updateHint: function () {\n      var b = this;\n\n      if (!b.hint) {\n        return;\n      }\n\n      if (b.isMaterialized()) {\n        setTimeout(function () {\n          if (b.numberInput[0].value.length === 0) {\n            b.element.removeAttribute(\"hint\");\n\n            if (b.label && b.label[0]) {\n              b.label[0].innerHTML = b.placeHolder;\n            }\n          } else {\n            b.element.setAttribute(\"hint\", true);\n          }\n        });\n      }\n    },\n    _createFromInput: function (c) {\n      var h = this;\n\n      if (h.element.nodeName.toLowerCase() == \"input\") {\n        h.field = h.element;\n\n        if (h.field.className) {\n          h._className = h.field.className;\n        }\n\n        var i = {\n          title: h.field.title\n        };\n\n        if (h.field.value) {\n          h.decimal = parseFloat(h.field.value);\n        }\n\n        if (h.field.getAttribute(\"min\")) {\n          var f = h.field.getAttribute(\"min\");\n          h.min = parseFloat(f);\n        }\n\n        if (h.field.getAttribute(\"step\")) {\n          var e = h.field.getAttribute(\"step\");\n          h.spinButtonsStep = parseFloat(e);\n        }\n\n        if (h.field.getAttribute(\"max\")) {\n          var j = h.field.getAttribute(\"max\");\n          h.max = parseFloat(j);\n        }\n\n        if (h.field.id.length) {\n          i.id = h.field.id.replace(/[^\\w]/g, \"_\") + \"_\" + c;\n        } else {\n          i.id = a.jqx.utilities.createId() + \"_\" + c;\n        }\n\n        var b = a(\"<div></div>\", i);\n        b[0].style.cssText = h.field.style.cssText;\n\n        if (!h.width) {\n          h.width = a(h.field).width();\n        }\n\n        if (!h.height) {\n          h.height = a(h.field).outerHeight();\n        }\n\n        a(h.field).hide().after(b);\n        var g = h.host.data();\n        h.host = b;\n        h.host.data(g);\n        h.element = b[0];\n        h.element.id = h.field.id;\n        h.field.id = i.id;\n\n        if (h._className) {\n          h.host.addClass(h._className);\n          a(h.field).removeClass(h._className);\n        }\n\n        if (h.field.tabIndex) {\n          var d = h.field.tabIndex;\n          h.field.tabIndex = -1;\n          h.element.tabIndex = d;\n        }\n      }\n    },\n    _doTouchHandling: function () {\n      var e = this;\n      var g = e.savedValue;\n\n      if (!e.parsing) {\n        e.parsing = true;\n      }\n\n      if (e.parsing) {\n        if (e.numberInput.val() && e.numberInput.val().indexOf(\"-\") == 0) {\n          e.setvalue(\"negative\", true);\n        } else {\n          e.setvalue(\"negative\", false);\n        }\n\n        var f = e.numberInput.val();\n\n        for (var c = 0; c < f.length - 1; c++) {\n          var d = f.substring(c, c + 1);\n\n          if (isNaN(parseFloat(d)) && e.symbol.toString().indexOf(d) === -1 && d != \"%\" && d != \"$\" && d != \".\" && d != \",\" && d != \"-\") {\n            e.numberInput[0].value = g;\n            e.parsing = false;\n            return;\n          }\n        }\n\n        e.ValueString = e.GetValueString(e.numberInput.val(), e.decimalSeparator, e.decimalSeparator != \"\");\n\n        e._parseDecimalInSimpleMode();\n\n        e.decimal = e.ValueString;\n        var b = e.getvalue(\"negative\");\n\n        if (b) {\n          e.decimal = \"-\" + e.ValueString;\n        }\n\n        e.parsing = false;\n      }\n    },\n    render: function () {\n      this.host.attr({\n        role: \"spinbutton\"\n      });\n      this.host.attr(\"data-role\", \"input\");\n      a.jqx.aria(this);\n      a.jqx.aria(this, \"aria-multiline\", false);\n      var f = this;\n\n      if (this.officeMode || this.theme && this.theme.indexOf(\"office\") != -1) {\n        if (this.spinButtonsWidth == 18) {\n          this.spinButtonsWidth = 15;\n        }\n      }\n\n      if (a.jqx.mobile.isTouchDevice() || this.touchMode === true) {\n        this.inputMode = \"textbox\";\n        this.spinMode = \"simple\";\n      }\n\n      if (this.decimalSeparator == \"\") {\n        this.decimalSeparator = \" \";\n      }\n\n      this.host.addClass(this.toThemeProperty(\"jqx-input\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-numberinput\"));\n\n      if (this.spinButtons) {\n        this._spinButtons();\n      } else {\n        this.numberInput = a(\"<input style='border:none;' autocomplete='off' type='textarea'/>\").appendTo(this.host);\n        this.numberInput.addClass(this.toThemeProperty(\"jqx-input-content\"));\n        this.numberInput.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      }\n\n      if (!this.isMaterialized()) {\n        this.numberInput.attr(\"placeholder\", this.placeHolder);\n      }\n\n      var d = this.host.attr(\"name\");\n\n      if (d) {\n        this.numberInput.attr(\"name\", d);\n      }\n\n      if (this.host.attr(\"tabindex\")) {\n        this.numberInput.attr(\"tabindex\", this.host.attr(\"tabindex\"));\n        this.host.removeAttr(\"tabindex\");\n      }\n\n      if (a.jqx.mobile.isTouchDevice() || this.touchMode === true || this.inputMode == \"textbox\") {\n        var f = this;\n        f.savedValue = \"\";\n        this.addHandler(this.numberInput, \"focus\", function () {\n          f.savedValue = f.numberInput[0].value;\n        });\n        this.addHandler(this.numberInput, \"change\", function () {\n          f._doTouchHandling();\n        });\n      }\n\n      var h = a.data(this.host[0], \"jqxNumberInput\");\n      h.jqxNumberInput = this;\n      var f = this;\n\n      if (this.host.parents(\"form\").length > 0) {\n        this.addHandler(this.host.parents(\"form\"), \"reset\", function () {\n          setTimeout(function () {\n            f.setDecimal(0);\n          }, 10);\n        });\n      }\n\n      this.propertyChangeMap.disabled = function (j, l, k, m) {\n        if (m) {\n          j.numberInput.addClass(c.toThemeProperty(\"jqx-input-disabled\"));\n          j.numberInput.attr(\"disabled\", true);\n        } else {\n          j.host.removeClass(c.toThemeProperty(\"jqx-input-disabled\"));\n          j.numberInput.attr(\"disabled\", false);\n        }\n\n        if (j.spinButtons && j.host.jqxRepeatButton) {\n          j.upbutton.jqxRepeatButton({\n            disabled: m\n          });\n          j.downbutton.jqxRepeatButton({\n            disabled: m\n          });\n        }\n      };\n\n      if (this.disabled) {\n        this.numberInput.addClass(this.toThemeProperty(\"jqx-input-disabled\"));\n        this.numberInput.attr(\"disabled\", true);\n        this.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n      }\n\n      this.selectedText = \"\";\n      this.decimalSeparatorPosition = -1;\n      var i = this.element.id;\n      var e = this.element;\n      var c = this;\n      this.oldValue = this._value();\n      this.items = new Array();\n      var g = this.value;\n      var b = this.decimal;\n\n      this._initializeLiterals();\n\n      this._render();\n\n      this.setDecimal(g !== null ? b : null);\n      var f = this;\n      setTimeout(function () {}, 100);\n\n      this._addHandlers();\n\n      a.jqx.utilities.resize(this.host, function () {\n        f._render();\n      });\n    },\n    refresh: function (b) {\n      if (!b) {\n        this._render();\n      }\n    },\n    wheel: function (d, c) {\n      if (!c.enableMouseWheel) {\n        return;\n      }\n\n      c.changeType = \"mouse\";\n      var e = 0;\n\n      if (!d) {\n        d = window.event;\n      }\n\n      if (d.originalEvent && d.originalEvent.wheelDelta) {\n        d.wheelDelta = d.originalEvent.wheelDelta;\n      }\n\n      if (d.wheelDelta) {\n        e = d.wheelDelta / 120;\n      } else {\n        if (d.detail) {\n          e = -d.detail / 3;\n        }\n      }\n\n      if (e) {\n        var b = c._handleDelta(e);\n\n        if (d.preventDefault) {\n          d.preventDefault();\n        }\n\n        if (d.originalEvent != null) {\n          d.originalEvent.mouseHandled = true;\n        }\n\n        if (d.stopPropagation != undefined) {\n          d.stopPropagation();\n        }\n\n        if (b) {\n          b = false;\n          d.returnValue = b;\n          return b;\n        } else {\n          return false;\n        }\n      }\n\n      if (d.preventDefault) {\n        d.preventDefault();\n      }\n\n      d.returnValue = false;\n    },\n    _handleDelta: function (b) {\n      if (b < 0) {\n        this.spinDown();\n      } else {\n        this.spinUp();\n      }\n\n      return true;\n    },\n    _addHandlers: function () {\n      var b = this;\n      this.addHandler(this.numberInput, \"paste\", function (g) {\n        var d = b._selection();\n\n        g.preventDefault();\n\n        if (g.originalEvent.clipboardData) {\n          var f = (g.originalEvent || g).clipboardData.getData(\"text/plain\");\n        } else {\n          if (window.clipboardData) {\n            var f = window.clipboardData.getData(\"Text\");\n          }\n        }\n\n        this.selectedText = f;\n        a.data(document.body, \"jqxSelection\", this.selectedText);\n\n        if (b.inputMode != \"simple\") {\n          b._pasteSelectedText();\n        } else {\n          b.val(f);\n        }\n\n        setTimeout(function () {\n          b._setSelectionStart(d.start);\n        });\n      });\n      this.addHandler(this.numberInput, \"mousedown\", function (d) {\n        return b._raiseEvent(2, d);\n      });\n\n      this._mousewheelfunc = this._mousewheelfunc || function (d) {\n        if (!b.editcell) {\n          b.wheel(d, b);\n          return false;\n        }\n      };\n\n      this.removeHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      this.addHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      var c = \"\";\n      this.addHandler(this.numberInput, \"focus\", function (d) {\n        a.data(b.numberInput, \"selectionstart\", b._selection().start);\n        b.host.addClass(b.toThemeProperty(\"jqx-fill-state-focus\"));\n\n        if (b.spincontainer) {\n          b.spincontainer.addClass(b.toThemeProperty(\"jqx-numberinput-focus\"));\n        }\n\n        c = b.numberInput.val();\n        b._savedValue = b.decimal;\n      });\n      this.addHandler(this.numberInput, \"blur\", function (e) {\n        if (b.inputMode == \"simple\") {\n          b._exitSimpleInputMode(e, b, false, c);\n        }\n\n        if (b.autoValidate) {\n          var f = parseFloat(b.decimal);\n          var d = b.getvalue(\"negative\");\n\n          if (d && b.decimal > 0) {\n            f = -parseFloat(b.decimal);\n          }\n\n          if (f > b.max) {\n            b._disableSetSelection = true;\n            b.setDecimal(b.max);\n            b._disableSetSelection = false;\n          }\n\n          if (f < b.min) {\n            b._disableSetSelection = true;\n            b.setDecimal(b.min);\n            b._disableSetSelection = false;\n          }\n        }\n\n        b.host.removeClass(b.toThemeProperty(\"jqx-fill-state-focus\"));\n\n        if (b.spincontainer) {\n          b.spincontainer.removeClass(b.toThemeProperty(\"jqx-numberinput-focus\"));\n        }\n\n        if (b.numberInput.val() != c) {\n          b._raiseEvent(7, e);\n\n          a.jqx.aria(b, \"aria-valuenow\", b.decimal);\n          b.element.value = b.decimal;\n        }\n\n        return true;\n      });\n      this.addHandler(this.numberInput, \"mouseup\", function (d) {\n        return b._raiseEvent(3, d);\n      });\n      this.addHandler(this.numberInput, \"keydown\", function (d) {\n        b.changeType = \"keyboard\";\n        return b._raiseEvent(4, d);\n      });\n      this.addHandler(this.numberInput, \"keyup\", function (d) {\n        return b._raiseEvent(5, d);\n      });\n      this.addHandler(this.numberInput, \"keypress\", function (d) {\n        return b._raiseEvent(6, d);\n      });\n    },\n    focus: function () {\n      try {\n        this.numberInput.focus();\n      } catch (b) {}\n    },\n    _removeHandlers: function () {\n      var b = this;\n      this.removeHandler(this.numberInput, \"mousedown\");\n      var c = a.jqx.mobile.isOperaMiniMobileBrowser();\n\n      if (c) {\n        this.removeHandler(a(document), \"click.\" + this.element.id, b._exitSimpleInputMode, b);\n      }\n\n      this.removeHandler(this.numberInput, \"paste\");\n      this.removeHandler(this.numberInput, \"focus\");\n      this.removeHandler(this.numberInput, \"blur\");\n      this.removeHandler(this.numberInput, \"mouseup\");\n      this.removeHandler(this.numberInput, \"keydown\");\n      this.removeHandler(this.numberInput, \"keyup\");\n      this.removeHandler(this.numberInput, \"keypress\");\n    },\n    _spinButtons: function () {\n      if (this.host.jqxRepeatButton) {\n        if (!this.numberInput) {\n          this.numberInput = a(\"<input autocomplete='off' style='border: none; position: relative; float: left;' type='textarea'/>\");\n          this.numberInput.appendTo(this.host);\n          this.numberInput.addClass(this.toThemeProperty(\"jqx-input-content\"));\n          this.numberInput.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n        } else {\n          this.numberInput.css(\"float\", \"left\");\n        }\n\n        if (this.spincontainer) {\n          if (this.upbutton) {\n            this.upbutton.jqxRepeatButton(\"destroy\");\n          }\n\n          if (this.downbutton) {\n            this.downbutton.jqxRepeatButton(\"destroy\");\n          }\n\n          this.spincontainer.remove();\n        }\n\n        this.spincontainer = a('<div style=\"float: right; height: 100%; overflow: hidden; position: relative;\"></div>');\n\n        if (this.rtl) {\n          this.spincontainer.css(\"float\", \"right\");\n          this.numberInput.css(\"float\", \"right\");\n          this.spincontainer.css(\"left\", \"-1px\");\n        }\n\n        this.host.append(this.spincontainer);\n        this.upbutton = a('<div style=\"overflow: hidden; padding: 0px; margin-left: -1px; position: relative;\"><div></div></div>');\n        this.spincontainer.append(this.upbutton);\n        this.upbutton.jqxRepeatButton({\n          overrideTheme: true,\n          disabled: this.disabled,\n          roundedCorners: \"top-right\"\n        });\n        this.downbutton = a('<div style=\"overflow: hidden; padding: 0px; margin-left: -1px; position: relative;\"><div></div></div>');\n        this.spincontainer.append(this.downbutton);\n        this.downbutton.jqxRepeatButton({\n          overrideTheme: true,\n          disabled: this.disabled,\n          roundedCorners: \"bottom-right\"\n        });\n\n        if (this.template) {\n          this.upbutton.addClass(this.toThemeProperty(\"jqx-\" + this.template));\n          this.downbutton.addClass(this.toThemeProperty(\"jqx-\" + this.template));\n        }\n\n        var d = this;\n        this.downbutton.addClass(this.toThemeProperty(\"jqx-fill-state-normal jqx-action-button\"));\n        this.upbutton.addClass(this.toThemeProperty(\"jqx-fill-state-normal jqx-action-button\"));\n        this.upbutton.addClass(this.toThemeProperty(\"jqx-rc-tr\"));\n        this.downbutton.addClass(this.toThemeProperty(\"jqx-rc-br\"));\n        this.addHandler(this.downbutton, \"mouseup\", function (e) {\n          if (!d.disabled) {\n            d.downbutton.removeClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n            d._downArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n          }\n        });\n        this.addHandler(this.upbutton, \"mouseup\", function (e) {\n          if (!d.disabled) {\n            d.upbutton.removeClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n            d._upArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n          }\n        });\n        this.removeHandler(a(document), \"mouseup.\" + this.element.id);\n        this.addHandler(a(document), \"mouseup.\" + this.element.id, function (e) {\n          d.upbutton.removeClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n          d._upArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n\n          d.downbutton.removeClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n          d._downArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n        });\n        this.addHandler(this.downbutton, \"mousedown\", function (e) {\n          if (!d.disabled) {\n            if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n              d._inputSelection = d._selection();\n            }\n\n            d.downbutton.addClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n            d._downArrow.addClass(d.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n          }\n        });\n        this.addHandler(this.upbutton, \"mousedown\", function (e) {\n          if (!d.disabled) {\n            if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n              d._inputSelection = d._selection();\n            }\n\n            d.upbutton.addClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n            d._upArrow.addClass(d.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n          }\n        });\n        this.addHandler(this.upbutton, \"mouseenter\", function (e) {\n          d.upbutton.addClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n\n          d._upArrow.addClass(d.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n        });\n        this.addHandler(this.upbutton, \"mouseleave\", function (e) {\n          d.upbutton.removeClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n\n          d._upArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n        });\n        this.addHandler(this.downbutton, \"mouseenter\", function (e) {\n          d.downbutton.addClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n\n          d._downArrow.addClass(d.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n        });\n        this.addHandler(this.downbutton, \"mouseleave\", function (e) {\n          d.downbutton.removeClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n\n          d._downArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n        });\n        this.upbutton.css(\"border-width\", \"0px\");\n        this.downbutton.css(\"border-width\", \"0px\");\n\n        if (this.disabled) {\n          this.upbutton[0].disabled = true;\n          this.downbutton[0].disabled = true;\n        } else {\n          this.upbutton[0].disabled = false;\n          this.downbutton[0].disabled = false;\n        }\n\n        this.spincontainer.addClass(this.toThemeProperty(\"jqx-input\"));\n        this.spincontainer.addClass(this.toThemeProperty(\"jqx-rc-r\"));\n        this.spincontainer.css(\"border-width\", \"0px\");\n\n        if (!this.rtl) {\n          this.spincontainer.css(\"border-left-width\", \"1px\");\n        } else {\n          this.spincontainer.css(\"border-right-width\", \"1px\");\n        }\n\n        this._upArrow = this.upbutton.find(\"div\");\n        this._downArrow = this.downbutton.find(\"div\");\n\n        this._upArrow.addClass(this.toThemeProperty(\"jqx-icon-arrow-up\"));\n\n        this._downArrow.addClass(this.toThemeProperty(\"jqx-icon-arrow-down\"));\n\n        this._upArrow.addClass(this.toThemeProperty(\"jqx-input-icon\"));\n\n        this._downArrow.addClass(this.toThemeProperty(\"jqx-input-icon\"));\n\n        var d = this;\n\n        this._upArrow.hover(function () {\n          if (!d.disabled) {\n            d._upArrow.addClass(d.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n          }\n        }, function () {\n          d._upArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n        });\n\n        this._downArrow.hover(function () {\n          if (!d.disabled) {\n            d._downArrow.addClass(d.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n          }\n        }, function () {\n          d._downArrow.removeClass(d.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n        });\n\n        var b = a.jqx.mobile.isTouchDevice();\n        var c = \"click\";\n\n        if (b) {\n          c = a.jqx.mobile.getTouchEventName(\"touchstart\");\n        }\n\n        if (b) {\n          this.addHandler(this.downbutton, \"click\", function (e) {\n            d.spinDown();\n          });\n          this.addHandler(this.upbutton, \"click\", function (e) {\n            d.spinUp();\n          });\n        }\n\n        this.addHandler(this.downbutton, c, function (e) {\n          if (!b) {\n            if (d._selection().start == 0) {\n              d._setSelectionStart(d.numberInput.val().length);\n            }\n\n            if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n              d._setSelectionStart(d._inputSelection.start);\n            }\n          } else {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n\n          d.spinDown();\n          return false;\n        });\n        this.addHandler(this.upbutton, c, function (e) {\n          if (!b) {\n            if (d._selection().start == 0) {\n              d._setSelectionStart(d.numberInput.val().length);\n            }\n\n            if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n              d._setSelectionStart(d._inputSelection.start);\n            }\n          } else {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n\n          d.spinUp();\n          return false;\n        });\n      } else {\n        throw new Error(\"jqxNumberInput: Missing reference to jqxbuttons.js.\");\n      }\n    },\n    spinDown: function () {\n      var m = this;\n      var l = this.decimal;\n\n      if (m.spinMode == \"none\") {\n        return;\n      }\n\n      if (this.decimal == null) {\n        this.setDecimal(0);\n        return;\n      }\n\n      var b = this.getvalue(\"negative\");\n      var q = b ? -1 : 0;\n\n      if (a.jqx.mobile.isTouchDevice() || this.inputMode == \"textbox\") {\n        m._doTouchHandling();\n      }\n\n      if (!m.disabled) {\n        var o = this._selection();\n\n        var n = this.decimal;\n        var j = this.getDecimal();\n\n        if (j < this.min) {\n          j = this.min;\n          this.setDecimal(this.min);\n\n          this._setSelectionStart(o.start);\n\n          this.spinDown();\n          return;\n        } else {\n          if (j > this.max) {\n            j = this.max;\n            this.setDecimal(this.max);\n\n            this._setSelectionStart(o.start);\n\n            this.spinDown();\n            return;\n          }\n        }\n\n        if (m.spinButtonsStep < 0) {\n          m.spinButtonsStep = 1;\n        }\n\n        var d = parseInt(m.decimal) - m.spinButtonsStep;\n        d = d.toString().length;\n        var f = q + d <= m.digits;\n\n        if (m.spinMode != \"advanced\") {\n          if (j - m.spinButtonsStep >= m.min && f) {\n            var s = 1;\n\n            for (g = 0; g < m.decimalDigits; g++) {\n              s = s * 10;\n            }\n\n            var e = s * j - s * m.spinButtonsStep;\n            e = e / s;\n            e = this._parseDecimalValueToEditorValue(e);\n            m.setDecimal(e);\n          }\n        } else {\n          var p = this._getspindecimal();\n\n          var k = this._getSeparatorPosition();\n\n          var j = parseFloat(p.decimal);\n\n          if (m.spinButtonsStep < 0) {\n            m.spinButtonsStep = 1;\n          }\n\n          var d = parseInt(j) - m.spinButtonsStep;\n          d = d.toString().length;\n          var f = q + d <= m.digits;\n          var s = 1;\n          var c = p.decimal.indexOf(\".\");\n\n          if (c != -1) {\n            var h = p.decimal.length - c - 1;\n            var s = 1;\n\n            for (var g = 0; g < h; g++) {\n              s = s * 10;\n            }\n\n            j -= new Number(m.spinButtonsStep / s);\n            j = j.toFixed(h);\n            var c = j.toString().indexOf(\".\");\n\n            if (c == -1) {\n              j = j.toString() + \".\";\n            }\n\n            var r = j.toString() + p.afterdecimal;\n            r = new Number(r);\n            r = r.toFixed(m.decimalDigits);\n\n            if (r >= m.min) {\n              r = this._parseDecimalValueToEditorValue(r);\n              m.setDecimal(r);\n            }\n          } else {\n            if (j - m.spinButtonsStep >= m.min && f) {\n              var e = s * j - s * m.spinButtonsStep;\n              e = e / s;\n              var r = e.toString() + p.afterdecimal;\n\n              if (r >= m.min) {\n                r = this._parseDecimalValueToEditorValue(r);\n                m.setDecimal(r);\n              }\n            }\n          }\n        }\n\n        if (r == undefined || this.inputMode != \"simple\") {\n          this._setSelectionStart(o.start);\n\n          m.savedValue = m.numberInput[0].value;\n\n          if (l != this.decimal) {\n            if (a.jqx.mobile.isTouchDevice()) {\n              this._raiseEvent(0, {});\n            }\n\n            this._raiseEvent(7, {});\n          }\n\n          a.jqx.aria(this, \"aria-valuenow\", this.decimal);\n          return;\n        }\n\n        r = this.decimal.toString();\n        var b = this.getvalue(\"negative\");\n\n        if (q == 0 && b) {\n          this._setSelectionStart(o.start + 1);\n        } else {\n          if (r != undefined && (n == undefined || n.toString().length == r.length)) {\n            this._setSelectionStart(o.start);\n          } else {\n            if (b) {\n              this._setSelectionStart(o.start + 1);\n            } else {\n              this._setSelectionStart(o.start - 1);\n            }\n          }\n        }\n\n        if (l != this.decimal) {\n          if (a.jqx.mobile.isTouchDevice()) {\n            this._raiseEvent(0, {});\n          }\n\n          this._raiseEvent(7, {});\n        }\n\n        a.jqx.aria(this, \"aria-valuenow\", this.decimal);\n      }\n    },\n    _getspindecimal: function () {\n      var n = this._selection();\n\n      var o = \"\";\n\n      var k = this._getSeparatorPosition();\n\n      var q = this._getVisibleItems();\n\n      var e = this._getHiddenPrefixCount();\n\n      var p = this.numberInput.val();\n\n      if (this.numberInput.val().length == n.start && n.length == 0) {\n        this._setSelection(n.start, n.start + 1);\n\n        n = this._selection();\n      }\n\n      var j = this.inputMode != \"advanced\";\n      var m = n.start;\n\n      if (m === 0) {\n        m++;\n      }\n\n      if (m === 1 && this.symbolPosition === \"left\" && this.symbol !== \"\") {\n        m += this.symbol.length;\n      }\n\n      for (var c = 0; c < m; c++) {\n        if (j) {\n          var l = p.substring(c, c + 1);\n          var h = !isNaN(parseInt(l));\n\n          if (h) {\n            o += l;\n          }\n\n          if (l == this.decimalSeparator) {\n            o += l;\n          }\n\n          continue;\n        }\n\n        if (q[c].canEdit && q[c].character != this.promptChar) {\n          o += q[c].character;\n        } else {\n          if (!q[c].canEdit && this.decimalSeparatorPosition != -1 && q[c] == q[this.decimalSeparatorPosition - e]) {\n            if (o.length == 0) {\n              o = \"0\";\n            }\n\n            o += q[c].character;\n          }\n        }\n      }\n\n      var g = \"\";\n\n      for (var c = m; c < q.length; c++) {\n        if (j) {\n          var l = p.substring(c, c + 1);\n          var h = !isNaN(parseInt(l));\n\n          if (h) {\n            g += l;\n          }\n\n          if (l == this.decimalSeparator) {\n            g += l;\n          }\n\n          continue;\n        }\n\n        if (q[c].canEdit && q[c].character != this.promptChar) {\n          g += q[c].character;\n        } else {\n          if (!q[c].canEdit && this.decimalSeparatorPosition != -1 && q[c] == q[this.decimalSeparatorPosition - e]) {\n            g += q[c].character;\n          }\n        }\n      }\n\n      var b = this.getvalue(\"negative\");\n      var f = b ? \"-\" + this._parseDecimalValue(o).toString() : this._parseDecimalValue(o).toString();\n      return {\n        decimal: f,\n        afterdecimal: this._parseDecimalValue(g)\n      };\n    },\n    _parseDecimalValue: function (c) {\n      if (this.decimalSeparator != \".\") {\n        var d = c.toString().indexOf(this.decimalSeparator);\n\n        if (d >= 0) {\n          var b = c.toString().substring(0, d) + \".\" + c.toString().substring(d + 1);\n          return b;\n        }\n      }\n\n      return c;\n    },\n    _parseDecimalValueToEditorValue: function (c) {\n      if (this.decimalSeparator != \".\") {\n        var d = c.toString().indexOf(\".\");\n\n        if (d >= 0) {\n          var b = c.toString().substring(0, d) + this.decimalSeparator + c.toString().substring(d + 1);\n          return b;\n        }\n      }\n\n      return c;\n    },\n    spinUp: function () {\n      var r = this;\n      var t = this.decimal;\n\n      if (r.spinMode == \"none\") {\n        return;\n      }\n\n      if (this.decimal == null) {\n        this.setDecimal(0);\n        return;\n      }\n\n      if (a.jqx.mobile.isTouchDevice() || this.inputMode == \"textbox\") {\n        r._doTouchHandling();\n      }\n\n      var l = this.getvalue(\"negative\");\n      var e = l ? -1 : 0;\n\n      if (!r.disabled) {\n        var s = this._selection();\n\n        var h = r.decimal;\n        var d = r.getDecimal();\n\n        if (d < this.min) {\n          d = this.min;\n          this.setDecimal(this.min);\n\n          this._setSelectionStart(s.start);\n\n          this.spinUp();\n          return;\n        } else {\n          if (d > this.max) {\n            d = this.max;\n            this.setDecimal(this.max);\n\n            this._setSelectionStart(s.start);\n\n            this.spinUp();\n            return;\n          }\n        }\n\n        if (r.spinButtonsStep < 0) {\n          r.spinButtonsStep = 1;\n        }\n\n        var n = parseInt(r.decimal) + r.spinButtonsStep;\n        n = n.toString().length;\n        var k = e + n <= r.digits;\n\n        if (r.spinMode != \"advanced\") {\n          if (d + r.spinButtonsStep <= r.max && k) {\n            var p = 1;\n\n            for (var o = 0; o < r.decimalDigits; o++) {\n              p = p * 10;\n            }\n\n            var g = p * d + p * r.spinButtonsStep;\n            g = g / p;\n            g = this._parseDecimalValueToEditorValue(g);\n            r.setDecimal(g);\n          }\n        } else {\n          var c = this._getspindecimal();\n\n          var f = this._getSeparatorPosition();\n\n          var d = parseFloat(c.decimal);\n\n          if (r.spinButtonsStep < 0) {\n            r.spinButtonsStep = 1;\n          }\n\n          var n = parseInt(d) + r.spinButtonsStep;\n          n = n.toString().length;\n          var k = e + n <= r.digits;\n          var p = 1;\n          var q = c.decimal.indexOf(\".\");\n\n          if (q != -1) {\n            var m = c.decimal.length - q - 1;\n            var p = 1;\n\n            for (var o = 0; o < m; o++) {\n              p = p * 10;\n            }\n\n            d += new Number(r.spinButtonsStep / p);\n            d = d.toFixed(m);\n            var q = d.toString().indexOf(\".\");\n\n            if (q == -1) {\n              d = d.toString() + \".\";\n            }\n\n            var j = d.toString() + c.afterdecimal;\n            j = new Number(j);\n            j = j.toFixed(r.decimalDigits);\n            var b = new Number(j).toFixed(r.decimalDigits);\n\n            if (b <= r.max) {\n              j = this._parseDecimalValueToEditorValue(j);\n              r.setDecimal(j);\n            } else {\n              j = undefined;\n            }\n          } else {\n            if (d + r.spinButtonsStep <= r.max && k) {\n              var g = p * d + p * r.spinButtonsStep;\n              g = g / p;\n              var j = g.toString() + c.afterdecimal;\n              var b = new Number(j).toFixed(r.decimalDigits);\n\n              if (b <= r.max) {\n                j = this._parseDecimalValueToEditorValue(j);\n\n                if (l && j.indexOf(\"-\") == -1) {\n                  if (c.decimal != \"-0\") {\n                    j = \"-\" + j;\n                  }\n                }\n\n                r.setDecimal(j);\n              } else {\n                j = undefined;\n              }\n            }\n          }\n        }\n\n        if (j == undefined || this.inputMode != \"simple\") {\n          this._setSelectionStart(s.start);\n\n          r.savedValue = r.numberInput[0].value;\n\n          if (t != this.decimal) {\n            if (a.jqx.mobile.isTouchDevice()) {\n              this._raiseEvent(0, {});\n            }\n\n            this._raiseEvent(7, {});\n          }\n\n          a.jqx.aria(this, \"aria-valuenow\", this.decimal);\n          return;\n        }\n\n        j = this.decimal.toString();\n        var l = this.getvalue(\"negative\");\n\n        if (e == -1 && !l) {\n          this._setSelectionStart(-1 + s.start);\n        } else {\n          if (j != undefined && (h == undefined || h.toString().length == j.length)) {\n            this._setSelectionStart(s.start);\n          } else {\n            if (l) {\n              this._setSelectionStart(s.start);\n            } else {\n              this._setSelectionStart(1 + s.start);\n            }\n          }\n        }\n\n        if (t != this.decimal) {\n          if (a.jqx.mobile.isTouchDevice()) {\n            this._raiseEvent(0, {});\n          }\n\n          this._raiseEvent(7, {});\n        }\n\n        a.jqx.aria(this, \"aria-valuenow\", this.decimal);\n      }\n    },\n    _exitSimpleInputMode: function (b, k, h, d) {\n      if (k == undefined) {\n        k = b.data;\n      }\n\n      if (k == null) {\n        return;\n      }\n\n      if (h == undefined) {\n        if (b.target != null && k.element != null) {\n          if (b.target.id != undefined && b.target.id.toString().length > 0 && k.host.find(\"#\" + b.target.id).length > 0 || b.target == k.element) {\n            return;\n          }\n        }\n\n        var f = k.host.offset();\n        var e = f.left;\n        var g = f.top;\n        var c = k.host.width();\n        var j = k.host.height();\n        var l = a(b.target).offset();\n\n        if (l.left >= e && l.left <= e + c) {\n          if (l.top >= g && l.top <= g + j) {\n            return;\n          }\n        }\n      }\n\n      if (a.jqx.mobile.isOperaMiniBrowser()) {\n        k.numberInput.attr(\"readonly\", true);\n      }\n\n      if (k.disabled || k.readOnly) {\n        return;\n      }\n\n      var i = a.data(k.numberInput, \"simpleInputMode\");\n\n      if (i == null) {\n        return;\n      }\n\n      a.data(k.numberInput, \"simpleInputMode\", null);\n\n      this._parseDecimalInSimpleMode();\n\n      return false;\n    },\n    _getDecimalInSimpleMode: function () {\n      var d = this.decimal;\n\n      if (this.decimalSeparator != \".\") {\n        var b = d.toString().indexOf(this.decimalSeparator);\n\n        if (b > 0) {\n          var c = d.toString().substring(0, b);\n          var d = c + \".\" + d.toString().substring(b + 1);\n        }\n      }\n\n      return d;\n    },\n    _parseDecimalInSimpleMode: function (d) {\n      var k = this;\n      var b = k.getvalue(\"negative\");\n      var e = this.ValueString;\n\n      if (e == undefined) {\n        e = this.GetValueString(this.numberInput.val(), this.decimalSeparator, this.decimalSeparator != \"\");\n      }\n\n      if (this.decimalSeparator != \".\") {\n        var g = e.toString().indexOf(\".\");\n\n        if (g > 0) {\n          var f = e.toString().substring(0, g);\n          var c = f + this.decimalSeparator + e.toString().substring(g + 1);\n          e = c;\n        }\n      }\n\n      var h = b ? \"-\" : \"\";\n\n      if (this.symbolPosition == \"left\") {\n        h += this.symbol;\n      }\n\n      var i = this.digits % this.groupSize;\n\n      if (i == 0) {\n        i = this.groupSize;\n      }\n\n      var j = e.toString();\n\n      if (j.indexOf(\"-\") >= 0) {\n        j = j.substring(j.indexOf(\"-\") + 1);\n      }\n\n      h += j;\n\n      if (this.symbolPosition == \"right\") {\n        h += this.symbol;\n      }\n\n      if (d != false) {\n        k.numberInput.val(h);\n      }\n    },\n    _enterSimpleInputMode: function (f, d) {\n      if (d == undefined) {\n        d = f.data;\n      }\n\n      var e = this._selection();\n\n      if (d == null) {\n        return;\n      }\n\n      var c = d.getvalue(\"negative\");\n      var b = d.decimal;\n\n      if (c) {\n        if (b > 0) {\n          b = -b;\n        }\n      }\n\n      d.numberInput.val(b);\n      a.data(d.numberInput, \"simpleInputMode\", true);\n\n      if (a.jqx.mobile.isOperaMiniBrowser()) {\n        d.numberInput.attr(\"readonly\", false);\n      }\n\n      this._parseDecimalInSimpleMode();\n\n      this._setSelectionStart(e.start);\n    },\n    setvalue: function (b, c) {\n      if (this[b] !== undefined) {\n        if (b == \"decimal\") {\n          this._setDecimal(c);\n        } else {\n          this[b] = c;\n          this.propertyChangedHandler(this, b, c, c);\n        }\n      }\n    },\n    getvalue: function (b) {\n      if (b == \"decimal\") {\n        if (this.negative != undefined && this.negative == true) {\n          if (this.decimal.toString().indexOf(\",\")) {\n            return -Math.abs(this.decimal.toString().replace(/,/, \".\"));\n          }\n\n          return -Math.abs(this[b]);\n        }\n      }\n\n      if (b in this) {\n        return this[b];\n      }\n\n      return null;\n    },\n    _getString: function () {\n      var c = \"\";\n\n      for (var b = 0; b < this.items.length; b++) {\n        var d = this.items[b].character;\n        c += d;\n      }\n\n      return c;\n    },\n    _literal: function (d, b, c, e) {\n      return {\n        character: d,\n        regex: b,\n        canEdit: c,\n        isSeparator: e\n      };\n    },\n    _initializeLiterals: function () {\n      if (this.inputMode == \"textbox\") {\n        return;\n      }\n\n      var h = 0;\n      var e = this.negativeSymbol.length;\n\n      for (var d = 0; d < e; d++) {\n        var g = this.negativeSymbol.substring(d, d + 1);\n        var k = \"\";\n        var b = false;\n        var l = null;\n\n        if (this.negative) {\n          l = this._literal(g, k, b, false);\n        } else {\n          l = this._literal(\"\", k, b, false);\n        }\n\n        this.items[h] = l;\n        h++;\n      }\n\n      var c = this.symbol.length;\n\n      if (this.symbolPosition == \"left\") {\n        for (d = 0; d < c; d++) {\n          var g = this.symbol.substring(d, d + 1);\n          var k = \"\";\n          var b = false;\n\n          var l = this._literal(g, k, b, false);\n\n          this.items[h] = l;\n          h++;\n        }\n      }\n\n      var f = this.digits % this.groupSize;\n\n      if (f == 0) {\n        f = this.groupSize;\n      }\n\n      for (var d = 0; d < this.digits; d++) {\n        var g = this.promptChar;\n        var k = \"\\\\d\";\n        var b = true;\n\n        var l = this._literal(g, k, b, false);\n\n        this.items[h] = l;\n        h++;\n\n        if (d < this.digits - 1 && this.groupSeparator != undefined && this.groupSeparator.length > 0) {\n          f--;\n\n          if (f == 0) {\n            f = this.groupSize;\n\n            var j = this._literal(this.groupSeparator, \"\", false, false);\n\n            this.items[h] = j;\n            h++;\n          }\n        } else {\n          if (d == this.digits - 1) {\n            l.character = 0;\n          }\n        }\n      }\n\n      this.decimalSeparatorPosition = -1;\n\n      if (this.decimalDigits != undefined && this.decimalDigits > 0) {\n        var g = this.decimalSeparator;\n\n        if (g.length == 0) {\n          g = \".\";\n        }\n\n        var l = this._literal(g, \"\", false, true);\n\n        this.items[h] = l;\n        this.decimalSeparatorPosition = h;\n        h++;\n\n        for (var d = 0; d < this.decimalDigits; d++) {\n          var n = 0;\n          var k = \"\\\\d\";\n\n          var m = this._literal(n, k, true, false);\n\n          this.items[h] = m;\n          h++;\n        }\n      }\n\n      if (this.symbolPosition == \"right\") {\n        for (var d = 0; d < c; d++) {\n          var g = this.symbol.substring(d, d + 1);\n          var k = \"\";\n          var b = false;\n\n          var l = this._literal(g, k, b);\n\n          this.items[h] = l;\n          h++;\n        }\n      }\n    },\n    _match: function (c, b) {\n      var d = new RegExp(b, \"i\");\n      return d.test(c);\n    },\n    _raiseEvent: function (m, d) {\n      var k = this.events[m];\n      var c = {};\n      c.owner = this;\n\n      if (this.host.css(\"display\") == \"none\") {\n        return true;\n      }\n\n      var s = d.charCode ? d.charCode : d.keyCode ? d.keyCode : 0;\n      var f = true;\n      var h = this.readOnly;\n      var q = this;\n\n      if (m == 3 || m == 2) {\n        if (!this.disabled) {\n          if (this.inputMode != \"simple\" && this.inputMode != \"textbox\") {\n            this._handleMouse(d);\n          } else {\n            return true;\n          }\n        }\n      }\n\n      if (m == 0) {\n        var g = this.getvalue(\"decimal\");\n\n        if (this.max < g || this.min > g) {\n          this.host.addClass(this.toThemeProperty(\"jqx-input-invalid\"));\n        } else {\n          this.host.removeClass(this.toThemeProperty(\"jqx-input-invalid\"));\n          this.host.addClass(this.toThemeProperty(\"jqx-input\"));\n          this.host.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n        }\n      }\n\n      var n = new a.Event(k);\n      n.owner = this;\n      c.value = this.getvalue(\"decimal\");\n      c.text = this.numberInput.val();\n      n.args = c;\n\n      if (m == 7) {\n        c.type = this.changeType;\n        this.changeType = null;\n      }\n\n      if (k != undefined) {\n        if (m != 4 && m != 5 && m != 6) {\n          f = this.host.trigger(n);\n        }\n      }\n\n      var q = this;\n\n      if (this.inputMode == \"textbox\") {\n        return f;\n      }\n\n      if (this.inputMode != \"simple\") {\n        if (m == 4) {\n          if (h || this.disabled) {\n            return false;\n          }\n\n          f = q._handleKeyDown(d, s);\n        } else {\n          if (m == 5) {\n            if (h || this.disabled) {\n              f = false;\n            }\n          } else {\n            if (m == 6) {\n              if (h || this.disabled) {\n                return false;\n              }\n\n              f = q._handleKeyPress(d, s);\n            }\n          }\n        }\n      } else {\n        if (m == 4 || m == 5 || m == 6) {\n          if (a.jqx.mobile.isTouchDevice() || this.touchMode === true) {\n            return true;\n          }\n\n          if (h || this.disabled) {\n            return false;\n          }\n\n          var r = String.fromCharCode(s);\n          var l = parseInt(r);\n          var o = true;\n\n          if (!d.ctrlKey && !d.shiftKey && !d.metaKey) {\n            if (s >= 65 && s <= 90) {\n              o = false;\n            }\n          }\n\n          if (m == 6 && a.jqx.browser.opera != undefined) {\n            if (s == 8) {\n              return false;\n            }\n          }\n\n          if (o) {\n            if (m == 4) {\n              o = q._handleSimpleKeyDown(d, s);\n            }\n\n            if (s == 107) {\n              var i = q.getvalue(\"negative\");\n\n              if (i) {\n                q.setvalue(\"negative\", false);\n                q.decimal = q.ValueString;\n\n                q._parseDecimalInSimpleMode();\n\n                q._setSelectionStart(t.start + 1);\n\n                q._raiseEvent(0, q.value);\n\n                q._raiseEvent(1, q.numberInput.val());\n              }\n            }\n\n            if (s == 189 || s == 45 || s == 109 || s == 173) {\n              var t = q._selection();\n\n              if (m == 4) {\n                var i = q.getvalue(\"negative\");\n\n                if (i == false) {\n                  q.setvalue(\"negative\", true);\n                } else {\n                  q.setvalue(\"negative\", false);\n                }\n\n                q.decimal = q.ValueString;\n\n                q._parseDecimalInSimpleMode();\n\n                if (!i) {\n                  q._setSelectionStart(t.start + 1);\n                } else {\n                  q._setSelectionStart(t.start - 1);\n                }\n\n                o = false;\n\n                q._raiseEvent(0, q.value);\n\n                q._raiseEvent(1, q.numberInput.val());\n              }\n            }\n\n            var b = c.ctrlKey || c.metaKey;\n\n            if (!a.jqx.browser.msie) {\n              var p = d;\n\n              if (b && s == 99 || b && s == 67 || b && s == 122 || b && s == 90 || b && s == 118 || b && s == 86 || p.shiftKey && s == 45) {\n                if (a.jqx.browser.webkit || a.jqx.browser.chrome) {\n                  q._handleSimpleKeyDown(d, s);\n                }\n\n                if (s == 67) {\n                  return true;\n                }\n\n                return false;\n              }\n            }\n\n            if (b && s == 97 || b && s == 65) {\n              return true;\n            }\n\n            if (m == 6 && o) {\n              var j = this._isSpecialKey(s);\n\n              return j;\n            }\n          }\n\n          return o;\n        }\n      }\n\n      return f;\n    },\n    GetSelectionInValue: function (j, h, g, f) {\n      var c = 0;\n\n      for (var d = 0; d < h.length; d++) {\n        if (d >= j) {\n          break;\n        }\n\n        var e = h.substring(d, d + 1);\n        var b = !isNaN(parseInt(e));\n\n        if (b || f && h.substring(d, d + 1) == g) {\n          c++;\n        }\n      }\n\n      return c;\n    },\n    GetSelectionLengthInValue: function (h, j, g, f) {\n      var c = 0;\n\n      for (var d = 0; d < g.length; d++) {\n        if (d >= h + j) {\n          break;\n        }\n\n        var e = g.substring(d, d + 1);\n        var b = !isNaN(parseInt(e));\n\n        if (j > 0 && d >= h && b || d >= h && g[d].toString() == f) {\n          c++;\n        }\n      }\n\n      return c;\n    },\n    GetInsertTypeByPositionInValue: function (e, g, h, f) {\n      var c = \"before\";\n      var b = this.GetValueString(h, g, f);\n      var d = this.GetDigitsToSeparator(0, b, g);\n\n      if (e > d) {\n        c = \"after\";\n      }\n\n      return c;\n    },\n    RemoveRange: function (f, e, m, g, s, b) {\n      var h = this.digits;\n      var n = f;\n      var t = e;\n      var c = 0;\n      var o = this.decimal;\n\n      var x = this._selection();\n\n      var g = this.decimalSeparator;\n      var j = g != \"\";\n\n      if (t == 0 && this.ValueString.length < this.decimalPossibleChars - 1) {\n        return c;\n      }\n\n      var u = this.GetSeparatorPositionInText(g, m);\n\n      if (!s) {\n        u = this.GetSeparatorPositionInText(g, m);\n      }\n\n      if (u < 0 && !j && m.length > 1) {\n        u = m.length;\n      }\n\n      if (u == -1) {\n        u = m.length;\n      }\n\n      var d = j ? 1 : 0;\n\n      if (e < 2 && b == true) {\n        var w = this.ValueString.length - this.decimalDigits - d;\n\n        if (w == h && f + e < u) {\n          t++;\n        }\n      }\n\n      var k = \"\";\n\n      for (var r = 0; r < m.length; r++) {\n        if (r < n || r >= n + t) {\n          k += m.substring(r, r + 1);\n          continue;\n        } else {\n          var q = m.substring(r, r + 1);\n\n          if (q == g) {\n            k += g;\n            continue;\n          } else {\n            var q = m.substring(r, r + 1);\n\n            if (this.symbol && this.symbol != \"\" && this.symbol.indexOf(q) >= 0) {\n              continue;\n            }\n\n            if (r > u) {\n              k += \"0\";\n              continue;\n            }\n          }\n        }\n\n        var q = m.substring(r, r + 1);\n        var p = !isNaN(parseInt(q));\n\n        if (p) {\n          c++;\n        }\n      }\n\n      if (k.length == 0) {\n        k = \"0\";\n      }\n\n      if (s) {\n        this.numberInput.val(k);\n      } else {\n        this.ValueString = k;\n      }\n\n      var l = k.substring(0, 1);\n\n      if (l == g && isNaN(parseInt(l))) {\n        var v = \"0\" + k;\n        k = v;\n      }\n\n      this.ValueString = this.GetValueString(k, g, j);\n      this.decimal = this.ValueString;\n\n      this._parseDecimalInSimpleMode();\n\n      this._setSelectionStart(n);\n\n      return c;\n    },\n    InsertDigit: function (q, w) {\n      if (typeof this.digits != \"number\") {\n        this.digits = parseInt(this.digits);\n      }\n\n      if (typeof this.decimalDigits != \"number\") {\n        this.decimalDigits = parseInt(this.decimalDigits);\n      }\n\n      var i = 1 + this.digits;\n\n      var x = this._selection();\n\n      var l = this.getvalue(\"negative\");\n      var d = false;\n\n      if (x.start == 0 && this.symbol != \"\" && this.symbolPosition == \"left\") {\n        this._setSelectionStart(x.start + 1);\n\n        x = this._selection();\n        d = true;\n      }\n\n      if (l && d || l && !d && x.start == 0) {\n        this._setSelectionStart(x.start + 1);\n\n        x = this._selection();\n      }\n\n      var u = this.numberInput.val().substring(x.start, x.start + 1);\n      var n = this.numberInput.val();\n      var g = this.decimalSeparator;\n      var j = g != \"\" && this.decimalDigits > 0;\n\n      if (u == this.symbol && this.symbolPosition == \"right\") {\n        if (this.decimalDigits == 0) {\n          this.ValueString = this.GetValueString(n, g, j);\n\n          if (this.ValueString.length >= i) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n\n      this.ValueString = this.GetValueString(n, g, j);\n\n      if (this.ValueString == \"\") {\n        this.ValueString = new Number(0).toFixed(this.decimalDigits);\n      }\n\n      var t = this.ValueString;\n\n      if (this.decimalDigits > 0 && w >= t.length) {\n        w = t.length - 1;\n      }\n\n      var o = \"\";\n\n      if (w < t.length) {\n        o = t.substring(w, w + 1);\n      }\n\n      var h = false;\n      var v = false;\n      var e = this.GetInsertTypeByPositionInValue(w, g, n, j);\n\n      if (e == \"after\") {\n        h = true;\n      }\n\n      var b = j ? 1 : 0;\n\n      if (o != g && this.ValueString.length - this.decimalDigits - b >= i - 1) {\n        h = true;\n      }\n\n      if (o === \"0\" && this.ValueString.length === 1 && this.decimalDigits === 0) {\n        h = true;\n      }\n\n      var p = false;\n      var r = j ? 1 : 0;\n\n      if (!h && this.ValueString && this.ValueString.length >= this.digits + this.decimalDigits + r) {\n        return;\n      }\n\n      if (h && o != g) {\n        if (p) {\n          w++;\n        }\n\n        var m = t.substring(0, w);\n\n        if (m.length == t.length) {\n          if (this.ValueString.length >= this.digits + this.decimalDigits + r) {\n            return;\n          }\n        }\n\n        var s = q;\n        var c = \"\";\n\n        if (w + 1 < t.length) {\n          c = t.substring(w + 1);\n        }\n\n        var k = m + s + c;\n        this.ValueString = k;\n      } else {\n        var m = t.substring(0, w);\n        var s = q;\n        var c = t.substring(w);\n        var k = m + s + c;\n\n        if (t.substring(0, 1) == \"0\" && t.substring(1, 2) == g) {\n          k = s + t.substring(1);\n\n          if (o == g) {\n            this._setSelectionStart(x.start - 1);\n\n            x = this._selection();\n          }\n        }\n\n        this.ValueString = k;\n      }\n\n      if (l) {\n        this.decimal = -this.ValueString;\n      } else {\n        this.decimal = this.ValueString;\n      }\n\n      this._parseDecimalInSimpleMode();\n\n      var f = x.start;\n      f += 1;\n\n      this._setSelectionStart(f);\n\n      this.value = this.decimal;\n\n      this._raiseEvent(0, this.value);\n\n      this._raiseEvent(1, this.numberInput.val());\n    },\n    GetStringToSeparator: function (h, f, e) {\n      var d = \"\";\n      var b = f;\n      var g = this.GetSeparatorPositionInText(f, h);\n      var c = h.subString(0, g);\n      d = this.GetValueString(c, f, e);\n      return d;\n    },\n    GetSeparatorPositionInText: function (d, e) {\n      var c = -1;\n\n      for (var b = 0; b < e.length; b++) {\n        if (e.substring(b, b + 1) == d) {\n          c = b;\n          break;\n        }\n      }\n\n      return c;\n    },\n    GetValueString: function (h, g, f) {\n      var d = \"\";\n\n      for (var c = 0; c < h.length; c++) {\n        var e = h.substring(c, c + 1);\n        var b = !isNaN(parseInt(e));\n\n        if (b) {\n          d += e;\n        }\n\n        if (e == g) {\n          d += g;\n        }\n      }\n\n      return d;\n    },\n    Backspace: function () {\n      var d = this._selection();\n\n      var e = this._selection();\n\n      var f = this.numberInput.val();\n\n      if (d.start == 0 && d.length == 0) {\n        return;\n      }\n\n      this.isBackSpace = true;\n      var c = f.substring[(d.start, d.start + 1)];\n      var b = !isNaN(parseInt(c));\n\n      if (d.start > 0 && d.length == 0) {\n        this._setSelectionStart(d.start - 1);\n\n        var d = this._selection();\n      }\n\n      this.Delete();\n\n      this._setSelectionStart(e.start - 1);\n\n      this.isBackSpace = false;\n    },\n    Delete: function (c) {\n      var e = this._selection();\n\n      var h = this.numberInput.val();\n\n      if (e.start === 0 && h.substring(0, 1) == \"-\") {\n        this.setvalue(\"negative\", false);\n\n        var e = this._selection();\n\n        var h = this.numberInput.val();\n      }\n\n      var f = e.start;\n      var i = e.length;\n      i = Math.max(i, 1);\n      this.ValueString = this.GetValueString(h, this.decimalSeparator, this.decimalSeparator != \"\");\n\n      if (f > this.ValueString.indexOf(this.decimalSeparator) && this.decimalDigits > 0) {\n        f++;\n      }\n\n      var g = 0;\n\n      if (this.symbol) {\n        if (this.symbolPosition == \"left\") {\n          g--;\n        }\n\n        if (this.negative) {\n          g--;\n        }\n      }\n\n      this.RemoveRange(e.start + g, i, this.ValueString, \".\", false);\n      var d = this.ValueString.substring(0, 1);\n      var b = !isNaN(parseInt(d));\n\n      if (!b) {\n        this.ValueString = \"0\" + this.ValueString;\n      }\n\n      this.decimal = this.ValueString;\n\n      this._parseDecimalInSimpleMode();\n\n      this._setSelectionStart(f);\n\n      this.value = this.decimal;\n\n      this._raiseEvent(0, this.value);\n\n      this._raiseEvent(1, this.numberInput.val());\n    },\n    insertsimple: function (d) {\n      var i = this._selection();\n\n      var j = this.numberInput.val();\n\n      if (i.start == j.length && this.decimal != null && this.decimalDigits > 0) {\n        return;\n      }\n\n      var b = this.decimal;\n      var g = this.decimalSeparator;\n      this.ValueString = this.GetValueString(j, g, g != \"\");\n      var h = this.GetSelectionInValue(i.start, j, g, g != \"\");\n      var e = this.GetSelectionLengthInValue(i.start, i.length, j, g);\n      var f = this.GetDigitsToSeparator(0, this.ValueString, g);\n      var c = false;\n\n      if (this.decimalDigits > 0 && h >= this.ValueString.length) {\n        h--;\n      }\n\n      if (this.ValueString == \"\") {\n        this.ValueString = new Number(0).toFixed(this.decimalDigits);\n        this.ValueString = this.ValueString.replace(\".\", g);\n        this.RemoveRange(i.start, e, this.ValueString, g, false, true);\n        this.InsertDigit(d, 0, i);\n        return;\n      }\n\n      this.RemoveRange(i.start, e, this.ValueString, g, false, true);\n      this.InsertDigit(d, h, i);\n    },\n    GetDigitsToSeparator: function (d, b, e) {\n      if (e == undefined) {\n        e = \".\";\n      }\n\n      if (b.indexOf(e) < 0) {\n        return b.length;\n      }\n\n      for (var c = 0; c < b.length; c++) {\n        if (b.substring(c, c + 1) == e) {\n          d = c;\n          break;\n        }\n      }\n\n      return d;\n    },\n    _handleSimpleKeyDown: function (k, r) {\n      var q = this._selection();\n\n      var b = k.ctrlKey || k.metaKey;\n\n      if ((r == 8 || r == 46) && b) {\n        this.setDecimal(null);\n        return false;\n      }\n\n      if (q.start >= 0 && q.start < this.items.length) {\n        var d = String.fromCharCode(r);\n      }\n\n      if (r === 27) {\n        this.setDecimal(this._savedValue);\n        var j = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val());\n\n        if (j != -1) {\n          this._setSelectionStart(j);\n        }\n\n        k.preventDefault();\n      }\n\n      if (this.rtl && r == 37) {\n        var c = k.shiftKey;\n        var g = c ? 1 : 0;\n\n        if (c) {\n          this._setSelection(q.start + 1 - g, q.start + q.length + 1);\n        } else {\n          this._setSelection(q.start + 1 - g, q.start + 1);\n        }\n\n        return false;\n      } else {\n        if (this.rtl && r == 39) {\n          var c = k.shiftKey;\n          var g = c ? 1 : 0;\n\n          if (c) {\n            this._setSelection(q.start - 1, q.length + g + q.start - 1);\n          } else {\n            this._setSelection(q.start - 1, q.start - 1);\n          }\n\n          return false;\n        }\n      }\n\n      if (r == 8) {\n        this.Backspace();\n        return false;\n      }\n\n      if (r == 190 || r == 110) {\n        var j = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val());\n\n        if (j != -1) {\n          this._setSelectionStart(j + 1);\n        }\n\n        return false;\n      }\n\n      if (r == 188) {\n        var p = this.numberInput.val();\n\n        for (h = q.start; h < p.length; h++) {\n          if (p[h] == this.groupSeparator) {\n            this._setSelectionStart(1 + h);\n\n            break;\n          }\n        }\n\n        return false;\n      }\n\n      var b = k.ctrlKey || k.metaKey;\n\n      if (b && r == 99 || b && r == 67) {\n        var q = this._selection();\n\n        var s = \"\";\n        var o = this.numberInput.val();\n\n        if (q.start > 0 || q.length > 0) {\n          for (var h = q.start; h < q.end; h++) {\n            s += o.substring(h, h + 1);\n          }\n        }\n\n        a.data(document.body, \"jqxSelection\", s);\n\n        if (a.jqx.browser.msie) {\n          window.clipboardData.setData(\"Text\", s);\n        } else {\n          var l = this;\n          var f = a('<textarea style=\"position: absolute; left: -1000px; top: -1000px;\"/>');\n          f.val(s);\n          a(\"body\").append(f);\n          f.select();\n          setTimeout(function () {\n            document.designMode = \"off\";\n            f.select();\n            f.remove();\n            l.focus();\n          }, 100);\n        }\n\n        this.savedText = s;\n        return true;\n      }\n\n      if (b && r == 122 || b && r == 90) {\n        return false;\n      }\n\n      if (b && r == 118 || b && r == 86 || k.shiftKey && r == 45) {\n        if (a.jqx.browser.msie && !this.savedText) {\n          this.savedText = window.clipboardData.getData(\"Text\");\n        }\n\n        if (this.savedText != null && this.savedText.length > 0) {\n          this.val(this.savedText);\n        } else {\n          this.val(a.data(document.body, \"jqxSelection\"));\n        }\n\n        return false;\n      }\n\n      var d = String.fromCharCode(r);\n      var m = parseInt(d);\n\n      if (r >= 96 && r <= 105) {\n        m = r - 96;\n        r = r - 48;\n      }\n\n      if (!isNaN(m)) {\n        var l = this;\n        this.insertsimple(m);\n        return false;\n      }\n\n      if (r == 46) {\n        this.Delete();\n        return false;\n      }\n\n      if (r == 38) {\n        this.spinUp();\n        return false;\n      } else {\n        if (r == 40) {\n          this.spinDown();\n          return false;\n        }\n      }\n\n      var n = this._isSpecialKey(r);\n\n      if (!a.jqx.browser.mozilla) {\n        return true;\n      }\n\n      return n;\n    },\n    _getEditRange: function () {\n      var d = 0;\n      var b = 0;\n\n      for (var c = 0; c < this.items.length; c++) {\n        if (this.items[c].canEdit) {\n          d = c;\n          break;\n        }\n      }\n\n      for (c = this.items.length - 1; c >= 0; c--) {\n        if (this.items[c].canEdit) {\n          b = c;\n          break;\n        }\n      }\n\n      return {\n        start: d,\n        end: b\n      };\n    },\n    _getVisibleItems: function () {\n      var b = new Array();\n      var c = 0;\n\n      for (var d = 0; d < this.items.length; d++) {\n        if (this.items[d].character.toString().length > 0) {\n          b[c] = this.items[d];\n          c++;\n        }\n      }\n\n      return b;\n    },\n    _hasEmptyVisibleItems: function () {\n      var b = this._getVisibleItems();\n\n      for (var c = 0; c < b.length; c++) {\n        if (b[c].canEdit && b[c].character == this.promptChar) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    _getFirstVisibleNonEmptyIndex: function () {\n      var b = this._getVisibleItems();\n\n      for (var c = 0; c < b.length; c++) {\n        if (b[c].canEdit && b[c].character != this.promptChar) {\n          return c;\n        }\n      }\n    },\n    _handleMouse: function (f, b) {\n      var d = this._selection();\n\n      if (d.length <= 1) {\n        var c = this._getFirstVisibleNonEmptyIndex();\n\n        if (d.start < c) {\n          this._setSelectionStart(c);\n        }\n      }\n    },\n    _insertKey: function (k) {\n      this.numberInput[0].focus();\n      var d = String.fromCharCode(k);\n      var e = parseInt(d);\n\n      if (isNaN(e)) {\n        return;\n      }\n\n      var n = 0;\n\n      for (var f = 0; f < this.items.length; f++) {\n        if (this.items[f].character.length == 0) {\n          n++;\n        }\n      }\n\n      var j = this._selection();\n\n      var b = this;\n\n      if (j.start >= 0 && j.start <= this.items.length) {\n        var g = false;\n\n        var h = this._getFirstVisibleNonEmptyIndex();\n\n        if (j.start < h && j.length == 0) {\n          if (!isNaN(d) || d == \" \") {\n            this._setSelectionStart(h);\n\n            j = this._selection();\n          }\n        }\n\n        var c = this._getFirstEditableItemIndex();\n\n        var m = this._getLastEditableItemIndex();\n\n        if (this.value === null) {\n          c = m = 0;\n        }\n\n        var l = this._getVisibleItems();\n\n        a.each(l, function (x, B) {\n          if (j.start > x && x != l.length - 1) {\n            return;\n          }\n\n          var E = l[x];\n\n          if (x > m) {\n            E = l[m];\n          }\n\n          if (isNaN(d) || d == \" \" || d == \"\" || !E) {\n            return;\n          }\n\n          if (!E.canEdit) {\n            return;\n          }\n\n          var A = b._getSeparatorPosition();\n\n          if (b._match(d, E.regex)) {\n            if (!g && j.length > 0) {\n              for (var w = j.start + n; w < j.end + n; w++) {\n                if (b.items[w].canEdit) {\n                  if (w > A) {\n                    b.items[w].character = \"0\";\n                  } else {\n                    b.items[w].character = b.promptChar;\n                  }\n                }\n              }\n\n              var D = b._getString();\n\n              g = true;\n            }\n\n            var A = b._getSeparatorPosition();\n\n            var y = b._hasEmptyVisibleItems();\n\n            if (b.decimal == null) {\n              j.start = A - 1;\n\n              if (j.start < 0) {\n                j.start = 0;\n              }\n\n              j.end = j.start;\n            }\n\n            if (j.start <= A && y) {\n              var u = x;\n\n              if (b.decimalSeparatorPosition == -1 && j.start == A) {\n                u = x + 1;\n              }\n\n              if (b.decimal == null) {\n                u = j.start;\n              }\n\n              var t = \"\";\n\n              for (var r = 0; r < u; r++) {\n                if (l[r].canEdit && l[r].character != b.promptChar) {\n                  t += l[r].character;\n                }\n              }\n\n              t += d;\n              var v = b.decimal < 1 ? 1 : 0;\n\n              if (j.start == A && b.decimalSeparatorPosition != -1) {\n                t += b.decimalSeparator;\n                v = 0;\n              }\n\n              for (var r = u + v; r < l.length; r++) {\n                if (l[r].character == b.decimalSeparator && l[r].isSeparator) {\n                  t += l[r].character;\n                } else {\n                  if (l[r].canEdit && l[r].character != b.promptChar) {\n                    t += l[r].character;\n                  }\n                }\n              }\n\n              if (b.decimalSeparator != \".\") {\n                t = b._parseDecimalValue(t);\n              }\n\n              t = parseFloat(t).toString();\n              t = new Number(t);\n              t = t.toFixed(b.decimalDigits);\n\n              if (b.decimalSeparator != \".\") {\n                t = b._parseDecimalValueToEditorValue(t);\n              }\n\n              b.setvalue(\"decimal\", t);\n\n              var D = b._getString();\n\n              if (j.end < A) {\n                b._setSelectionStart(j.end + v);\n              } else {\n                b._setSelectionStart(j.end);\n              }\n\n              if (j.length >= 1) {\n                b._setSelectionStart(j.end);\n              }\n\n              if (j.length == b.numberInput.val().length) {\n                var o = b._moveCaretToDecimalSeparator();\n\n                var C = b.decimalSeparatorPosition >= 0 ? 1 : 0;\n\n                b._setSelectionStart(o - C);\n              }\n            } else {\n              if (j.start < A || j.start > A) {\n                if (b.numberInput.val().length == j.start && b.decimalSeparatorPosition != -1) {\n                  return false;\n                } else {\n                  if (b.numberInput.val().length == j.start && b.decimalSeparatorPosition == -1 && !y) {\n                    return false;\n                  }\n                }\n\n                var t = \"\";\n                var q = false;\n\n                for (var r = 0; r < x; r++) {\n                  if (l[r].canEdit && l[r].character != b.promptChar) {\n                    t += l[r].character;\n                  }\n\n                  if (l[r].character == b.decimalSeparator && l[r].isSeparator) {\n                    t += l[r].character;\n                    q = true;\n                  }\n                }\n\n                t += d;\n                var v = b.decimal < 1 ? 1 : 0;\n\n                if (!q && j.start == A - 1) {\n                  t += b.decimalSeparator;\n                  q = true;\n                }\n\n                for (var r = x + 1; r < l.length; r++) {\n                  if (!q && l[r].character == b.decimalSeparator && l[r].isSeparator) {\n                    t += l[r].character;\n                  } else {\n                    if (l[r].canEdit && l[r].character != b.promptChar) {\n                      t += l[r].character;\n                    }\n                  }\n                }\n\n                b.setvalue(\"decimal\", t);\n\n                var D = b._getString();\n\n                if (b.decimalSeparatorPosition < 0 && E == l[m]) {\n                  b._setSelectionStart(x);\n\n                  return false;\n                }\n\n                var z = D.indexOf(b.symbol);\n                var s = !b.getvalue(\"negative\") ? 0 : 1;\n\n                if (z <= s) {\n                  z = D.length;\n                }\n\n                if (j.start < z) {\n                  b._setSelectionStart(x + 1);\n                } else {\n                  b._setSelectionStart(x);\n                }\n\n                if (j.length >= 1) {}\n\n                if (j.length == b.numberInput.val().length) {\n                  var o = b._moveCaretToDecimalSeparator();\n\n                  b._setSelectionStart(o - 1);\n                }\n              }\n            }\n\n            return false;\n          }\n        });\n      }\n    },\n    _handleKeyPress: function (h, d) {\n      var f = this._selection();\n\n      var b = this;\n      var i = h.ctrlKey || h.metaKey;\n\n      if (i && d == 97 || i && d == 65) {\n        return true;\n      }\n\n      if (d == 8) {\n        if (f.start > 0) {\n          b._setSelectionStart(f.start);\n        }\n\n        return false;\n      }\n\n      if (d == 46) {\n        if (f.start < this.items.length) {\n          b._setSelectionStart(f.start);\n        }\n\n        return false;\n      }\n\n      if (!a.jqx.browser.mozilla) {\n        if (d == 45 || d == 173 || d == 109 || d == 189) {\n          var c = this.getvalue(\"negative\");\n\n          if (c == false) {\n            this.setvalue(\"negative\", true);\n          } else {\n            this.setvalue(\"negative\", false);\n          }\n        }\n      }\n\n      if (a.jqx.browser.msie) {\n        this._insertKey(d);\n      }\n\n      var g = this._isSpecialKey(d);\n\n      return g;\n    },\n    _deleteSelectedText: function () {\n      var e = this._selection();\n\n      var d = \"\";\n\n      var g = this._getSeparatorPosition();\n\n      var b = this._getVisibleItems();\n\n      var f = this._getHiddenPrefixCount();\n\n      if (this.numberInput.val().length == e.start && e.length == 0) {\n        this._setSelection(e.start, e.start + 1);\n\n        e = this._selection();\n      }\n\n      for (var c = 0; c < e.start; c++) {\n        if (b[c].canEdit && b[c].character != this.promptChar) {\n          d += b[c].character;\n        } else {\n          if (!b[c].canEdit && this.decimalSeparatorPosition != -1 && b[c] == b[this.decimalSeparatorPosition - f]) {\n            if (d.length == 0) {\n              d = \"0\";\n            }\n\n            d += b[c].character;\n          }\n        }\n      }\n\n      for (var c = e.start; c < e.end; c++) {\n        if (c > g && this.decimalSeparatorPosition != -1) {\n          if (b[c].canEdit && b[c].character != this.promptChar) {\n            d += \"0\";\n          }\n        } else {\n          if (!b[c].canEdit && this.decimalSeparatorPosition != -1 && b[c] == b[this.decimalSeparatorPosition - f]) {\n            if (d.length == 0) {\n              d = \"0\";\n            }\n\n            d += b[c].character;\n          }\n        }\n      }\n\n      for (var c = e.end; c < b.length; c++) {\n        if (b[c].canEdit && b[c].character != this.promptChar) {\n          d += b[c].character;\n        } else {\n          if (!b[c].canEdit && this.decimalSeparatorPosition != -1 && b[c] == b[this.decimalSeparatorPosition - f]) {\n            if (d.length == 0) {\n              d = \"0\";\n            }\n\n            d += b[c].character;\n          }\n        }\n      }\n\n      this.setvalue(\"decimal\", d);\n      return e.length > 0;\n    },\n    _restoreInitialState: function () {\n      var c = parseInt(this.decimalDigits);\n\n      if (c > 0) {\n        c += 2;\n      }\n\n      for (var b = this.items.length - 1; b > this.items.length - 1 - c; b--) {\n        if (!this.items[b]) {\n          break;\n        }\n\n        if (this.items[b].canEdit && this.items[b].character == this.promptChar) {\n          this.items[b].character = 0;\n        }\n      }\n    },\n    clear: function () {\n      this.setDecimal(0);\n    },\n    clearDecimal: function () {\n      if (this.inputMode == \"textbox\") {\n        this.numberInput.val();\n        return;\n      }\n\n      for (var b = 0; b < this.items.length; b++) {\n        if (this.items[b].canEdit) {\n          this.items[b].character = this.promptChar;\n        }\n      }\n\n      this._restoreInitialState();\n    },\n    _saveSelectedText: function () {\n      var d = this._selection();\n\n      var e = \"\";\n\n      var b = this._getVisibleItems();\n\n      if (d.start > 0 || d.length > 0) {\n        for (var c = d.start; c < d.end; c++) {\n          if (b[c].canEdit && b[c].character != this.promptChar) {\n            e += b[c].character;\n          } else {\n            if (b[c].isSeparator) {\n              e += b[c].character;\n            }\n          }\n        }\n      }\n\n      if (a.jqx.browser.msie) {\n        window.clipboardData.setData(\"Text\", e);\n      }\n\n      return e;\n    },\n    _pasteSelectedText: function () {\n      var f = this._selection();\n\n      var h = \"\";\n      var c = 0;\n      this.selectedText = a.data(document.body, \"jqxSelection\");\n\n      if (window.clipboardData) {\n        var d = window.clipboardData.getData(\"Text\");\n\n        if (d != this.selectedText && d.length > 0) {\n          this.selectedText = window.clipboardData.getData(\"Text\");\n\n          if (this.selectedText == null || this.selectedText == undefined) {\n            return;\n          }\n        }\n      }\n\n      var e = f.start;\n\n      var j = this._getVisibleItems();\n\n      if (this.selectedText != null) {\n        for (var i = 0; i < this.selectedText.length; i++) {\n          var b = parseInt(this.selectedText[i]);\n\n          if (!isNaN(b)) {\n            var g = 48 + b;\n\n            this._insertKey(g);\n          }\n        }\n      }\n    },\n    _getHiddenPrefixCount: function () {\n      var c = 0;\n\n      if (!this.negative) {\n        c++;\n      }\n\n      if (this.symbolPosition == \"left\") {\n        for (var b = 0; b < this.symbol.length; b++) {\n          if (this.symbol.substring(b, b + 1) == \"\") {\n            c++;\n          }\n        }\n      }\n\n      return c;\n    },\n    _getEditableItem: function () {\n      var c = this._selection();\n\n      for (var b = 0; b < this.items.length; b++) {\n        if (b < c.start) {\n          if (this.items[b].canEdit && this.items[b].character != this.promptChar) {\n            return this.items[b];\n          }\n        }\n      }\n\n      return null;\n    },\n    _getEditableItems: function () {\n      var d = new Array();\n      var b = 0;\n\n      for (var c = 0; c < this.items.length; c++) {\n        if (this.items[c].canEdit) {\n          d[b] = this.items[c];\n          b++;\n        }\n      }\n\n      return d;\n    },\n    _getValidSelectionStart: function (c) {\n      for (var b = this.items.length - 1; b >= 0; b--) {\n        if (this.items[b].canEdit && this.items[b].character != this.promptChar) {\n          return b;\n        }\n      }\n\n      return -1;\n    },\n    _getEditableItemIndex: function (c) {\n      var f = this._selection();\n\n      var g = this._getHiddenPrefixCount();\n\n      var b = this._getVisibleItems();\n\n      var d = f.start;\n      var h = -1;\n\n      for (var e = 0; e < d; e++) {\n        if (e < b.length && b[e].canEdit) {\n          h = e + g;\n        }\n      }\n\n      if (h == -1 && f.length > 0) {\n        d = f.end;\n\n        for (e = 0; e < d; e++) {\n          if (e < b.length && b[e].canEdit) {\n            h = e + g;\n            break;\n          }\n        }\n      }\n\n      return h;\n    },\n    _getEditableItemByIndex: function (c) {\n      for (var b = 0; b < this.items.length; b++) {\n        if (b > c) {\n          if (this.items[b].canEdit && this.items[b].character != this.promptChar) {\n            return b;\n          }\n        }\n      }\n\n      return -1;\n    },\n    _getFirstEditableItemIndex: function () {\n      var c = this._getVisibleItems();\n\n      for (var b = 0; b < c.length; b++) {\n        if (c[b].character != this.promptChar && c[b].canEdit && c[b].character != \"0\") {\n          return b;\n        }\n      }\n\n      return -1;\n    },\n    _getLastEditableItemIndex: function () {\n      var c = this._getVisibleItems();\n\n      for (var b = c.length - 1; b >= 0; b--) {\n        if (c[b].character != this.promptChar && c[b].canEdit) {\n          return b;\n        }\n      }\n\n      return -1;\n    },\n    _moveCaretToDecimalSeparator: function () {\n      for (var b = this.items.length - 1; b >= 0; b--) {\n        if (this.items[b].character == this.decimalSeparator && this.items[b].isSeparator) {\n          if (!this.negative) {\n            this._setSelectionStart(b);\n\n            return b;\n          } else {\n            this._setSelectionStart(b + 1);\n\n            return b;\n          }\n\n          break;\n        }\n      }\n\n      return this.numberInput.val().length;\n    },\n    _handleBackspace: function () {\n      var g = this._selection();\n\n      var h = this._getHiddenPrefixCount();\n\n      var b = this._getEditableItemIndex() - h;\n\n      var f = this._getFirstVisibleNonEmptyIndex();\n\n      var c = false;\n\n      if (this.negative) {\n        c = true;\n\n        if (f >= b + 1 || g.start == 0) {\n          this.setvalue(\"negative\", false);\n\n          if (g.length == 0) {\n            this._setSelectionStart(g.start - 1);\n\n            var g = this._selection();\n          }\n        }\n      }\n\n      if (b >= 0) {\n        if (g.length == 0 && b != -1) {\n          this._setSelection(b, b + 1);\n        }\n\n        var i = g.start > this._getSeparatorPosition() + 1 && this.decimalSeparatorPosition > 0;\n\n        if (i) {\n          g = this._selection();\n        }\n\n        var e = this._deleteSelectedText();\n\n        if (g.length < 1 || i) {\n          this._setSelectionStart(g.start);\n        } else {\n          if (g.length >= 1) {\n            this._setSelectionStart(g.end);\n          }\n        }\n\n        if (g.length == this.numberInput.val().length || c) {\n          var d = this._moveCaretToDecimalSeparator();\n\n          this._setSelectionStart(d - 1);\n        }\n      } else {\n        this._setSelectionStart(g.start);\n      }\n    },\n    _handleKeyDown: function (j, p) {\n      var o = this._selection();\n\n      var c = j.ctrlKey || j.metaKey;\n\n      if ((p == 8 || p == 46) && c) {\n        this.setDecimal(null);\n        return false;\n      }\n\n      if (this.rtl && p == 37) {\n        var d = j.shiftKey;\n        var g = d ? 1 : 0;\n\n        if (d) {\n          this._setSelection(o.start + 1 - g, o.start + o.length + 1);\n        } else {\n          this._setSelection(o.start + 1 - g, o.start + 1);\n        }\n\n        return false;\n      } else {\n        if (this.rtl && p == 39) {\n          var d = j.shiftKey;\n          var g = d ? 1 : 0;\n\n          if (d) {\n            this._setSelection(o.start - 1, o.length + g + o.start - 1);\n          } else {\n            this._setSelection(o.start - 1, o.start - 1);\n          }\n\n          return false;\n        }\n      }\n\n      if (c && p == 97 || c && p == 65) {\n        return true;\n      }\n\n      if (c && p == 120 || c && p == 88) {\n        this.selectedText = this._saveSelectedText(j);\n        a.data(document.body, \"jqxSelection\", this.selectedText);\n\n        this._handleBackspace();\n\n        return false;\n      }\n\n      if (c && p == 99 || c && p == 67) {\n        this.selectedText = this._saveSelectedText(j);\n        a.data(document.body, \"jqxSelection\", this.selectedText);\n        return false;\n      }\n\n      if (c && p == 122 || c && p == 90) {\n        return false;\n      }\n\n      if (c && p == 118 || c && p == 86 || j.shiftKey && p == 45) {\n        this._pasteSelectedText();\n\n        return false;\n      }\n\n      if (o.start >= 0 && o.start < this.items.length) {\n        var f = String.fromCharCode(p);\n        var r = this.items[o.start];\n      }\n\n      if (p == 8) {\n        this._handleBackspace();\n\n        return false;\n      }\n\n      if (p == 190 || p == 110) {\n        this._moveCaretToDecimalSeparator();\n\n        return false;\n      }\n\n      if (p == 188) {\n        var n = this.numberInput.val();\n\n        for (var h = o.start; h < n.length; h++) {\n          if (n[h] == this.groupSeparator) {\n            this._setSelectionStart(1 + h);\n\n            break;\n          }\n        }\n\n        return false;\n      }\n\n      if (a.jqx.browser.msie == null) {\n        var f = String.fromCharCode(p);\n        var l = parseInt(f);\n\n        if (p >= 96 && p <= 105) {\n          l = p - 96;\n          p = p - 48;\n        }\n\n        if (!isNaN(l)) {\n          var k = this;\n\n          k._insertKey(p);\n\n          return false;\n        }\n      }\n\n      if (p == 46) {\n        var q = this._getVisibleItems();\n\n        if (o.start < q.length) {\n          var g = q[o.start].canEdit == false ? 2 : 1;\n\n          if (o.start == 0) {\n            if (this.negative) {\n              this.setvalue(\"negative\", false);\n\n              if (o.length == 0) {\n                this._setSelectionStart(0);\n              }\n\n              var o = this._selection();\n\n              if (o.length == 0) {\n                return false;\n              }\n            }\n          }\n\n          if (o.length == 0) {\n            this._setSelection(o.start + g, o.start + g + o.length);\n          }\n\n          this._handleBackspace();\n\n          if (new Number(this.decimal) < 1 || o.start > this._getSeparatorPosition()) {\n            this._setSelectionStart(o.end + g);\n          } else {\n            if (o.start + 1 < this.decimalSeparatorPosition) {\n              this._setSelectionStart(o.end + g);\n            }\n          }\n        }\n\n        return false;\n      }\n\n      if (p == 38) {\n        this.spinUp();\n        return false;\n      } else {\n        if (p == 40) {\n          this.spinDown();\n          return false;\n        }\n      }\n\n      if (p === 27) {\n        this.setDecimal(this._savedValue);\n\n        this._setSelectionStart(o.end);\n\n        j.preventDefault();\n      }\n\n      var m = this._isSpecialKey(p);\n\n      if (a.jqx.browser.mozilla) {\n        if (p == 45 || p == 173 || p == 109 || p == 189) {\n          var b = this.getvalue(\"negative\");\n\n          if (b == false) {\n            this.setvalue(\"negative\", true);\n          } else {\n            this.setvalue(\"negative\", false);\n          }\n        }\n      }\n\n      if (!a.jqx.browser.mozilla) {\n        return true;\n      }\n\n      return m;\n    },\n    _isSpecialKey: function (b) {\n      if (b != 8 && b != 9 && b != 13 && b != 35 && b != 36 && b != 37 && b != 39 && b != 27 && b != 46) {\n        return false;\n      }\n\n      return true;\n    },\n    _selection: function () {\n      try {\n        if (\"selectionStart\" in this.numberInput[0]) {\n          var g = this.numberInput[0];\n          var h = g.selectionEnd - g.selectionStart;\n          return {\n            start: g.selectionStart,\n            end: g.selectionEnd,\n            length: h,\n            text: g.value\n          };\n        } else {\n          var d = document.selection.createRange();\n\n          if (d == null) {\n            return {\n              start: 0,\n              end: g.value.length,\n              length: 0\n            };\n          }\n\n          var c = this.numberInput[0].createTextRange();\n          var f = c.duplicate();\n          c.moveToBookmark(d.getBookmark());\n          f.setEndPoint(\"EndToStart\", c);\n          var h = d.text.length;\n          return {\n            start: f.text.length,\n            end: f.text.length + d.text.length,\n            length: h,\n            text: d.text\n          };\n        }\n      } catch (b) {\n        return {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      }\n    },\n    selectAll: function () {\n      var b = this.numberInput;\n      setTimeout(function () {\n        if (\"selectionStart\" in b[0]) {\n          b[0].focus();\n          b[0].setSelectionRange(0, b[0].value.length);\n        } else {\n          var c = b[0].createTextRange();\n          c.collapse(true);\n          c.moveEnd(\"character\", b[0].value.length);\n          c.moveStart(\"character\", 0);\n          c.select();\n        }\n      }, 10);\n    },\n    _setSelection: function (f, b) {\n      if (this._disableSetSelection == true) {\n        return;\n      }\n\n      var e = a.jqx.mobile.isTouchDevice();\n\n      if (e || this.touchMode == true) {\n        return;\n      }\n\n      try {\n        if (\"selectionStart\" in this.numberInput[0]) {\n          this.numberInput[0].focus();\n          this.numberInput[0].setSelectionRange(f, b);\n        } else {\n          var c = this.numberInput[0].createTextRange();\n          c.collapse(true);\n          c.moveEnd(\"character\", b);\n          c.moveStart(\"character\", f);\n          c.select();\n        }\n      } catch (d) {}\n    },\n    _setSelectionStart: function (b) {\n      this._setSelection(b, b);\n\n      a.data(this.numberInput, \"selectionstart\", b);\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n\n      this._render(false);\n    },\n    _render: function (g) {\n      var c = parseInt(this.host.css(\"border-left-width\"));\n      var j = parseInt(this.host.css(\"border-left-width\"));\n      var i = parseInt(this.host.css(\"border-left-width\"));\n      var e = parseInt(this.host.css(\"border-left-width\"));\n      this.numberInput.css(\"padding-top\", \"0px\");\n      this.numberInput.css(\"padding-bottom\", \"0px\");\n      var k = window.getComputedStyle(this.element);\n      var h = parseInt(k.borderLeftWidth) * 2;\n      var f = k.boxSizing;\n\n      if (f === \"border-box\" || isNaN(h)) {\n        h = 0;\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = parseInt(this.width) - h + \"px\";\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = parseInt(this.width) - h + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = parseInt(this.height) - h + \"px\";\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = parseInt(this.height) - h + \"px\";\n        }\n      }\n\n      var d = this.host.width();\n      var n = this.host.height();\n      this.numberInput.css({\n        \"border-left-width\": 0,\n        \"border-right-width\": 0,\n        \"border-bottom-width\": 0,\n        \"border-top-width\": 0\n      });\n\n      if (isNaN(i)) {\n        i = 1;\n      }\n\n      if (isNaN(j)) {\n        j = 1;\n      }\n\n      if (isNaN(e)) {\n        e = 1;\n      }\n\n      if (isNaN(c)) {\n        c = 1;\n      }\n\n      this.numberInput.css(\"text-align\", this.textAlign);\n      var o = this.numberInput.css(\"font-size\");\n\n      if (\"\" == o) {\n        o = 13;\n      }\n\n      this.numberInput.css(\"height\", parseInt(o) + 4 + \"px\");\n      this.numberInput.css(\"width\", d - 2);\n      var m = n - 2 * i - parseInt(o) - 2;\n\n      if (isNaN(m)) {\n        m = 0;\n      }\n\n      if (m < 0) {\n        m = 0;\n      }\n\n      if (this.spinButtons && this.spincontainer) {\n        d -= parseInt(this.spinButtonsWidth - 2);\n        var l = a.jqx.mobile.isTouchDevice();\n\n        if (!l && this.touchMode !== true) {\n          this.spincontainer.width(this.spinButtonsWidth);\n          this.upbutton.width(this.spinButtonsWidth + 2);\n          this.downbutton.width(this.spinButtonsWidth + 2);\n          this.upbutton.height(\"50%\");\n          this.downbutton.height(\"50%\");\n          this.spincontainer.width(this.spinButtonsWidth);\n        } else {\n          this.spincontainer.width(2 * this.spinButtonsWidth);\n          d -= this.spinButtonsWidth;\n          this.upbutton.height(\"100%\");\n          this.downbutton.height(\"100%\");\n          this.downbutton.css(\"float\", \"left\");\n          this.upbutton.css(\"float\", \"right\");\n          this.upbutton.width(this.spinButtonsWidth);\n          this.downbutton.width(1 + this.spinButtonsWidth);\n        }\n\n        this._upArrow.height(\"100%\");\n\n        this._downArrow.height(\"100%\");\n\n        this.numberInput.css(\"width\", d - 6);\n        this.numberInput.css(\"margin-right\", \"2px\");\n      }\n\n      var b = m / 2;\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        b = m / 4;\n      }\n\n      this.numberInput.css(\"padding-left\", \"0px\");\n      this.numberInput.css(\"padding-right\", \"0px\");\n      this.numberInput.css(\"padding-top\", Math.round(b) + \"px\");\n      this.numberInput.css(\"padding-bottom\", Math.round(b) + \"px\");\n\n      if (g == undefined || g == true) {\n        this.numberInput.val(this._getString());\n\n        if (this.inputMode != \"advanced\") {\n          this._parseDecimalInSimpleMode();\n        }\n      }\n\n      this._addBarAndLabel(this.numberInput);\n\n      this._updateHint();\n    },\n    _addBarAndLabel: function (e) {\n      var d = this;\n\n      if (d.bar !== null || d.label !== null) {\n        return;\n      }\n\n      var b = a(\"<label></label\");\n\n      if (this.hint) {\n        b[0].innerHTML = this.placeHolder;\n      }\n\n      b.addClass(d.toThemeProperty(\"jqx-input-label\"));\n      e.after(b);\n      d.label = b;\n      var c = a(\"<span></span>\");\n      e.after(c);\n      c.addClass(d.toThemeProperty(\"jqx-input-bar\"));\n\n      if (d.spinButtons) {\n        c.css(\"top\", d.host.height());\n      } else {\n        c.css(\"top\", \"0px\");\n      }\n\n      d.bar = c;\n\n      if (d.template) {\n        d.bar.addClass(d.toThemeProperty(\"jqx-\" + d.template));\n        d.label.addClass(d.toThemeProperty(\"jqx-\" + d.template));\n      }\n    },\n    destroy: function () {\n      this._removeHandlers();\n\n      this.host.remove();\n    },\n    inputValue: function (b) {\n      if (b === undefined) {\n        return this._value();\n      }\n\n      this.propertyChangedHandler(this, \"value\", this._value, b);\n\n      this._refreshValue();\n\n      return this;\n    },\n    _value: function () {\n      var b = this.numberInput.val();\n      return b;\n    },\n    val: function (c) {\n      if (c !== undefined && typeof c != \"object\" || c === null) {\n        if (c === null) {\n          this.setDecimal(null);\n          return;\n        } else {\n          var f = c;\n          f = f.toString();\n\n          if (f.indexOf(this.symbol) > -1) {\n            f = f.replace(this.symbol, \"\");\n          }\n\n          var b = function (l, j, k) {\n            var h = l;\n\n            if (j == k) {\n              return l;\n            }\n\n            var i = h.indexOf(j);\n\n            while (i != -1) {\n              h = h.replace(j, k);\n              i = h.indexOf(j);\n            }\n\n            return h;\n          };\n\n          f = f.replace(this.decimalSeparator, \".\");\n          f = b(f, this.groupSeparator, \"\");\n          var g = \"\";\n\n          for (var d = 0; d < f.length; d++) {\n            var e = f.substring(d, d + 1);\n\n            if (e === \"-\") {\n              g += \"-\";\n            }\n\n            if (e === \".\") {\n              g += \".\";\n            }\n\n            if (e.match(/^[0-9]+$/) != null) {\n              g += e;\n            }\n          }\n\n          f = g;\n          f = f.replace(/ /g, \"\");\n          f = new Number(f);\n          this.setDecimal(f);\n        }\n      } else {\n        return this.getDecimal();\n      }\n    },\n    getDecimal: function () {\n      if (this.decimal == null) {\n        return null;\n      }\n\n      if (this.inputMode == \"simple\") {\n        this._parseDecimalInSimpleMode(false);\n\n        this.decimal = this._getDecimalInSimpleMode(this.decimal);\n      }\n\n      if (this.decimal == \"\") {\n        return 0;\n      }\n\n      var b = this.getvalue(\"negative\");\n\n      if (b && this.decimal > 0) {\n        return -parseFloat(this.decimal);\n      }\n\n      return parseFloat(this.decimal);\n    },\n    setDecimal: function (e) {\n      var b = e;\n\n      if (this.decimalSeparator != \".\") {\n        if (e === null) {\n          this._setDecimal(e);\n        } else {\n          var d = e;\n\n          if (typeof e != \"number\") {\n            e = e.toString();\n            var g = e.indexOf(\".\");\n\n            if (g != -1) {\n              var c = e.substring(0, g);\n              var f = e.substring(g + 1);\n              d = c + \".\" + f;\n\n              if (c.indexOf(\"-\") != -1) {\n                c = c.substring(1);\n              }\n\n              if (this.inputMode != \"advanced\") {\n                e = c + \".\" + f;\n              } else {\n                e = c + this.decimalSeparator + f;\n              }\n            } else {\n              var g = e.indexOf(this.decimalSeparator);\n\n              if (g != -1) {\n                var c = e.substring(0, g);\n                var f = e.substring(g + 1);\n                d = c + \".\" + f;\n\n                if (c.indexOf(\"-\") != -1) {\n                  c = c.substring(1);\n                }\n\n                if (this.inputMode != \"advanced\") {\n                  e = c + \".\" + f;\n                } else {\n                  e = c + this.decimalSeparator + f;\n                }\n              }\n            }\n          }\n\n          if (d < 0) {\n            this.setvalue(\"negative\", true);\n          } else {\n            this.setvalue(\"negative\", false);\n          }\n\n          if (e === null) {\n            this._setDecimal(e);\n          } else {\n            this._setDecimal(Math.abs(e));\n          }\n        }\n      } else {\n        if (e < 0) {\n          this.setvalue(\"negative\", true);\n        } else {\n          this.setvalue(\"negative\", false);\n        }\n\n        if (e === null) {\n          this._setDecimal(e);\n        } else {\n          this._setDecimal(Math.abs(e));\n        }\n      }\n\n      if (b == null) {\n        this.numberInput.val(\"\");\n      }\n\n      this._updateHint();\n    },\n    _setDecimal: function (o) {\n      if (!this.allowNull && o == null) {\n        this.decimal = 0;\n        o = 0;\n      }\n\n      if (o == null) {\n        this.decimal = null;\n        this.value = null;\n        this.clearDecimal();\n\n        this._refreshValue();\n\n        this.decimal = null;\n        this.value = null;\n        this.ValueString = \"\";\n        return;\n      }\n\n      if (o.toString().indexOf(\"e\") != -1) {\n        o = new Number(o).toFixed(this.decimalDigits).toString();\n      }\n\n      this.clearDecimal();\n      var p = o.toString();\n      var q = \"\";\n      var b = \"\";\n      var d = true;\n\n      if (p.length == 0) {\n        p = \"0\";\n      }\n\n      for (var g = 0; g < p.length; g++) {\n        if (typeof o == \"number\") {\n          if (p.substring(g, g + 1) == \".\") {\n            d = false;\n            continue;\n          }\n        } else {\n          if (p.substring(g, g + 1) == this.decimalSeparator) {\n            d = false;\n            continue;\n          }\n        }\n\n        if (d) {\n          q += p.substring(g, g + 1);\n        } else {\n          b += p.substring(g, g + 1);\n        }\n      }\n\n      if (q.length > 0) {\n        q = parseFloat(q).toString();\n      }\n\n      var m = this.digits;\n\n      if (m < q.length) {\n        q = q.substr(0, m);\n      }\n\n      var f = 0;\n\n      var n = this._getSeparatorPosition();\n\n      var l = this._getHiddenPrefixCount();\n\n      n = n + l;\n\n      for (var g = n; g >= 0; g--) {\n        if (g < this.items.length && this.items[g].canEdit) {\n          if (f < q.length) {\n            this.items[g].character = q.substring(q.length - f - 1, q.length - f);\n            f++;\n          }\n        }\n      }\n\n      f = 0;\n\n      for (var g = n; g < this.items.length; g++) {\n        if (this.items[g].canEdit) {\n          if (f < b.length) {\n            this.items[g].character = b.substring(f, f + 1);\n            f++;\n          }\n        }\n      }\n\n      this._refreshValue();\n\n      if (this.decimalSeparator == \".\") {\n        this.ValueString = new Number(o).toFixed(this.decimalDigits);\n      } else {\n        var j = o.toString().indexOf(this.decimalSeparator);\n\n        if (j > 0) {\n          var h = o.toString().substring(0, j);\n          var e = h + \".\" + o.toString().substring(j + 1);\n          this.ValueString = new Number(e).toFixed(this.decimalDigits);\n        } else {\n          this.ValueString = new Number(o).toFixed(this.decimalDigits);\n        }\n      }\n\n      if (this.inputMode != \"advanced\") {\n        this._parseDecimalInSimpleMode();\n\n        this._raiseEvent(1, this.ValueString);\n      }\n\n      if (this.inputMode == \"textbox\") {\n        this.decimal = this.ValueString;\n        var c = this.getvalue(\"negative\");\n\n        if (c) {\n          this.decimal = \"-\" + this.ValueString;\n        }\n      }\n\n      var o = this.val();\n\n      if (o < this.min || o > this.max) {\n        this.host.addClass(\"jqx-input-invalid\");\n      } else {\n        this.host.removeClass(\"jqx-input-invalid\");\n      }\n\n      this._updateHint();\n    },\n    _getSeparatorPosition: function () {\n      var b = this._getHiddenPrefixCount();\n\n      if (this.decimalSeparatorPosition > 0) {\n        return this.decimalSeparatorPosition - b;\n      }\n\n      return this.items.length - b;\n    },\n    _setTheme: function () {\n      this.host.removeClass();\n      this.host.addClass(this.toThemeProperty(\"jqx-input\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-numberinput\"));\n\n      if (this.spinButtons) {\n        this.downbutton.removeClass();\n        this.upbutton.removeClass();\n        this.downbutton.addClass(this.toThemeProperty(\"jqx-scrollbar-button-state-normal\"));\n        this.upbutton.addClass(this.toThemeProperty(\"jqx-scrollbar-button-state-normal\"));\n\n        this._upArrow.removeClass();\n\n        this._downArrow.removeClass();\n\n        this._upArrow.addClass(this.toThemeProperty(\"jqx-icon-arrow-up\"));\n\n        this._downArrow.addClass(this.toThemeProperty(\"jqx-icon-arrow-down\"));\n      }\n\n      this.numberInput.removeClass();\n      this.numberInput.addClass(this.toThemeProperty(\"jqx-input-content\"));\n    },\n    propertiesChangedHandler: function (d, b, c) {\n      if (c && c.width && c.height && Object.keys(c).length == 2) {\n        d._render();\n      }\n    },\n    propertyChangedHandler: function (c, e, h, g) {\n      if (c.batchUpdate && c.batchUpdate.width && c.batchUpdate.height && Object.keys(c.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (e == \"template\") {\n        c.upbutton.removeClass(c.toThemeProperty(\"jqx-\" + c.template));\n        c.downbutton.removeClass(c.toThemeProperty(\"jqx-\" + c.template));\n        c.upbutton.addClass(c.toThemeProperty(\"jqx-\" + c.template));\n        c.downbutton.addClass(c.toThemeProperty(\"jqx-\" + c.template));\n      }\n\n      if (e == \"digits\" || e == \"groupSize\" || e == \"decimalDigits\") {\n        if (g < 0) {\n          throw new Exception(this.invalidArgumentExceptions[0]);\n        }\n      }\n\n      if (e == \"placeHolder\") {\n        if (!c.isMaterialized()) {\n          c.numberInput.attr(\"placeholder\", c.placeHolder);\n        } else {\n          if (c.hint) {\n            c.label[0].innerHTML = c.placeHolder;\n          }\n        }\n      }\n\n      if (e === \"theme\") {\n        a.jqx.utilities.setTheme(h, g, c.host);\n      }\n\n      if (e == \"digits\") {\n        if (g != h) {\n          c.digits = parseInt(g);\n        }\n      }\n\n      if (e == \"min\" || e == \"max\") {\n        a.jqx.aria(c, \"aria-value\" + e, g.toString());\n\n        c._refreshValue();\n      }\n\n      if (e == \"decimalDigits\") {\n        if (g != h) {\n          c.decimalDigits = parseInt(g);\n        }\n      }\n\n      if (e == \"decimalSeparator\" || e == \"digits\" || e == \"symbol\" || e == \"symbolPosition\" || e == \"groupSize\" || e == \"groupSeparator\" || e == \"decimalDigits\" || e == \"negativeSymbol\") {\n        var b = c.decimal;\n\n        if (e == \"decimalSeparator\" && g == \"\") {\n          g = \" \";\n        }\n\n        if (h != g) {\n          var f = c._selection();\n\n          c.items = new Array();\n\n          c._initializeLiterals();\n\n          c.value = c._getString();\n\n          c._refreshValue();\n\n          c._setDecimal(b);\n        }\n      }\n\n      if (e == \"rtl\") {\n        if (c.rtl) {\n          if (c.spincontainer) {\n            c.spincontainer.css(\"float\", \"right\");\n            c.spincontainer.css(\"border-right-width\", \"1px\");\n          }\n\n          c.numberInput.css(\"float\", \"right\");\n        } else {\n          if (c.spincontainer) {\n            c.spincontainer.css(\"float\", \"right\");\n            c.spincontainer.css(\"border-right-width\", \"1px\");\n          }\n\n          c.numberInput.css(\"float\", \"left\");\n        }\n      }\n\n      if (e == \"spinButtons\") {\n        if (c.spincontainer) {\n          if (!g) {\n            c.spincontainer.css(\"display\", \"none\");\n          } else {\n            c.spincontainer.css(\"display\", \"block\");\n          }\n\n          c._render();\n        } else {\n          c._spinButtons();\n        }\n      }\n\n      if (e === \"touchMode\") {\n        c.inputMode = \"textbox\";\n        c.spinMode = \"simple\";\n        c.render();\n      }\n\n      if (e == \"negative\" && c.inputMode == \"advanced\") {\n        var f = c._selection();\n\n        var j = 0;\n\n        if (g) {\n          c.items[0].character = c.negativeSymbol[0];\n          j = 1;\n        } else {\n          c.items[0].character = \"\";\n          j = -1;\n        }\n\n        c._refreshValue();\n\n        if (c.isInitialized) {\n          c._setSelection(f.start + j, f.end + j);\n        }\n      }\n\n      if (e == \"decimal\") {\n        c.value = g;\n        c.setDecimal(g);\n      }\n\n      if (e === \"value\") {\n        c.value = g;\n        c.setDecimal(g);\n\n        c._raiseEvent(1, g);\n      }\n\n      if (e == \"textAlign\") {\n        c.textAlign = g;\n\n        c._render();\n      }\n\n      if (e == \"disabled\") {\n        c.numberInput.attr(\"disabled\", g);\n\n        if (c.disabled) {\n          c.host.addClass(c.toThemeProperty(\"jqx-fill-state-disabled\"));\n        } else {\n          c.host.removeClass(c.toThemeProperty(\"jqx-fill-state-disabled\"));\n        }\n\n        a.jqx.aria(c, \"aria-disabled\", g.toString());\n      }\n\n      if (e == \"readOnly\") {\n        c.readOnly = g;\n      }\n\n      if (e == \"promptChar\") {\n        for (var d = 0; d < c.items.length; d++) {\n          if (c.items[d].character == c.promptChar) {\n            c.items[d].character = g;\n          }\n        }\n\n        c.promptChar = g;\n      }\n\n      if (e == \"width\") {\n        c.width = g;\n\n        c._render();\n      } else {\n        if (e == \"height\") {\n          c.height = g;\n\n          c._render();\n        }\n      }\n    },\n    _value: function () {\n      var b = this.value;\n      return b;\n    },\n    _refreshValue: function () {\n      var g = this.value;\n      var b = 0;\n\n      if (this.inputMode === \"textbox\") {\n        return;\n      }\n\n      this.value = this._getString();\n      g = this.value;\n      var f = \"\";\n\n      for (var c = 0; c < this.items.length; c++) {\n        var e = this.items[c];\n\n        if (e.canEdit && e.character != this.promptChar) {\n          f += e.character;\n        }\n\n        if (c == this.decimalSeparatorPosition) {\n          f += \".\";\n        }\n      }\n\n      this.decimal = f;\n      var d = false;\n\n      if (this.oldValue !== g) {\n        this.oldValue = g;\n\n        this._raiseEvent(0, g);\n\n        d = true;\n      }\n\n      if (this.inputMode != \"simple\") {\n        this.numberInput.val(g);\n\n        if (d) {\n          this._raiseEvent(1, g);\n        }\n      }\n\n      if (g == null) {\n        this.numberInput.val(\"\");\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}