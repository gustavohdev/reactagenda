{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (i) {\n  i.jqx.observableArray = function (e, J) {\n    if (typeof e == \"string\") {\n      e = i.parseJSON(e);\n    }\n\n    if (!Object.defineProperty || !function () {\n      try {\n        Object.defineProperty({}, \"x\", {});\n        return true;\n      } catch (M) {\n        return false;\n      }\n    }()) {\n      var L = Object.defineProperty;\n\n      Object.defineProperty = function (O, P, N) {\n        if (L) {\n          try {\n            return L(O, P, N);\n          } catch (M) {}\n        }\n\n        if (O !== Object(O)) {\n          throw TypeError(\"Object.defineProperty called on non-object\");\n        }\n\n        if (Object.prototype.__defineGetter__ && \"get\" in N) {\n          Object.prototype.__defineGetter__.call(O, P, N.get);\n        }\n\n        if (Object.prototype.__defineSetter__ && \"set\" in N) {\n          Object.prototype.__defineSetter__.call(O, P, N.set);\n        }\n\n        if (\"value\" in N) {\n          O[P] = N.value;\n        } else {\n          if (!O[P]) {\n            O[P] = N;\n          }\n        }\n\n        return O;\n      };\n    }\n\n    if (!Array.prototype.forEach) {\n      Array.prototype.forEach = function (N) {\n        if (this === void 0 || this === null) {\n          throw TypeError();\n        }\n\n        var Q = Object(this);\n        var M = Q.length >>> 0;\n\n        if (typeof N !== \"function\") {\n          throw TypeError();\n        }\n\n        var P = arguments[1],\n            O;\n\n        for (O = 0; O < M; O++) {\n          if (O in Q) {\n            N.call(P, Q[O], O, Q);\n          }\n        }\n      };\n    }\n\n    if (typeof Object.getOwnPropertyNames !== \"function\") {\n      Object.getOwnPropertyNames = function (O) {\n        if (O !== Object(O)) {\n          throw TypeError(\"Object.getOwnPropertyNames called on non-object\");\n        }\n\n        var M = [],\n            N;\n\n        for (N in O) {\n          if (Object.prototype.hasOwnProperty.call(O, N)) {\n            M.push(N);\n          }\n        }\n\n        return M;\n      };\n    }\n\n    var I = this,\n        H,\n        K = [];\n    I.notifier = null;\n    I.name = \"observableArray\";\n    I.observing = true;\n    I.changes = new Array();\n    var J = J;\n\n    I.observe = function () {\n      I.observing = true;\n\n      if (arguments.length == 1) {\n        J = arguments[0];\n      }\n    };\n\n    I.unobserve = function () {\n      I.observing = false;\n    };\n\n    I.toArray = function () {\n      return K.slice(0);\n    };\n\n    I.toJSON = function (X, O) {\n      var U = K;\n\n      if (O) {\n        U = O;\n      }\n\n      var T = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n          W = {\n        \"\\b\": \"\\\\b\",\n        \"\\t\": \"\\\\t\",\n        \"\\n\": \"\\\\n\",\n        \"\\f\": \"\\\\f\",\n        \"\\r\": \"\\\\r\",\n        '\"': '\\\\\"',\n        \"\\\\\": \"\\\\\\\\\"\n      };\n\n      function M(Z) {\n        return '\"' + Z.replace(T, function (aa) {\n          var ab = W[aa];\n          return typeof ab === \"string\" ? ab : \"\\\\u\" + (\"0000\" + aa.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"';\n      }\n\n      function N(Z) {\n        return Z < 10 ? \"0\" + Z : Z;\n      }\n\n      function P(aa) {\n        var Z;\n\n        if (isFinite(aa.valueOf())) {\n          Z = aa.getUTCFullYear() + \"-\" + N(aa.getUTCMonth() + 1) + \"-\" + N(aa.getUTCDate()) + \"T\" + N(aa.getUTCHours()) + \":\" + N(aa.getUTCMinutes()) + \":\" + N(aa.getUTCSeconds()) + 'Z\"';\n        } else {\n          Z = \"null\";\n        }\n\n        return Z;\n      }\n\n      function Q(ac) {\n        var Z = ac.length,\n            aa = [],\n            ab;\n\n        for (ab = 0; ab < Z; ab++) {\n          aa.push(R(ab, ac) || \"null\");\n        }\n\n        return \"[\" + aa.join(\",\") + \"]\";\n      }\n\n      function Y(ac) {\n        var aa = [],\n            ab,\n            Z;\n\n        for (ab in ac) {\n          if (Object.prototype.hasOwnProperty.call(ac, ab)) {\n            if (ab != \"\" && X && X.indexOf(ab) === -1) {\n              continue;\n            }\n\n            Z = R(ab, ac);\n\n            if (Z) {\n              aa.push(M(ab) + \":\" + Z);\n            }\n          }\n        }\n\n        return \"{\" + aa.join(\",\") + \"}\";\n      }\n\n      function S(Z) {\n        switch (Object.prototype.toString.call(Z)) {\n          case \"[object Date]\":\n            return P(Z);\n\n          case \"[object Array]\":\n            return Q(Z);\n        }\n\n        return Y(Z);\n      }\n\n      function V(aa, Z) {\n        switch (Z) {\n          case \"string\":\n            return M(aa);\n\n          case \"number\":\n          case \"float\":\n          case \"integer\":\n          case \"int\":\n            return isFinite(aa) ? aa : \"null\";\n\n          case \"boolean\":\n            return aa;\n        }\n\n        return \"null\";\n      }\n\n      function R(aa, Z) {\n        var ac = Z[aa],\n            ab = typeof ac;\n\n        if (ac && typeof ac === \"object\" && typeof ac.toJSON === \"function\") {\n          ac = ac.toJSON(aa);\n          ab = typeof ac;\n        }\n\n        if (/(number|float|int|integer|string|boolean)/.test(ab) || !ac && ab === \"object\") {\n          return V(ac, ab);\n        } else {\n          return S(ac);\n        }\n      }\n\n      if (!X && window.JSON && typeof window.JSON.stringify === \"function\") {\n        return window.JSON.stringify(U);\n      }\n\n      return R(\"\", {\n        \"\": U\n      });\n    };\n\n    I.defineIndexProperty = function (O) {\n      if (!(O in I)) {\n        var M = function (V, S, U, R) {\n          var T = V[S];\n          var Q = T;\n\n          var P = function () {\n            return Q;\n          };\n\n          var W = function (ab) {\n            T = ab;\n\n            if (Q !== T) {\n              var aa = Q;\n              Q = T;\n\n              if (typeof H === \"function\") {\n                var Y = K.indexOf(R);\n                var Z = \"\";\n\n                var X = function (ad, ac) {\n                  Object.getOwnPropertyNames(ad).forEach(function (ae) {\n                    var af = i.type(ad[ae]);\n\n                    if (af == \"array\" || af == \"object\") {\n                      X(ad[ae], ac + \".\" + ae);\n                    } else {\n                      if (S === ae) {\n                        Z = ac + \".\" + ae;\n                      }\n                    }\n                  });\n                };\n\n                X(R, Y);\n                H({\n                  object: I,\n                  type: \"update\",\n                  path: Z,\n                  index: Y,\n                  name: S,\n                  newValue: T,\n                  oldValue: aa\n                });\n              }\n            }\n\n            Q = T;\n            return T;\n          };\n\n          if (V[S] != undefined && S != \"length\") {\n            if (Object.defineProperty) {\n              Object.defineProperty(V, S, {\n                get: P,\n                set: W\n              });\n            } else {\n              if (Object.prototype.__defineGetter__ && Object.prototype.__defineSetter__) {\n                Object.prototype.__defineGetter__.call(V, S, P);\n\n                Object.prototype.__defineSetter__.call(V, S, W);\n              }\n            }\n          }\n        };\n\n        var N = function (S, R, P) {\n          var Q = i.type(S);\n\n          if (/(number|float|int|integer|string|boolean)/.test(Q)) {\n            return;\n          }\n\n          if (S === undefined) {\n            return;\n          }\n\n          Object.getOwnPropertyNames(S).forEach(function (T) {\n            var U = i.type(S[T]);\n\n            if (U == \"array\" || U == \"object\") {\n              M(S, T, R + \".\" + T, P);\n              N(S[T], R + \".\" + T, P);\n            } else {\n              M(S, T, R + \".\" + T, P);\n            }\n          });\n        };\n\n        Object.defineProperty(I, O, {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return K[O];\n          },\n          set: function (Q) {\n            var P = K[O];\n\n            if (I.toJSON(null, P) != I.toJSON(null, Q)) {\n              K[O] = Q;\n\n              if (typeof H === \"function\") {\n                H({\n                  object: I,\n                  type: \"update\",\n                  path: O.toString(),\n                  index: O,\n                  name: \"index\",\n                  newValue: Q,\n                  oldValue: P\n                });\n              }\n\n              N(Q, O, Q);\n            }\n          }\n        });\n        N(I[O], O, I[O]);\n      }\n    };\n\n    I.push = function () {\n      var M;\n\n      for (var N = 0, O = arguments.length; N < O; N++) {\n        M = K.length;\n        K.push(arguments[N]);\n        I.defineIndexProperty(M);\n\n        if (typeof H === \"function\") {\n          H({\n            object: I,\n            type: \"add\",\n            name: \"length\",\n            index: M,\n            newValue: K.length,\n            oldValue: M\n          });\n        }\n      }\n\n      return K.length;\n    };\n\n    I.pop = function () {\n      if (~K.length) {\n        var M = K.length - 1,\n            N = K.pop();\n        delete I[M];\n\n        if (typeof H === \"function\") {\n          H({\n            object: I,\n            type: \"delete\",\n            name: \"length\",\n            index: M,\n            newValue: K.length,\n            oldValue: M\n          });\n        }\n\n        return N;\n      }\n    };\n\n    I.unshift = function () {\n      var M = K.length;\n\n      for (var N = 0, O = arguments.length; N < O; N++) {\n        K.splice(N, 0, arguments[N]);\n        I.defineIndexProperty(K.length - 1);\n      }\n\n      if (typeof H === \"function\") {\n        H({\n          object: I,\n          type: \"add\",\n          index: 0,\n          name: \"length\",\n          newValue: K.length,\n          oldValue: M\n        });\n      }\n\n      return K.length;\n    };\n\n    I.shift = function () {\n      var M = K.length;\n\n      if (~K.length) {\n        var N = K.shift();\n        K.length === 0 && delete I[M];\n\n        if (typeof H === \"function\") {\n          H({\n            object: I,\n            type: \"delete\",\n            index: M,\n            name: \"length\",\n            newValue: K.length,\n            oldValue: M\n          });\n        }\n\n        return N;\n      }\n    };\n\n    I.slice = function (Q, N, P) {\n      var M = K.slice(Q, N);\n      var O = new i.jqx.observableArray(M, P);\n      return O;\n    };\n\n    I.splice = function (Q, R, M) {\n      var P = [],\n          U,\n          T;\n      Q = !~Q ? K.length - Q : Q;\n      R = (R == null ? K.length - Q : R) || 0;\n\n      while (R--) {\n        U = K.splice(Q, 1)[0];\n        P.push(U);\n        delete I[K.length];\n\n        if (typeof H === \"function\") {\n          H({\n            object: I,\n            type: \"delete\",\n            index: Q,\n            name: \"length\",\n            newValue: -1,\n            oldValue: Q\n          });\n        }\n      }\n\n      for (var N = 2, S = arguments.length; N < S; N++) {\n        K.splice(Q, 0, arguments[N]);\n        this.defineIndexProperty(K.length - 1);\n\n        if (typeof H === \"function\") {\n          H({\n            object: I,\n            type: \"add\",\n            index: Q,\n            name: \"length\",\n            newValue: K.length - 1,\n            oldValue: Q\n          });\n        }\n\n        Q++;\n      }\n\n      var O = new i.jqx.observableArray(P, M);\n      return O;\n    };\n\n    Object.defineProperty(I, \"length\", {\n      configurable: false,\n      enumerable: true,\n      get: function () {\n        return K.length;\n      },\n      set: function (M) {\n        var N = Number(M);\n\n        if (N % 1 === 0 && N >= 0) {\n          if (N < K.length) {\n            I.splice(N);\n          } else {\n            if (N > K.length) {\n              I.push.apply(I, new Array(N - K.length));\n            }\n          }\n        } else {\n          throw new RangeError(\"Invalid array length\");\n        }\n\n        return M;\n      }\n    });\n\n    i.jqx.observableArray.prototype.fromArray = function (O, N) {\n      var M = new i.jqx.observableArray(O, N);\n      return M;\n    };\n\n    i.jqx.observableArray.prototype.clone = function () {\n      var M = new i.jqx.observableArray(K, J);\n      M.observing = I.observing;\n      M.changes = I.changes;\n      M.notifier = I.notifier;\n      return M;\n    };\n\n    I.remove = function (N) {\n      if (N < 0 || N >= I.length) {\n        throw new Error(\"Invalid index : \" + N);\n      }\n\n      if (I.hasOwnProperty(N)) {\n        var M = I[N];\n        I[N] = undefined;\n        K[N] = undefined;\n\n        if (typeof H === \"function\") {\n          H({\n            object: I,\n            type: \"delete\",\n            index: N,\n            name: \"index\",\n            newValue: undefined,\n            oldValue: M\n          });\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    I.concat = function (N, P) {\n      var M = K.concat(N);\n      var O = new i.jqx.observableArray(M, P);\n      return O;\n    };\n\n    Object.getOwnPropertyNames(Array.prototype).forEach(function (M) {\n      if (!(M in I)) {\n        var N = function () {\n          var Q = I.observing;\n          I.observing = false;\n          var P = K[M];\n          var O = P.apply(K, arguments);\n          I.observing = Q;\n          return O;\n        };\n\n        Object.defineProperty(I, M, {\n          configurable: false,\n          enumerable: true,\n          writeable: false,\n          value: N\n        });\n      }\n    });\n\n    I.set = function (N, P) {\n      if (i.type(N) == \"string\" && N.split(\".\").length > 1) {\n        var M = N.split(\".\");\n        var Q = I;\n\n        for (var O = 0; O < M.length; O++) {\n          if (O === 0) {\n            if (M[O] >= I.length) {\n              throw new Error(\"Invalid Index: \" + N);\n            }\n          }\n\n          if (O < M.length - 1) {\n            Q = Q[M[O]];\n          } else {\n            Q[M[O]] = P;\n          }\n        }\n\n        return true;\n      }\n\n      if (N >= I.length) {\n        I.push(P);\n      } else {\n        I[N] = P;\n      }\n\n      return true;\n    };\n\n    I.get = function (M) {\n      return I[M];\n    };\n\n    if (e instanceof Array) {\n      I.push.apply(I, e);\n    }\n\n    H = function () {\n      if (!I.observing) {\n        return;\n      }\n\n      if (arguments && arguments[0]) {\n        I.changes.push(arguments[0]);\n      }\n\n      if (J) {\n        J.apply(I, arguments);\n      }\n\n      if (I.notifier) {\n        I.notifier.apply(I, arguments);\n      }\n    };\n\n    return I;\n  };\n\n  i.jqx.formatDate = function (H, J, I) {\n    var e = i.jqx.dataFormat.formatdate(H, J, I);\n    return e;\n  };\n\n  i.jqx.formatNumber = function (H, J, I) {\n    var e = i.jqx.dataFormat.formatnumber(H, J, I);\n    return e;\n  };\n\n  i.jqx.dataAdapter = function (J, e) {\n    if (J != undefined) {\n      if (J.dataFields !== undefined) {\n        J.datafields = J.dataFields;\n      }\n\n      if (J.dataType !== undefined) {\n        J.datatype = J.dataType;\n      }\n\n      if (J.localData !== undefined) {\n        J.localdata = J.localData;\n      }\n\n      if (J.sortColumn !== undefined) {\n        J.sortcolumn = J.sortColumn;\n      }\n\n      if (J.sortDirection !== undefined) {\n        J.sortdirection = J.sortDirection;\n      }\n\n      if (J.sortColumns !== undefined) {\n        J.sortcolumns = J.sortColumns;\n      }\n\n      if (J.sortDirections !== undefined) {\n        J.sortdirections = J.sortDirections;\n      }\n\n      if (J.sortOrder !== undefined) {\n        J.sortdirection = J.sortOrder;\n      }\n\n      if (J.formatData !== undefined) {\n        J.formatdata = J.formatData;\n      }\n\n      if (J.processData !== undefined) {\n        J.processdata = J.processData;\n      }\n\n      if (J.pageSize !== undefined) {\n        J.pagesize = J.pageSize;\n      }\n\n      if (J.pageNum !== undefined) {\n        J.pagenum = J.pageNum;\n      }\n\n      if (J.updateRow !== undefined) {\n        J.updaterow = J.updateRow;\n      }\n\n      if (J.addRow !== undefined) {\n        J.addrow = J.addRow;\n      }\n\n      if (J.deleteRow !== undefined) {\n        J.deleterow = J.deleteRow;\n      }\n\n      if (J.contentType !== undefined) {\n        J.contenttype = J.contentType;\n      }\n\n      if (J.totalRecords != undefined) {\n        J.totalrecords = J.totalRecords;\n      }\n\n      if (J.loadError != undefined) {\n        J.loadError = J.loadError;\n      }\n\n      if (J.sortComparer != undefined) {\n        J.sortcomparer = J.sortComparer;\n      }\n    }\n\n    this._source = J;\n    this._options = e || {};\n\n    if (J.beforeLoadComplete != undefined) {\n      this._options.beforeLoadComplete = this._source.beforeLoadComplete;\n    }\n\n    if (J.downloadComplete != undefined) {\n      this._options.downloadComplete = this._source.downloadComplete;\n    }\n\n    if (J.loadComplete != undefined) {\n      this._options.loadComplete = this._source.loadComplete;\n    }\n\n    if (J.autoBind != undefined) {\n      this._options.downloadComplete = this._source.autoBind;\n    }\n\n    if (J.formatData != undefined) {\n      this._options.formatData = this._source.formatData;\n    }\n\n    if (J.loadError != undefined) {\n      this._options.loadError = this._source.loadError;\n    }\n\n    if (J.beforeSend != undefined) {\n      this._options.beforeSend = this._source.beforeSend;\n    }\n\n    if (J.contentType != undefined) {\n      this._options.contentType = this._source.contentType;\n    }\n\n    if (J.async != undefined) {\n      this._options.async = this._source.async;\n    }\n\n    if (J.loadServerData != undefined) {\n      this._options.loadServerData = this._source.loadServerData;\n    }\n\n    if (J.uniqueDataFields != undefined) {\n      this._options.uniqueDataFields = this._source.uniqueDataFields;\n    }\n\n    this.records = new Array();\n    this._downloadComplete = new Array();\n    this._bindingUpdate = new Array();\n\n    if (J != undefined && J.localdata != null && typeof J.localdata == \"function\") {\n      var I = J.localdata();\n\n      if (I != null) {\n        J._localdata = J.localdata;\n        var H = this;\n\n        if (J._localdata.subscribe) {\n          H._oldlocaldata = [];\n\n          J._localdata.subscribe(function (K) {\n            var L = function (M) {\n              if (i.isArray(M)) {\n                return i.makeArray(L(i(M)));\n              }\n\n              return i.extend(true, {}, M);\n            };\n\n            if (H.suspendKO == false || H.suspendKO == undefined || H._oldlocaldata.length == 0) {\n              H._oldlocaldata = L(K);\n            }\n          }, J._localdata, \"beforeChange\");\n\n          J._localdata.subscribe(function (L) {\n            if (H.suspendKO == false || H.suspendKO == undefined) {\n              var K = \"\";\n              H._oldrecords = H.records;\n\n              if (H._oldlocaldata.length == 0) {\n                J.localdata = J._localdata();\n              }\n\n              if (H._oldlocaldata.length == 0) {\n                K = \"change\";\n              } else {\n                if (L) {\n                  if (H._oldlocaldata.length == L.length) {\n                    K = \"update\";\n                  }\n\n                  if (H._oldlocaldata.length > L.length) {\n                    K = \"remove\";\n                  }\n\n                  if (H._oldlocaldata.length < L.length) {\n                    K = \"add\";\n                  }\n                }\n              }\n\n              H.dataBind(null, K);\n            }\n          }, J._localdata, \"change\");\n\n          H._knockoutdatasource = true;\n        }\n\n        J.localdata = I;\n      }\n    }\n\n    if (this._options.autoBind == true) {\n      this.dataBind();\n    }\n  };\n\n  i.jqx.dataAdapter.prototype = {\n    getrecords: function () {\n      return this.records;\n    },\n    beginUpdate: function () {\n      this.isUpdating = true;\n    },\n    endUpdate: function (e) {\n      this.isUpdating = false;\n\n      if (e != false) {\n        if (this._changedrecords && this._changedrecords.length > 0) {\n          this.callBindingUpdate(\"update\");\n          this._changedrecords = [];\n        } else {\n          this.dataBind(null, \"\");\n        }\n      }\n    },\n    formatDate: function (H, J, I) {\n      var e = i.jqx.dataFormat.formatdate(H, J, I);\n      return e;\n    },\n    formatNumber: function (H, J, I) {\n      var e = i.jqx.dataFormat.formatnumber(H, J, I);\n      return e;\n    },\n    dataBind: function (R, aa) {\n      if (this.isUpdating == true) {\n        return;\n      }\n\n      var W = this._source;\n\n      if (!W) {\n        return;\n      }\n\n      if (W.generatedfields) {\n        W.datafields = null;\n        W.generatedfields = null;\n      }\n\n      i.jqx.dataFormat.datescache = new Array();\n\n      if (W.dataFields != null) {\n        W.datafields = W.dataFields;\n      }\n\n      if (W.recordstartindex == undefined) {\n        W.recordstartindex = 0;\n      }\n\n      if (W.recordendindex == undefined) {\n        W.recordendindex = 0;\n      }\n\n      if (W.loadallrecords == undefined) {\n        W.loadallrecords = true;\n      }\n\n      if (W.root == undefined) {\n        W.root = \"\";\n      }\n\n      if (W.record == undefined) {\n        W.record = \"\";\n      }\n\n      if (W.sort != undefined) {\n        this.sort = W.sort;\n      }\n\n      if (W.filter != undefined) {\n        this.filter = W.filter;\n      } else {\n        this.filter = null;\n      }\n\n      if (W.sortcolumn != undefined) {\n        this.sortcolumn = W.sortcolumn;\n      }\n\n      if (W.sortdirection != undefined) {\n        this.sortdirection = W.sortdirection;\n      }\n\n      if (W.sortcolumns != undefined) {\n        this.sortcolumns = W.sortcolumns;\n      }\n\n      if (W.sortdirections != undefined) {\n        this.sortdirections = W.sortdirections;\n      }\n\n      if (W.sortcomparer != undefined) {\n        this.sortcomparer = W.sortcomparer;\n      }\n\n      this.records = new Array();\n      var K = this._options || {};\n      this.virtualmode = K.virtualmode != undefined ? K.virtualmode : false;\n      this.totalrecords = K.totalrecords != undefined ? K.totalrecords : 0;\n      this.pageable = K.pageable != undefined ? K.pageable : false;\n      this.pagesize = K.pagesize != undefined ? K.pagesize : 0;\n      this.pagenum = K.pagenum != undefined ? K.pagenum : 0;\n      this.cachedrecords = K.cachedrecords != undefined ? K.cachedrecords : new Array();\n      this.originaldata = new Array();\n      this.recordids = new Array();\n      this.updaterow = K.updaterow != undefined ? K.updaterow : null;\n      this.addrow = K.addrow != undefined ? K.addrow : null;\n      this.deleterow = K.deleterow != undefined ? K.deleterow : null;\n      this.cache = K.cache != undefined ? K.cache : false;\n      this.unboundmode = false;\n\n      if (W.formatdata != undefined) {\n        K.formatData = W.formatdata;\n      }\n\n      if (W.data != undefined) {\n        if (K.data == undefined) {\n          K.data = {};\n        }\n\n        i.extend(K.data, W.data);\n      }\n\n      if (W.mapChar != undefined) {\n        W.mapchar = W.mapChar;\n      }\n\n      if (W.mapchar != undefined) {\n        this.mapChar = W.mapchar ? W.mapchar : \">\";\n      } else {\n        this.mapChar = K.mapChar ? K.mapChar : \">\";\n      }\n\n      if (K.unboundmode || W.unboundmode) {\n        this.unboundmode = K.unboundmode || W.unboundmode;\n      }\n\n      if (W.cache != undefined) {\n        this.cache = W.cache;\n      }\n\n      if (this.koSubscriptions) {\n        for (var ac = 0; ac < this.koSubscriptions.length; ac++) {\n          this.koSubscriptions[ac].dispose();\n        }\n      }\n\n      this.koSubscriptions = new Array();\n\n      if (this.pagenum < 0) {\n        this.pagenum = 0;\n      }\n\n      var ah = this;\n      var Q = W.datatype;\n\n      if (W.datatype === \"csv\" || W.datatype === \"tab\" || W.datatype === \"tsv\" || W.datatype == \"text\") {\n        Q = \"text\";\n      }\n\n      var N = K.async != undefined ? K.async : true;\n\n      if (W.async != undefined) {\n        N = W.async;\n      }\n\n      switch (Q) {\n        case \"local\":\n        case \"array\":\n        case \"observablearray\":\n        case \"observableArray\":\n        default:\n          if (W.localdata == undefined && W.length) {\n            W.localdata = new Array();\n\n            for (var Z = 0; Z < W.length; Z++) {\n              W.localdata[W.localdata.length] = W[Z];\n              W[Z].uid = Z;\n            }\n          }\n\n          if (W.beforeprocessing && i.isFunction(W.beforeprocessing)) {\n            W.beforeprocessing(W.localdata);\n          }\n\n          var M = W.localdata.length;\n          this.totalrecords = this.virtualmode ? W.totalrecords || M : M;\n\n          if (this.unboundmode) {\n            this.totalrecords = this.unboundmode ? W.totalrecords || M : M;\n            var ad = W.datafields ? W.datafields.length : 0;\n\n            if (ad > 0) {\n              for (var Z = 0; Z < this.totalrecords; Z++) {\n                var I = {};\n\n                for (var Y = 0; Y < ad; Y++) {\n                  I[W.datafields[Y].name] = \"\";\n                }\n\n                I.uid = Z;\n                W.localdata[W.localdata.length] = I;\n              }\n            }\n          }\n\n          if (this.totalrecords == undefined) {\n            this.totalrecords = 0;\n          }\n\n          var ad = W.datafields ? W.datafields.length : 0;\n\n          var H = function (ao, aq) {\n            var ap = {};\n\n            for (var am = 0; am < aq; am++) {\n              var al = W.datafields ? W.datafields[am] : {};\n              var ar = \"\";\n\n              if (undefined == al || al == null) {\n                continue;\n              }\n\n              if (al.map) {\n                if (i.isFunction(al.map)) {\n                  ar = al.map(ao);\n                } else {\n                  var aj = al.map.split(ah.mapChar);\n\n                  if (aj.length > 0) {\n                    var an = ao;\n\n                    for (var ak = 0; ak < aj.length; ak++) {\n                      if (!an) {\n                        continue;\n                      }\n\n                      an = an[aj[ak]];\n                    }\n\n                    ar = an;\n                  } else {\n                    ar = ao[al.map];\n                  }\n                }\n\n                if (ar != undefined && ar != null) {\n                  ar = ar.toString();\n                } else {\n                  if (ar == undefined && ar != null) {\n                    ar = \"\";\n                  }\n                }\n              }\n\n              var at = false;\n\n              if (ar == \"\") {\n                at = true;\n                ar = ao[al.name];\n\n                if (ar != undefined && ar != null) {\n                  if (W._localdata && ar.subscribe) {\n                    ar = ar();\n                  } else {\n                    if (al.type != \"array\") {\n                      if (al.type === \"date\") {\n                        if (ar && ar instanceof Date) {\n                          ar = ar;\n                        }\n                      } else {\n                        ar = ar.toString();\n                      }\n                    }\n                  }\n                }\n              }\n\n              if (ar == \"[object Object]\" && al.map && at) {\n                ar = \"\";\n              }\n\n              ar = ah.getvaluebytype(ar, al);\n\n              if (al.displayname != undefined) {\n                ap[al.displayname] = ar;\n              } else {\n                ap[al.name] = ar;\n              }\n            }\n\n            return ap;\n          };\n\n          if (W._localdata) {\n            this._changedrecords = [];\n            this.records = new Array();\n\n            var ag = W._localdata();\n\n            i.each(ag, function (am, ap) {\n              if (typeof ap === \"string\") {\n                ah.records.push(ap);\n              } else {\n                var ak = {};\n                var ao = 0;\n                var an = this;\n                i.each(this, function (ay, aD) {\n                  var at = null;\n                  var aE = \"string\";\n                  var aC = ay;\n\n                  if (ad > 0) {\n                    var aG = false;\n                    var aB = false;\n\n                    for (var ax = 0; ax < ad; ax++) {\n                      var aw = W.datafields[ax];\n\n                      if (aw != undefined && aw.name == ay) {\n                        aG = true;\n                        at = aw.map;\n                        aE = aw.type;\n                        aC = aw.name;\n                        break;\n                      } else {\n                        if (aw != undefined && aw.map && aw.map.indexOf(ay) >= 0) {\n                          aG = true;\n                          at = aw.map;\n                          aE = aw.type;\n                          aC = aw.name;\n                          aB = true;\n                          var aF = an[ay];\n\n                          if (at != null) {\n                            var ar = at.split(ah.mapChar);\n\n                            if (ar.length > 0) {\n                              var az = an;\n\n                              for (var au = 0; au < ar.length; au++) {\n                                az = az[ar[au]];\n                              }\n\n                              aF = az;\n                            } else {\n                              aF = an[at];\n                            }\n                          }\n\n                          if (aE != \"string\") {\n                            aF = ah.getvaluebytype(aF, {\n                              type: aE\n                            });\n                          }\n\n                          ak[aC] = aF;\n\n                          if (ak[aC] != undefined) {\n                            ao += ak[aC].toString().length + ak[aC].toString().substr(0, 1);\n                          }\n                        }\n                      }\n                    }\n\n                    if (!aG) {\n                      return true;\n                    }\n\n                    if (aB) {\n                      return true;\n                    }\n                  }\n\n                  var av = i.isFunction(an[ay]);\n\n                  if (av) {\n                    var aF = an[ay]();\n\n                    if (aE != \"string\") {\n                      aF = ah.getvaluebytype(aF, {\n                        type: aE\n                      });\n                    }\n\n                    ak[ay] = aF;\n\n                    if (an[ay].subscribe) {\n                      var aA = am;\n                      ah.koSubscriptions[ah.koSubscriptions.length] = an[ay].subscribe(function (aI) {\n                        var aH = aA;\n                        ak[ay] = aI;\n                        var aJ = {\n                          index: aH,\n                          oldrecord: ak,\n                          record: ak\n                        };\n\n                        ah._changedrecords.push(aJ);\n\n                        if (ah.isUpdating) {\n                          return;\n                        }\n\n                        ah.callBindingUpdate(\"update\");\n                        ah._changedrecords = [];\n                        return false;\n                      });\n                    }\n                  } else {\n                    var aF = an[ay];\n\n                    if (at != null) {\n                      var ar = at.split(ah.mapChar);\n\n                      if (ar.length > 0) {\n                        var az = an;\n\n                        for (var au = 0; au < ar.length; au++) {\n                          az = az[ar[au]];\n                        }\n\n                        aF = az;\n                      } else {\n                        aF = an[at];\n                      }\n                    }\n\n                    if (aE != \"string\") {\n                      aF = ah.getvaluebytype(aF, {\n                        type: aE\n                      });\n                    }\n\n                    ak[aC] = aF;\n\n                    if (ak[aC] != undefined) {\n                      ao += ak[aC].toString().length + ak[aC].toString().substr(0, 1);\n                    }\n                  }\n                });\n                var al = ah.getid(W.id, an, am);\n                ak.uid = al;\n                ah.records.push(ak);\n                ak._koindex = ao;\n\n                if (ah._oldrecords) {\n                  var aj = ah.records.length - 1;\n\n                  if (aa == \"update\") {\n                    if (ah._oldrecords[aj]._koindex != ao) {\n                      var aq = {\n                        index: aj,\n                        oldrecord: ah._oldrecords[aj],\n                        record: ak\n                      };\n\n                      ah._changedrecords.push(aq);\n                    }\n                  }\n                }\n              }\n            });\n\n            if (aa == \"add\") {\n              var M = ah.records.length;\n\n              for (var Z = 0; Z < M; Z++) {\n                var I = ah.records[Z];\n                var L = false;\n\n                for (var U = 0; U < ah._oldrecords.length; U++) {\n                  if (ah._oldrecords[U]._koindex === I._koindex) {\n                    L = true;\n                    break;\n                  }\n                }\n\n                if (!L) {\n                  ah._changedrecords.push({\n                    index: Z,\n                    oldrecord: null,\n                    record: I,\n                    position: Z != 0 ? \"last\" : \"first\"\n                  });\n                }\n              }\n            } else {\n              if (aa == \"remove\") {\n                var M = ah._oldrecords.length;\n\n                for (var Z = 0; Z < M; Z++) {\n                  var P = ah._oldrecords[Z];\n\n                  if (!ah.records[Z]) {\n                    ah._changedrecords.push({\n                      index: Z,\n                      oldrecord: P,\n                      record: null\n                    });\n                  } else {\n                    if (ah.records[Z]._koindex != P._koindex) {\n                      ah._changedrecords.push({\n                        index: Z,\n                        oldrecord: P,\n                        record: null\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (!i.isArray(W.localdata)) {\n              this.records = new Array();\n              var V = 0;\n              var T = new Array();\n              i.each(W.localdata, function (al) {\n                var ak = ah.getid(W.id, this, al);\n\n                if (ad == 0) {\n                  if (!(typeof this === \"string\" || this instanceof String)) {\n                    for (var an in this) {\n                      V++;\n                      var ao = i.type(this[an]);\n                      T.push({\n                        name: an,\n                        type: ao\n                      });\n                    }\n\n                    ad = V;\n                    W.datafields = T;\n                    W.generatedfields = T;\n                  }\n                }\n\n                if (ad > 0) {\n                  var aj = this;\n                  var am = H(aj, ad);\n                  am.uid = ak;\n                  ah.records[ah.records.length] = am;\n                } else {\n                  this.uid = ak;\n                  ah.records[ah.records.length] = this;\n                }\n              });\n            } else {\n              if (ad == 0) {\n                var V = 0;\n                var T = new Array();\n                i.each(W.localdata, function (al, an) {\n                  var aj = new Object(this);\n\n                  if (typeof an === \"string\") {\n                    ah.records = W.localdata;\n                    return false;\n                  } else {\n                    var ak = ah.getid(W.id, aj, al);\n\n                    if (typeof ak === \"object\") {\n                      ak = al;\n                    }\n\n                    aj.uid = ak;\n\n                    if (al == 0) {\n                      for (var ao in this) {\n                        V++;\n                        var ap = i.type(this[ao]);\n                        T.push({\n                          name: ao,\n                          type: ap\n                        });\n                      }\n\n                      ad = V;\n                      W.datafields = T;\n                      W.generatedfields = T;\n                    }\n\n                    if (ad > 0) {\n                      var am = H(aj, ad);\n                      am.uid = ak;\n                      ah.records[ah.records.length] = am;\n                    } else {\n                      ah.records[ah.records.length] = aj;\n                    }\n                  }\n                });\n              } else {\n                i.each(W.localdata, function (al) {\n                  var aj = this;\n                  var am = H(aj, ad);\n                  var ak = ah.getid(W.id, am, al);\n\n                  if (typeof ak === \"object\") {\n                    ak = al;\n                  }\n\n                  var aj = new Object(am);\n                  aj.uid = ak;\n                  ah.records[ah.records.length] = aj;\n                });\n              }\n            }\n          }\n\n          this.originaldata = W.localdata;\n          this.cachedrecords = this.records;\n          this.addForeignValues(W);\n\n          if (K.uniqueDataFields) {\n            var S = this.getUniqueRecords(this.records, K.uniqueDataFields);\n            this.records = S;\n            this.cachedrecords = S;\n          }\n\n          if (K.beforeLoadComplete) {\n            var ae = K.beforeLoadComplete(ah.records, this.originaldata);\n\n            if (ae != undefined) {\n              ah.records = ae;\n              ah.cachedrecords = ae;\n            }\n          }\n\n          if (K.autoSort && K.autoSortField) {\n            var O = Object.prototype.toString;\n            Object.prototype.toString = typeof field == \"function\" ? field : function () {\n              return this[K.autoSortField];\n            };\n            ah.records.sort(function (ak, aj) {\n              if (ak === undefined) {\n                ak = null;\n              }\n\n              if (aj === undefined) {\n                aj = null;\n              }\n\n              if (ak === null && aj === null) {\n                return 0;\n              }\n\n              if (ak === null && aj !== null) {\n                return 1;\n              }\n\n              if (ak !== null && aj === null) {\n                return -1;\n              }\n\n              ak = ak.toString();\n              aj = aj.toString();\n\n              if (ak === null && aj === null) {\n                return 0;\n              }\n\n              if (ak === null && aj !== null) {\n                return 1;\n              }\n\n              if (ak !== null && aj === null) {\n                return -1;\n              }\n\n              if (i.jqx.dataFormat.isNumber(ak) && i.jqx.dataFormat.isNumber(aj)) {\n                if (ak < aj) {\n                  return -1;\n                }\n\n                if (ak > aj) {\n                  return 1;\n                }\n\n                return 0;\n              } else {\n                if (i.jqx.dataFormat.isDate(ak) && i.jqx.dataFormat.isDate(aj)) {\n                  if (ak < aj) {\n                    return -1;\n                  }\n\n                  if (ak > aj) {\n                    return 1;\n                  }\n\n                  return 0;\n                } else {\n                  if (!i.jqx.dataFormat.isNumber(ak) && !i.jqx.dataFormat.isNumber(aj)) {\n                    ak = String(ak).toLowerCase();\n                    aj = String(aj).toLowerCase();\n                  }\n                }\n              }\n\n              try {\n                if (ak < aj) {\n                  return -1;\n                }\n\n                if (ak > aj) {\n                  return 1;\n                }\n              } catch (al) {\n                var am = al;\n              }\n\n              return 0;\n            });\n            Object.prototype.toString = O;\n          }\n\n          ah.loadedData = W.localdata;\n          ah.buildHierarchy();\n\n          if (i.isFunction(K.loadComplete)) {\n            K.loadComplete(W.localdata, ah.records);\n          }\n\n          break;\n\n        case \"json\":\n        case \"jsonp\":\n        case \"xml\":\n        case \"xhtml\":\n        case \"script\":\n        case \"text\":\n        case \"ics\":\n          if (W.localdata != null && !W.url) {\n            if (i.isFunction(W.beforeprocessing)) {\n              W.beforeprocessing(W.localdata);\n            }\n\n            if (W.datatype === \"xml\") {\n              ah.loadxml(W.localdata, W.localdata, W);\n            } else {\n              if (Q === \"text\") {\n                ah.loadtext(W.localdata, W);\n              } else {\n                if (Q === \"ics\") {\n                  ah.loadics(W.localdata, W);\n                } else {\n                  ah.loadjson(W.localdata, W.localdata, W);\n                }\n              }\n            }\n\n            ah.addForeignValues(W);\n\n            if (K.uniqueDataFields) {\n              var S = ah.getUniqueRecords(ah.records, K.uniqueDataFields);\n              ah.records = S;\n              ah.cachedrecords = S;\n            }\n\n            if (K.beforeLoadComplete) {\n              var ae = K.beforeLoadComplete(ah.records, this.originaldata);\n\n              if (ae != undefined) {\n                ah.records = ae;\n                ah.cachedrecords = ae;\n              }\n            }\n\n            ah.loadedData = W.localdata;\n            ah.buildHierarchy.call(ah);\n\n            if (i.isFunction(K.loadComplete)) {\n              K.loadComplete(W.localdata, ah.records);\n            }\n\n            ah.callBindingUpdate(aa);\n            return;\n          }\n\n          var af = K.data != undefined ? K.data : {};\n\n          if (W.processdata) {\n            W.processdata(af);\n          }\n\n          if (i.isFunction(K.processData)) {\n            K.processData(af);\n          }\n\n          if (i.isFunction(K.formatData)) {\n            var e = K.formatData(af);\n\n            if (e != undefined) {\n              af = e;\n            }\n          }\n\n          var ab = \"application/x-www-form-urlencoded\";\n\n          if (K.contentType) {\n            ab = K.contentType;\n          }\n\n          var J = \"GET\";\n\n          if (W.type) {\n            J = W.type;\n          }\n\n          if (K.type) {\n            J = K.type;\n          }\n\n          var X = Q;\n\n          if (Q == \"ics\") {\n            X = \"text\";\n          }\n\n          if (W.url && W.url.length > 0) {\n            if (i.isFunction(K.loadServerData)) {\n              ah._requestData(af, W, K);\n            } else {\n              this.xhr = i.jqx.data.ajax({\n                dataType: X,\n                cache: this.cache,\n                type: J,\n                url: W.url,\n                async: N,\n                timeout: W.timeout,\n                contentType: ab,\n                data: af,\n                success: function (am, aj, ap) {\n                  if (i.isFunction(W.beforeprocessing)) {\n                    var ao = W.beforeprocessing(am, aj, ap);\n\n                    if (ao != undefined) {\n                      am = ao;\n                    }\n                  }\n\n                  if (i.isFunction(K.downloadComplete)) {\n                    var ao = K.downloadComplete(am, aj, ap);\n\n                    if (ao != undefined) {\n                      am = ao;\n                    }\n                  }\n\n                  if (am == null) {\n                    ah.records = new Array();\n                    ah.cachedrecords = new Array();\n                    ah.originaldata = new Array();\n                    ah.callDownloadComplete();\n\n                    if (i.isFunction(K.loadComplete)) {\n                      K.loadComplete(new Array());\n                    }\n\n                    return;\n                  }\n\n                  var ak = am;\n\n                  if (am.records) {\n                    ak = am.records;\n                  }\n\n                  if (am.totalrecords != undefined) {\n                    W.totalrecords = am.totalrecords;\n                  } else {\n                    if (am.totalRecords != undefined) {\n                      W.totalrecords = am.totalRecords;\n                    }\n                  }\n\n                  if (W.datatype === \"xml\") {\n                    ah.loadxml(null, ak, W);\n                  } else {\n                    if (Q === \"text\") {\n                      ah.loadtext(ak, W);\n                    } else {\n                      if (Q === \"ics\") {\n                        ah.loadics(ak, W);\n                      } else {\n                        ah.loadjson(null, ak, W);\n                      }\n                    }\n                  }\n\n                  ah.addForeignValues(W);\n\n                  if (K.uniqueDataFields) {\n                    var al = ah.getUniqueRecords(ah.records, K.uniqueDataFields);\n                    ah.records = al;\n                    ah.cachedrecords = al;\n                  }\n\n                  if (K.beforeLoadComplete) {\n                    var an = K.beforeLoadComplete(ah.records, am);\n\n                    if (an != undefined) {\n                      ah.records = an;\n                      ah.cachedrecords = an;\n                    }\n                  }\n\n                  ah.loadedData = am;\n                  ah.buildHierarchy.call(ah);\n                  ah.callDownloadComplete();\n\n                  if (i.isFunction(K.loadComplete)) {\n                    K.loadComplete(am, aj, ap, ah.records);\n                  }\n                },\n                error: function (al, aj, ak) {\n                  if (i.isFunction(W.loaderror)) {\n                    W.loaderror(al, aj, ak);\n                  }\n\n                  if (i.isFunction(K.loadError)) {\n                    K.loadError(al, aj, ak);\n                  }\n\n                  al = null;\n                  ah.callDownloadComplete();\n                },\n                beforeSend: function (ak, aj) {\n                  if (i.isFunction(K.beforeSend)) {\n                    K.beforeSend(ak, aj);\n                  }\n\n                  if (i.isFunction(W.beforesend)) {\n                    W.beforesend(ak, aj);\n                  }\n                }\n              });\n            }\n          } else {\n            ah.buildHierarchy(new Array());\n            ah.callDownloadComplete();\n\n            if (i.isFunction(K.loadComplete)) {\n              if (!ai) {\n                var ai = {};\n              }\n\n              K.loadComplete(ai);\n            }\n          }\n\n          break;\n      }\n\n      this.callBindingUpdate(aa);\n    },\n    buildHierarchy: function (K) {\n      var e = this._source;\n      var P = new Array();\n\n      if (!e.datafields) {\n        return;\n      }\n\n      if (e.hierarchy && !e.hierarchy.reservedNames) {\n        e.hierarchy.reservedNames = {\n          leaf: \"leaf\",\n          parent: \"parent\",\n          expanded: \"expanded\",\n          checked: \"checked\",\n          selected: \"selected\",\n          level: \"level\",\n          icon: \"icon\",\n          data: \"data\"\n        };\n      } else {\n        if (e.hierarchy) {\n          var O = e.hierarchy.reservedNames;\n\n          if (!O.leaf) {\n            O.leaf = \"leaf\";\n          }\n\n          if (!O.parent) {\n            O.parent = \"parent\";\n          }\n\n          if (!O.expanded) {\n            O.expanded = \"expanded\";\n          }\n\n          if (!O.checked) {\n            O.checked = \"checked\";\n          }\n\n          if (!O.selected) {\n            O.selected = \"selected\";\n          }\n\n          if (!O.level) {\n            O.level = \"level\";\n          }\n\n          if (!O.data) {\n            O.data = \"data\";\n          }\n        }\n      }\n\n      if (!e.hierarchy) {\n        return;\n      }\n\n      var N = this;\n      var O = e.hierarchy.reservedNames;\n\n      if (e.hierarchy.root) {\n        if (e.dataType == \"xml\") {\n          var P = this.getRecordsHierarchy(\"uid\", \"parentuid\", \"records\", null, K);\n          this.hierarchy = P;\n          return P;\n        } else {\n          this.hierarchy = this.records;\n          var R = e.hierarchy.root;\n\n          for (var L = 0; L < this.records.length; L++) {\n            var M = this.records[L];\n\n            if (!M) {\n              continue;\n            }\n\n            var H = function (S) {\n              if (e.hierarchy.record) {\n                S.records = S[R][e.hierarchy.record];\n              } else {\n                var U = R.split(N.mapChar);\n                var T = null;\n\n                if (U.length > 1) {\n                  var W = S;\n\n                  for (var V = 0; V < U.length; V++) {\n                    if (W != undefined) {\n                      W = W[U[V]];\n                    }\n                  }\n\n                  T = W;\n                } else {\n                  T = S[R];\n                }\n\n                S.records = T;\n              }\n\n              if (S.records == null || S.records && S.records.length == 0) {\n                S[O.leaf] = true;\n              }\n            };\n\n            H(M);\n            M[O.level] = 0;\n            var I = this.getid(e.id, M, L);\n            M.uid = I;\n            M[O.parent] = null;\n            M[O.data] = M;\n\n            if (M[O.expanded] === undefined) {\n              M[O.expanded] = false;\n            }\n\n            var Q = function (W, U) {\n              if (!U) {\n                W.records = new Array();\n                return;\n              }\n\n              for (var V = 0; V < U.length; V++) {\n                var S = U[V];\n\n                if (!S) {\n                  continue;\n                }\n\n                H(S);\n                S[O.level] = W[O.level] + 1;\n                S[O.parent] = W;\n                S[O.data] = S;\n                var T = N.getid(e.id, S, V);\n\n                if (T == V && e.id == null) {\n                  S.uid = W.uid + \"_\" + T;\n                } else {\n                  S.uid = T;\n                }\n\n                if (S[O.expanded] === undefined) {\n                  S[O.expanded] = false;\n                }\n\n                Q(S, S.records);\n              }\n            };\n\n            Q(M, M.records);\n          }\n        }\n\n        return this.hierarchy;\n      }\n\n      if (e.hierarchy.keyDataField && e.hierarchy.parentDataField) {\n        var P = this.getRecordsHierarchy(e.hierarchy.keyDataField.name, e.hierarchy.parentDataField.name, \"records\", null, K);\n        this.hierarchy = P;\n        return P;\n      }\n\n      if (e.hierarchy.groupingDataFields) {\n        var J = new Array();\n\n        for (var L = 0; L < e.hierarchy.groupingDataFields.length; L++) {\n          J.push(e.hierarchy.groupingDataFields[L].name);\n        }\n\n        var P = this.getGroupedRecords(J, \"records\", \"label\", null, \"data\", null, \"parent\", K);\n        this.hierarchy = P;\n        return P;\n      }\n    },\n    addRecord: function (H, e, M, I) {\n      var J = this;\n\n      var N = function () {\n        return {\n          leaf: \"leaf\",\n          parent: \"parent\",\n          expanded: \"expanded\",\n          checked: \"checked\",\n          selected: \"selected\",\n          level: \"level\",\n          icon: \"icon\",\n          data: \"data\"\n        };\n      };\n\n      if (H != undefined) {\n        if (M != undefined) {\n          if (this.hierarchy.length > 0) {\n            var K = function (O) {\n              if (O) {\n                for (var P = 0; P < O.length; P++) {\n                  var Q = O[P];\n\n                  if (Q.uid == M) {\n                    var R = J._source && J._source.hierarchy ? J._source.hierarchy.reservedNames : null;\n\n                    if (R == null) {\n                      R = N();\n                    }\n\n                    H[R.parent] = Q;\n                    H[R.level] = Q[R.level] + 1;\n\n                    if (!Q.records) {\n                      Q.records = new Array();\n                      Q[R.leaf] = false;\n                    } else {\n                      Q[R.leaf] = false;\n                    }\n\n                    if (e == \"last\") {\n                      Q.records.push(H);\n                    } else {\n                      if (typeof e === \"number\" && isFinite(e)) {\n                        Q.records.splice(e, 0, H);\n                      } else {\n                        Q.records.splice(0, 0, H);\n                      }\n                    }\n\n                    return true;\n                  }\n\n                  if (Q.records) {\n                    K(Q.records);\n                  }\n                }\n              }\n            };\n\n            K(this.hierarchy);\n          }\n        } else {\n          if (this.hierarchy && this.hierarchy.length >= 0 && (this._source.hierarchy || I)) {\n            var L = J._source && J._source.hierarchy ? J._source.hierarchy.reservedNames : null;\n\n            if (L == null) {\n              L = N();\n            }\n\n            H[L.level] = 0;\n\n            if (e == \"last\") {\n              this.hierarchy.push(H);\n            } else {\n              if (typeof e === \"number\" && isFinite(e)) {\n                this.hierarchy.splice(e, 0, H);\n              } else {\n                this.hierarchy.splice(0, 0, H);\n              }\n            }\n          } else {\n            if (e == \"last\") {\n              this.records.push(H);\n            } else {\n              if (typeof e === \"number\" && isFinite(e)) {\n                this.records.splice(e, 0, H);\n              } else {\n                this.records.splice(0, 0, H);\n              }\n            }\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n    deleteRecord: function (H) {\n      var J = this;\n\n      if (this.hierarchy.length > 0) {\n        var K = function (L) {\n          if (L) {\n            for (var O = 0; O < L.length; O++) {\n              var P = L[O];\n\n              if (P.uid == H) {\n                L.splice(O, 1);\n\n                if (J.recordids[H]) {\n                  delete J.recordids[H];\n                }\n\n                var N = function (T) {\n                  for (var Q = 0; Q < T.length; Q++) {\n                    var S = T[Q].uid;\n\n                    for (var R = 0; R < J.records.length; R++) {\n                      var U = J.records[R];\n\n                      if (U.uid == S) {\n                        J.records.splice(R, 1);\n                        break;\n                      }\n                    }\n\n                    if (T[Q].records) {\n                      N(T[Q].records);\n                    }\n                  }\n                };\n\n                if (P.records) {\n                  N(P.records);\n                }\n\n                for (var M = 0; M < J.records.length; M++) {\n                  var P = J.records[M];\n\n                  if (P.uid == H) {\n                    J.records.splice(M, 1);\n                    break;\n                  }\n                }\n\n                return true;\n              }\n\n              if (P.records) {\n                K(P.records);\n              }\n            }\n          }\n        };\n\n        K(this.hierarchy);\n      } else {\n        for (var e = 0; e < this.records.length; e++) {\n          var I = this.records[e];\n\n          if (I.uid == H) {\n            this.records.splice(e, 1);\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    addForeignValues: function (H) {\n      var Q = this;\n      var V = H.datafields ? H.datafields.length : 0;\n\n      for (var N = 0; N < V; N++) {\n        var L = H.datafields[N];\n\n        if (L != undefined) {\n          if (L.values != undefined) {\n            if (L.value == undefined) {\n              L.value = L.name;\n            }\n\n            if (L.values.value == undefined) {\n              L.values.value = L.value;\n            }\n\n            var T = new Array();\n            var K, M;\n\n            if (Q.pageable && Q.virtualmode) {\n              K = Q.pagenum * Q.pagesize;\n              M = K + Q.pagesize;\n\n              if (M > Q.totalrecords) {\n                M = Q.totalrecords;\n              }\n            } else {\n              if (Q.virtualmode) {\n                K = H.recordstartindex;\n                M = H.recordendindex;\n\n                if (M > Q.totalrecords) {\n                  M = Q.totalrecords;\n                }\n              } else {\n                K = 0;\n                M = Q.records.length;\n              }\n            }\n\n            for (var O = K; O < M; O++) {\n              var P = Q.records[O];\n              var I = L.name;\n              var U = P[L.value];\n\n              if (T[U] != undefined) {\n                P[I] = T[U];\n              } else {\n                for (var J = 0; J < L.values.source.length; J++) {\n                  var S = L.values.source[J];\n                  var e = S[L.values.value];\n\n                  if (e == undefined) {\n                    e = S.uid;\n                  }\n\n                  if (e == U) {\n                    var R = S[L.values.name];\n                    P[I] = R;\n                    T[U] = R;\n                    break;\n                  }\n                }\n              }\n            }\n          } else {\n            if (L.value != undefined) {\n              for (var O = 0; O < Q.records.length; O++) {\n                var P = Q.records[O];\n                P[L.name] = P[L.value];\n              }\n            }\n          }\n        }\n      }\n    },\n    abort: function () {\n      if (this.xhr && this.xhr.readyState != 4) {\n        this.xhr.abort();\n        this.callDownloadComplete();\n      }\n    },\n    _requestData: function (H, J, e) {\n      var I = this;\n\n      var K = function (P) {\n        if (P.totalrecords) {\n          J.totalrecords = P.totalrecords;\n          I.totalrecords = P.totalrecords;\n        }\n\n        if (P.records) {\n          I.records = P.records;\n          I.cachedrecords = P.records;\n        }\n\n        I.addForeignValues(J);\n\n        if (e.uniqueDataFields) {\n          var N = I.getUniqueRecords(I.records, e.uniqueDataFields);\n          I.records = N;\n          I.cachedrecords = N;\n        }\n\n        if (e.beforeLoadComplete) {\n          var O = e.beforeLoadComplete(I.records, P);\n\n          if (O != undefined) {\n            I.records = O;\n            I.cachedrecords = O;\n          }\n        }\n\n        for (var M = 0; M < I.records.length; M++) {\n          var L = I.records[M];\n\n          if (undefined == L) {\n            continue;\n          }\n\n          if (undefined == L.uid) {\n            L.uid = I.getid(J.id, L, M);\n          }\n        }\n\n        I.buildHierarchy.call(I);\n\n        if (i.isFunction(e.loadComplete)) {\n          e.loadComplete(P);\n        }\n\n        I.callDownloadComplete();\n      };\n\n      e.loadServerData(H, J, K);\n    },\n    getUniqueRecords: function (I, L) {\n      if (I && L) {\n        var e = I.length;\n        var Q = L.length;\n        var N = new Array();\n        var O = new Array();\n\n        for (var P = 0; P < e; P++) {\n          var M = I[P];\n          var J = \"\";\n\n          if (M == undefined) {\n            continue;\n          }\n\n          for (var K = 0; K < Q; K++) {\n            var H = L[K];\n            J += M[H] + \"_\";\n          }\n\n          if (!O[J]) {\n            N[N.length] = M;\n          }\n\n          O[J] = true;\n        }\n      }\n\n      return N;\n    },\n    getAggregatedData: function (S, P, M, H) {\n      var L = M;\n\n      if (!L) {\n        L = this.records;\n      }\n\n      var Q = {};\n      var K = new Array();\n      var J = L.length;\n\n      if (J == 0) {\n        return;\n      }\n\n      if (J == undefined) {\n        return;\n      }\n\n      for (var O = 0; O < J; O++) {\n        var R = L[O];\n\n        for (var N = 0; N < S.length; N++) {\n          var I = S[N];\n          var U = R[I.name];\n\n          if (I.aggregates) {\n            Q[I.name] = Q[I.name] || {};\n            K[I.name] = K[I.name] || 0;\n            K[I.name]++;\n\n            var e = function (W) {\n              for (var Y in W) {\n                var X = Q[I.name][Y];\n\n                if (X == null) {\n                  Q[I.name][Y] = 0;\n                  X = 0;\n                }\n\n                if (i.isFunction(W[Y])) {\n                  X = W[Y](X, U, I.name, R, H);\n                }\n\n                Q[I.name][Y] = X;\n              }\n            };\n\n            var T = parseFloat(U);\n\n            if (isNaN(T)) {\n              T = false;\n            } else {\n              T = true;\n            }\n\n            if (T) {\n              U = parseFloat(U);\n            }\n\n            if (typeof U === \"number\" && isFinite(U)) {\n              i.each(I.aggregates, function () {\n                var W = Q[I.name][this];\n\n                if (W == null) {\n                  W = 0;\n\n                  if (this == \"min\") {\n                    W = 9999999999999;\n                  }\n\n                  if (this == \"max\") {\n                    W = -9999999999999;\n                  }\n                }\n\n                if (this == \"sum\" || this == \"avg\" || this == \"stdev\" || this == \"stdevp\" || this == \"var\" || this == \"varp\") {\n                  W += parseFloat(U);\n                } else {\n                  if (this == \"product\") {\n                    if (O == 0) {\n                      W = parseFloat(U);\n                    } else {\n                      W *= parseFloat(U);\n                    }\n                  } else {\n                    if (this == \"min\") {\n                      W = Math.min(W, parseFloat(U));\n                    } else {\n                      if (this == \"max\") {\n                        W = Math.max(W, parseFloat(U));\n                      } else {\n                        if (this == \"count\") {\n                          W++;\n                        } else {\n                          if (typeof this == \"object\") {\n                            e(this);\n                            return;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n\n                Q[I.name][this] = W;\n              });\n            } else {\n              i.each(I.aggregates, function () {\n                if (this == \"min\" || this == \"max\" || this == \"count\" || this == \"product\" || this == \"sum\" || this == \"avg\" || this == \"stdev\" || this == \"stdevp\" || this == \"var\" || this == \"varp\") {\n                  if (U === null) {\n                    return true;\n                  }\n\n                  var W = Q[I.name][this];\n\n                  if (W == null) {\n                    W = 0;\n                  }\n\n                  Q[I.name][this] = W;\n                  return true;\n                }\n\n                if (typeof this == \"object\") {\n                  e(this);\n                }\n              });\n            }\n          }\n        }\n      }\n\n      for (var N = 0; N < S.length; N++) {\n        var I = S[N];\n\n        if (!Q[I.name]) {\n          Q[I.name] = {};\n          i.each(I.aggregates, function (W) {\n            Q[I.name][this] = 0;\n          });\n        }\n\n        if (Q[I.name][\"avg\"] != undefined) {\n          var U = Q[I.name][\"avg\"];\n          var V = K[I.name];\n\n          if (V === 0 || V == undefined) {\n            Q[I.name][\"avg\"] = 0;\n          } else {\n            Q[I.name][\"avg\"] = U / V;\n          }\n        } else {\n          if (Q[I.name][\"count\"] != undefined) {\n            Q[I.name][\"count\"] = J;\n          }\n        }\n\n        if (Q[I.name][\"stdev\"] || Q[I.name][\"stdevp\"] || Q[I.name][\"var\"] || Q[I.name][\"varp\"]) {\n          i.each(I.aggregates, function (ac) {\n            if (this == \"stdev\" || this == \"var\" || this == \"varp\" || this == \"stdevp\") {\n              var ad = Q[I.name][this];\n              var ab = J;\n              var W = ad / J;\n              var Y = 0;\n\n              for (var Z = 0; Z < J; Z++) {\n                var aa = L[Z];\n                var ae = aa[I.name];\n                Y += (ae - W) * (ae - W);\n              }\n\n              var X = this == \"stdevp\" || this == \"varp\" ? ab : ab - 1;\n\n              if (X == 0) {\n                X = 1;\n              }\n\n              if (this == \"var\" || this == \"varp\") {\n                Q[I.name][this] = Y / X;\n              } else {\n                if (this == \"stdevp\" || this == \"stdev\") {\n                  Q[I.name][this] = Math.sqrt(Y / X);\n                }\n              }\n            }\n          });\n        }\n\n        if (I.formatStrings) {\n          i.each(I.aggregates, function (X) {\n            var W = I.formatStrings[X];\n\n            if (W) {\n              if (this == \"min\" || this == \"max\" || this == \"count\" || this == \"product\" || this == \"sum\" || this == \"avg\" || this == \"stdev\" || this == \"stdevp\" || this == \"var\" || this == \"varp\") {\n                var Y = Q[I.name][this];\n                Q[I.name][this] = i.jqx.dataFormat.formatnumber(Y, W, P);\n              } else {\n                if (typeof this == \"object\") {\n                  for (var Z in this) {\n                    var Y = Q[I.name][Z];\n                    Q[I.name][Z] = i.jqx.dataFormat.formatnumber(Y, W, P);\n                  }\n                }\n              }\n            }\n          });\n        }\n      }\n\n      return Q;\n    },\n    bindDownloadComplete: function (H, e) {\n      this._downloadComplete[this._downloadComplete.length] = {\n        id: H,\n        func: e\n      };\n    },\n    unbindDownloadComplete: function (H) {\n      for (var e = 0; e < this._downloadComplete.length; e++) {\n        if (this._downloadComplete[e].id == H) {\n          this._downloadComplete[e].func = null;\n\n          this._downloadComplete.splice(e, 1);\n\n          break;\n        }\n      }\n    },\n    callDownloadComplete: function () {\n      for (var e = 0; e < this._downloadComplete.length; e++) {\n        var H = this._downloadComplete[e];\n\n        if (H.func != null) {\n          H.func();\n        }\n      }\n    },\n    setSource: function (e) {\n      this._source = e;\n    },\n    generatekey: function () {\n      var e = function () {\n        return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n      };\n\n      return e() + e() + \"-\" + e() + \"-\" + e() + \"-\" + e() + \"-\" + e() + e() + e();\n    },\n    getGroupedRecords: function (ak, an, W, af, al, ac, ae, ao, K) {\n      var ah = 0;\n      var aa = this;\n\n      if (!K) {\n        K = 0;\n      }\n\n      var I = new Array();\n\n      for (var N = 0; N < ak.length; N++) {\n        I[N] = aa.generatekey();\n      }\n\n      if (!an) {\n        an = \"items\";\n      }\n\n      if (!W) {\n        W = \"group\";\n      }\n\n      if (!al) {\n        al = \"record\";\n      }\n\n      if (!ae) {\n        ae = \"parentItem\";\n      }\n\n      if (undefined === ac) {\n        ac = \"value\";\n      }\n\n      var S = new Array();\n      var L = 0;\n      var J = new Array();\n      var R = ak.length;\n      var am = new Array();\n\n      if (!ao) {\n        var ao = this.records;\n      }\n\n      var P = ao.length;\n\n      var ag = function (ap) {\n        var aq = ap;\n\n        if (af) {\n          i.each(af, function () {\n            if (this.name && this.map) {\n              aq[this.map] = aq[this.name];\n            }\n          });\n        }\n\n        return aq;\n      };\n\n      for (var V = 0; V < P; V++) {\n        var aj = ag(ao[V]);\n        var ab = aj[aa.uniqueId];\n        var H = new Array();\n        var X = 0;\n\n        for (N = 0; N < R; N++) {\n          var Q = ak[N];\n          var ad = aj[Q];\n\n          if (null == ad) {\n            continue;\n          }\n\n          H[X++] = {\n            value: ad,\n            hash: I[N]\n          };\n        }\n\n        if (H.length != R) {\n          break;\n        }\n\n        var Y = null;\n        var T = \"\";\n        var e = -1;\n\n        for (var Z = 0; Z < H.length; Z++) {\n          e++;\n          var ai = H[Z].value;\n          var M = H[Z].hash;\n          T = T + \"_\" + M + \"_\" + ai;\n\n          if (J[T] != undefined && J[T] != null) {\n            Y = J[T];\n            continue;\n          }\n\n          if (Y == null) {\n            Y = {\n              level: 0\n            };\n            Y[ae] = null;\n            Y[W] = ai;\n            Y[al] = aj;\n\n            if (aj.expanded !== undefined) {\n              Y.expanded = aj.expanded;\n            } else {\n              Y.expanded = false;\n            }\n\n            if (ac) {\n              Y[ac] = aj[ac];\n            }\n\n            Y[an] = new Array();\n            var O = S.length + K;\n\n            if (!this._source.id || typeof aj.uid === \"number\" || isFinite(aj.uid)) {\n              O = \"Row\" + O;\n            }\n\n            Y.uid = O;\n            S[L++] = Y;\n          } else {\n            var U = {\n              level: Y.level + 1\n            };\n            U[ae] = Y;\n            U[W] = ai;\n            U[an] = new Array();\n            U[al] = aj;\n\n            if (aj.expanded !== undefined) {\n              U.expanded = aj.expanded;\n            } else {\n              U.expanded = false;\n            }\n\n            if (ac) {\n              U[ac] = aj[ac];\n            }\n\n            U.uid = Y.uid + \"_\" + Y[an].length;\n            Y[an][Y[an].length] = U;\n            Y = U;\n          }\n\n          J[T] = Y;\n        }\n\n        if (aj) {\n          aj.leaf = true;\n        }\n\n        if (Y != null) {\n          if (this._source.id == null) {\n            if (undefined == aj.uid) {\n              aj.uid = Y.uid + \"_\" + Y[an].length;\n            } else {\n              if (aj.uid.toString().indexOf(Y.uid) == -1) {\n                aj.uid = Y.uid + \"_\" + aj.uid;\n              }\n            }\n          }\n\n          aj[ae] = Y;\n          aj.level = Y.level + 1;\n          Y[an][Y[an].length] = aj;\n        } else {\n          if (undefined == aj.uid) {\n            aj.uid = this.generatekey();\n          }\n        }\n      }\n\n      return S;\n    },\n    getRecordsHierarchy: function (L, J, aa, U, H) {\n      var e = new Array();\n      var I = this.records;\n\n      if (H) {\n        I = H;\n      }\n\n      if (this.records.length == 0) {\n        return null;\n      }\n\n      var Y = aa != null ? aa : \"items\";\n      var R = [];\n      var ab = I;\n      var O = ab.length;\n      var P = this._source && this._source.hierarchy ? this._source.hierarchy.reservedNames : null;\n\n      var W = function (ac) {\n        var ad = ac;\n\n        if (U) {\n          i.each(U, function () {\n            if (this.name && this.map) {\n              ad[this.map] = ad[this.name];\n            }\n          });\n        }\n\n        return ad;\n      };\n\n      for (var X = 0; X < O; X++) {\n        var Z = i.extend({}, ab[X]);\n        var T = Z[J];\n        var S = Z[L];\n        R[S] = {\n          parentid: T,\n          item: Z\n        };\n      }\n\n      for (var X = 0; X < O; X++) {\n        var Z = i.extend({}, ab[X]);\n        var T = Z[J];\n        var S = Z[L];\n\n        if (R[T] != undefined) {\n          var Z = {\n            parentid: T,\n            item: R[S].item\n          };\n          var Q = R[T].item;\n\n          if (!Q[Y]) {\n            Q[Y] = [];\n          }\n\n          var M = Q[Y].length;\n          var K = Z.item;\n\n          if (!P) {\n            if (K.parent == undefined) {\n              K.parent = Q;\n            }\n          } else {\n            if (K[P.parent] == undefined) {\n              K[P.parent] = Q;\n            }\n          }\n\n          var N = W(K);\n          Q[Y][M] = N;\n          R[T].item = Q;\n          R[S] = Z;\n        } else {\n          var K = R[S].item;\n\n          if (!P) {\n            if (K.parent == undefined) {\n              K.parent = null;\n            }\n          } else {\n            if (K[P.parent] == undefined) {\n              K[P.parent] = null;\n            }\n          }\n\n          var N = W(K);\n\n          if (!P) {\n            N.level = 0;\n          } else {\n            N[P.level] = 0;\n          }\n\n          e[e.length] = N;\n        }\n      }\n\n      if (e.length != 0) {\n        var V = function (af, ac) {\n          for (var ad = 0; ad < ac.length; ad++) {\n            if (!P) {\n              ac[ad].level = af;\n            } else {\n              ac[ad][P.level] = af;\n            }\n\n            var ae = ac[ad][Y];\n\n            if (ae) {\n              if (ae.length > 0) {\n                V(af + 1, ae);\n              } else {\n                if (!P) {\n                  ac[ad].leaf = true;\n                } else {\n                  ac[ad][P.leaf] = true;\n                }\n              }\n            } else {\n              if (!P) {\n                ac[ad].leaf = true;\n              } else {\n                ac[ad][P.leaf] = true;\n              }\n            }\n          }\n        };\n\n        V(0, e);\n      }\n\n      return e;\n    },\n    bindBindingUpdate: function (H, e) {\n      this._bindingUpdate[this._bindingUpdate.length] = {\n        id: H,\n        func: e\n      };\n    },\n    unbindBindingUpdate: function (H) {\n      for (var e = 0; e < this._bindingUpdate.length; e++) {\n        if (this._bindingUpdate[e].id == H) {\n          this._bindingUpdate[e].func = null;\n\n          this._bindingUpdate.splice(e, 1);\n\n          break;\n        }\n      }\n    },\n    callBindingUpdate: function (e) {\n      for (var I = 0; I < this._bindingUpdate.length; I++) {\n        var H = this._bindingUpdate[I];\n\n        if (H.func != null) {\n          H.func(e);\n        }\n      }\n    },\n    getid: function (N, H, K) {\n      if (N != null && N.name != undefined) {\n        if (N.name) {\n          var e = i(H).attr(N.name);\n\n          if (e != null && e.toString().length > 0) {\n            return e;\n          } else {\n            if (N.map) {\n              try {\n                var e = i(H).attr(N.map);\n\n                if (e != null && e.toString().length > 0) {\n                  return e;\n                } else {\n                  if (i(N.map, H).length > 0) {\n                    return i(N.map, H).text();\n                  } else {\n                    if (i(N.name, H).length > 0) {\n                      return i(N.name, H).text();\n                    }\n                  }\n                }\n              } catch (J) {\n                return K;\n              }\n            }\n          }\n\n          return;\n        }\n      }\n\n      if (i(N, H).length > 0) {\n        return i(N, H).text();\n      }\n\n      if (N) {\n        if (N.toString().length > 0) {\n          var e = i(H).attr(N);\n\n          if (e != null && e.toString().length > 0) {\n            return i.trim(e).split(\" \").join(\"\").replace(/([ #;?%&,.+*~\\':\"!^$[\\]()=>|\\/\\\\@])/g, \"\");\n          } else {\n            var I = N.split(this.mapChar);\n\n            if (I.length > 1) {\n              var M = H;\n\n              for (var L = 0; L < I.length; L++) {\n                if (M != undefined) {\n                  M = M[I[L]];\n                }\n              }\n\n              if (M != undefined) {\n                return M;\n              }\n            } else {\n              if (H[N] != undefined) {\n                return H[N];\n              }\n            }\n          }\n        }\n      }\n\n      return K;\n    },\n    loadjson: function (af, ag, S) {\n      if (typeof af == \"string\") {\n        af = i.parseJSON(af);\n      }\n\n      if (S.root == undefined) {\n        S.root = \"\";\n      }\n\n      if (S.record == undefined) {\n        S.record = \"\";\n      }\n\n      var af = af || ag;\n\n      if (!af) {\n        af = [];\n      }\n\n      var ae = this;\n\n      if (S.root != \"\") {\n        var K = S.root.split(ae.mapChar);\n\n        if (K.length > 1) {\n          var ab = af;\n\n          for (var R = 0; R < K.length; R++) {\n            if (ab != undefined) {\n              ab = ab[K[R]];\n            }\n          }\n\n          af = ab;\n        } else {\n          if (af[S.root] !== undefined) {\n            af = af[S.root];\n          } else {\n            if (af[0] && af[0][S.root] !== undefined) {\n              af = af[0][S.root];\n            } else {\n              i.each(af, function (ai) {\n                var ah = this;\n\n                if (this == S.root) {\n                  af = this;\n                  return false;\n                } else {\n                  if (this[S.root] != undefined) {\n                    af = this[S.root];\n                  }\n                }\n              });\n            }\n          }\n\n          if (!af) {\n            var K = S.root.split(ae.mapChar);\n\n            if (K.length > 0) {\n              var ab = af;\n\n              for (var R = 0; R < K.length; R++) {\n                if (ab != undefined) {\n                  ab = ab[K[R]];\n                }\n              }\n\n              af = ab;\n            }\n          }\n        }\n      } else {\n        if (!af.length) {\n          for (var O in af) {\n            if (i.isArray(af[O])) {\n              af = af[O];\n              break;\n            }\n          }\n        }\n      }\n\n      if (af != null && af.length == undefined) {\n        af = i.makeArray(af);\n      }\n\n      if (af == null || af == undefined || af == \"undefined\" || af.length == undefined) {\n        throw new Error(\"jqxDataAdapter: JSON Parse error! Invalid JSON. Please, check your JSON or your jqxDataAdapter initialization!\");\n        return;\n      }\n\n      if (af.length == 0) {\n        this.totalrecords = 0;\n        return;\n      }\n\n      var J = af.length;\n      this.totalrecords = this.virtualmode ? S.totalrecords || J : J;\n      this.records = new Array();\n      this.originaldata = new Array();\n      var X = this.records;\n      var U = !this.pageable ? S.recordstartindex : this.pagesize * this.pagenum;\n      this.recordids = new Array();\n\n      if (S.loadallrecords) {\n        U = 0;\n        J = this.totalrecords;\n      }\n\n      var Q = 0;\n\n      if (this.virtualmode) {\n        U = !this.pageable ? S.recordstartindex : this.pagesize * this.pagenum;\n        Q = U;\n        U = 0;\n        J = this.totalrecords;\n      }\n\n      var Z = S.datafields ? S.datafields.length : 0;\n\n      if (Z == 0) {\n        var e = af[0];\n        var ac = new Array();\n\n        for (var O in e) {\n          var H = O;\n          ac[ac.length] = {\n            name: H\n          };\n        }\n\n        S.datafields = ac;\n        S.generatedfields = S.datafields;\n        Z = ac.length;\n      }\n\n      var M = U;\n\n      for (var W = U; W < J; W++) {\n        var I = af[W];\n\n        if (I == undefined) {\n          break;\n        }\n\n        if (S.record && S.record != \"\") {\n          I = I[S.record];\n\n          if (I == undefined) {\n            continue;\n          }\n        }\n\n        var ad = this.getid(S.id, I, W);\n\n        if (typeof ad === \"object\") {\n          ad = W;\n        }\n\n        if (!this.recordids[ad]) {\n          this.recordids[ad] = I;\n          var L = {};\n\n          for (var V = 0; V < Z; V++) {\n            var N = S.datafields[V];\n            var T = \"\";\n\n            if (undefined == N || N == null) {\n              continue;\n            }\n\n            if (N.map) {\n              if (i.isFunction(N.map)) {\n                T = N.map(I);\n              } else {\n                var K = N.map.split(ae.mapChar);\n\n                if (K.length > 0) {\n                  var aa = I;\n\n                  for (var R = 0; R < K.length; R++) {\n                    if (aa != undefined) {\n                      aa = aa[K[R]];\n                    }\n                  }\n\n                  T = aa;\n                } else {\n                  T = I[N.map];\n                }\n              }\n\n              if (T != undefined && T != null) {\n                T = this.getvaluebytype(T, N);\n              } else {\n                if (T == undefined && T != null) {\n                  T = \"\";\n                }\n              }\n            }\n\n            if (T == \"\" && !N.map) {\n              T = I[N.name];\n\n              if (T == undefined && T != null) {\n                T = \"\";\n              }\n\n              if (N.value != undefined) {\n                if (T != undefined) {\n                  var Y = T[N.value];\n\n                  if (Y != undefined) {\n                    T = Y;\n                  }\n                }\n              }\n            }\n\n            T = this.getvaluebytype(T, N);\n\n            if (N.displayname != undefined) {\n              L[N.displayname] = T;\n            } else {\n              L[N.name] = T;\n            }\n\n            if (N.type === \"array\") {\n              var P = function (ak) {\n                if (!ak) {\n                  return;\n                }\n\n                for (var aq = 0; aq < ak.length; aq++) {\n                  var an = ak[aq];\n\n                  if (!an) {\n                    continue;\n                  }\n\n                  for (var ao = 0; ao < Z; ao++) {\n                    var aj = S.datafields[ao];\n                    var ap = \"\";\n\n                    if (undefined == aj || aj == null) {\n                      continue;\n                    }\n\n                    if (aj.map) {\n                      if (i.isFunction(aj.map)) {\n                        ap = aj.map(an);\n                      } else {\n                        var ah = aj.map.split(ae.mapChar);\n\n                        if (ah.length > 0) {\n                          var am = an;\n\n                          for (var ai = 0; ai < ah.length; ai++) {\n                            if (am != undefined) {\n                              am = am[ah[ai]];\n                            }\n                          }\n\n                          ap = am;\n                        } else {\n                          ap = an[aj.map];\n                        }\n                      }\n\n                      if (ap != undefined && ap != null) {\n                        ap = this.getvaluebytype(ap, aj);\n                      } else {\n                        if (ap == undefined && ap != null) {\n                          ap = \"\";\n                        }\n                      }\n                    }\n\n                    if (ap == \"\" && !aj.map) {\n                      ap = an[aj.name];\n\n                      if (ap == undefined && ap != null) {\n                        ap = \"\";\n                      }\n\n                      if (aj.value != undefined) {\n                        if (ap != undefined) {\n                          var al = ap[aj.value];\n\n                          if (al != undefined) {\n                            ap = al;\n                          }\n                        }\n                      }\n                    }\n\n                    ap = this.getvaluebytype(ap, aj);\n\n                    if (aj.displayname != undefined) {\n                      an[aj.displayname] = ap;\n                    } else {\n                      an[aj.name] = ap;\n                    }\n\n                    if (aj.type === \"array\") {\n                      P.call(this, ap);\n                    }\n                  }\n                }\n              };\n\n              P.call(this, T);\n            }\n          }\n\n          if (S.recordendindex <= 0 || U < S.recordendindex) {\n            X[Q + M] = new Object(L);\n            X[Q + M].uid = ad;\n            this.originaldata[Q + M] = new Object(X[W]);\n            M++;\n          }\n        }\n      }\n\n      this.records = X;\n      this.cachedrecords = this.records;\n    },\n    loadxml: function (K, aj, V) {\n      if (typeof K == \"string\") {\n        K = aj = i(i.parseXML(K));\n        K = null;\n      }\n\n      if (V.root == undefined) {\n        V.root = \"\";\n      }\n\n      if (V.record == undefined) {\n        V.record = \"\";\n      }\n\n      var K;\n\n      if (i.jqx.browser.msie && aj) {\n        if (aj.xml != undefined) {\n          K = i(V.root + \" \" + V.record, i.parseXML(aj.xml));\n        } else {\n          K = K || i(V.root + \" \" + V.record, aj);\n        }\n      } else {\n        K = K || i(V.root + \" \" + V.record, aj);\n      }\n\n      if (!K) {\n        K = [];\n      }\n\n      var J = K.length;\n\n      if (K.length == 0) {\n        return;\n      }\n\n      this.totalrecords = this.virtualmode ? V.totalrecords || J : J;\n      this.records = new Array();\n      this.originaldata = new Array();\n      var ab = this.records;\n      var Y = !this.pageable ? V.recordstartindex : this.pagesize * this.pagenum;\n      this.recordids = new Array();\n\n      if (V.loadallrecords) {\n        Y = 0;\n        J = this.totalrecords;\n      }\n\n      var T = 0;\n\n      if (this.virtualmode) {\n        Y = !this.pageable ? V.recordstartindex : this.pagesize * this.pagenum;\n        T = Y;\n        Y = 0;\n        J = this.totalrecords;\n      }\n\n      var ad = V.datafields ? V.datafields.length : 0;\n\n      if (ad == 0) {\n        var e = K[0];\n        var ag = new Array();\n\n        for (var S in e) {\n          var H = S;\n          ag[ag.length] = {\n            name: H\n          };\n        }\n\n        V.datafields = ag;\n        V.generatedfields = V.datafields;\n        ad = ag.length;\n      }\n\n      var U = Y;\n      var af = false;\n\n      for (var aa = Y; aa < J; aa++) {\n        var I = K[aa];\n\n        if (I == undefined) {\n          break;\n        }\n\n        var ai = this.getid(V.id, I, aa);\n\n        if (!this.recordids[ai]) {\n          this.recordids[ai] = I;\n          var L = {};\n          var P = false;\n\n          if (V.hierarchy && V.hierarchy.root) {\n            P = true;\n          }\n\n          for (var Z = 0; Z < ad; Z++) {\n            var Q = V.datafields[Z];\n            var X = \"\";\n\n            if (undefined == Q || Q == null) {\n              continue;\n            }\n\n            if (Q.map) {\n              if (i.isFunction(Q.map)) {\n                X = Q.map(I);\n              } else {\n                var M = Q.map.indexOf(\"[\");\n\n                if (M < 0) {\n                  X = i(Q.map, I);\n\n                  if (X.length == 1) {\n                    X = X.text();\n                  } else {\n                    af = true;\n                    var ah = new Array();\n\n                    for (var ac = 0; ac < X.length; ac++) {\n                      ah.push(i(X[ac]).text());\n                    }\n\n                    X = ah;\n\n                    if (P && ah.length > 0) {\n                      X = ah[0];\n                    }\n                  }\n                } else {\n                  var ae = Q.map.substring(0, M - 1);\n                  var O = Q.map.indexOf(\"]\");\n                  var R = Q.map.substring(M + 1, O);\n                  X = i(ae, I).attr(R);\n\n                  if (X == undefined) {\n                    X = i(I).attr(R);\n                  }\n\n                  if (X == undefined) {\n                    X = \"\";\n                  }\n                }\n\n                if (X == \"\") {\n                  X = i(I).attr(Q.map);\n\n                  if (X == undefined) {\n                    X = \"\";\n                  }\n                }\n              }\n            }\n\n            if (X == \"\") {\n              X = i(Q.name, I);\n\n              if (X.length == 1) {\n                X = X.text();\n              } else {\n                var ah = new Array();\n\n                for (var ac = 0; ac < X.length; ac++) {\n                  ah.push(i(X[ac]).text());\n                }\n\n                X = ah;\n\n                if (P && ah.length > 0) {\n                  X = ah[0];\n                }\n              }\n\n              if (X == \"\") {\n                X = i(I).attr(Q.name);\n\n                if (X == undefined) {\n                  X = \"\";\n                }\n              }\n\n              if (X == \"\") {\n                if (I.nodeName && I.nodeName == Q.name && I.firstChild) {\n                  X = i(I.firstChild).text();\n                }\n              }\n            }\n\n            var W = X;\n            X = this.getvaluebytype(X, Q);\n\n            if (Q.displayname != undefined) {\n              L[Q.displayname] = X;\n            } else {\n              L[Q.name] = X;\n            }\n          }\n\n          if (V.recordendindex <= 0 || Y < V.recordendindex) {\n            ab[T + U] = i.extend({}, L);\n            ab[T + U].uid = ai;\n            this.originaldata[T + U] = i.extend({}, ab[aa]);\n            U++;\n          }\n        }\n      }\n\n      if (V.hierarchy && V.hierarchy.root) {\n        for (var aa = Y; aa < J; aa++) {\n          var I = K[aa];\n          var N = ab[aa];\n\n          if (i(I).parent().length > 0) {\n            var ai = this.getid(V.id, i(I).parents(V.hierarchy.record + \":first\"));\n            N.parentuid = ai;\n          } else {\n            N.parentuid = null;\n          }\n        }\n      }\n\n      this.records = ab;\n      this.cachedrecords = this.records;\n    },\n    loadics: function (N, H) {\n      if (N == null) {\n        return;\n      }\n\n      var S = H.rowDelimiter || this.rowDelimiter || \"\\n\";\n      var R = N.split(S);\n      var K = R.length;\n      var Q = N.split(\"\\r\");\n\n      if (K == 1 && Q.length > 1) {\n        R = Q;\n        K = R.length;\n      }\n\n      this.records = new Array();\n      this.originaldata = new Array();\n      var L = this.records;\n      this.recordids = new Array();\n      var I = 0;\n\n      var P = function (V) {\n        var T = /^(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2})Z)?$/;\n        var U = T.exec(V);\n\n        if (!U) {\n          throw new Error(\"Invalid UNTIL value: \" + V);\n        }\n\n        return new Date(Date.UTC(U[1], U[2] - 1, U[3], U[5] || 0, U[6] || 0, U[7] || 0));\n      };\n\n      for (var M = 0; M < K; M++) {\n        var O = R[M];\n\n        if (O == \"BEGIN:VEVENT\") {\n          var e = {};\n          continue;\n        }\n\n        if (O.indexOf(\"SUMMARY\") >= 0) {\n          e.SUMMARY = O.substring(O.indexOf(\"SUMMARY\") + 8);\n          continue;\n        }\n\n        if (O.indexOf(\"LOCATION\") >= 0) {\n          e.LOCATION = O.substring(O.indexOf(\"LOCATION\") + 9);\n          continue;\n        }\n\n        if (O.indexOf(\"DESCRIPTION\") >= 0) {\n          e.DESCRIPTION = O.substring(O.indexOf(\"DESCRIPTION\") + 12);\n          continue;\n        }\n\n        if (O.indexOf(\"RRULE\") >= 0) {\n          e.RRULE = O.substring(O.indexOf(\"RRULE\") + 6);\n          continue;\n        }\n\n        if (O.indexOf(\"EXDATE\") >= 0) {\n          var J = O.substring(O.indexOf(\"EXDATE\") + 7);\n          e.EXDATE = J;\n          continue;\n        }\n\n        if (O.indexOf(\"DTEND\") >= 0) {\n          e.DTEND = P(O.substring(O.indexOf(\"DTEND\") + 6));\n          continue;\n        }\n\n        if (O.indexOf(\"DTSTART\") >= 0) {\n          e.DTSTART = P(O.substring(O.indexOf(\"DTSTART\") + 8));\n          continue;\n        }\n\n        if (O.indexOf(\"UID\") >= 0) {\n          e.uid = e.UID = O.substring(O.indexOf(\"UID\") + 4);\n          continue;\n        }\n\n        if (O.indexOf(\"STATUS\") >= 0) {\n          e.STATUS = O.substring(O.indexOf(\"STATUS\") + 7);\n          continue;\n        }\n\n        if (O == \"END:VEVENT\") {\n          L.push(e);\n          continue;\n        }\n      }\n\n      this.records = L;\n      this.cachedrecords = this.records;\n    },\n    loadtext: function (Y, P) {\n      if (Y == null) {\n        return;\n      }\n\n      var e = P.rowDelimiter || this.rowDelimiter || \"\\n\";\n      var L = Y.split(e);\n      var J = L.length;\n      var X = Y.split(\"\\r\");\n\n      if (J == 1 && X.length > 1) {\n        L = X;\n        J = L.length;\n      }\n\n      this.totalrecords = this.virtualmode ? P.totalrecords || J : J;\n      this.records = new Array();\n      this.originaldata = new Array();\n      var U = this.records;\n      var R = !this.pageable ? P.recordstartindex : this.pagesize * this.pagenum;\n      this.recordids = new Array();\n\n      if (P.loadallrecords) {\n        R = 0;\n        J = this.totalrecords;\n      }\n\n      var N = 0;\n\n      if (this.virtualmode) {\n        R = !this.pageable ? P.recordstartindex : this.pagesize * this.pagenum;\n        N = R;\n        R = 0;\n        J = this.totalrecords;\n      }\n\n      var V = P.datafields.length;\n      var O = P.columnDelimiter || this.columnDelimiter;\n\n      if (!O) {\n        O = P.datatype === \"tab\" || P.datatype === \"tsv\" ? \"\\t\" : \",\";\n      }\n\n      for (var T = R; T < J; T++) {\n        var I = L[T];\n        var W = null;\n\n        if (!this.recordids[W]) {\n          if (P.id == null) {\n            W = T;\n            this.recordids[W] = I;\n          }\n\n          var K = {};\n          var H = L[T].split(O);\n\n          for (var S = 0; S < V; S++) {\n            if (S >= H.length) {\n              continue;\n            }\n\n            var M = P.datafields[S];\n            var Q = H[S];\n\n            if (M.map && i.isFunction(M.map)) {\n              Q = M.map(I);\n            }\n\n            if (M.type) {\n              Q = this.getvaluebytype(Q, M);\n            }\n\n            var Z = M.map || M.name || S.toString();\n            K[Z] = Q;\n\n            if (P.id != null) {\n              if (P.id === M.name) {\n                W = Q;\n                this.recordids[W] = I;\n              }\n            }\n          }\n\n          if (W == null) {\n            W = T;\n          }\n\n          U[N + T] = i.extend({}, K);\n          U[N + T].uid = W;\n          this.originaldata[N + T] = i.extend({}, U[T]);\n        }\n      }\n\n      this.records = U;\n      this.cachedrecords = this.records;\n    },\n    getvaluebytype: function (L, H) {\n      var J = L;\n\n      if (L == null) {\n        return L;\n      }\n\n      if (i.isArray(L) && H.type != \"array\") {\n        for (var I = 0; I < L.length; I++) {\n          L[I] = this.getvaluebytype(L[I], H);\n        }\n\n        return L;\n      }\n\n      if (H.type == \"date\") {\n        if (L == \"NaN\") {\n          L = \"\";\n        } else {\n          if (L && L instanceof Date) {\n            return L;\n          }\n\n          var K = new Date(L);\n\n          if (typeof L == \"string\") {\n            if (H.format) {\n              var e = i.jqx.dataFormat.parsedate(L, H.format);\n\n              if (e != null) {\n                K = e;\n              }\n            }\n          }\n\n          if (K.toString() == \"NaN\" || K.toString() == \"Invalid Date\") {\n            if (i.jqx.dataFormat) {\n              L = i.jqx.dataFormat.tryparsedate(L);\n            } else {\n              L = K;\n            }\n          } else {\n            L = K;\n          }\n\n          if (L == null) {\n            L = J;\n          }\n        }\n      } else {\n        if (H.type == \"float\" || H.type == \"number\" || H.type == \"decimal\") {\n          if (L == \"NaN\") {\n            L = \"\";\n          } else {\n            var L = parseFloat(L);\n\n            if (isNaN(L)) {\n              L = J;\n            }\n          }\n        } else {\n          if (H.type == \"int\" || H.type == \"integer\") {\n            var L = parseInt(L);\n\n            if (isNaN(L)) {\n              L = J;\n            }\n          } else {\n            if (H.type == \"bool\" || H.type == \"boolean\") {\n              if (L != null) {\n                if (L.toLowerCase != undefined) {\n                  if (L.toLowerCase() == \"false\") {\n                    L = false;\n                  } else {\n                    if (L.toLowerCase() == \"true\") {\n                      L = true;\n                    }\n                  }\n                }\n              }\n\n              if (L == 1) {\n                L = true;\n              } else {\n                if (L == 0 && L !== \"\") {\n                  L = false;\n                } else {\n                  L = \"\";\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return L;\n    }\n  };\n  i.jqx.dataFormat = {};\n  i.extend(i.jqx.dataFormat, {\n    regexTrim: /^\\s+|\\s+$/g,\n    regexInfinity: /^[+-]?infinity$/i,\n    regexHex: /^0x[a-f0-9]+$/i,\n    regexParseFloat: /^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/,\n    toString: Object.prototype.toString,\n    isBoolean: function (e) {\n      return typeof e === \"boolean\";\n    },\n    isObject: function (e) {\n      return e && (typeof e === \"object\" || i.isFunction(e)) || false;\n    },\n    isDate: function (e) {\n      return e instanceof Date;\n    },\n    arrayIndexOf: function (J, I) {\n      if (J.indexOf) {\n        return J.indexOf(I);\n      }\n\n      for (var e = 0, H = J.length; e < H; e++) {\n        if (J[e] === I) {\n          return e;\n        }\n      }\n\n      return -1;\n    },\n    isString: function (e) {\n      return typeof e === \"string\";\n    },\n    isNumber: function (e) {\n      return typeof e === \"number\" && isFinite(e);\n    },\n    isNull: function (e) {\n      return e === null;\n    },\n    isUndefined: function (e) {\n      return typeof e === \"undefined\";\n    },\n    isValue: function (e) {\n      return this.isObject(e) || this.isString(e) || this.isNumber(e) || this.isBoolean(e);\n    },\n    isEmpty: function (e) {\n      if (!this.isString(e) && this.isValue(e)) {\n        return false;\n      } else {\n        if (!this.isValue(e)) {\n          return true;\n        }\n      }\n\n      e = i.trim(e).replace(/\\&nbsp\\;/ig, \"\").replace(/\\&#160\\;/ig, \"\");\n      return e === \"\";\n    },\n    startsWith: function (H, e) {\n      return H.indexOf(e) === 0;\n    },\n    endsWith: function (H, e) {\n      return H.substr(H.length - e.length) === e;\n    },\n    trim: function (e) {\n      return (e + \"\").replace(this.regexTrim, \"\");\n    },\n    isArray: function (e) {\n      return this.toString.call(e) === \"[object Array]\";\n    },\n    defaultcalendar: function () {\n      var e = {\n        \"/\": \"/\",\n        \":\": \":\",\n        firstDay: 0,\n        days: {\n          names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n          namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n        },\n        months: {\n          names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n          namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n        },\n        AM: [\"AM\", \"am\", \"AM\"],\n        PM: [\"PM\", \"pm\", \"PM\"],\n        eras: [{\n          name: \"A.D.\",\n          start: null,\n          offset: 0\n        }],\n        twoDigitYearMax: 2029,\n        patterns: {\n          d: \"M/d/yyyy\",\n          D: \"dddd, MMMM dd, yyyy\",\n          t: \"h:mm tt\",\n          T: \"h:mm:ss tt\",\n          f: \"dddd, MMMM dd, yyyy h:mm tt\",\n          F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n          M: \"MMMM dd\",\n          Y: \"yyyy MMMM\",\n          S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n          ISO: \"yyyy-MM-dd hh:mm:ss\",\n          ISO2: \"yyyy-MM-dd HH:mm:ss\",\n          d1: \"dd.MM.yyyy\",\n          d2: \"dd-MM-yyyy\",\n          d3: \"MM-dd-yyyy\",\n          zone1: \"yyyy-MM-ddTHH:mm:ss-HH:mm\",\n          zone2: \"yyyy-MM-ddTHH:mm:ss+HH:mm\",\n          custom: \"yyyy-MM-ddTHH:mm:ss.fff\",\n          custom2: \"yyyy-MM-dd HH:mm:ss.fff\"\n        },\n        percentsymbol: \"%\",\n        currencysymbol: \"$\",\n        currencysymbolposition: \"before\",\n        decimalseparator: \".\",\n        thousandsseparator: \",\"\n      };\n      return e;\n    },\n    expandFormat: function (K, J) {\n      J = J || \"F\";\n      var I,\n          H = K.patterns,\n          e = J.length;\n\n      if (e === 1) {\n        I = H[J];\n\n        if (!I) {\n          throw \"Invalid date format string '\" + J + \"'.\";\n        }\n\n        J = I;\n      } else {\n        if (e === 2 && J.charAt(0) === \"%\") {\n          J = J.charAt(1);\n        }\n      }\n\n      return J;\n    },\n    getEra: function (I, H) {\n      if (!H) {\n        return 0;\n      }\n\n      if (typeof I === \"string\") {\n        return 0;\n      }\n\n      var L,\n          K = I.getTime();\n\n      for (var J = 0, e = H.length; J < e; J++) {\n        L = H[J].start;\n\n        if (L === null || K >= L) {\n          return J;\n        }\n      }\n\n      return 0;\n    },\n    toUpper: function (e) {\n      return e.split(\"\\u00A0\").join(\" \").toUpperCase();\n    },\n    toUpperArray: function (e) {\n      var J = [];\n\n      for (var I = 0, H = e.length; I < H; I++) {\n        J[I] = this.toUpper(e[I]);\n      }\n\n      return J;\n    },\n    getEraYear: function (H, J, e, K) {\n      var I = H.getFullYear();\n\n      if (!K && J.eras) {\n        I -= J.eras[e].offset;\n      }\n\n      return I;\n    },\n    toUpper: function (e) {\n      if (e) {\n        return e.toUpperCase();\n      }\n\n      return \"\";\n    },\n    getDayIndex: function (K, J, H) {\n      var e,\n          L = K.days,\n          I = K._upperDays;\n\n      if (!I) {\n        K._upperDays = I = [this.toUpperArray(L.names), this.toUpperArray(L.namesAbbr), this.toUpperArray(L.namesShort)];\n      }\n\n      J = J.toUpperCase();\n\n      if (H) {\n        e = this.arrayIndexOf(I[1], J);\n\n        if (e === -1) {\n          e = this.arrayIndexOf(I[2], J);\n        }\n      } else {\n        e = this.arrayIndexOf(I[0], J);\n      }\n\n      return e;\n    },\n    getMonthIndex: function (N, M, I) {\n      var e = N.months,\n          H = N.monthsGenitive || N.months,\n          K = N._upperMonths,\n          L = N._upperMonthsGen;\n\n      if (!K) {\n        N._upperMonths = K = [this.toUpperArray(e.names), this.toUpperArray(e.namesAbbr)];\n        N._upperMonthsGen = L = [this.toUpperArray(H.names), this.toUpperArray(H.namesAbbr)];\n      }\n\n      M = this.toUpper(M);\n      var J = this.arrayIndexOf(I ? K[1] : K[0], M);\n\n      if (J < 0) {\n        J = this.arrayIndexOf(I ? L[1] : L[0], M);\n      }\n\n      return J;\n    },\n    appendPreOrPostMatch: function (J, e) {\n      var I = 0,\n          L = false;\n\n      for (var K = 0, H = J.length; K < H; K++) {\n        var M = J.charAt(K);\n\n        switch (M) {\n          case \"'\":\n            if (L) {\n              e.push(\"'\");\n            } else {\n              I++;\n            }\n\n            L = false;\n            break;\n\n          case \"\\\\\":\n            if (L) {\n              e.push(\"\\\\\");\n            }\n\n            L = !L;\n            break;\n\n          default:\n            e.push(M);\n            L = false;\n            break;\n        }\n      }\n\n      return I;\n    },\n    getTokenRegExp: function () {\n      return /\\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g;\n    },\n    formatlink: function (e, I) {\n      var H = \"\";\n\n      if (I && I.target) {\n        H = \"target=\" + I.target;\n      }\n\n      if (H != \"\") {\n        return \"<a \" + H + ' href=\"' + e + '\">' + e + \"</a>\";\n      }\n\n      return '<a href=\"' + e + '\">' + e + \"</a>\";\n    },\n    formatemail: function (e) {\n      return '<a href=\"mailto:' + e + '\">' + e + \"</a>\";\n    },\n    formatNumber: function (e, I, H) {\n      return this.formatnumber(e, I, H);\n    },\n    formatnumber: function (T, S, O) {\n      if (O == undefined || O == null || O == \"\") {\n        O = this.defaultcalendar();\n      }\n\n      if (S === \"\" || S === null) {\n        return T;\n      }\n\n      if (!this.isNumber(T)) {\n        T *= 1;\n      }\n\n      var P;\n\n      if (S.length > 1) {\n        P = parseInt(S.slice(1), 10);\n      }\n\n      var V = {};\n      var Q = S.charAt(0).toUpperCase();\n      V.thousandsSeparator = O.thousandsseparator;\n      V.decimalSeparator = O.decimalseparator;\n\n      switch (Q) {\n        case \"D\":\n        case \"d\":\n        case \"F\":\n        case \"f\":\n          V.decimalPlaces = P;\n          break;\n\n        case \"N\":\n        case \"n\":\n          V.decimalPlaces = 0;\n          break;\n\n        case \"C\":\n        case \"c\":\n          V.decimalPlaces = P;\n\n          if (O.currencysymbolposition == \"before\") {\n            V.prefix = O.currencysymbol;\n          } else {\n            V.suffix = O.currencysymbol;\n          }\n\n          break;\n\n        case \"P\":\n        case \"p\":\n          V.suffix = O.percentsymbol;\n          V.decimalPlaces = P;\n          break;\n\n        default:\n          throw \"Bad number format specifier: \" + Q;\n      }\n\n      if (this.isNumber(T)) {\n        var K = T < 0;\n        var I = T + \"\";\n        var R = V.decimalSeparator ? V.decimalSeparator : \".\";\n        var e;\n\n        if (this.isNumber(V.decimalPlaces)) {\n          var L = V.decimalPlaces;\n          var N = Math.pow(10, L);\n          I = (T * N).toFixed(0) / N + \"\";\n          e = I.lastIndexOf(\".\");\n\n          if (L > 0) {\n            if (e < 0) {\n              I += R;\n              e = I.length - 1;\n            } else {\n              if (R !== \".\") {\n                I = I.replace(\".\", R);\n              }\n            }\n\n            while (I.length - 1 - e < L) {\n              I += \"0\";\n            }\n          }\n        } else {\n          var I = T + \"\";\n          e = I.lastIndexOf(\".\");\n\n          if (e > 0 && L == undefined) {\n            if (R !== \".\") {\n              I = I.replace(\".\", R);\n            }\n          }\n        }\n\n        if (V.thousandsSeparator) {\n          var U = V.thousandsSeparator;\n          e = I.lastIndexOf(R);\n          e = e > -1 ? e : I.length;\n          var J = I.substring(e);\n          var H = -1;\n\n          for (var M = e; M > 0; M--) {\n            H++;\n\n            if (H % 3 === 0 && M !== e && (!K || M > 1)) {\n              J = U + J;\n            }\n\n            J = I.charAt(M - 1) + J;\n          }\n\n          I = J;\n        }\n\n        I = V.prefix ? V.prefix + I : I;\n        I = V.suffix ? I + V.suffix : I;\n        return I;\n      } else {\n        return T;\n      }\n    },\n    tryparsedate: function (ak, al) {\n      if (al == undefined || al == null) {\n        al = this.defaultcalendar();\n      }\n\n      var P = this;\n\n      if (ak == \"\") {\n        return null;\n      }\n\n      if (ak != null && !ak.substring) {\n        ak = ak.toString();\n      }\n\n      if (ak != null && ak.substring(0, 6) == \"/Date(\") {\n        var au = /^\\/Date\\((-?\\d+)(\\+|-)?(\\d+)?\\)\\/$/;\n        var ar = new Date(+ak.replace(/\\/Date\\((\\d+)\\)\\//, \"$1\"));\n\n        if (ar == \"Invalid Date\") {\n          var an = ak.match(/^\\/Date\\((\\d+)([-+]\\d\\d)(\\d\\d)\\)\\/$/);\n          var ar = null;\n\n          if (an) {\n            ar = new Date(1 * an[1] + 3600000 * an[2] + 60000 * an[3]);\n          }\n        }\n\n        if (ar == null || ar == \"Invalid Date\" || isNaN(ar)) {\n          var Q = au.exec(ak);\n\n          if (Q) {\n            var T = new Date(parseInt(Q[1]));\n\n            if (Q[2]) {\n              var Z = parseInt(Q[3]);\n\n              if (Q[2] === \"-\") {\n                Z = -Z;\n              }\n\n              var V = T.getUTCMinutes();\n              T.setUTCMinutes(V - Z);\n            }\n\n            if (!isNaN(T.valueOf())) {\n              return T;\n            }\n          }\n        }\n\n        return ar;\n      }\n\n      var N = al.patterns;\n\n      for (var S in N) {\n        ar = P.parsedate(ak, N[S], al);\n\n        if (ar) {\n          if (S == \"ISO\") {\n            var ac = P.parsedate(ak, N.ISO2, al);\n\n            if (ac) {\n              return ac;\n            }\n          }\n\n          return ar;\n        }\n      }\n\n      if (ak != null) {\n        var ac = null;\n        var L = [\":\", \"/\", \"-\"];\n        var ap = true;\n\n        for (var O = 0; O < L.length; O++) {\n          if (ak.indexOf(L[O]) != -1) {\n            ap = false;\n          }\n        }\n\n        if (ap) {\n          var av = new Number(ak);\n\n          if (!isNaN(av)) {\n            return new Date(av);\n          }\n        }\n      }\n\n      if (i.type(ak) === \"string\") {\n        var ag = P;\n        ak = ag.trim(ak);\n        var am = [\":\", \"/\", \"-\", \" \", \",\"];\n\n        var M = function (az, ax, ay) {\n          return ay.replace(new RegExp(az, \"g\"), ax);\n        };\n\n        ak = M(\", \", \",\", ak);\n        var I = \"\";\n        var Y = ak;\n\n        if (ak.indexOf(\":\") >= 0) {\n          I = ak.substring(ak.indexOf(\":\") - 2);\n          I = ag.trim(I);\n          Y = ak.substring(0, ak.indexOf(\":\") - 2);\n        } else {\n          if (ak.toUpperCase().indexOf(\"AM\") >= 0) {\n            I = ak.substring(ak.toUpperCase().indexOf(\"AM\") - 2);\n            I = ag.trim(I);\n            Y = ak.substring(0, ak.toUpperCase().indexOf(\"AM\") - 2);\n          } else {\n            if (ak.toUpperCase().indexOf(\"PM\") >= 0) {\n              I = ak.substring(ak.toUpperCase().indexOf(\"PM\") - 2);\n              I = ag.trim(I);\n              Y = ak.substring(0, ak.toUpperCase().indexOf(\"PM\") - 2);\n            }\n          }\n        }\n\n        var e = new Date();\n        var aj = false;\n\n        if (Y) {\n          for (var aq = 0; aq < am.length; aq++) {\n            if (Y.indexOf(am[aq]) >= 0) {\n              L = Y.split(am[aq]);\n              break;\n            }\n          }\n\n          var H = new Array();\n          var W = new Array();\n          var ae = new Array();\n          var R = null;\n          var aw = null;\n\n          for (var aq = 0; aq < L.length; aq++) {\n            var O = L[aq];\n            var ad = ag.parsedate(O, \"d\", al) || ag.parsedate(O, \"dd\", al) || ag.parsedate(O, \"ddd\", al) || ag.parsedate(O, \"dddd\", al);\n\n            if (ad) {\n              if (O.length <= 2) {\n                R = aq;\n                H.push(ad.getDate());\n                break;\n              }\n            }\n          }\n\n          for (var aq = 0; aq < L.length; aq++) {\n            var O = L[aq];\n            var U = ag.parsedate(O, \"M\", al) || ag.parsedate(O, \"MM\", al) || ag.parsedate(O, \"MMM\", al) || ag.parsedate(O, \"MMMM\", al);\n\n            if (U) {\n              if (R != undefined && R == aq) {\n                continue;\n              }\n\n              W.push(U.getMonth());\n\n              if (O.length > 2) {\n                aw = aq;\n                break;\n              }\n            }\n          }\n\n          for (var aq = 0; aq < L.length; aq++) {\n            var O = L[aq];\n            var af = ag.parsedate(O, \"yyyy\", al);\n\n            if (af) {\n              if (R != undefined && R == aq) {\n                continue;\n              }\n\n              if (aw != undefined && aw == aq) {\n                continue;\n              }\n\n              ae.push(af.getFullYear());\n            }\n          }\n\n          var ao = new Array();\n\n          for (var at = 0; at < H.length; at++) {\n            for (var an = 0; an < W.length; an++) {\n              for (var ai = 0; ai < ae.length; ai++) {\n                var T = new Date(ae[ai], W[an], H[at]);\n\n                if (ae[ai] < 1970) {\n                  T.setFullYear(ae[ai]);\n                }\n\n                if (T.getTime() != NaN) {\n                  ao.push(T);\n                }\n              }\n            }\n          }\n\n          if (ao.length > 0) {\n            e = ao[0];\n            aj = true;\n          }\n        }\n\n        if (I) {\n          var ah = I.indexOf(\":\") >= 0 ? I.split(\":\") : I;\n          var K = ag.parsedate(I, \"h:mm tt\", al) || ag.parsedate(I, \"h:mm:ss tt\", al) || ag.parsedate(I, \"HH:mm:ss.fff\", al) || ag.parsedate(I, \"HH:mm:ss.ff\", al) || ag.parsedate(I, \"HH:mm:ss.tttt\", al) || ag.parsedate(I, \"HH:mm:ss\", al) || ag.parsedate(I, \"HH:mm\", al) || ag.parsedate(I, \"HH\", al);\n          var X = 0,\n              J = 0,\n              aa = 0,\n              ab = 0;\n\n          if (K && K.getTime() != NaN) {\n            X = K.getHours();\n            J = K.getMinutes();\n            aa = K.getSeconds();\n            ab = K.getMilliseconds();\n          } else {\n            if (ah.length == 1) {\n              X = parseInt(ah[0]);\n            }\n\n            if (ah.length == 2) {\n              X = parseInt(ah[0]);\n              J = parseInt(ah[1]);\n            }\n\n            if (ah.length == 3) {\n              X = parseInt(ah[0]);\n              J = parseInt(ah[1]);\n\n              if (ah[2].indexOf(\".\") >= 0) {\n                aa = parseInt(ah[2].toString().split(\".\")[0]);\n                ab = parseInt(ah[2].toString().split(\".\")[1]);\n              } else {\n                aa = parseInt(ah[2]);\n              }\n            }\n\n            if (ah.length == 4) {\n              X = parseInt(ah[0]);\n              J = parseInt(ah[1]);\n              aa = parseInt(ah[2]);\n              ab = parseInt(ah[3]);\n            }\n          }\n\n          if (e && !isNaN(X) && !isNaN(J) && !isNaN(aa) && !isNaN(ab)) {\n            e.setHours(X, J, aa, ab);\n            aj = true;\n          }\n        }\n\n        if (aj) {\n          return e;\n        }\n      }\n\n      return null;\n    },\n    getparseregexp: function (e, R) {\n      var T = e._parseRegExp;\n\n      if (!T) {\n        e._parseRegExp = T = {};\n      } else {\n        var K = T[R];\n\n        if (K) {\n          return K;\n        }\n      }\n\n      var Q = this.expandFormat(e, R).replace(/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g, \"\\\\\\\\$1\"),\n          O = [\"^\"],\n          H = [],\n          N = 0,\n          J = 0,\n          W = this.getTokenRegExp(),\n          L;\n\n      while ((L = W.exec(Q)) !== null) {\n        var V = Q.slice(N, L.index);\n        N = W.lastIndex;\n        J += this.appendPreOrPostMatch(V, O);\n\n        if (J % 2) {\n          O.push(L[0]);\n          continue;\n        }\n\n        var I = L[0],\n            M = I.length,\n            S;\n\n        switch (I) {\n          case \"dddd\":\n          case \"ddd\":\n          case \"MMMM\":\n          case \"MMM\":\n          case \"gg\":\n          case \"g\":\n            S = \"(\\\\D+)\";\n            break;\n\n          case \"tt\":\n          case \"t\":\n            S = \"(\\\\D*)\";\n            break;\n\n          case \"yyyy\":\n          case \"fff\":\n          case \"ff\":\n          case \"f\":\n            S = \"(\\\\d{\" + M + \"})\";\n            break;\n\n          case \"dd\":\n          case \"d\":\n          case \"MM\":\n          case \"M\":\n          case \"yy\":\n          case \"y\":\n          case \"HH\":\n          case \"H\":\n          case \"hh\":\n          case \"h\":\n          case \"mm\":\n          case \"m\":\n          case \"ss\":\n          case \"s\":\n            S = \"(\\\\d\\\\d?)\";\n            break;\n\n          case \"zzz\":\n            S = \"([+-]?\\\\d\\\\d?:\\\\d{2})\";\n            break;\n\n          case \"zz\":\n          case \"z\":\n            S = \"([+-]?\\\\d\\\\d?)\";\n            break;\n\n          case \"/\":\n            S = \"(\\\\\" + e[\"/\"] + \")\";\n            break;\n\n          default:\n            throw \"Invalid date format pattern '\" + I + \"'.\";\n            break;\n        }\n\n        if (S) {\n          O.push(S);\n        }\n\n        H.push(L[0]);\n      }\n\n      this.appendPreOrPostMatch(Q.slice(N), O);\n      O.push(\"$\");\n      var U = O.join(\"\").replace(/\\s+/g, \"\\\\s+\"),\n          P = {\n        regExp: U,\n        groups: H\n      };\n      return T[R] = P;\n    },\n    outOfRange: function (I, e, H) {\n      return I < e || I > H;\n    },\n    expandYear: function (L, J) {\n      var H = new Date(),\n          e = this.getEra(H);\n\n      if (J < 100) {\n        var I = L.twoDigitYearMax;\n        I = typeof I === \"string\" ? new Date().getFullYear() % 100 + parseInt(I, 10) : I;\n        var K = this.getEraYear(H, L, e);\n        J += K - K % 100;\n\n        if (J > I) {\n          J -= 100;\n        }\n      }\n\n      return J;\n    },\n    parsedate: function (ab, ai, W) {\n      if (W == undefined || W == null) {\n        W = this.defaultcalendar();\n      }\n\n      ab = this.trim(ab);\n      var T = W,\n          an = this.getparseregexp(T, ai),\n          N = new RegExp(an.regExp).exec(ab);\n\n      if (N === null) {\n        return null;\n      }\n\n      var aj = an.groups,\n          Z = null,\n          R = null,\n          am = null,\n          al = null,\n          S = null,\n          L = 0,\n          ae,\n          ad = 0,\n          ak = 0,\n          e = 0,\n          I = null,\n          U = false;\n\n      for (var af = 0, ah = aj.length; af < ah; af++) {\n        var H = N[af + 1];\n\n        if (H) {\n          var aa = aj[af],\n              K = aa.length,\n              M = parseInt(H, 10);\n\n          switch (aa) {\n            case \"dd\":\n            case \"d\":\n              al = M;\n\n              if (this.outOfRange(al, 1, 31)) {\n                return null;\n              }\n\n              break;\n\n            case \"MMM\":\n            case \"MMMM\":\n              am = this.getMonthIndex(T, H, K === 3);\n\n              if (this.outOfRange(am, 0, 11)) {\n                return null;\n              }\n\n              break;\n\n            case \"M\":\n            case \"MM\":\n              am = M - 1;\n\n              if (this.outOfRange(am, 0, 11)) {\n                return null;\n              }\n\n              break;\n\n            case \"y\":\n            case \"yy\":\n            case \"yyyy\":\n              R = K < 4 ? this.expandYear(T, M) : M;\n\n              if (this.outOfRange(R, 0, 9999)) {\n                return null;\n              }\n\n              break;\n\n            case \"h\":\n            case \"hh\":\n              L = M;\n\n              if (L === 12) {\n                L = 0;\n              }\n\n              if (this.outOfRange(L, 0, 11)) {\n                return null;\n              }\n\n              break;\n\n            case \"H\":\n            case \"HH\":\n              L = M;\n\n              if (this.outOfRange(L, 0, 23)) {\n                return null;\n              }\n\n              break;\n\n            case \"m\":\n            case \"mm\":\n              ad = M;\n\n              if (this.outOfRange(ad, 0, 59)) {\n                return null;\n              }\n\n              break;\n\n            case \"s\":\n            case \"ss\":\n              ak = M;\n\n              if (this.outOfRange(ak, 0, 59)) {\n                return null;\n              }\n\n              break;\n\n            case \"tt\":\n            case \"t\":\n              U = T.PM && (H === T.PM[0] || H === T.PM[1] || H === T.PM[2]);\n\n              if (!U && (!T.AM || H !== T.AM[0] && H !== T.AM[1] && H !== T.AM[2])) {\n                return null;\n              }\n\n              break;\n\n            case \"f\":\n            case \"ff\":\n            case \"fff\":\n              e = M * Math.pow(10, 3 - K);\n\n              if (this.outOfRange(e, 0, 999)) {\n                return null;\n              }\n\n              break;\n\n            case \"ddd\":\n            case \"dddd\":\n              S = this.getDayIndex(T, H, K === 3);\n\n              if (this.outOfRange(S, 0, 6)) {\n                return null;\n              }\n\n              break;\n\n            case \"zzz\":\n              var J = H.split(/:/);\n\n              if (J.length !== 2) {\n                return null;\n              }\n\n              ae = parseInt(J[0], 10);\n\n              if (this.outOfRange(ae, -12, 13)) {\n                return null;\n              }\n\n              var P = parseInt(J[1], 10);\n\n              if (this.outOfRange(P, 0, 59)) {\n                return null;\n              }\n\n              I = ae * 60 + (this.startsWith(H, \"-\") ? -P : P);\n              break;\n\n            case \"z\":\n            case \"zz\":\n              ae = M;\n\n              if (this.outOfRange(ae, -12, 13)) {\n                return null;\n              }\n\n              I = ae * 60;\n              break;\n\n            case \"g\":\n            case \"gg\":\n              var V = H;\n\n              if (!V || !T.eras) {\n                return null;\n              }\n\n              V = this.trim(V.toLowerCase());\n\n              for (var ag = 0, ac = T.eras.length; ag < ac; ag++) {\n                if (V === T.eras[ag].name.toLowerCase()) {\n                  Z = ag;\n                  break;\n                }\n              }\n\n              if (Z === null) {\n                return null;\n              }\n\n              break;\n          }\n        }\n      }\n\n      var Q = new Date(),\n          Y,\n          O = T.convert;\n      Y = Q.getFullYear();\n\n      if (R === null) {\n        R = Y;\n      } else {\n        if (T.eras) {\n          R += T.eras[Z || 0].offset;\n        }\n      }\n\n      if (am === null) {\n        am = 0;\n      }\n\n      if (al === null) {\n        al = 1;\n      }\n\n      if (O) {\n        Q = O.toGregorian(R, am, al);\n\n        if (Q === null) {\n          return null;\n        }\n      } else {\n        Q.setFullYear(R, am, al);\n\n        if (Q.getDate() !== al) {\n          return null;\n        }\n\n        if (S !== null && Q.getDay() !== S) {\n          return null;\n        }\n      }\n\n      if (U && L < 12) {\n        L += 12;\n      }\n\n      Q.setHours(L, ad, ak, e);\n\n      if (I !== null) {\n        var X = Q.getMinutes() - (I + Q.getTimezoneOffset());\n        Q.setHours(Q.getHours() + parseInt(X / 60, 10), X % 60);\n      }\n\n      return Q;\n    },\n    cleardatescache: function () {\n      this.datescache = new Array();\n    },\n    formatDate: function (e, I, H) {\n      return this.formatdate(e, I, H);\n    },\n    formatdate: function (Z, ad, U) {\n      if (U == undefined || U == null) {\n        U = this.defaultcalendar();\n      }\n\n      if (typeof Z === \"string\") {\n        return Z;\n      }\n\n      var J = Z.toString() + \"_\" + ad;\n\n      if (this.datescache && this.datescache[J]) {\n        if (ad.indexOf(\"f\") == -1) {\n          return this.datescache[J];\n        }\n      }\n\n      if (!ad || !ad.length || ad === \"i\") {\n        var af;\n        af = this.formatDate(Z, U.patterns.F, U);\n        return af;\n      }\n\n      var aa = U.eras,\n          H = ad === \"s\";\n      ad = this.expandFormat(U, ad);\n      af = [];\n      var M,\n          ab = [\"0\", \"00\", \"000\"],\n          Q,\n          R,\n          e = /([^d]|^)(d|dd)([^d]|$)/g,\n          ae = 0,\n          W = this.getTokenRegExp(),\n          I;\n\n      function O(ag, aj) {\n        var ai,\n            ah = ag + \"\";\n\n        if (aj > 1 && ah.length < aj) {\n          ai = ab[aj - 2] + ah;\n          return ai.substr(ai.length - aj, aj);\n        } else {\n          ai = ah;\n        }\n\n        return ai;\n      }\n\n      function ac() {\n        if (Q || R) {\n          return Q;\n        }\n\n        Q = e.test(ad);\n        R = true;\n        return Q;\n      }\n\n      function K(ah, ag) {\n        if (I) {\n          return I[ag];\n        }\n\n        if (ah.getMonth != undefined) {\n          switch (ag) {\n            case 0:\n              return ah.getFullYear();\n\n            case 1:\n              return ah.getMonth();\n\n            case 2:\n              return ah.getDate();\n          }\n        }\n      }\n\n      for (;;) {\n        var N = W.lastIndex,\n            V = W.exec(ad);\n        var S = ad.slice(N, V ? V.index : ad.length);\n        ae += this.appendPreOrPostMatch(S, af);\n\n        if (!V) {\n          break;\n        }\n\n        if (ae % 2) {\n          af.push(V[0]);\n          continue;\n        }\n\n        var X = V[0],\n            L = X.length;\n\n        switch (X) {\n          case \"ddd\":\n          case \"dddd\":\n            var T = L === 3 ? U.days.namesAbbr : U.days.names;\n            af.push(T[Z.getDay()]);\n            break;\n\n          case \"d\":\n          case \"dd\":\n            Q = true;\n            af.push(O(K(Z, 2), L));\n            break;\n\n          case \"MMM\":\n          case \"MMMM\":\n            var Y = K(Z, 1);\n            af.push(U.months[L === 3 ? \"namesAbbr\" : \"names\"][Y]);\n            break;\n\n          case \"M\":\n          case \"MM\":\n            af.push(O(K(Z, 1) + 1, L));\n            break;\n\n          case \"y\":\n          case \"yy\":\n          case \"yyyy\":\n            Y = this.getEraYear(Z, U, this.getEra(Z, aa), H);\n\n            if (L < 4) {\n              Y = Y % 100;\n            }\n\n            af.push(O(Y, L));\n            break;\n\n          case \"h\":\n          case \"hh\":\n            M = Z.getHours() % 12;\n\n            if (M === 0) {\n              M = 12;\n            }\n\n            af.push(O(M, L));\n            break;\n\n          case \"H\":\n          case \"HH\":\n            af.push(O(Z.getHours(), L));\n            break;\n\n          case \"m\":\n          case \"mm\":\n            af.push(O(Z.getMinutes(), L));\n            break;\n\n          case \"s\":\n          case \"ss\":\n            af.push(O(Z.getSeconds(), L));\n            break;\n\n          case \"t\":\n          case \"tt\":\n            Y = Z.getHours() < 12 ? U.AM ? U.AM[0] : \" \" : U.PM ? U.PM[0] : \" \";\n            af.push(L === 1 ? Y.charAt(0) : Y);\n            break;\n\n          case \"f\":\n          case \"ff\":\n          case \"fff\":\n            af.push(O(Z.getMilliseconds(), 3).substr(0, L));\n            break;\n\n          case \"z\":\n          case \"zz\":\n            M = Z.getTimezoneOffset() / 60;\n            af.push((M <= 0 ? \"+\" : \"-\") + O(Math.floor(Math.abs(M)), L));\n            break;\n\n          case \"zzz\":\n            M = Z.getTimezoneOffset() / 60;\n            af.push((M <= 0 ? \"+\" : \"-\") + O(Math.floor(Math.abs(M)), 2) + \":\" + O(Math.abs(Z.getTimezoneOffset() % 60), 2));\n            break;\n\n          case \"g\":\n          case \"gg\":\n            if (U.eras) {\n              af.push(U.eras[this.getEra(Z, aa)].name);\n            }\n\n            break;\n\n          case \"/\":\n            af.push(U[\"/\"]);\n            break;\n\n          default:\n            throw \"Invalid date format pattern '\" + X + \"'.\";\n            break;\n        }\n      }\n\n      var P = af.join(\"\");\n\n      if (!this.datescache) {\n        this.datescache = new Array();\n      }\n\n      this.datescache[J] = P;\n      return P;\n    }\n  });\n  i.jqx.data = {};\n  var l,\n      E,\n      p = /#.*$/,\n      a = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,\n      f = /^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,\n      j = /^(?:GET|HEAD)$/,\n      o = /^\\/\\//,\n      k = /\\?/,\n      b = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      d = /([?&])_=[^&]*/,\n      h = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\n      t = /\\s+/,\n      F = i.fn.load,\n      G = {},\n      C = {},\n      q = [\"*/\"] + [\"*\"];\n\n  try {\n    E = location.href;\n  } catch (A) {\n    E = document.createElement(\"a\");\n    E.href = \"\";\n    E = E.href;\n  }\n\n  l = h.exec(E.toLowerCase()) || [];\n\n  function r(e) {\n    return function (K, M) {\n      if (typeof K !== \"string\") {\n        M = K;\n        K = \"*\";\n      }\n\n      var H,\n          N,\n          O,\n          J = K.toLowerCase().split(t),\n          I = 0,\n          L = J.length;\n\n      if (i.isFunction(M)) {\n        for (; I < L; I++) {\n          H = J[I];\n          O = /^\\+/.test(H);\n\n          if (O) {\n            H = H.substr(1) || \"*\";\n          }\n\n          N = e[H] = e[H] || [];\n          N[O ? \"unshift\" : \"push\"](M);\n        }\n      }\n    };\n  }\n\n  function v(H, Q, L, O, N, J) {\n    N = N || Q.dataTypes[0];\n    J = J || {};\n    J[N] = true;\n    var P,\n        M = H[N],\n        I = 0,\n        e = M ? M.length : 0,\n        K = H === G;\n\n    for (; I < e && (K || !P); I++) {\n      P = M[I](Q, L, O);\n\n      if (typeof P === \"string\") {\n        if (!K || J[P]) {\n          P = undefined;\n        } else {\n          Q.dataTypes.unshift(P);\n          P = v(H, Q, L, O, P, J);\n        }\n      }\n    }\n\n    if ((K || !P) && !J[\"*\"]) {\n      P = v(H, Q, L, O, \"*\", J);\n    }\n\n    return P;\n  }\n\n  function u(I, J) {\n    var H,\n        e,\n        K = i.jqx.data.ajaxSettings.flatOptions || {};\n\n    for (H in J) {\n      if (J[H] !== undefined) {\n        (K[H] ? I : e || (e = {}))[H] = J[H];\n      }\n    }\n\n    if (e) {\n      i.extend(true, I, e);\n    }\n  }\n\n  i.extend(i.jqx.data, {\n    ajaxSetup: function (H, e) {\n      if (e) {\n        u(H, i.jqx.data.ajaxSettings);\n      } else {\n        e = H;\n        H = i.jqx.data.ajaxSettings;\n      }\n\n      u(H, e);\n      return H;\n    },\n    ajaxSettings: {\n      url: E,\n      isLocal: f.test(l[1]),\n      global: true,\n      type: \"GET\",\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      processData: true,\n      async: true,\n      accepts: {\n        xml: \"application/xml, text/xml\",\n        html: \"text/html\",\n        text: \"text/plain\",\n        json: \"application/json, text/javascript\",\n        \"*\": q\n      },\n      contents: {\n        xml: /xml/,\n        html: /html/,\n        json: /json/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\"\n      },\n      converters: {\n        \"* text\": window.String,\n        \"text html\": true,\n        \"text json\": i.parseJSON,\n        \"text xml\": i.parseXML\n      },\n      flatOptions: {\n        context: true,\n        url: true\n      }\n    },\n    ajaxPrefilter: r(G),\n    ajaxTransport: r(C),\n    ajax: function (M, J) {\n      if (typeof M === \"object\") {\n        J = M;\n        M = undefined;\n      }\n\n      J = J || {};\n      var P,\n          ad,\n          K,\n          Y,\n          R,\n          V,\n          I,\n          X,\n          Q = i.jqx.data.ajaxSetup({}, J),\n          af = Q.context || Q,\n          T = af !== Q && (af.nodeType || af instanceof i) ? i(af) : i.event,\n          ae = i.Deferred(),\n          aa = i.Callbacks(\"once memory\"),\n          N = Q.statusCode || {},\n          U = {},\n          ab = {},\n          L = 0,\n          O = \"canceled\",\n          W = {\n        readyState: 0,\n        setRequestHeader: function (ag, ah) {\n          if (!L) {\n            var e = ag.toLowerCase();\n            ag = ab[e] = ab[e] || ag;\n            U[ag] = ah;\n          }\n\n          return this;\n        },\n        getAllResponseHeaders: function () {\n          return L === 2 ? ad : null;\n        },\n        getResponseHeader: function (ag) {\n          var e;\n\n          if (L === 2) {\n            if (!K) {\n              K = {};\n\n              while (e = a.exec(ad)) {\n                K[e[1].toLowerCase()] = e[2];\n              }\n            }\n\n            e = K[ag.toLowerCase()];\n          }\n\n          return e === undefined ? null : e;\n        },\n        overrideMimeType: function (e) {\n          if (!L) {\n            Q.mimeType = e;\n          }\n\n          return this;\n        },\n        abort: function (e) {\n          e = e || O;\n\n          if (Y) {\n            Y.abort(e);\n          }\n\n          S(0, e);\n          return this;\n        }\n      };\n\n      function S(ak, ag, al, ai) {\n        var e,\n            ao,\n            am,\n            aj,\n            an,\n            ah = ag;\n\n        if (L === 2) {\n          return;\n        }\n\n        L = 2;\n\n        if (R) {\n          clearTimeout(R);\n        }\n\n        Y = undefined;\n        ad = ai || \"\";\n        W.readyState = ak > 0 ? 4 : 0;\n\n        if (al) {\n          aj = B(Q, W, al);\n        }\n\n        if (ak >= 200 && ak < 300 || ak === 304) {\n          if (Q.ifModified) {\n            an = W.getResponseHeader(\"Last-Modified\");\n\n            if (an) {\n              i.lastModified[P] = an;\n            }\n\n            an = W.getResponseHeader(\"Etag\");\n\n            if (an) {\n              i.etag[P] = an;\n            }\n          }\n\n          if (ak === 304) {\n            ah = \"notmodified\";\n            e = true;\n          } else {\n            e = c(Q, aj);\n            ah = e.state;\n            ao = e.data;\n            am = e.error;\n            e = !am;\n          }\n        } else {\n          am = ah;\n\n          if (!ah || ak) {\n            ah = \"error\";\n\n            if (ak < 0) {\n              ak = 0;\n            }\n          }\n        }\n\n        W.status = ak;\n        W.statusText = (ag || ah) + \"\";\n\n        if (e) {\n          ae.resolveWith(af, [ao, ah, W]);\n        } else {\n          ae.rejectWith(af, [W, ah, am]);\n        }\n\n        W.statusCode(N);\n        N = undefined;\n\n        if (I) {\n          T.trigger(\"ajax\" + (e ? \"Success\" : \"Error\"), [W, Q, e ? ao : am]);\n        }\n\n        aa.fireWith(af, [W, ah]);\n\n        if (I) {\n          T.trigger(\"ajaxComplete\", [W, Q]);\n\n          if (! --i.active) {\n            i.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      ae.promise(W);\n      W.success = W.done;\n      W.error = W.fail;\n      W.complete = aa.add;\n\n      W.statusCode = function (ag) {\n        if (ag) {\n          var e;\n\n          if (L < 2) {\n            for (e in ag) {\n              N[e] = [N[e], ag[e]];\n            }\n          } else {\n            e = ag[W.status];\n            W.always(e);\n          }\n        }\n\n        return this;\n      };\n\n      Q.url = ((M || Q.url) + \"\").replace(p, \"\").replace(o, l[1] + \"//\");\n      Q.dataTypes = i.trim(Q.dataType || \"*\").toLowerCase().split(t);\n\n      if (Q.crossDomain == null) {\n        V = h.exec(Q.url.toLowerCase());\n        Q.crossDomain = !!(V && (V[1] !== l[1] || V[2] !== l[2] || (V[3] || (V[1] === \"http:\" ? 80 : 443)) != (l[3] || (l[1] === \"http:\" ? 80 : 443))));\n      }\n\n      if (Q.data && Q.processData && typeof Q.data !== \"string\") {\n        Q.data = i.param(Q.data, Q.traditional);\n      }\n\n      v(G, Q, J, W);\n\n      if (L === 2) {\n        return W;\n      }\n\n      I = Q.global;\n      Q.type = Q.type.toUpperCase();\n      Q.hasContent = !j.test(Q.type);\n\n      if (I && i.active++ === 0) {\n        i.event.trigger(\"ajaxStart\");\n      }\n\n      if (!Q.hasContent) {\n        if (Q.data) {\n          Q.url += (k.test(Q.url) ? \"&\" : \"?\") + Q.data;\n          delete Q.data;\n        }\n\n        P = Q.url;\n\n        if (Q.cache === false) {\n          var H = new Date().getTime(),\n              ac = Q.url.replace(d, \"$1_=\" + H);\n          Q.url = ac + (ac === Q.url ? (k.test(Q.url) ? \"&\" : \"?\") + \"_=\" + H : \"\");\n        }\n      }\n\n      if (Q.data && Q.hasContent && Q.contentType !== false || J.contentType) {\n        W.setRequestHeader(\"Content-Type\", Q.contentType);\n      }\n\n      if (Q.ifModified) {\n        P = P || Q.url;\n\n        if (i.lastModified[P]) {\n          W.setRequestHeader(\"If-Modified-Since\", i.lastModified[P]);\n        }\n\n        if (i.etag[P]) {\n          W.setRequestHeader(\"If-None-Match\", i.etag[P]);\n        }\n      }\n\n      W.setRequestHeader(\"Accept\", Q.dataTypes[0] && Q.accepts[Q.dataTypes[0]] ? Q.accepts[Q.dataTypes[0]] + (Q.dataTypes[0] !== \"*\" ? \", \" + q + \"; q=0.01\" : \"\") : Q.accepts[\"*\"]);\n\n      for (X in Q.headers) {\n        W.setRequestHeader(X, Q.headers[X]);\n      }\n\n      if (Q.beforeSend && (Q.beforeSend.call(af, W, Q) === false || L === 2)) {\n        return W.abort();\n      }\n\n      O = \"abort\";\n\n      for (X in {\n        success: 1,\n        error: 1,\n        complete: 1\n      }) {\n        W[X](Q[X]);\n      }\n\n      Y = v(C, Q, J, W);\n\n      if (!Y) {\n        S(-1, \"No Transport\");\n      } else {\n        W.readyState = 1;\n\n        if (I) {\n          T.trigger(\"ajaxSend\", [W, Q]);\n        }\n\n        if (Q.async && Q.timeout > 0) {\n          R = setTimeout(function () {\n            W.abort(\"timeout\");\n          }, Q.timeout);\n        }\n\n        try {\n          L = 1;\n          Y.send(U, S);\n        } catch (Z) {\n          if (L < 2) {\n            S(-1, Z);\n          } else {\n            throw Z;\n          }\n        }\n      }\n\n      return W;\n    },\n    active: 0,\n    lastModified: {},\n    etag: {}\n  });\n\n  function B(P, O, L) {\n    var K,\n        M,\n        J,\n        e,\n        H = P.contents,\n        N = P.dataTypes,\n        I = P.responseFields;\n\n    for (M in I) {\n      if (M in L) {\n        O[I[M]] = L[M];\n      }\n    }\n\n    while (N[0] === \"*\") {\n      N.shift();\n\n      if (K === undefined) {\n        K = P.mimeType || O.getResponseHeader(\"content-type\");\n      }\n    }\n\n    if (K) {\n      for (M in H) {\n        if (H[M] && H[M].test(K)) {\n          N.unshift(M);\n          break;\n        }\n      }\n    }\n\n    if (N[0] in L) {\n      J = N[0];\n    } else {\n      for (M in L) {\n        if (!N[0] || P.converters[M + \" \" + N[0]]) {\n          J = M;\n          break;\n        }\n\n        if (!e) {\n          e = M;\n        }\n      }\n\n      J = J || e;\n    }\n\n    if (J) {\n      if (J !== N[0]) {\n        N.unshift(J);\n      }\n\n      return L[J];\n    }\n  }\n\n  function c(R, J) {\n    var P,\n        H,\n        N,\n        L,\n        O = R.dataTypes.slice(),\n        I = O[0],\n        Q = {},\n        K = 0;\n\n    if (R.dataFilter) {\n      J = R.dataFilter(J, R.dataType);\n    }\n\n    if (O[1]) {\n      for (P in R.converters) {\n        Q[P.toLowerCase()] = R.converters[P];\n      }\n    }\n\n    for (; N = O[++K];) {\n      if (N !== \"*\") {\n        if (I !== \"*\" && I !== N) {\n          P = Q[I + \" \" + N] || Q[\"* \" + N];\n\n          if (!P) {\n            for (H in Q) {\n              L = H.split(\" \");\n\n              if (L[1] === N) {\n                P = Q[I + \" \" + L[0]] || Q[\"* \" + L[0]];\n\n                if (P) {\n                  if (P === true) {\n                    P = Q[H];\n                  } else {\n                    if (Q[H] !== true) {\n                      N = L[0];\n                      O.splice(K--, 0, N);\n                    }\n                  }\n\n                  break;\n                }\n              }\n            }\n          }\n\n          if (P !== true) {\n            if (P && R[\"throws\"]) {\n              J = P(J);\n            } else {\n              try {\n                J = P(J);\n              } catch (M) {\n                return {\n                  state: \"parsererror\",\n                  error: P ? M : \"No conversion from \" + I + \" to \" + N\n                };\n              }\n            }\n          }\n        }\n\n        I = N;\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: J\n    };\n  }\n\n  var y = [],\n      n = /\\?/,\n      D = /(=)\\?(?=&|$)|\\?\\?/,\n      z = new Date().getTime();\n  i.jqx.data.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var e = y.pop() || i.expando + \"_\" + z++;\n      this[e] = true;\n      return e;\n    }\n  });\n  i.jqx.data.ajaxPrefilter(\"json jsonp\", function (Q, L, P) {\n    var O,\n        e,\n        N,\n        J = Q.data,\n        H = Q.url,\n        I = Q.jsonp !== false,\n        M = I && D.test(H),\n        K = I && !M && typeof J === \"string\" && !(Q.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && D.test(J);\n\n    if (Q.dataTypes[0] === \"jsonp\" || M || K) {\n      O = Q.jsonpCallback = i.isFunction(Q.jsonpCallback) ? Q.jsonpCallback() : Q.jsonpCallback;\n      e = window[O];\n\n      if (M) {\n        Q.url = H.replace(D, \"$1\" + O);\n      } else {\n        if (K) {\n          Q.data = J.replace(D, \"$1\" + O);\n        } else {\n          if (I) {\n            Q.url += (n.test(H) ? \"&\" : \"?\") + Q.jsonp + \"=\" + O;\n          }\n        }\n      }\n\n      Q.converters[\"script json\"] = function () {\n        if (!N) {\n          i.error(O + \" was not called\");\n        }\n\n        return N[0];\n      };\n\n      Q.dataTypes[0] = \"json\";\n\n      window[O] = function () {\n        N = arguments;\n      };\n\n      P.always(function () {\n        window[O] = e;\n\n        if (Q[O]) {\n          Q.jsonpCallback = L.jsonpCallback;\n          y.push(O);\n        }\n\n        if (N && i.isFunction(e)) {\n          e(N[0]);\n        }\n\n        N = e = undefined;\n      });\n      return \"script\";\n    }\n  });\n  i.jqx.data.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /javascript|ecmascript/\n    },\n    converters: {\n      \"text script\": function (e) {\n        i.globalEval(e);\n        return e;\n      }\n    }\n  });\n  i.jqx.data.ajaxPrefilter(\"script\", function (e) {\n    if (e.cache === undefined) {\n      e.cache = false;\n    }\n\n    if (e.crossDomain) {\n      e.type = \"GET\";\n      e.global = false;\n    }\n  });\n  i.jqx.data.ajaxTransport(\"script\", function (I) {\n    if (I.crossDomain) {\n      var e,\n          H = document.head || document.getElementsByTagName(\"head\")[0] || document.documentElement;\n      return {\n        send: function (J, K) {\n          e = document.createElement(\"script\");\n          e.async = \"async\";\n\n          if (I.scriptCharset) {\n            e.charset = I.scriptCharset;\n          }\n\n          e.src = I.url;\n\n          e.onload = e.onreadystatechange = function (M, L) {\n            if (L || !e.readyState || /loaded|complete/.test(e.readyState)) {\n              e.onload = e.onreadystatechange = null;\n\n              if (H && e.parentNode) {\n                H.removeChild(e);\n              }\n\n              e = undefined;\n\n              if (!L) {\n                K(200, \"success\");\n              }\n            }\n          };\n\n          H.insertBefore(e, H.firstChild);\n        },\n        abort: function () {\n          if (e) {\n            e.onload(0, 1);\n          }\n        }\n      };\n    }\n  });\n  var w,\n      x = window.ActiveXObject ? function () {\n    for (var e in w) {\n      w[e](0, 1);\n    }\n  } : false,\n      m = 0;\n\n  function g() {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (H) {}\n  }\n\n  function s() {\n    try {\n      return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n    } catch (H) {}\n  }\n\n  i.jqx.data.ajaxSettings.xhr = window.ActiveXObject ? function () {\n    return !this.isLocal && g() || s();\n  } : g;\n\n  (function (e) {\n    i.extend(i.support, {\n      ajax: !!e,\n      cors: !!e && \"withCredentials\" in e\n    });\n  })(i.jqx.data.ajaxSettings.xhr());\n\n  if (!i.support) {\n    i.support = {\n      ajax: true\n    };\n  }\n\n  if (i.support.ajax) {\n    i.jqx.data.ajaxTransport(function (e) {\n      if (!e.crossDomain || i.support.cors) {\n        var H;\n        return {\n          send: function (N, I) {\n            var L,\n                K,\n                M = e.xhr();\n\n            if (e.username) {\n              M.open(e.type, e.url, e.async, e.username, e.password);\n            } else {\n              M.open(e.type, e.url, e.async);\n            }\n\n            if (e.xhrFields) {\n              for (K in e.xhrFields) {\n                M[K] = e.xhrFields[K];\n              }\n            }\n\n            if (e.mimeType && M.overrideMimeType) {\n              M.overrideMimeType(e.mimeType);\n            }\n\n            if (!e.crossDomain && !N[\"X-Requested-With\"]) {\n              N[\"X-Requested-With\"] = \"XMLHttpRequest\";\n            }\n\n            try {\n              for (K in N) {\n                M.setRequestHeader(K, N[K]);\n              }\n            } catch (J) {}\n\n            M.send(e.hasContent && e.data || null);\n\n            H = function (W, Q) {\n              var R, P, O, U, T;\n\n              try {\n                if (H && (Q || M.readyState === 4)) {\n                  H = undefined;\n\n                  if (L) {\n                    M.onreadystatechange = function () {};\n\n                    if (x) {\n                      delete w[L];\n                    }\n                  }\n\n                  if (Q) {\n                    if (M.readyState !== 4) {\n                      M.abort();\n                    }\n                  } else {\n                    R = M.status;\n                    O = M.getAllResponseHeaders();\n                    U = {};\n                    T = M.responseXML;\n\n                    if (T && T.documentElement) {\n                      U.xml = T;\n                    }\n\n                    try {\n                      U.text = M.responseText;\n                    } catch (V) {}\n\n                    try {\n                      P = M.statusText;\n                    } catch (V) {\n                      P = \"\";\n                    }\n\n                    if (!R && e.isLocal && !e.crossDomain) {\n                      R = U.text ? 200 : 404;\n                    } else {\n                      if (R === 1223) {\n                        R = 204;\n                      }\n                    }\n                  }\n                }\n              } catch (S) {\n                if (!Q) {\n                  I(-1, S);\n                }\n              }\n\n              if (U) {\n                I(R, P, U, O);\n              }\n            };\n\n            if (!e.async) {\n              H();\n            } else {\n              if (M.readyState === 4) {\n                setTimeout(H, 0);\n              } else {\n                L = ++m;\n\n                if (x) {\n                  if (!w) {\n                    w = {};\n                    i(window).unload(x);\n                  }\n\n                  w[L] = H;\n                }\n\n                M.onreadystatechange = H;\n              }\n            }\n          },\n          abort: function () {\n            if (H) {\n              H(0, 1);\n            }\n          }\n        };\n      }\n    });\n  }\n\n  i.jqx.filter = function () {\n    this.operator = \"and\";\n    var M = 0;\n    var J = 1;\n    var P = [\"EMPTY\", \"NOT_EMPTY\", \"CONTAINS\", \"CONTAINS_CASE_SENSITIVE\", \"DOES_NOT_CONTAIN\", \"DOES_NOT_CONTAIN_CASE_SENSITIVE\", \"STARTS_WITH\", \"STARTS_WITH_CASE_SENSITIVE\", \"ENDS_WITH\", \"ENDS_WITH_CASE_SENSITIVE\", \"EQUAL\", \"EQUAL_CASE_SENSITIVE\", \"NULL\", \"NOT_NULL\"];\n    var R = [\"EQUAL\", \"NOT_EQUAL\", \"LESS_THAN\", \"LESS_THAN_OR_EQUAL\", \"GREATER_THAN\", \"GREATER_THAN_OR_EQUAL\", \"NULL\", \"NOT_NULL\"];\n    var S = [\"EQUAL\", \"NOT_EQUAL\", \"LESS_THAN\", \"LESS_THAN_OR_EQUAL\", \"GREATER_THAN\", \"GREATER_THAN_OR_EQUAL\", \"NULL\", \"NOT_NULL\"];\n    var L = [\"EQUAL\", \"NOT_EQUAL\"];\n    var K = new Array();\n    var Q = new Array();\n\n    this.evaluate = function (X) {\n      var V = true;\n\n      for (var W = 0; W < K.length; W++) {\n        var U = K[W].evaluate(X);\n\n        if (W == 0) {\n          V = U;\n        } else {\n          if (Q[W] == J || Q[W] == \"or\") {\n            V = V || U;\n          } else {\n            V = V && U;\n          }\n        }\n      }\n\n      return V;\n    };\n\n    this.getfilterscount = function () {\n      return K.length;\n    };\n\n    this.setoperatorsbyfiltertype = function (U, V) {\n      switch (U) {\n        case \"numericfilter\":\n          R = V;\n          break;\n\n        case \"stringfilter\":\n          P = V;\n          break;\n\n        case \"datefilter\":\n          S = V;\n          break;\n\n        case \"booleanfilter\":\n          L = V;\n          break;\n      }\n    };\n\n    this.getoperatorsbyfiltertype = function (U) {\n      var V = new Array();\n\n      switch (U) {\n        case \"numericfilter\":\n          V = R.slice(0);\n          break;\n\n        case \"stringfilter\":\n          V = P.slice(0);\n          break;\n\n        case \"datefilter\":\n          V = S.slice(0);\n          break;\n\n        case \"booleanfilter\":\n          V = L.slice(0);\n          break;\n      }\n\n      return V;\n    };\n\n    var O = function () {\n      var U = function () {\n        return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n      };\n\n      return U() + \"-\" + U() + \"-\" + U();\n    };\n\n    this.createfilter = function (Y, V, X, W, U, Z) {\n      if (Y == null || Y == undefined) {\n        return null;\n      }\n\n      switch (Y) {\n        case \"numericfilter\":\n          return new N(V, X.toUpperCase());\n\n        case \"stringfilter\":\n          return new T(V, X.toUpperCase());\n\n        case \"datefilter\":\n          return new H(V, X.toUpperCase(), U, Z);\n\n        case \"booleanfilter\":\n          return new I(V, X.toUpperCase());\n\n        case \"custom\":\n          return new e(V, X.toUpperCase(), W);\n      }\n\n      throw new Error(\"jqxGrid: There is no such filter type. The available filter types are: 'numericfilter', 'stringfilter', 'datefilter' and 'booleanfilter'\");\n      return null;\n    };\n\n    this.getfilters = function () {\n      var U = new Array();\n\n      for (var V = 0; V < K.length; V++) {\n        var W = {\n          value: K[V].filtervalue,\n          condition: K[V].comparisonoperator,\n          operator: Q[V],\n          type: K[V].type\n        };\n\n        if (K[V].data) {\n          W.id = K[V].data;\n        }\n\n        U[V] = W;\n      }\n\n      return U;\n    };\n\n    this.addfilter = function (U, V) {\n      K[K.length] = V;\n      V.key = O();\n      Q[Q.length] = U;\n    };\n\n    this.removefilter = function (V) {\n      for (var U = 0; U < K.length; U++) {\n        if (K[U].key == V.key) {\n          K.splice(U, 1);\n          Q.splice(U, 1);\n          break;\n        }\n      }\n    };\n\n    this.getoperatorat = function (U) {\n      if (U == undefined || U == null) {\n        return null;\n      }\n\n      if (U < 0 || U > K.length) {\n        return null;\n      }\n\n      return Q[U];\n    };\n\n    this.setoperatorat = function (V, U) {\n      if (V == undefined || V == null) {\n        return null;\n      }\n\n      if (V < 0 || V > K.length) {\n        return null;\n      }\n\n      Q[U] = U;\n    };\n\n    this.getfilterat = function (U) {\n      if (U == undefined || U == null) {\n        return null;\n      }\n\n      if (U < 0 || U > K.length) {\n        return null;\n      }\n\n      return K[U];\n    };\n\n    this.setfilterat = function (U, V) {\n      if (U == undefined || U == null) {\n        return null;\n      }\n\n      if (U < 0 || U > K.length) {\n        return null;\n      }\n\n      V.key = O();\n      K[U] = V;\n    };\n\n    this.clear = function () {\n      K = new Array();\n      Q = new Array();\n    };\n\n    var T = function (V, U) {\n      this.filtervalue = V;\n      this.comparisonoperator = U;\n      this.type = \"stringfilter\";\n\n      this.evaluate = function (af) {\n        var ae = this.filtervalue;\n        var al = this.comparisonoperator;\n\n        if (af == null || af == undefined || af == \"\") {\n          if (al == \"NULL\") {\n            return true;\n          }\n\n          if (al == \"NOT_NULL\") {\n            return false;\n          }\n\n          if (al == \"EQUAL\" && af == ae) {\n            return true;\n          }\n\n          if (al == \"NOT_EQUAL\" && af != ae) {\n            return true;\n          }\n\n          if (al != \"EMPTY\") {\n            return false;\n          } else {\n            if (af == \"\") {\n              return true;\n            }\n          }\n        }\n\n        var an = \"\";\n\n        try {\n          an = af.toString();\n        } catch (ag) {\n          return true;\n        }\n\n        var am = function (ap, ao) {\n          switch (al) {\n            case \"EQUAL\":\n              return i.jqx.string.equalsIgnoreCase(ap, ao);\n\n            case \"EQUAL_CASE_SENSITIVE\":\n              return i.jqx.string.equals(ap, ao);\n\n            case \"NOT_EQUAL\":\n              return !i.jqx.string.equalsIgnoreCase(ap, ao);\n\n            case \"NOT_EQUAL_CASE_SENSITIVE\":\n              return !i.jqx.string.equals(ap, ao);\n\n            case \"CONTAINS\":\n              return i.jqx.string.containsIgnoreCase(ap, ao);\n\n            case \"CONTAINS_CASE_SENSITIVE\":\n              return i.jqx.string.contains(ap, ao);\n\n            case \"DOES_NOT_CONTAIN\":\n              return !i.jqx.string.containsIgnoreCase(ap, ao);\n\n            case \"DOES_NOT_CONTAIN_CASE_SENSITIVE\":\n              return !i.jqx.string.contains(ap, ao);\n\n            case \"EMPTY\":\n              return ap == \"\";\n\n            case \"NOT_EMPTY\":\n              return ap != \"\";\n\n            case \"NOT_NULL\":\n              return ap != null;\n\n            case \"STARTS_WITH\":\n              return i.jqx.string.startsWithIgnoreCase(ap, ao);\n\n            case \"ENDS_WITH\":\n              return i.jqx.string.endsWithIgnoreCase(ap, ao);\n\n            case \"ENDS_WITH_CASE_SENSITIVE\":\n              return i.jqx.string.endsWith(ap, ao);\n\n            case \"STARTS_WITH_CASE_SENSITIVE\":\n              return i.jqx.string.startsWith(ap, ao);\n\n            default:\n              return false;\n          }\n        };\n\n        var Z = new Array();\n\n        if (ae && ae.indexO && al !== \"NOT_EQUAL\") {\n          if (ae.indexOf(\"|\") >= 0 || ae.indexOf(\" AND \") >= 0 || ae.indexOf(\" OR \") >= 0 || ae.indexOf(\" and \") >= 0 || ae.indexOf(\" or \") >= 0) {\n            var aa = am(an, ae);\n\n            if (aa) {\n              return aa;\n            }\n\n            var ab = ae.indexOf(\" AND \") >= 0 ? ae.split(\" AND \") : new Array();\n            var Y = ae.indexOf(\" OR \") >= 0 ? ae.split(\" OR \") : new Array();\n            var X = ae.indexOf(\" and \") >= 0 ? ae.split(\" and \") : new Array();\n            var ac = ae.indexOf(\" or \") >= 0 ? ae.split(\" or \") : new Array();\n            var W = ae.indexOf(\"|\") >= 0 ? ae.split(\"|\") : new Array();\n\n            if (W.length > 0) {\n              for (var ak = 0; ak < W.length; ak++) {\n                W[ak] = i.trim(W[ak]);\n              }\n            }\n\n            var aj = ae.indexOf(\" \") >= 0 ? ae.split(\" \") : new Array();\n\n            if (aj.length > 0) {\n              for (var ak = 0; ak < aj.length; ak++) {\n                aj[ak] = i.trim(aj[ak]);\n              }\n            }\n\n            ab = ab.concat(aj);\n            ab = ab.concat(X);\n            Y = Y.concat(W);\n            Y = Y.concat(ac);\n\n            if (ab.length > 0) {\n              for (var ak = 0; ak < ab.length; ak++) {\n                if (!ab[ak].indexOf(\" OR \") >= 0) {\n                  Z.push(ab[ak]);\n                }\n              }\n            }\n\n            if (Y.length > 0) {\n              for (var ak = 0; ak < Y.length; ak++) {\n                if (!Y[ak].indexOf(\" AND \") >= 0) {\n                  Z.push(Y[ak]);\n                }\n              }\n            }\n\n            var ai = undefined;\n\n            for (var ah = 0; ah < Z.length; ah++) {\n              var af = Z[ah];\n              var aa = am(an, af);\n              var ad = ah < ab.length ? \"and\" : \"or\";\n\n              if (ai == undefined) {\n                ai = aa;\n              } else {\n                if (ad == \"or\") {\n                  ai = ai || aa;\n                } else {\n                  ai = ai && aa;\n                }\n              }\n            }\n\n            return ai;\n          }\n        }\n\n        return am(an, ae);\n      };\n    };\n\n    var I = function (V, U) {\n      this.filtervalue = V;\n      this.comparisonoperator = U;\n      this.type = \"booleanfilter\";\n\n      this.evaluate = function (Y) {\n        var X = this.filtervalue;\n        var W = this.comparisonoperator;\n\n        if (Y == null || Y == undefined) {\n          if (W == \"NULL\") {\n            return true;\n          }\n\n          return false;\n        }\n\n        var Z = Y;\n\n        switch (W) {\n          case \"EQUAL\":\n            return Z == X || Z.toString() == X.toString();\n\n          case \"NOT_EQUAL\":\n            return Z != X && Z.toString() != X.toString();\n\n          default:\n            return false;\n        }\n      };\n    };\n\n    var N = function (V, U) {\n      this.filtervalue = V;\n      this.comparisonoperator = U;\n      this.type = \"numericfilter\";\n\n      this.evaluate = function (ag) {\n        var af = this.filtervalue;\n        var al = this.comparisonoperator;\n\n        if (ag === null || ag === undefined || ag === \"\") {\n          if (al == \"NOT_NULL\") {\n            return false;\n          }\n\n          if (al == \"NULL\") {\n            return true;\n          } else {\n            switch (al) {\n              case \"EQUAL\":\n                return ag == af;\n\n              case \"NOT_EQUAL\":\n                return ag != af;\n            }\n\n            return false;\n          }\n        } else {\n          if (al == \"NULL\") {\n            return false;\n          }\n\n          if (al == \"NOT_NULL\") {\n            return true;\n          }\n        }\n\n        var an = ag;\n\n        try {\n          an = parseFloat(an);\n        } catch (ah) {\n          if (ag.toString() != \"\") {\n            return false;\n          }\n        }\n\n        var am = function (ap, ao) {\n          switch (al) {\n            case \"EQUAL\":\n              return ap == ao;\n\n            case \"NOT_EQUAL\":\n              return ap != ao;\n\n            case \"GREATER_THAN\":\n              return ap > ao;\n\n            case \"GREATER_THAN_OR_EQUAL\":\n              return ap >= ao;\n\n            case \"LESS_THAN\":\n              return ap < ao;\n\n            case \"LESS_THAN_OR_EQUAL\":\n              return ap <= ao;\n\n            case \"STARTS_WITH\":\n              return i.jqx.string.startsWithIgnoreCase(ap.toString(), ao.toString());\n\n            case \"ENDS_WITH\":\n              return i.jqx.string.endsWithIgnoreCase(ap.toString(), ao.toString());\n\n            case \"ENDS_WITH_CASE_SENSITIVE\":\n              return i.jqx.string.endsWith(ap.toString(), ao.toString());\n\n            case \"STARTS_WITH_CASE_SENSITIVE\":\n              return i.jqx.string.startsWith(ap.toString(), ao.toString());\n\n            case \"CONTAINS\":\n              return i.jqx.string.containsIgnoreCase(ap.toString(), ao.toString());\n\n            case \"CONTAINS_CASE_SENSITIVE\":\n              return i.jqx.string.contains(ap.toString(), ao.toString());\n\n            case \"DOES_NOT_CONTAIN\":\n              return !i.jqx.string.containsIgnoreCase(ap.toString(), ao.toString());\n\n            case \"DOES_NOT_CONTAIN_CASE_SENSITIVE\":\n              return !i.jqx.string.contains(ap.toString(), ao.toString());\n\n            default:\n              return true;\n          }\n        };\n\n        var aa = new Array();\n\n        if (af && af.indexOf) {\n          af = af.replace(\"$\", \"\");\n        }\n\n        if (af.indexOf && (af.indexOf(\"|\") >= 0 || af.indexOf(\" AND \") >= 0 || af.indexOf(\" OR \") >= 0 || af.indexOf(\" and \") >= 0 || af.indexOf(\" or \") >= 0)) {\n          var ab = am(an, af);\n\n          if (ab) {\n            return ab;\n          }\n\n          af = af.toString();\n          var ac = af.indexOf(\" AND \") >= 0 ? af.split(\" AND \") : new Array();\n          var Z = af.indexOf(\" OR \") >= 0 ? af.split(\" OR \") : new Array();\n          var Y = af.indexOf(\" and \") >= 0 ? af.split(\" and \") : new Array();\n          var ad = af.indexOf(\" or \") >= 0 ? af.split(\" or \") : new Array();\n          ac = ac.concat(Y);\n          Z = Z.concat(ad);\n          var X = af.indexOf(\"|\") >= 0 ? af.split(\"|\") : new Array();\n\n          if (X.length > 0) {\n            for (var ak = 0; ak < X.length; ak++) {\n              X[ak] = i.trim(X[ak]);\n            }\n          }\n\n          Z = Z.concat(X);\n\n          if (ac.length > 0) {\n            for (var ak = 0; ak < ac.length; ak++) {\n              if (!ac[ak].indexOf(\" OR \") >= 0) {\n                aa.push(ac[ak]);\n              }\n            }\n          }\n\n          if (Z.length > 0) {\n            for (var ak = 0; ak < Z.length; ak++) {\n              if (!Z[ak].indexOf(\" AND \") >= 0) {\n                aa.push(Z[ak]);\n              }\n            }\n          }\n\n          var aj = undefined;\n\n          for (var ai = 0; ai < aa.length; ai++) {\n            var ag = aa[ai];\n\n            if (ag && ag.indexOf && ag.indexOf(\"..\") >= 0) {\n              var W = ag.toString().split(\"..\");\n\n              if (W.length == 2) {\n                ab = an >= W[0] && an <= W[1];\n              }\n            } else {\n              var ab = am(an, ag);\n            }\n\n            var ae = ai < ac.length ? \"and\" : \"or\";\n\n            if (aj == undefined) {\n              aj = ab;\n            } else {\n              if (ae == \"or\") {\n                aj = aj || ab;\n              } else {\n                aj = aj && ab;\n              }\n            }\n          }\n\n          return aj;\n        }\n\n        if (af && af.indexOf && af.indexOf(\"..\") >= 0) {\n          aa = af.toString().split(\"..\");\n\n          if (aa.length == 2) {\n            return an >= aa[0] && an <= aa[1];\n          }\n        }\n\n        return am(an, af);\n      };\n    };\n\n    var H = function (X, V, W, ab) {\n      this.filtervalue = X;\n      this.type = \"datefilter\";\n      var Z = this;\n\n      if (W != undefined && ab != undefined) {\n        var Y = i.jqx.dataFormat.parsedate(X, W, ab);\n\n        if (Y != null) {\n          this.filterdate = Y;\n        } else {\n          var U = i.jqx.dataFormat.tryparsedate(X, ab);\n\n          if (U != null) {\n            this.filterdate = U;\n          }\n        }\n      } else {\n        var aa = new Date(X);\n\n        if (aa.toString() == \"NaN\" || aa.toString() == \"Invalid Date\") {\n          this.filterdate = i.jqx.dataFormat.tryparsedate(X);\n        } else {\n          this.filterdate = aa;\n        }\n      }\n\n      if (!this.filterdate) {\n        var aa = new Date(X);\n\n        if (aa.toString() == \"NaN\" || aa.toString() == \"Invalid Date\") {\n          this.filterdate = i.jqx.dataFormat.tryparsedate(X);\n        } else {\n          this.filterdate = aa;\n        }\n      }\n\n      this.comparisonoperator = V;\n\n      this.evaluate = function (ao) {\n        var an = this.filtervalue;\n        var aw = this.comparisonoperator;\n\n        if (ao == null || ao == undefined || ao == \"\") {\n          if (aw == \"NOT_NULL\") {\n            return false;\n          }\n\n          if (aw == \"NULL\") {\n            return true;\n          } else {\n            switch (aw) {\n              case \"EQUAL\":\n                return ao == an;\n\n              case \"NOT_EQUAL\":\n                return ao != an;\n            }\n\n            return false;\n          }\n        } else {\n          if (aw == \"NULL\") {\n            return false;\n          }\n\n          if (aw == \"NOT_NULL\") {\n            return true;\n          }\n        }\n\n        var ay = new Date();\n        ay.setFullYear(1900, 0, 1);\n        ay.setHours(12, 0, 0, 0);\n\n        try {\n          var av = new Date(ao);\n\n          if (av.toString() == \"NaN\" || av.toString() == \"Invalid Date\") {\n            ao = i.jqx.dataFormat.tryparsedate(ao);\n          } else {\n            ao = av;\n          }\n\n          ay = ao;\n          var at = false;\n\n          if (W != undefined && ab != undefined) {\n            if (W.indexOf(\"t\") >= 0 || W.indexOf(\"T\") >= 0 || W.indexOf(\":\") >= 0 || W.indexOf(\"f\") >= 0) {\n              at = true;\n\n              if (an && an.toString().indexOf(\":\") == -1) {\n                var aj = i.jqx.dataFormat.tryparsedate(an.toString() + \":00\", ab);\n\n                if (aj != null) {\n                  Z.filterdate = aj;\n                }\n              }\n            }\n          }\n\n          if (W != undefined) {\n            if (W.indexOf(\"hh\") >= 0 || W.indexOf(\"t\") >= 0) {\n              at = true;\n            }\n          }\n\n          if (!at) {\n            ay.setHours(0);\n            ay.setMinutes(0);\n            ay.setSeconds(0);\n          }\n        } catch (ap) {\n          if (ao.toString() != \"\") {\n            return false;\n          }\n        }\n\n        if (Z.filterdate != null) {\n          an = Z.filterdate;\n        } else {\n          if (an && an.indexOf) {\n            if (an.indexOf(\":\") != -1 || !isNaN(parseInt(an))) {\n              var ai = new Date(ay);\n              ai.setHours(12, 0, 0, 0);\n              var ah = an.split(\":\");\n\n              for (var au = 0; au < ah.length; au++) {\n                if (au == 0) {\n                  ai.setHours(ah[au]);\n                }\n\n                if (au == 1) {\n                  ai.setMinutes(ah[au]);\n                }\n\n                if (au == 2) {\n                  ai.setSeconds(ah[au]);\n                }\n              }\n\n              an = ai;\n            }\n          }\n        }\n\n        if (at) {\n          if (an && an.setFullYear) {\n            if (ay && ay.getFullYear) {\n              if (W.indexOf(\"d\") == -1 && W.indexOf(\"M\") == -1 && W.indexOf(\"y\") == -1) {\n                an.setFullYear(ay.getFullYear(), ay.getMonth(), ay.getDate());\n              }\n            }\n          }\n        }\n\n        var ax = function (aA, az) {\n          if (aA == null) {\n            aA = \"\";\n          }\n\n          switch (aw) {\n            case \"EQUAL\":\n              return aA.toString() == az.toString();\n\n            case \"NOT_EQUAL\":\n              return aA.toString() != az.toString();\n\n            case \"GREATER_THAN\":\n              return aA > az;\n\n            case \"GREATER_THAN_OR_EQUAL\":\n              return aA >= az;\n\n            case \"LESS_THAN\":\n              return aA < az;\n\n            case \"LESS_THAN_OR_EQUAL\":\n              return aA <= az;\n\n            case \"STARTS_WITH\":\n              return i.jqx.string.startsWithIgnoreCase(aA.toString(), az.toString());\n\n            case \"ENDS_WITH\":\n              return i.jqx.string.endsWithIgnoreCase(aA.toString(), az.toString());\n\n            case \"ENDS_WITH_CASE_SENSITIVE\":\n              return i.jqx.string.endsWith(aA.toString(), az.toString());\n\n            case \"STARTS_WITH_CASE_SENSITIVE\":\n              return i.jqx.string.startsWith(aA.toString(), az.toString());\n\n            case \"CONTAINS\":\n              return i.jqx.string.containsIgnoreCase(aA.toString(), az.toString());\n\n            case \"CONTAINS_CASE_SENSITIVE\":\n              return i.jqx.string.contains(aA.toString(), az.toString());\n\n            case \"DOES_NOT_CONTAIN\":\n              return !i.jqx.string.containsIgnoreCase(aA.toString(), az.toString());\n\n            case \"DOES_NOT_CONTAIN_CASE_SENSITIVE\":\n              return !i.jqx.string.contains(aA.toString(), az.toString());\n\n            default:\n              return true;\n          }\n        };\n\n        var ag = new Array();\n\n        if (an && an.indexOf) {\n          if (an.indexOf(\"|\") >= 0 || an.indexOf(\" AND \") >= 0 || an.indexOf(\" OR \") >= 0 || an.indexOf(\" and \") >= 0 || an.indexOf(\" or \") >= 0) {\n            var aj = ax(ay, an);\n\n            if (aj) {\n              return aj;\n            }\n\n            var ak = an.indexOf(\" AND \") >= 0 ? an.split(\" AND \") : new Array();\n            var af = an.indexOf(\" OR \") >= 0 ? an.split(\" OR \") : new Array();\n            var ae = an.indexOf(\" and \") >= 0 ? an.split(\" and \") : new Array();\n            var al = an.indexOf(\" or \") >= 0 ? an.split(\" or \") : new Array();\n            ak = ak.concat(ae);\n            af = af.concat(al);\n            var ad = an.indexOf(\"|\") >= 0 ? an.split(\"|\") : new Array();\n\n            if (ad.length > 0) {\n              for (var au = 0; au < ad.length; au++) {\n                ad[au] = i.trim(ad[au]);\n              }\n            }\n\n            af = af.concat(ad);\n\n            if (ak.length > 0) {\n              for (var au = 0; au < ak.length; au++) {\n                if (!ak[au].indexOf(\" OR \") >= 0) {\n                  ag.push(ak[au]);\n                }\n              }\n            }\n\n            if (af.length > 0) {\n              for (var au = 0; au < af.length; au++) {\n                if (!af[au].indexOf(\" AND \") >= 0) {\n                  ag.push(af[au]);\n                }\n              }\n            }\n\n            var ar = undefined;\n\n            for (var aq = 0; aq < ag.length; aq++) {\n              var ao = ag[aq];\n\n              if (ao && ao.indexOf && ao.indexOf(\"..\") >= 0) {\n                var ac = ao.toString().split(\"..\");\n\n                if (ac.length == 2) {\n                  aj = ay >= ac[0] && ay <= ac[1];\n                }\n              } else {\n                var aj = ax(ay, ao);\n              }\n\n              var am = aq < ak.length ? \"and\" : \"or\";\n\n              if (ar == undefined) {\n                ar = aj;\n              } else {\n                if (am == \"or\") {\n                  ar = ar || aj;\n                } else {\n                  ar = ar && aj;\n                }\n              }\n            }\n\n            return ar;\n          }\n        }\n\n        if (an && an.indexOf && an.indexOf(\"..\") >= 0) {\n          ag = an.toString().split(\"..\");\n\n          if (ag.length == 2) {\n            return ay >= ag[0] && ay <= ag[1];\n          }\n        }\n\n        return ax(ay, an);\n      };\n    };\n\n    var e = function (V, U, W) {\n      this.filtervalue = V;\n      this.comparisonoperator = U;\n\n      this.evaluate = function (Y, X) {\n        return W(this.filtervalue, Y, this.comparisonoperator);\n      };\n    };\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}