{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Gustavo Henrique\\\\Documents\\\\react\\\\my-app\\\\src\\\\App.tsx\",\"C:\\\\Users\\\\Gustavo Henrique\\\\Documents\\\\react\\\\my-app\\\\src\\\\serviceWorker.ts\",\"C:\\\\Users\\\\Gustavo Henrique\\\\Documents\\\\react\\\\my-app\\\\src\\\\index.tsx\"],\"names\":[\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"source\",\"localdata\",\"datafields\",\"name\",\"type\",\"map\",\"datatype\",\"columns\",\"text\",\"datafield\",\"width\",\"state\",\"jqx\",\"dataAdapter\",\"react\",\"react_jqxgrid_esm\",\"pageable\",\"autoheight\",\"sortable\",\"theme\",\"altrows\",\"enabletooltips\",\"editable\",\"React\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"react_default\",\"a\",\"createElement\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"+OAoEeA,cApBX,SAAAA,EAAYC,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACnBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA3CFQ,OAA+B,CACnCC,UACI,CACI,CAAC,eAAgB,uBAAwB,SAAU,WACnD,CAAC,eAAgB,QAAS,aAAc,UACxC,CAAC,iBAAkB,QAAS,aAAc,UAC1C,CAAC,eAAgB,uBAAwB,SAAU,MACnD,CAAC,qBAAsB,sBAAuB,OAAQ,UACtD,CAAC,aAAc,uBAAwB,WAAY,WACnD,CAAC,mBAAoB,oBAAqB,aAAc,UACxD,CAAC,eAAgB,QAAS,SAAU,SACpC,CAAC,QAAS,YAAa,UACvB,CAAC,oBAAqB,qBAAsB,YAAa,UACzD,CAAC,oBAAqB,uBAAwB,SAAU,MACxD,CAAC,mBAAoB,cAAe,eAAgB,aACpD,CAAC,kBAAmB,oBAAqB,aAAc,UACvD,CAAC,YAAa,QAAS,OAAQ,eAC/B,CAAC,eAAgB,kBAAmB,YAAa,UACjD,CAAC,kBAAmB,uBAAwB,SAAU,MACtD,CAAC,eAAgB,sBAAuB,SAAU,WAClD,CAAC,iBAAkB,QAAS,SAAU,UACtC,CAAC,YAAa,cAAe,SAAU,MACvC,CAAC,gBAAiB,gBAAiB,OAAQ,YAEnDC,WACI,CACI,CAAEC,KAAM,cAAeC,KAAM,SAAUC,IAAK,KAC5C,CAAEF,KAAM,QAASC,KAAM,SAAUC,IAAK,KACtC,CAAEF,KAAM,OAAQC,KAAM,SAAUC,IAAK,KACrC,CAAEF,KAAM,UAAWC,KAAM,SAAUC,IAAK,MAEhDC,SAAU,SAWSb,EARfc,QACJ,CACI,CAAEC,KAAM,eAAgBC,UAAW,cAAeC,MAAO,KACzD,CAAEF,KAAM,gBAAiBC,UAAW,QAASC,MAAO,KACpD,CAAEF,KAAM,OAAQC,UAAW,OAAQC,MAAO,KAC1C,CAAEF,KAAM,UAAWC,UAAW,YAMlChB,EAAKkB,MAAQ,CACTJ,QAASd,EAAKc,QACdP,OAAQ,IAAIY,EAAAA,EAAIC,YAAYpB,EAAKO,SALlBP,wEAUnB,OACIqB,EAAA,cAACC,EAAA,EAAD,CACIL,MAAO,IAAKV,OAAQJ,KAAKe,MAAMX,OAAQO,QAASX,KAAKe,MAAMJ,QAC3DS,UAAU,EAAMC,YAAY,EAAMC,UAAU,EAAMC,MAAO,kBACzDC,SAAS,EAAMC,gBAAgB,EAAMC,UAAU,WA1D7CC,EAAAA,eCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOC,EAAAC,EAAAC,cAACC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import * as React from 'react';\\n\\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\\n\\nclass App extends React.PureComponent<{}, IGridProps> {\\n\\n    private source: IGridProps['source'] = {\\n        localdata:\\n            [\\n                ['Maria Anders', 'Sales Representative', 'Berlin', 'Germany'],\\n                ['Ana Trujillo', 'Owner', 'Mxico D.F.', 'Mexico'],\\n                ['Antonio Moreno', 'Owner', 'Mxico D.F.', 'Mexico'],\\n                ['Thomas Hardy', 'Sales Representative', 'London', 'UK'],\\n                ['Christina Berglund', 'Order Administrator', 'Lule', 'Sweden'],\\n                ['Hanna Moos', 'Sales Representative', 'Mannheim', 'Germany'],\\n                ['Frdrique Citeaux', 'Marketing Manager', 'Strasbourg', 'France'],\\n                ['Martn Sommer', 'Owner', 'Madrid', 'Spain'],\\n                ['Owner', 'Marseille', 'France'],\\n                ['Elizabeth Lincoln', 'Accounting Manager', 'Tsawassen', 'Canada'],\\n                ['Victoria Ashworth', 'Sales Representative', 'London', 'UK'],\\n                ['Patricio Simpson', 'Sales Agent', 'Buenos Aires', 'Argentina'],\\n                ['Francisco Chang', 'Marketing Manager', 'Mxico D.F.', 'Mexico'],\\n                ['Yang Wang', 'Owner', 'Bern', 'Switzerland'],\\n                ['Pedro Afonso', 'Sales Associate', 'Sao Paulo', 'Brazil'],\\n                ['Elizabeth Brown', 'Sales Representative', 'London', 'UK'],\\n                ['Sven Ottlieb', 'Order Administrator', 'Aachen', 'Germany'],\\n                ['Janine Labrune', 'Owner', 'Nantes', 'France'],\\n                ['Ann Devon', 'Sales Agent', 'London', 'UK'],\\n                ['Roland Mendel', 'Sales Manager', 'Graz', 'Austria']\\n            ],\\n        datafields:\\n            [\\n                { name: 'ContactName', type: 'string', map: '0' },\\n                { name: 'Title', type: 'string', map: '1' },\\n                { name: 'City', type: 'string', map: '2' },\\n                { name: 'Country', type: 'string', map: '3' }\\n            ],\\n        datatype: 'array'\\n    };\\n\\n    private columns: IGridProps['columns'] =\\n        [\\n            { text: 'Contact Name', datafield: 'ContactName', width: 240 },\\n            { text: 'Contact Title', datafield: 'Title', width: 240 },\\n            { text: 'City', datafield: 'City', width: 150 },\\n            { text: 'Country', datafield: 'Country' }\\n        ];\\n\\n    constructor(props: {}) {\\n        super(props);\\n\\n        this.state = {\\n            columns: this.columns,\\n            source: new jqx.dataAdapter(this.source)\\n        };\\n    }\\n\\n    public render() {\\n        return (\\n            <JqxGrid\\n                width={850} source={this.state.source} columns={this.state.columns}\\n                pageable={true} autoheight={true} sortable={true} theme={'material-purple'}\\n                altrows={true} enabletooltips={true} editable={true}\\n            />\\n        );\\n    }\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\ntype Config = {\\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\\n};\\n\\nexport function register(config?: Config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(\\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\\n      window.location.href\\n    );\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl: string, config?: Config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,a,n){e.exports=n(45)},16:function(e,a,n){},45:function(e,a,n){\"use strict\";n.r(a);var t=n(0),r=n.n(t),o=n(4),i=n.n(o),s=(n(16),n(5)),l=n(6),c=n(8),d=n(7),u=n(9),m=n(2),w=function(e){function a(e){var n;return Object(s.a)(this,a),(n=Object(c.a)(this,Object(d.a)(a).call(this,e))).source={localdata:[[\"Maria Anders\",\"Sales Representative\",\"Berlin\",\"Germany\"],[\"Ana Trujillo\",\"Owner\",\"Mxico D.F.\",\"Mexico\"],[\"Antonio Moreno\",\"Owner\",\"Mxico D.F.\",\"Mexico\"],[\"Thomas Hardy\",\"Sales Representative\",\"London\",\"UK\"],[\"Christina Berglund\",\"Order Administrator\",\"Lule\",\"Sweden\"],[\"Hanna Moos\",\"Sales Representative\",\"Mannheim\",\"Germany\"],[\"Frdrique Citeaux\",\"Marketing Manager\",\"Strasbourg\",\"France\"],[\"Martn Sommer\",\"Owner\",\"Madrid\",\"Spain\"],[\"Owner\",\"Marseille\",\"France\"],[\"Elizabeth Lincoln\",\"Accounting Manager\",\"Tsawassen\",\"Canada\"],[\"Victoria Ashworth\",\"Sales Representative\",\"London\",\"UK\"],[\"Patricio Simpson\",\"Sales Agent\",\"Buenos Aires\",\"Argentina\"],[\"Francisco Chang\",\"Marketing Manager\",\"Mxico D.F.\",\"Mexico\"],[\"Yang Wang\",\"Owner\",\"Bern\",\"Switzerland\"],[\"Pedro Afonso\",\"Sales Associate\",\"Sao Paulo\",\"Brazil\"],[\"Elizabeth Brown\",\"Sales Representative\",\"London\",\"UK\"],[\"Sven Ottlieb\",\"Order Administrator\",\"Aachen\",\"Germany\"],[\"Janine Labrune\",\"Owner\",\"Nantes\",\"France\"],[\"Ann Devon\",\"Sales Agent\",\"London\",\"UK\"],[\"Roland Mendel\",\"Sales Manager\",\"Graz\",\"Austria\"]],datafields:[{name:\"ContactName\",type:\"string\",map:\"0\"},{name:\"Title\",type:\"string\",map:\"1\"},{name:\"City\",type:\"string\",map:\"2\"},{name:\"Country\",type:\"string\",map:\"3\"}],datatype:\"array\"},n.columns=[{text:\"Contact Name\",datafield:\"ContactName\",width:240},{text:\"Contact Title\",datafield:\"Title\",width:240},{text:\"City\",datafield:\"City\",width:150},{text:\"Country\",datafield:\"Country\"}],n.state={columns:n.columns,source:new m.b.dataAdapter(n.source)},n}return Object(u.a)(a,e),Object(l.a)(a,[{key:\"render\",value:function(){return t.createElement(m.a,{width:850,source:this.state.source,columns:this.state.columns,pageable:!0,autoheight:!0,sortable:!0,theme:\"material-purple\",altrows:!0,enabletooltips:!0,editable:!0})}}]),a}(t.PureComponent);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);","extractedComments":[]}