{"ast":null,"code":"import * as jqxcore from '../../jqwidgets/jqxcore';\nimport * as jqxdata from '../../jqwidgets/jqxdata';\nimport * as jqxdataexport from '../../jqwidgets/jqxdata.export';\nimport * as jqxdate from '../../jqwidgets/jqxdate';\nimport * as jqxbuttons from '../../jqwidgets/jqxbuttons';\nimport * as jqxmenu from '../../jqwidgets/jqxmenu';\nimport * as jqxtooltip from '../../jqwidgets/jqxtooltip';\nimport * as jqxscrollbar from '../../jqwidgets/jqxscrollbar';\nimport * as jqxradiobutton from '../../jqwidgets/jqxradiobutton';\nimport * as jqxcheckbox from '../../jqwidgets/jqxcheckbox';\nimport * as jqxwindow from '../../jqwidgets/jqxwindow';\nimport * as jqxlistbox from '../../jqwidgets/jqxlistbox';\nimport * as jqxcolorpicker from '../../jqwidgets/jqxcolorpicker';\nimport * as jqxcombobox from '../../jqwidgets/jqxcombobox';\nimport * as jqxdropdownlist from '../../jqwidgets/jqxdropdownlist';\nimport * as jqxnumberinput from '../../jqwidgets/jqxnumberinput';\nimport * as jqxinput from '../../jqwidgets/jqxinput';\nimport * as globalize from '../../jqwidgets/globalization/globalize';\nimport * as jqxcalendar from '../../jqwidgets/jqxcalendar';\nimport * as jqxdatetimeinput from '../../jqwidgets/jqxdatetimeinput';\nimport * as jqxscheduler from '../../jqwidgets/jqxscheduler';\nimport * as jqxschedulerapi from '../../jqwidgets/jqxscheduler.api';\nimport { createElement, PureComponent } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar JqxScheduler =\n/** @class */\nfunction (_super) {\n  __extends(JqxScheduler, _super);\n\n  function JqxScheduler(props) {\n    var _this = _super.call(this, props) || this;\n    /* tslint:disable:variable-name */\n\n\n    _this._jqx = JQXLite;\n    _this._id = 'JqxScheduler' + _this._jqx.generateID();\n    _this._componentSelector = '#' + _this._id;\n    _this.state = {\n      lastProps: props\n    };\n    return _this;\n  }\n\n  JqxScheduler.getDerivedStateFromProps = function (props, state) {\n    if (!Object.is) {\n      Object.is = function (x, y) {\n        if (x === y) {\n          return x !== 0 || 1 / x === 1 / y;\n        } else {\n          return x !== x && y !== y;\n        }\n      };\n    }\n\n    var areEqual = Object.is(props, state.lastProps);\n\n    if (!areEqual) {\n      var newState = {\n        lastProps: props\n      };\n      return newState;\n    }\n\n    return null;\n  };\n\n  JqxScheduler.prototype.componentDidMount = function () {\n    var widgetOptions = this._manageProps();\n\n    this._jqx(this._componentSelector).jqxScheduler(widgetOptions);\n\n    this._wireEvents();\n  };\n\n  JqxScheduler.prototype.componentDidUpdate = function () {\n    var widgetOptions = this._manageProps();\n\n    this.setOptions(widgetOptions);\n\n    this._wireEvents();\n  };\n\n  JqxScheduler.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this._id,\n      className: this.props.className,\n      style: this.props.style\n    }, this.props.children);\n  };\n\n  JqxScheduler.prototype.setOptions = function (options) {\n    this._jqx(this._componentSelector).jqxScheduler(options);\n  };\n\n  JqxScheduler.prototype.getOptions = function (option) {\n    return this._jqx(this._componentSelector).jqxScheduler(option);\n  };\n\n  JqxScheduler.prototype.addAppointment = function (item) {\n    this._jqx(this._componentSelector).jqxScheduler('addAppointment', item);\n  };\n\n  JqxScheduler.prototype.beginAppointmentsUpdate = function () {\n    this._jqx(this._componentSelector).jqxScheduler('beginAppointmentsUpdate');\n  };\n\n  JqxScheduler.prototype.clearAppointmentsSelection = function () {\n    this._jqx(this._componentSelector).jqxScheduler('clearAppointmentsSelection');\n  };\n\n  JqxScheduler.prototype.clearSelection = function () {\n    this._jqx(this._componentSelector).jqxScheduler('clearSelection');\n  };\n\n  JqxScheduler.prototype.closeMenu = function () {\n    this._jqx(this._componentSelector).jqxScheduler('closeMenu');\n  };\n\n  JqxScheduler.prototype.closeDialog = function () {\n    this._jqx(this._componentSelector).jqxScheduler('closeDialog');\n  };\n\n  JqxScheduler.prototype.deleteAppointment = function (appointmenId) {\n    this._jqx(this._componentSelector).jqxScheduler('deleteAppointment', appointmenId);\n  };\n\n  JqxScheduler.prototype.destroy = function () {\n    this._jqx(this._componentSelector).jqxScheduler('destroy');\n  };\n\n  JqxScheduler.prototype.endAppointmentsUpdate = function () {\n    this._jqx(this._componentSelector).jqxScheduler('endAppointmentsUpdate');\n  };\n\n  JqxScheduler.prototype.ensureAppointmentVisible = function (id) {\n    this._jqx(this._componentSelector).jqxScheduler('ensureAppointmentVisible', id);\n  };\n\n  JqxScheduler.prototype.ensureVisible = function (item, resourceId) {\n    this._jqx(this._componentSelector).jqxScheduler('ensureVisible', item, resourceId);\n  };\n\n  JqxScheduler.prototype.exportData = function (format) {\n    return this._jqx(this._componentSelector).jqxScheduler('exportData', format);\n  };\n\n  JqxScheduler.prototype.focus = function () {\n    this._jqx(this._componentSelector).jqxScheduler('focus');\n  };\n\n  JqxScheduler.prototype.getAppointmentProperty = function (appointmentId, name) {\n    return this._jqx(this._componentSelector).jqxScheduler('getAppointmentProperty', appointmentId, name);\n  };\n\n  JqxScheduler.prototype.getSelection = function () {\n    return this._jqx(this._componentSelector).jqxScheduler('getSelection');\n  };\n\n  JqxScheduler.prototype.getAppointments = function () {\n    return this._jqx(this._componentSelector).jqxScheduler('getAppointments');\n  };\n\n  JqxScheduler.prototype.getDataAppointments = function () {\n    return this._jqx(this._componentSelector).jqxScheduler('getDataAppointments');\n  };\n\n  JqxScheduler.prototype.hideAppointmentsByResource = function (resourcesId) {\n    this._jqx(this._componentSelector).jqxScheduler('hideAppointmentsByResource', resourcesId);\n  };\n\n  JqxScheduler.prototype.openMenu = function (left, top) {\n    this._jqx(this._componentSelector).jqxScheduler('openMenu', left, top);\n  };\n\n  JqxScheduler.prototype.openDialog = function (left, top) {\n    this._jqx(this._componentSelector).jqxScheduler('openDialog', left, top);\n  };\n\n  JqxScheduler.prototype.selectAppointment = function (appointmentId) {\n    this._jqx(this._componentSelector).jqxScheduler('selectAppointment', appointmentId);\n  };\n\n  JqxScheduler.prototype.setAppointmentProperty = function (appointmentId, name, value) {\n    this._jqx(this._componentSelector).jqxScheduler('setAppointmentProperty', appointmentId, name, value);\n  };\n\n  JqxScheduler.prototype.selectCell = function (date, allday, resourceId) {\n    this._jqx(this._componentSelector).jqxScheduler('selectCell', date, allday, resourceId);\n  };\n\n  JqxScheduler.prototype.showAppointmentsByResource = function (resourceId) {\n    this._jqx(this._componentSelector).jqxScheduler('showAppointmentsByResource', resourceId);\n  };\n\n  JqxScheduler.prototype.scrollWidth = function () {\n    return this._jqx(this._componentSelector).jqxScheduler('scrollWidth');\n  };\n\n  JqxScheduler.prototype.scrollHeight = function () {\n    return this._jqx(this._componentSelector).jqxScheduler('scrollHeight');\n  };\n\n  JqxScheduler.prototype.scrollLeft = function (left) {\n    this._jqx(this._componentSelector).jqxScheduler('scrollLeft', left);\n  };\n\n  JqxScheduler.prototype.scrollTop = function (top) {\n    this._jqx(this._componentSelector).jqxScheduler('scrollTop', top);\n  };\n\n  JqxScheduler.prototype._manageProps = function () {\n    var widgetProps = ['appointmentOpacity', 'appointmentsMinHeight', 'appointmentDataFields', 'appointmentTooltips', 'columnsHeight', 'contextMenu', 'contextMenuOpen', 'contextMenuClose', 'contextMenuItemClick', 'contextMenuCreate', 'changedAppointments', 'disabled', 'date', 'dayNameFormat', 'enableHover', 'editDialog', 'editDialogDateTimeFormatString', 'editDialogDateFormatString', 'editDialogOpen', 'editDialogCreate', 'editDialogKeyDown', 'editDialogClose', 'exportSettings', 'height', 'legendPosition', 'legendHeight', 'localization', 'min', 'max', 'ready', 'renderAppointment', 'rendering', 'rendered', 'rtl', 'resources', 'rowsHeight', 'showToolbar', 'showLegend', 'scrollBarSize', 'source', 'statuses', 'touchRowsHeight', 'theme', 'touchAppointmentsMinHeight', 'touchScrollBarSize', 'timeZone', 'touchDayNameFormat', 'toolBarRangeFormat', 'toolBarRangeFormatAbbr', 'toolbarHeight', 'views', 'view', 'width'];\n    var options = {};\n\n    for (var prop in this.props) {\n      if (widgetProps.indexOf(prop) !== -1) {\n        options[prop] = this.props[prop];\n      }\n    }\n\n    return options;\n  };\n\n  JqxScheduler.prototype._wireEvents = function () {\n    for (var prop in this.props) {\n      if (prop.indexOf('on') === 0) {\n        var originalEventName = prop.slice(2);\n        originalEventName = originalEventName.charAt(0).toLowerCase() + originalEventName.slice(1);\n\n        this._jqx(this._componentSelector).off(originalEventName);\n\n        this._jqx(this._componentSelector).on(originalEventName, this.props[prop]);\n      }\n    }\n  };\n\n  return JqxScheduler;\n}(PureComponent);\n\nvar jqx = window.jqx;\nvar JQXLite = window.JQXLite;\nexport default JqxScheduler;\nexport { jqx, JQXLite };","map":null,"metadata":{},"sourceType":"module"}