{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  if (!a.jqx.scheduler) {\n    a.jqx.scheduler = {};\n  }\n\n  a.jqx.jqxWidget(\"jqxScheduler\", \"\", {});\n  a.extend(a.jqx._jqxScheduler.prototype, {\n    defineInstance: function () {\n      var b = {\n        altRows: false,\n        autoShowLoadElement: true,\n        columnsHeight: 30,\n        columns: [],\n        columnGroups: null,\n        dataview: null,\n        disabled: false,\n        enableHover: true,\n        appointmentOpacity: 0.8,\n        headerZIndex: 235,\n        height: 600,\n        timeRulerWidth: 60,\n        loadingErrorMessage: \"The data is still loading and you cannot set a property or call a method. You can do that once the data binding is completed. jqxScheduler raises the 'bindingComplete' event when the binding is completed.\",\n        localization: null,\n        ready: null,\n        renderToolBar: null,\n        renderAppointment: null,\n        rendered: null,\n        rendering: null,\n        rtl: false,\n        showToolbar: true,\n        showLegend: false,\n        legendPosition: \"bottom\",\n        legendHeight: 34,\n        rowsHeight: 27,\n        touchRowsHeight: 36,\n        appointmentsMinHeight: 18,\n        touchAppointmentsMinHeight: 27,\n        appointmentsRenderMode: \"default\",\n        serverProcessing: false,\n        selectionMode: \"multiplerows\",\n        scrollBarSize: a.jqx.utilities.scrollBarSize,\n        touchScrollBarSize: a.jqx.utilities.touchScrollBarSize,\n        showHeader: true,\n        maxHeight: 999999,\n        maxWidth: 999999,\n        autoBind: true,\n        showAllDayRow: true,\n        changedAppointments: new Array(),\n        renderMode: \"simple\",\n        views: new Array(),\n        view: 0,\n        min: new a.jqx.date(0),\n        max: new a.jqx.date(9999, 12, 31),\n        date: new a.jqx.date(\"todayDate\"),\n        colors: [\"#307DD7\", \"#AA4643\", \"#89A54E\", \"#71588F\", \"#4198AF\", \"#7FD13B\", \"#EA157A\", \"#FEB80A\", \"#00ADDC\", \"#738AC8\", \"#E8601A\", \"#FF9639\", \"#F5BD6A\", \"#599994\", \"#115D6E\", \"#D02841\", \"#FF7C41\", \"#FFC051\", \"#5B5F4D\", \"#364651\", \"#25A0DA\", \"#309B46\", \"#8EBC00\", \"#FF7515\", \"#FFAE00\", \"#0A3A4A\", \"#196674\", \"#33A6B2\", \"#9AC836\", \"#D0E64B\", \"#CC6B32\", \"#FFAB48\", \"#FFE7AD\", \"#A7C9AE\", \"#888A63\", \"#3F3943\", \"#01A2A6\", \"#29D9C2\", \"#BDF271\", \"#FFFFA6\", \"#1B2B32\", \"#37646F\", \"#A3ABAF\", \"#E1E7E8\", \"#B22E2F\", \"#5A4B53\", \"#9C3C58\", \"#DE2B5B\", \"#D86A41\", \"#D2A825\", \"#993144\", \"#FFA257\", \"#CCA56A\", \"#ADA072\", \"#949681\", \"#105B63\", \"#EEEAC5\", \"#FFD34E\", \"#DB9E36\", \"#BD4932\", \"#BBEBBC\", \"#F0EE94\", \"#F5C465\", \"#FA7642\", \"#FF1E54\", \"#60573E\", \"#F2EEAC\", \"#BFA575\", \"#A63841\", \"#BFB8A3\", \"#444546\", \"#FFBB6E\", \"#F28D00\", \"#D94F00\", \"#7F203B\", \"#583C39\", \"#674E49\", \"#948658\", \"#F0E99A\", \"#564E49\", \"#142D58\", \"#447F6E\", \"#E1B65B\", \"#C8782A\", \"#9E3E17\", \"#4D2B1F\", \"#635D61\", \"#7992A2\", \"#97BFD5\", \"#BFDCF5\", \"#844341\", \"#D5CC92\", \"#BBA146\", \"#897B26\", \"#55591C\", \"#56626B\", \"#6C9380\", \"#C0CA55\", \"#F07C6C\", \"#AD5472\", \"#96003A\", \"#FF7347\", \"#FFBC7B\", \"#FF4154\", \"#642223\", \"#5D7359\", \"#E0D697\", \"#D6AA5C\", \"#8C5430\", \"#661C0E\", \"#16193B\", \"#35478C\", \"#4E7AC7\", \"#7FB2F0\", \"#ADD5F7\", \"#7B1A25\", \"#BF5322\", \"#9DA860\", \"#CEA457\", \"#B67818\", \"#0081DA\", \"#3AAFFF\", \"#99C900\", \"#FFEB3D\", \"#309B46\", \"#0069A5\", \"#0098EE\", \"#7BD2F6\", \"#FFB800\", \"#FF6800\", \"#FF6800\", \"#A0A700\", \"#FF8D00\", \"#678900\", \"#0069A5\"],\n        colorSchemes: [{\n          name: \"scheme01\",\n          colors: [\"#307DD7\", \"#AA4643\", \"#89A54E\", \"#71588F\", \"#4198AF\"]\n        }, {\n          name: \"scheme02\",\n          colors: [\"#7FD13B\", \"#EA157A\", \"#FEB80A\", \"#00ADDC\", \"#738AC8\"]\n        }, {\n          name: \"scheme03\",\n          colors: [\"#E8601A\", \"#FF9639\", \"#F5BD6A\", \"#599994\", \"#115D6E\"]\n        }, {\n          name: \"scheme04\",\n          colors: [\"#D02841\", \"#FF7C41\", \"#FFC051\", \"#5B5F4D\", \"#364651\"]\n        }, {\n          name: \"scheme05\",\n          colors: [\"#25A0DA\", \"#309B46\", \"#8EBC00\", \"#FF7515\", \"#FFAE00\"]\n        }, {\n          name: \"scheme06\",\n          colors: [\"#0A3A4A\", \"#196674\", \"#33A6B2\", \"#9AC836\", \"#D0E64B\"]\n        }, {\n          name: \"scheme07\",\n          colors: [\"#CC6B32\", \"#FFAB48\", \"#FFE7AD\", \"#A7C9AE\", \"#888A63\"]\n        }, {\n          name: \"scheme08\",\n          colors: [\"#3F3943\", \"#01A2A6\", \"#29D9C2\", \"#BDF271\", \"#FFFFA6\"]\n        }, {\n          name: \"scheme09\",\n          colors: [\"#1B2B32\", \"#37646F\", \"#A3ABAF\", \"#E1E7E8\", \"#B22E2F\"]\n        }, {\n          name: \"scheme10\",\n          colors: [\"#5A4B53\", \"#9C3C58\", \"#DE2B5B\", \"#D86A41\", \"#D2A825\"]\n        }, {\n          name: \"scheme11\",\n          colors: [\"#993144\", \"#FFA257\", \"#CCA56A\", \"#ADA072\", \"#949681\"]\n        }, {\n          name: \"scheme12\",\n          colors: [\"#105B63\", \"#EEEAC5\", \"#FFD34E\", \"#DB9E36\", \"#BD4932\"]\n        }, {\n          name: \"scheme13\",\n          colors: [\"#BBEBBC\", \"#F0EE94\", \"#F5C465\", \"#FA7642\", \"#FF1E54\"]\n        }, {\n          name: \"scheme14\",\n          colors: [\"#60573E\", \"#F2EEAC\", \"#BFA575\", \"#A63841\", \"#BFB8A3\"]\n        }, {\n          name: \"scheme15\",\n          colors: [\"#444546\", \"#FFBB6E\", \"#F28D00\", \"#D94F00\", \"#7F203B\"]\n        }, {\n          name: \"scheme16\",\n          colors: [\"#583C39\", \"#674E49\", \"#948658\", \"#F0E99A\", \"#564E49\"]\n        }, {\n          name: \"scheme17\",\n          colors: [\"#142D58\", \"#447F6E\", \"#E1B65B\", \"#C8782A\", \"#9E3E17\"]\n        }, {\n          name: \"scheme18\",\n          colors: [\"#4D2B1F\", \"#635D61\", \"#7992A2\", \"#97BFD5\", \"#BFDCF5\"]\n        }, {\n          name: \"scheme19\",\n          colors: [\"#844341\", \"#D5CC92\", \"#BBA146\", \"#897B26\", \"#55591C\"]\n        }, {\n          name: \"scheme20\",\n          colors: [\"#56626B\", \"#6C9380\", \"#C0CA55\", \"#F07C6C\", \"#AD5472\"]\n        }, {\n          name: \"scheme21\",\n          colors: [\"#96003A\", \"#FF7347\", \"#FFBC7B\", \"#FF4154\", \"#642223\"]\n        }, {\n          name: \"scheme22\",\n          colors: [\"#5D7359\", \"#E0D697\", \"#D6AA5C\", \"#8C5430\", \"#661C0E\"]\n        }, {\n          name: \"scheme23\",\n          colors: [\"#16193B\", \"#35478C\", \"#4E7AC7\", \"#7FB2F0\", \"#ADD5F7\"]\n        }, {\n          name: \"scheme24\",\n          colors: [\"#7B1A25\", \"#BF5322\", \"#9DA860\", \"#CEA457\", \"#B67818\"]\n        }, {\n          name: \"scheme25\",\n          colors: [\"#0081DA\", \"#3AAFFF\", \"#99C900\", \"#FFEB3D\", \"#309B46\"]\n        }, {\n          name: \"scheme26\",\n          colors: [\"#0069A5\", \"#0098EE\", \"#7BD2F6\", \"#FFB800\", \"#FF6800\"]\n        }, {\n          name: \"scheme27\",\n          colors: [\"#FF6800\", \"#A0A700\", \"#FF8D00\", \"#678900\", \"#0069A5\"]\n        }],\n        resources: null,\n        contextMenu: true,\n        contextMenuOpen: null,\n        contextMenuClose: null,\n        contextMenuItemClick: null,\n        contextMenuCreate: null,\n        timeZone: null,\n        statuses: {\n          free: \"white\",\n          tentative: \"tentative\",\n          busy: \"transparent\",\n          outOfOffice: \"#800080\"\n        },\n        appointmentDataFields: {\n          from: \"from\",\n          to: \"to\",\n          id: \"id\",\n          calendarId: \"calendarId\",\n          description: \"description\",\n          location: \"location\",\n          subject: \"subject\",\n          background: \"background\",\n          color: \"color\",\n          borderColor: \"borderColor\",\n          style: \"style\",\n          recurrencePattern: \"recurrencePattern\",\n          recurrenceException: \"recurrenceException\",\n          draggable: \"draggable\",\n          resizable: \"resizable\",\n          resourceId: \"resourceId\",\n          status: \"status\",\n          tooltip: \"tooltip\",\n          hidden: \"hidden\",\n          allDay: \"allDay\",\n          timeZone: \"timeZone\",\n          ownerId: \"ownerId\"\n        },\n        appointmentTooltips: true,\n        tableColumns: 1,\n        tableRows: 1,\n        dayNameFormat: \"full\",\n        touchDayNameFormat: \"abbr\",\n        toolBarRangeFormat: \"dd MMMM yyyy\",\n        toolBarRangeFormatAbbr: \"dd MM yyyy\",\n        columnRenderer: null,\n        exportSettings: {\n          serverURL: null,\n          characterSet: null,\n          fileName: \"jqxScheduler\",\n          dateTimeFormatString: \"S\",\n          resourcesInMultipleICSFiles: false,\n          ICSXWRCALNAME: \"jqxScheduler\",\n          ICSXWRCALDESC: \"jqxScheduler Description\"\n        },\n        source: {\n          beforeprocessing: null,\n          beforesend: null,\n          loaderror: null,\n          localdata: null,\n          data: null,\n          datatype: \"array\",\n          datafields: [],\n          url: \"\",\n          root: \"\",\n          record: \"\",\n          id: \"\",\n          totalrecords: 0,\n          recordstartindex: 0,\n          recordendindex: 0,\n          loadallrecords: true,\n          sortcolumn: null,\n          sortdirection: null,\n          sort: null,\n          filter: null,\n          sortcomparer: null\n        },\n        editDialogDateTimeFormatString: \"dd/MM/yyyy hh:mm tt\",\n        editDialogDateFormatString: \"dd/MM/yyyy\",\n        editDialogOpen: null,\n        editDialogCreate: null,\n        editDialogKeyDown: null,\n        editDialogClose: null,\n        editDialog: true,\n        toolbarHeight: 54,\n        tableZIndex: 469,\n        _updating: false,\n        touchMode: \"auto\",\n        width: 800,\n        that: this,\n        beginDrag: null,\n        endDrag: null,\n        dragging: null,\n        timeZones: [{\n          id: \"Dateline Standard Time\",\n          offset: -720,\n          offsetHours: -12,\n          displayName: \"(UTC-12:00) International Date Line West\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"UTC-11\",\n          offset: -660,\n          offsetHours: -11,\n          displayName: \"(UTC-11:00) Coordinated Universal Time-11\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Hawaiteratoran Standard Time\",\n          offset: -600,\n          offsetHours: -10,\n          displayName: \"(UTC-10:00) Hawaiterator\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Alaskan Standard Time\",\n          offset: -540,\n          offsetHours: -9,\n          displayName: \"(UTC-09:00) Alaska\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Pacific Standard Time (Mexico)\",\n          offset: -480,\n          offsetHours: -8,\n          displayName: \"(UTC-08:00) Baja California\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Pacific Standard Time\",\n          offset: -480,\n          offsetHours: -8,\n          displayName: \"(UTC-08:00) Pacific Time (US & Canada)\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"US Mountain Standard Time\",\n          offset: -420,\n          offsetHours: -7,\n          displayName: \"(UTC-07:00) Arizona\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Mountain Standard Time (Mexico)\",\n          offset: -420,\n          offsetHours: -7,\n          displayName: \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Mountain Standard Time\",\n          offset: -420,\n          offsetHours: -7,\n          displayName: \"(UTC-07:00) Mountain Time (US & Canada)\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Central Standard Time\",\n          offset: -360,\n          offsetHours: -6,\n          displayName: \"(UTC-06:00) Central Time (US & Canada)\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Central America Standard Time\",\n          offset: -360,\n          offsetHours: -6,\n          displayName: \"(UTC-06:00) Central America\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Canada Central Standard Time\",\n          offset: -360,\n          offsetHours: -6,\n          displayName: \"(UTC-06:00) Saskatchewan\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Central Standard Time (Mexico)\",\n          offset: -360,\n          offsetHours: -6,\n          displayName: \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"SA Pacific Standard Time\",\n          offset: -300,\n          offsetHours: -5,\n          displayName: \"(UTC-05:00) Bogota, Lima, Quito, Rio Branco\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Eastern Standard Time\",\n          offset: -300,\n          offsetHours: -5,\n          displayName: \"(UTC-05:00) Eastern Time (US & Canada)\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"US Eastern Standard Time\",\n          offset: -300,\n          offsetHours: -5,\n          displayName: \"(UTC-05:00) Indiana (East)\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Venezuela Standard Time\",\n          offset: -270,\n          offsetHours: -4.5,\n          displayName: \"(UTC-04:30) Caracas\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Atlantic Standard Time\",\n          offset: -240,\n          offsetHours: -4,\n          displayName: \"(UTC-04:00) Atlantic Time (Canada)\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Paraguay Standard Time\",\n          offset: -240,\n          offsetHours: -4,\n          displayName: \"(UTC-04:00) Asuncion\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Central Brazilian Standard Time\",\n          offset: -240,\n          offsetHours: -4,\n          displayName: \"(UTC-04:00) Cuiaba\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Pacific SA Standard Time\",\n          offset: -240,\n          offsetHours: -4,\n          displayName: \"(UTC-04:00) Santiago\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"SA Western Standard Time\",\n          offset: -240,\n          offsetHours: -4,\n          displayName: \"(UTC-04:00) Georgetown, La Paz, Manaus\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Newfoundland Standard Time\",\n          offset: -210,\n          offsetHours: -3.5,\n          displayName: \"(UTC-03:30) Newfoundland\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"SA Eastern Standard Time\",\n          offset: -180,\n          offsetHours: -3,\n          displayName: \"(UTC-03:00) Cayenne, Fortaleza\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Argentina Standard Time\",\n          offset: -180,\n          offsetHours: -3,\n          displayName: \"(UTC-03:00) Buenos Aires\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"E. South America Standard Time\",\n          offset: -180,\n          offsetHours: -3,\n          displayName: \"(UTC-03:00) Brasilia\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Bahia Standard Time\",\n          offset: -180,\n          offsetHours: -3,\n          displayName: \"(UTC-03:00) Salvador\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Montevideo Standard Time\",\n          offset: -180,\n          offsetHours: -3,\n          displayName: \"(UTC-03:00) Montevideo\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Greenland Standard Time\",\n          offset: -180,\n          offsetHours: -3,\n          displayName: \"(UTC-03:00) Greenland\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"UTC-02\",\n          offset: -120,\n          offsetHours: -2,\n          displayName: \"(UTC-02:00) Coordinated Universal Time-02\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Mid-Atlantic Standard Time\",\n          offset: -120,\n          offsetHours: -2,\n          displayName: \"(UTC-02:00) Mid-Atlantic - Old\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Azores Standard Time\",\n          offset: -60,\n          offsetHours: -1,\n          displayName: \"(UTC-01:00) Azores\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Cape Verde Standard Time\",\n          offset: -60,\n          offsetHours: -1,\n          displayName: \"(UTC-01:00) Cape Verde Is.\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Morocco Standard Time\",\n          offset: 0,\n          offsetHours: 0,\n          displayName: \"(UTC) Casablanca\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"UTC\",\n          offset: 0,\n          offsetHours: 0,\n          displayName: \"(UTC) Coordinated Universal Time\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"GMT Standard Time\",\n          offset: 0,\n          offsetHours: 0,\n          displayName: \"(UTC) Dublin, Edinburgh, Lisbon, London\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Greenwich Standard Time\",\n          offset: 0,\n          offsetHours: 0,\n          displayName: \"(UTC) Monrovia, Reykjavik\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Central European Standard Time\",\n          offset: 60,\n          offsetHours: 1,\n          displayName: \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Namibia Standard Time\",\n          offset: 60,\n          offsetHours: 1,\n          displayName: \"(UTC+01:00) Windhoek\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"W. Central Africa Standard Time\",\n          offset: 60,\n          offsetHours: 1,\n          displayName: \"(UTC+01:00) West Central Africa\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"W. Europe Standard Time\",\n          offset: 60,\n          offsetHours: 1,\n          displayName: \"(UTC+01:00) Amsterdam, Berlin, Rome\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Central Europe Standard Time\",\n          offset: 60,\n          offsetHours: 1,\n          displayName: \"(UTC+01:00) Belgrade, Budapest, Prague\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Romance Standard Time\",\n          offset: 60,\n          offsetHours: 1,\n          displayName: \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"FLE Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"South Africa Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Harare, Pretoria\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Turkey Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Istanbul\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"GTB Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Athens, Bucharest\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Libya Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Tripoli\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"E. Europe Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) E. Europe\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Jordan Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Amman\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Middle East Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Beirut\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Egypt Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Cairo\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Syria Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Damascus\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Israel Standard Time\",\n          offset: 120,\n          offsetHours: 2,\n          displayName: \"(UTC+02:00) Jerusalem\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Arab Standard Time\",\n          offset: 180,\n          offsetHours: 3,\n          displayName: \"(UTC+03:00) Kuwait, Riyadh\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"E. Africa Standard Time\",\n          offset: 180,\n          offsetHours: 3,\n          displayName: \"(UTC+03:00) Nairobi\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Arabic Standard Time\",\n          offset: 180,\n          offsetHours: 3,\n          displayName: \"(UTC+03:00) Baghdad\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Kaliningrad Standard Time\",\n          offset: 180,\n          offsetHours: 3,\n          displayName: \"(UTC+03:00) Kaliningrad, Minsk\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Iran Standard Time\",\n          offset: 210,\n          offsetHours: 3.5,\n          displayName: \"(UTC+03:30) Tehran\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Mauritius Standard Time\",\n          offset: 240,\n          offsetHours: 4,\n          displayName: \"(UTC+04:00) Port Louis\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Georgian Standard Time\",\n          offset: 240,\n          offsetHours: 4,\n          displayName: \"(UTC+04:00) Tbilisi\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Caucasus Standard Time\",\n          offset: 240,\n          offsetHours: 4,\n          displayName: \"(UTC+04:00) Yerevan\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Arabian Standard Time\",\n          offset: 240,\n          offsetHours: 4,\n          displayName: \"(UTC+04:00) Abu Dhabi, Muscat\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Azerbaijan Standard Time\",\n          offset: 240,\n          offsetHours: 4,\n          displayName: \"(UTC+04:00) Baku\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Russian Standard Time\",\n          offset: 240,\n          offsetHours: 4,\n          displayName: \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Afghanistan Standard Time\",\n          offset: 270,\n          offsetHours: 4.5,\n          displayName: \"(UTC+04:30) Kabul\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Pakistan Standard Time\",\n          offset: 300,\n          offsetHours: 5,\n          displayName: \"(UTC+05:00) Islamabad, Karachi\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"West Asia Standard Time\",\n          offset: 300,\n          offsetHours: 5,\n          displayName: \"(UTC+05:00) Ashgabat, Tashkent\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"India Standard Time\",\n          offset: 330,\n          offsetHours: 5.5,\n          displayName: \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Sri Lanka Standard Time\",\n          offset: 330,\n          offsetHours: 5.5,\n          displayName: \"(UTC+05:30) Sri Jayawardenepura\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Nepal Standard Time\",\n          offset: 345,\n          offsetHours: 5.75,\n          displayName: \"(UTC+05:45) Kathmandu\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Central Asia Standard Time\",\n          offset: 360,\n          offsetHours: 6,\n          displayName: \"(UTC+06:00) Astana\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Bangladesh Standard Time\",\n          offset: 360,\n          offsetHours: 6,\n          displayName: \"(UTC+06:00) Dhaka\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Ekaterinburg Standard Time\",\n          offset: 360,\n          offsetHours: 6,\n          displayName: \"(UTC+06:00) Ekaterinburg\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Myanmar Standard Time\",\n          offset: 390,\n          offsetHours: 6.5,\n          displayName: \"(UTC+06:30) Yangon (Rangoon)\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"SE Asia Standard Time\",\n          offset: 420,\n          offsetHours: 7,\n          displayName: \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"N. Central Asia Standard Time\",\n          offset: 420,\n          offsetHours: 7,\n          displayName: \"(UTC+07:00) Novosibirsk\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Ulaanbaatar Standard Time\",\n          offset: 480,\n          offsetHours: 8,\n          displayName: \"(UTC+08:00) Ulaanbaatar\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"China Standard Time\",\n          offset: 480,\n          offsetHours: 8,\n          displayName: \"(UTC+08:00) Beijing, Chongqing, Hong Kong\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Singapore Standard Time\",\n          offset: 480,\n          offsetHours: 8,\n          displayName: \"(UTC+08:00) Kuala Lumpur, Singapore\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"North Asia Standard Time\",\n          offset: 480,\n          offsetHours: 8,\n          displayName: \"(UTC+08:00) Krasnoyarsk\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Taipei Standard Time\",\n          offset: 480,\n          offsetHours: 8,\n          displayName: \"(UTC+08:00) Taipei\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"W. Australia Standard Time\",\n          offset: 480,\n          offsetHours: 8,\n          displayName: \"(UTC+08:00) Perth\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Korea Standard Time\",\n          offset: 540,\n          offsetHours: 9,\n          displayName: \"(UTC+09:00) Seoul\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"North Asia East Standard Time\",\n          offset: 540,\n          offsetHours: 9,\n          displayName: \"(UTC+09:00) Irkutsk\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Tokyo Standard Time\",\n          offset: 540,\n          offsetHours: 9,\n          displayName: \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"AUS Central Standard Time\",\n          offset: 570,\n          offsetHours: 9.5,\n          displayName: \"(UTC+09:30) Darwin\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Cen. Australia Standard Time\",\n          offset: 570,\n          offsetHours: 9.5,\n          displayName: \"(UTC+09:30) Adelaide\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"West Pacific Standard Time\",\n          offset: 600,\n          offsetHours: 10,\n          displayName: \"(UTC+10:00) Guam, Port Moresby\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Tasmania Standard Time\",\n          offset: 600,\n          offsetHours: 10,\n          displayName: \"(UTC+10:00) Hobart\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"E. Australia Standard Time\",\n          offset: 600,\n          offsetHours: 10,\n          displayName: \"(UTC+10:00) Brisbane\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"AUS Eastern Standard Time\",\n          offset: 600,\n          offsetHours: 10,\n          displayName: \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Yakutsk Standard Time\",\n          offset: 600,\n          offsetHours: 10,\n          displayName: \"(UTC+10:00) Yakutsk\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Vladivostok Standard Time\",\n          offset: 660,\n          offsetHours: 11,\n          displayName: \"(UTC+11:00) Vladivostok\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Central Pacific Standard Time\",\n          offset: 660,\n          offsetHours: 11,\n          displayName: \"(UTC+11:00) Solomon Is., New Caledonia\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Magadan Standard Time\",\n          offset: 720,\n          offsetHours: 12,\n          displayName: \"(UTC+12:00) Magadan\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Kamchatka Standard Time\",\n          offset: 720,\n          offsetHours: 12,\n          displayName: \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"Fiji Standard Time\",\n          offset: 720,\n          offsetHours: 12,\n          displayName: \"(UTC+12:00) Fiji\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"New Zealand Standard Time\",\n          offset: 720,\n          offsetHours: 12,\n          displayName: \"(UTC+12:00) Auckland, Wellington\",\n          supportsDaylightSavingTime: true\n        }, {\n          id: \"UTC+12\",\n          offset: 720,\n          offsetHours: 12,\n          displayName: \"(UTC+12:00) Coordinated Universal Time+12\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Tonga Standard Time\",\n          offset: 780,\n          offsetHours: 13,\n          displayName: \"(UTC+13:00) Nuku'alofa\",\n          supportsDaylightSavingTime: false\n        }, {\n          id: \"Samoa Standard Time\",\n          offset: 780,\n          offsetHours: 13,\n          displayName: \"(UTC+13:00) Samoa\",\n          supportsDaylightSavingTime: true\n        }]\n      };\n\n      if (this === a.jqx._jqxScheduler.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      this.that = this;\n      return b;\n    },\n    createInstance: function (c) {\n      var e = this;\n      e._views = new Array();\n      e._view = e.view;\n\n      for (var d = 0; d < e.views.length; d++) {\n        if (a.type(e.views[d]) === \"string\") {\n          e._views.push({\n            type: e.views[d]\n          });\n        } else {\n          e._views.push(e.views[d]);\n        }\n      }\n\n      for (var d = 0; d < e._views.length; d++) {\n        if (e._views[d].type == e.view) {\n          e._view = d;\n          break;\n        }\n      }\n\n      if (a.jqx.utilities.scrollBarSize != 15) {\n        e.scrollBarSize = a.jqx.utilities.scrollBarSize;\n      }\n\n      if (e.source && !e.source.dataBind) {\n        e.source = new a.jqx.dataAdapter(e.source);\n      }\n\n      var b = e.source._source.datafields;\n\n      if (b && b.length > 0) {\n        e._camelCase = e.source._source.dataFields !== undefined;\n        e.selectionMode = e.selectionMode.toLowerCase();\n      }\n\n      if (e.host.attr(\"tabindex\") == null) {\n        e.host.attr(\"tabindex\", \"0\");\n      }\n\n      e.host.attr(\"role\", \"grid\");\n      e.host.attr(\"align\", \"left\");\n      e.host.addClass(e.toTP(\"jqx-grid\"));\n      e.host.addClass(e.toTP(\"jqx-scheduler\"));\n      e.host.addClass(e.toTP(\"jqx-reset\"));\n      e.host.addClass(e.toTP(\"jqx-rc-all\"));\n      e.host.addClass(e.toTP(\"jqx-widget\"));\n      e.host.addClass(e.toTP(\"jqx-widget-content jqx-disableselect\"));\n\n      if (e._testmodules()) {\n        return;\n      }\n\n      e.overlay = a(\"<div style='z-index: 999; position:absolute;'></div>\");\n      e.overlay.hide();\n      e.overlay.appendTo(e.host);\n      e.render(true);\n      a.jqx.utilities.resize(e.host, function () {\n        var h = a(window).width();\n        var f = a(window).height();\n        e._hostWidth = null;\n        e._hostHeight = null;\n        var g = e.host.width();\n        var i = e.host.height();\n        e._hostWidth = g;\n        e._hostHeight = i;\n\n        if (e._lastHostWidth != g || e._lastHostHeight != i) {\n          e._updatesize(e._lastHostWidth != g, e._lastHostHeight != i);\n        }\n\n        e._lastWidth = h;\n        e._lastHeight = f;\n        e._lastHostWidth = g;\n        e._lastHostHeight = i;\n      });\n      e.createEditRecurrenceDialog();\n    },\n    createEditRecurrenceDialog: function () {\n      var d = this;\n      d.editRecurrenceDialog = null;\n      var b = a(\"<div><div>\" + d.schedulerLocalization.editRecurringAppointmentDialogTitleString + \"</div><div><div>\" + d.schedulerLocalization.editRecurringAppointmentDialogContentString + \"</div><div style='position: absolute; white-space:nowrap; text-overflow: ellipsis; left:0px; width:100%; bottom: 0px;'><button title='\" + d.schedulerLocalization.editRecurringAppointmentDialogOccurrenceString + \"' id='editRecurringAppointmentOccurrence.\" + d.element.id + \"' style='white-space:nowrap; text-overflow: ellipsis; border-left-width: 0px;  border-bottom-width: 0px; border-radius:0px; width:50%;'>\" + d.schedulerLocalization.editRecurringAppointmentDialogOccurrenceString + \"</button><button title='\" + d.schedulerLocalization.editRecurringAppointmentDialogSeriesString + \"' id='editRecurringAppointmentSeries.\" + d.element.id + \"' style=' white-space:nowrap; text-overflow: ellipsis; border-bottom-width: 0px;  border-left-width: 0px; border-right-width:0px; width:50%; border-radius:0px;'>\" + d.schedulerLocalization.editRecurringAppointmentDialogSeriesString + \"</button></div></div></div>\");\n      d.editRecurrenceDialog = b;\n      a(b).jqxWindow({\n        rtl: d.rtl,\n        autoFocus: false,\n        animationType: \"none\",\n        autoOpen: false,\n        theme: d.theme,\n        minWidth: 300,\n        minHeight: 110,\n        resizable: false\n      });\n      var c = b.find(\"button\");\n      c.jqxButton({\n        theme: d.theme,\n        width: \"50%\"\n      });\n      var e = false;\n      c.mousedown(function () {\n        e = true;\n        var f = this.id;\n\n        if (f.indexOf(\"editRecurringAppointmentOccurrence\") >= 0) {\n          d.editSeries(false);\n        } else {\n          d.editSeries(true);\n        }\n\n        a(b).jqxWindow(\"close\");\n      });\n      this.addHandler(a(b), \"open\", function (f) {\n        d._raiseEvent(\"editRecurrenceDialogOpen\", {\n          dialog: b,\n          appointment: d.selectedJQXAppointment ? d.selectedJQXAppointment.boundAppointment : null\n        });\n      });\n      d.addHandler(a(b), \"keydown\", function (f) {\n        if (f.keyCode == 13) {\n          if (a(document.activeElement).ischildof(a(b))) {\n            if (document.activeElement.nodeName.toLowerCase() == \"button\") {\n              a(document.activeElement).trigger(\"mousedown\");\n              a(document.activeElement).trigger(\"mouseup\");\n              return true;\n            }\n          }\n        }\n      });\n      this.addHandler(a(b), \"close\", function (f) {\n        if (!e) {\n          d._removeFeedbackAndStopResize();\n\n          d.overlay.hide();\n          d.focus();\n\n          d._raiseEvent(\"editRecurrenceDialogClose\", {\n            dialog: b,\n            appointment: d.selectedJQXAppointment ? d.selectedJQXAppointment.boundAppointment : null\n          });\n\n          return false;\n        }\n\n        e = false;\n        d.overlay.hide();\n        d.focus();\n\n        d._raiseEvent(\"editRecurrenceDialogClose\", {\n          dialog: b,\n          appointment: d.selectedJQXAppointment ? d.selectedJQXAppointment.boundAppointment : null\n        });\n      });\n      d.editRecurrenceDialog = b;\n    },\n    getViewStart: function () {\n      var d = this.getVisibleDate();\n      var b = this._views[this._view].type;\n      var e = this._views[this._view];\n\n      switch (b) {\n        case \"dayView\":\n        case \"timelineDayView\":\n          return d;\n      }\n\n      var c = this.getFirstDayOfWeek(d);\n      return c;\n    },\n    getViewEnd: function () {\n      var e = this.getViewStart();\n      var d = 1;\n      var b = this._views[this._view].type;\n      var c = this._views[this._view];\n\n      switch (b) {\n        case \"dayView\":\n          d = 1;\n          break;\n\n        case \"timelineDayView\":\n          d = 1;\n\n          if (c.days) {\n            d = c.days;\n          }\n\n          break;\n\n        case \"weekView\":\n        case \"timelineWeekView\":\n          d = 7;\n\n          if (c.days) {\n            d = c.days;\n          }\n\n          break;\n\n        case \"monthView\":\n          d = 41;\n          break;\n\n        case \"timelineMonthView\":\n          d = 41;\n\n          if (c.days) {\n            d = c.days;\n          }\n\n          break;\n\n        case \"agendaView\":\n          d = 7;\n\n          if (c.days) {\n            d = c.days;\n          }\n\n          break;\n      }\n\n      return e.addDays(d);\n    },\n    getFirstDayOfWeek: function (d) {\n      var c = d;\n      var b = this.schedulerLocalization.firstDay;\n\n      if (b < 0 || b > 6) {\n        b = 6;\n      }\n\n      while (c.dayOfWeek() != b) {\n        c.addDays(-1, false);\n      }\n\n      return c;\n    },\n    getVisibleDate: function () {\n      var d = this.date;\n\n      if (d < this.min) {\n        d = this.min;\n      }\n\n      if (d > this.max) {\n        d = this.max;\n      }\n\n      var b = this._views[this._view].type;\n      var f = this._views[this._view];\n      d = d.clearTime();\n\n      switch (b) {\n        case \"dayView\":\n        case \"weekView\":\n        case \"timelineDayView\":\n        case \"timelineWeekView\":\n        case \"agendaView\":\n          return d;\n      }\n\n      var e = d.day();\n      var c = d.addDays(-e + 1);\n      d = c;\n      return d;\n    },\n    _builddataloadelement: function () {\n      if (this.dataloadelement) {\n        this.dataloadelement.remove();\n      }\n\n      this.dataloadelement = a('<div class=\"jqx-datatable-load\" style=\"z-index: 99998; background-color:rgba(50,50,50,0.1); overflow: hidden; position: absolute;\"></div>');\n      var c = a('<div style=\"z-index: 99999; margin-left: -66px; left: 50%; top: 50%; margin-top: -24px; position: relative; width: 100px; height: 33px; padding: 5px; font-family: verdana; font-size: 12px; color: #767676; border-color: #898989; border-width: 1px; border-style: solid; background: #f6f6f6; border-collapse: collapse;\"><div style=\"float: left;\"><div style=\"float: left; overflow: hidden; width: 32px; height: 32px;\" class=\"jqx-grid-load\"/><span style=\"margin-top: 10px; float: left; display: block; margin-left: 5px;\" >' + this.schedulerLocalization.loadString + \"</span></div></div>\");\n      c.addClass(this.toTP(\"jqx-rc-all\"));\n      this.dataloadelement.addClass(this.toTP(\"jqx-rc-all\"));\n      c.addClass(this.toTP(\"jqx-fill-state-normal\"));\n      this.dataloadelement.append(c);\n      this.dataloadelement.width(this.width);\n      this.dataloadelement.height(this.height);\n      this.host.prepend(this.dataloadelement);\n\n      if (this.source._source.url != \"\") {\n        var b = false;\n\n        if (this.height === \"auto\" || this.height === null || this.autoheight) {\n          if (this.maxHeight == 999999) {\n            b = true;\n          }\n        }\n\n        if (b) {\n          this.host.height(100);\n          this.dataloadelement.height(100);\n        } else {\n          this.host.height(this.height);\n          this.dataloadelement.height(this.height);\n        }\n\n        var d = false;\n\n        if (this.width === \"auto\" || this.width === null || this.autoWidth) {\n          d = true;\n        }\n\n        if (d) {\n          this.host.width(300);\n          this.dataloadelement.width(300);\n        } else {\n          this.host.width(this.width);\n          this.dataloadelement.width(this.width);\n        }\n      }\n    },\n    _measureElement: function (c) {\n      var b = a(\"<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>\");\n      b.addClass(this.toTP(\"jqx-widget\"));\n      a(document.body).append(b);\n\n      if (c == \"cell\") {\n        this._cellheight = b.height();\n      } else {\n        this._columnheight = b.height();\n      }\n\n      b.remove();\n    },\n    _testmodules: function () {\n      var e = \"\";\n      var c = this;\n\n      var b = function () {\n        if (e.length != \"\") {\n          e += \",\";\n        }\n      };\n\n      if (!this.host.jqxScrollBar) {\n        b();\n        e += \" jqxscrollbar.js\";\n      }\n\n      if (!this.host.jqxButton) {\n        b();\n        e += \" jqxbuttons.js\";\n      }\n\n      if (!a.jqx.dataAdapter) {\n        b();\n        e += \" jqxdata.js\";\n      }\n\n      if (!this.host.jqxDateTimeInput) {\n        b();\n        e += \" jqxdatetimeinput.js\";\n      }\n\n      if (!this.host.jqxCalendar) {\n        b();\n        e += \" jqxcalendar.js\";\n      }\n\n      try {\n        if (!Globalize) {\n          b();\n          e += \" globalize.js\";\n        }\n      } catch (d) {}\n\n      if (e != \"\") {\n        throw new Error(\"jqxScheduler: Missing references to the following module(s): \" + e);\n        this.host.remove();\n        return true;\n      }\n\n      return false;\n    },\n    focus: function () {\n      try {\n        if (this.isTouchDevice()) {\n          return;\n        }\n\n        if (this._editDialog && this._editDialog.jqxWindow(\"isOpen\")) {\n          var c = this;\n          setTimeout(function () {\n            c.editDialogFields.subject.focus();\n            c.editDialogFields.subject.select();\n          }, 1);\n          this.focused = true;\n          return;\n        }\n\n        if (document.activeElement == this.element) {\n          return;\n        }\n\n        this.host.focus();\n        var c = this;\n        setTimeout(function () {\n          c.host.focus();\n        }, 25);\n        this.focused = true;\n      } catch (b) {}\n    },\n    hiddenParent: function () {\n      return a.jqx.isHidden(this.host);\n    },\n    _updatesize: function (h, g) {\n      if (this._loading) {\n        return;\n      }\n\n      var e = this;\n      var f = e.host.width();\n      var d = e.host.height();\n\n      if (!e._oldWidth) {\n        e._oldWidth = f;\n      }\n\n      if (!e._oldHeight) {\n        e._oldHeight = d;\n      }\n\n      if (e._resizeTimer != undefined) {\n        clearTimeout(e._resizeTimer);\n        e._resizeTimer = null;\n      }\n\n      var c = 300;\n\n      var b = function () {\n        if (e._resizeTimer) {\n          clearTimeout(e._resizeTimer);\n        }\n\n        e.resizingGrid = true;\n\n        if (a.jqx.isHidden(e.host)) {\n          return;\n        }\n\n        e._updatecolumnwidths();\n\n        e.refresh();\n        e._oldWidth = f;\n        e._oldHeight = d;\n        e.resizingGrid = false;\n      };\n\n      b();\n      e._resizeTimer = setTimeout(function () {\n        var j = e.host.width();\n        var i = e.host.height();\n\n        if (e._oldWidth != j || e._oldHeight != i) {\n          b();\n        }\n      }, c);\n    },\n    resize: function (c, b) {\n      if (c != undefined) {\n        this.width = c;\n      }\n\n      if (b != undefined) {\n        this.height = b;\n      }\n\n      this._updatecolumnwidths();\n\n      this.refresh();\n    },\n    isTouchDevice: function () {\n      if (this.touchDevice != undefined) {\n        return this.touchDevice;\n      }\n\n      var b = a.jqx.mobile.isTouchDevice();\n      this.touchDevice = b;\n\n      if (this.touchMode == true) {\n        b = true;\n        a.jqx.mobile.setMobileSimulator(this.element);\n        this.touchDevice = b;\n      } else {\n        if (this.touchMode == false) {\n          b = false;\n        }\n      }\n\n      if (b) {\n        this.touchDevice = true;\n        this.host.addClass(this.toThemeProperty(\"jqx-touch\"));\n        this.host.find(\"jqx-widget-content\").addClass(this.toThemeProperty(\"jqx-touch\"));\n        this.host.find(\"jqx-widget-header\").addClass(this.toThemeProperty(\"jqx-touch\"));\n        this.scrollBarSize = this.touchScrollBarSize;\n      }\n\n      return b;\n    },\n    toTP: function (b) {\n      return this.toThemeProperty(b);\n    },\n    localizestrings: function (b, c) {\n      this._cellscache = new Array();\n\n      if (a.jqx.dataFormat) {\n        a.jqx.dataFormat.cleardatescache();\n      }\n\n      if (this._loading) {\n        throw new Error(\"jqxScheduler: \" + this.loadingErrorMessage);\n        return false;\n      }\n\n      if (b != null) {\n        for (var d in this.schedulerLocalization) {\n          if (b[d]) {\n            this.schedulerLocalization[d] = b[d];\n          }\n        }\n\n        if (b.loadingErrorMessage) {\n          this.loadingErrorMessage = b.loadingErrorMessage;\n        }\n\n        if (c !== false) {\n          this._builddataloadelement();\n\n          a(this.dataloadelement).css(\"visibility\", \"hidden\");\n          a(this.dataloadelement).css(\"display\", \"none\");\n        }\n      } else {\n        this.schedulerLocalization = {\n          \"/\": \"/\",\n          \":\": \":\",\n          firstDay: 0,\n          days: {\n            names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n          },\n          months: {\n            names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n            namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n          },\n          AM: [\"AM\", \"am\", \"AM\"],\n          PM: [\"PM\", \"pm\", \"PM\"],\n          eras: [{\n            name: \"A.D.\",\n            start: null,\n            offset: 0\n          }],\n          twoDigitYearMax: 2029,\n          patterns: {\n            d: \"M/d/yyyy\",\n            D: \"dddd, MMMM dd, yyyy\",\n            t: \"h:mm tt\",\n            T: \"h:mm:ss tt\",\n            f: \"dddd, MMMM dd, yyyy h:mm tt\",\n            F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n            M: \"MMMM dd\",\n            Y: \"yyyy MMMM\",\n            S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n            ISO: \"yyyy-MM-dd hh:mm:ss\",\n            ISO2: \"yyyy-MM-dd HH:mm:ss\",\n            d1: \"dd.MM.yyyy\",\n            d2: \"dd-MM-yyyy\",\n            d3: \"dd-MMMM-yyyy\",\n            d4: \"dd-MM-yy\",\n            d5: \"H:mm\",\n            d6: \"HH:mm\",\n            d7: \"HH:mm tt\",\n            d8: \"dd/MMMM/yyyy\",\n            d9: \"MMMM-dd\",\n            d10: \"MM-dd\",\n            d11: \"MM-dd-yyyy\"\n          },\n          agendaDateColumn: \"Date\",\n          agendaTimeColumn: \"Time\",\n          agendaAppointmentColumn: \"Appointment\",\n          backString: \"Back\",\n          forwardString: \"Forward\",\n          toolBarPreviousButtonString: \"previous\",\n          toolBarNextButtonString: \"next\",\n          emptyDataString: \"No data to display\",\n          loadString: \"Loading...\",\n          clearString: \"Clear\",\n          todayString: \"Today\",\n          dayViewString: \"Day\",\n          weekViewString: \"Week\",\n          monthViewString: \"Month\",\n          agendaViewString: \"Agenda\",\n          timelineDayViewString: \"Timeline Day\",\n          timelineWeekViewString: \"Timeline Week\",\n          timelineMonthViewString: \"Timeline Month\",\n          agendaAllDayString: \"all day\",\n          loadingErrorMessage: \"The data is still loading and you cannot set a property or call a method. You can do that once the data binding is completed. jqxScheduler raises the 'bindingComplete' event when the binding is completed.\",\n          editRecurringAppointmentDialogTitleString: \"Edit Recurring Appointment\",\n          editRecurringAppointmentDialogContentString: \"Do you want to edit only this occurrence or the series?\",\n          editRecurringAppointmentDialogOccurrenceString: \"Edit Occurrence\",\n          editRecurringAppointmentDialogSeriesString: \"Edit The Series\",\n          editDialogTitleString: \"Edit Appointment\",\n          editDialogCreateTitleString: \"Create New Appointment\",\n          contextMenuEditAppointmentString: \"Edit Appointment\",\n          contextMenuCreateAppointmentString: \"Create New Appointment\",\n          editDialogSubjectString: \"Subject\",\n          editDialogLocationString: \"Location\",\n          editDialogFromString: \"From\",\n          editDialogToString: \"To\",\n          editDialogAllDayString: \"All day\",\n          editDialogExceptionsString: \"Exceptions\",\n          editDialogResetExceptionsString: \"Reset on Save\",\n          editDialogDescriptionString: \"Description\",\n          editDialogResourceIdString: \"Owner\",\n          editDialogStatusString: \"Status\",\n          editDialogColorString: \"Color\",\n          editDialogColorPlaceHolderString: \"Select Color\",\n          editDialogTimeZoneString: \"Time Zone\",\n          editDialogSelectTimeZoneString: \"Select Time Zone\",\n          editDialogSaveString: \"Save\",\n          editDialogDeleteString: \"Delete\",\n          editDialogCancelString: \"Cancel\",\n          editDialogRepeatString: \"Repeat\",\n          editDialogRepeatEveryString: \"Repeat every\",\n          editDialogRepeatEveryWeekString: \"week(s)\",\n          editDialogRepeatEveryYearString: \"year(s)\",\n          editDialogRepeatEveryDayString: \"day(s)\",\n          editDialogRepeatNeverString: \"Never\",\n          editDialogRepeatDailyString: \"Daily\",\n          editDialogRepeatWeeklyString: \"Weekly\",\n          editDialogRepeatMonthlyString: \"Monthly\",\n          editDialogRepeatYearlyString: \"Yearly\",\n          editDialogRepeatEveryMonthString: \"month(s)\",\n          editDialogRepeatEveryMonthDayString: \"Day\",\n          editDialogRepeatFirstString: \"first\",\n          editDialogRepeatSecondString: \"second\",\n          editDialogRepeatThirdString: \"third\",\n          editDialogRepeatFourthString: \"fourth\",\n          editDialogRepeatLastString: \"last\",\n          editDialogRepeatEndString: \"End\",\n          editDialogRepeatAfterString: \"After\",\n          editDialogRepeatOnString: \"On\",\n          editDialogRepeatOfString: \"of\",\n          editDialogRepeatOccurrencesString: \"occurrence(s)\",\n          editDialogRepeatSaveString: \"Save Occurrence\",\n          editDialogRepeatSaveSeriesString: \"Save Series\",\n          editDialogRepeatDeleteString: \"Delete Occurrence\",\n          editDialogRepeatDeleteSeriesString: \"Delete Series\",\n          editDialogStatuses: {\n            free: \"Free\",\n            tentative: \"Tentative\",\n            busy: \"Busy\",\n            outOfOffice: \"Out of Office\"\n          }\n        };\n      }\n    },\n    _updateScrollbars: function (r) {\n      var j = false;\n      var d = this;\n\n      if (d.width === \"auto\" || d.width === null || d.autowidth) {\n        if (d.maxWidth == 999999) {\n          j = true;\n        }\n      }\n\n      var h = d._views[d._view].type;\n      var g = d._views[d._view];\n\n      if (h == \"monthView\" && d.resources && d.resources.orientation == \"none\" && !g.monthRowAutoHeight) {\n        var k = d.vScrollBar[0].style.visibility;\n        d.hScrollBar[0].style.visibility = \"hidden\";\n        d.vScrollBar[0].style.visibility = \"hidden\";\n\n        if (k != d.vScrollBar[0].style.visibility) {\n          d._updatecolumnwidths();\n        }\n\n        return;\n      }\n\n      var b = parseInt(d.scrollBarSize);\n      var s = d.table ? d.table.height() : 0;\n      var i = 0;\n      var n = \"inherit\";\n      var k = d.vScrollBar[0].style.visibility;\n      var o = d.hScrollBar[0].style.visibility;\n\n      if (!r) {\n        var f = d.host.height();\n      } else {\n        var f = r;\n      }\n\n      if (!d.columnGroups) {\n        f -= d.showHeader ? d.columnsHeight : 0;\n      } else {\n        f -= d.showHeader ? d.columnsheader.height() : 0;\n      }\n\n      if (d.filterable) {\n        f -= d.filter.height();\n      }\n\n      if (d.pageable) {\n        f -= d.pagerHeight;\n\n        if (d.pagerPosition === \"both\") {\n          f -= d.pagerHeight;\n        }\n      }\n\n      if (d.showToolbar) {\n        f -= d.toolbarHeight;\n      }\n\n      if (d.showLegend && d._resources.length > 0) {\n        f -= d.legendHeight;\n      }\n\n      var m = false;\n\n      if (d.height === \"auto\" || d.height === null || d.autoheight) {\n        if (d.maxHeight == 999999) {\n          m = true;\n        }\n      }\n\n      if (!m && s > f && d.getRows().length > 0) {\n        d.vScrollBar[0].style.visibility = n;\n        i = 4 + parseInt(b);\n        d.vScrollBar.jqxScrollBar({\n          max: s - f\n        });\n      } else {\n        d.vScrollBar[0].style.visibility = \"hidden\";\n      }\n\n      if (k != d.vScrollBar[0].style.visibility) {\n        d._updatecolumnwidths();\n      }\n\n      var p = d.table ? d.table.width() : 0;\n\n      if (p > 4) {\n        p -= 4;\n      }\n\n      var q = parseInt(d.host.css(\"border-left-width\")) + parseInt(d.host.css(\"border-right-width\"));\n      var l = q + d.host.width() - i;\n\n      if (p > l && !j) {\n        d.hScrollBar[0].style.visibility = n;\n        d.hScrollBar.jqxScrollBar({\n          max: 2 + q + p - l\n        });\n        i = 4 + parseInt(b);\n\n        if (b == 0) {\n          i = 0;\n        }\n\n        if (!m && s != f) {\n          if (s > f - i + 4 && d.getRows().length > 0) {\n            d.hScrollBar.jqxScrollBar({\n              max: q + p - l\n            });\n            var c = d.vScrollBar[0].style.visibility === \"hidden\";\n            d.vScrollBar[0].style.visibility = n;\n\n            d._updatecolumnwidths();\n\n            if (c) {\n              d.hScrollBar.jqxScrollBar({\n                max: p - l + q\n              });\n            }\n\n            var e = d.table ? d.table.width() : 0;\n\n            if (e > 3) {\n              e -= 3;\n            }\n\n            if (e != p) {\n              if (e < l) {\n                d.hScrollBar.jqxScrollBar({\n                  max: q + e - l\n                });\n                d.hScrollBar[0].style.visibility = \"hidden\";\n                i = 0;\n              } else {\n                if (!c) {\n                  d.hScrollBar.jqxScrollBar({\n                    max: p - l + q - b\n                  });\n                } else {\n                  if (e > l) {\n                    d.hScrollBar.jqxScrollBar({\n                      max: q + e - l\n                    });\n                  }\n                }\n              }\n            }\n          }\n\n          if (s - f > 0) {\n            d.vScrollBar.jqxScrollBar({\n              max: s - f + i\n            });\n          } else {\n            d.vScrollBar[0].style.visibility = \"hidden\";\n          }\n        }\n      } else {\n        d.hScrollBar[0].style.visibility = \"hidden\";\n      }\n\n      if (d.getRows().length === 0) {\n        d.vScrollBar[0].style.visibility = \"hidden\";\n        d.bottomRight[0].style.visibility = \"hidden\";\n      }\n\n      if (d.vScrollBar[0].style.visibility == \"hidden\") {\n        if (d.vScrollInstance.value != 0) {\n          d.vScrollInstance.setPosition(0);\n        }\n      }\n    },\n    _measureElementWidth: function (d) {\n      var c = a(\"<span style='visibility: hidden; white-space: nowrap;'>\" + d + \"</span>\");\n      c.addClass(this.toTP(\"jqx-widget\"));\n      c.addClass(this.toTP(\"jqx-grid\"));\n      c.addClass(this.toTP(\"jqx-grid-column-header\"));\n      c.addClass(this.toTP(\"jqx-widget-header\"));\n      a(document.body).append(c);\n      var b = c.outerWidth() + 20;\n      c.remove();\n      return b;\n    },\n    _arrangeAutoHeight: function (d) {\n      if (!d) {\n        d = 0;\n      }\n\n      if (this.height === \"auto\" || this.height === null || this.autoheight) {\n        var g = this.table.height();\n        var f = 0;\n        this._hostHeight = null;\n\n        if (!this.columnGroups) {\n          f += this.showHeader ? this.columnsHeight : -1;\n        } else {\n          f += this.showHeader ? this.columnsheader.height() : -1;\n        }\n\n        f += this.showLegend && this._resources.length > 0 ? this.legendHeight : 0;\n        f += this.showToolbar ? this.toolbarHeight : 0;\n        f += this.pageable ? this.pagerHeight : 0;\n\n        if (this.pagerPosition === \"both\") {\n          f += this.pageable ? this.pagerHeight : 0;\n        }\n\n        f += g;\n\n        if (this.filterable) {\n          var e = this.filter.find(\".filterrow\");\n          var b = this.filter.find(\".filterrow-hidden\");\n          var c = 1;\n\n          if (b.length > 0) {\n            c = 0;\n          }\n\n          f += this.filterHeight - 1 + this.filterHeight * e.length * c;\n        }\n\n        if (f + d > this.maxHeight) {\n          this.host.height(this.maxHeight);\n        } else {\n          this.host.height(f + d);\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    _arrangeAutoWidth: function (d) {\n      if (!d) {\n        d = 0;\n      }\n\n      if (this.width === \"auto\" || this.width === null || this.autowidth) {\n        this._hostWidth = null;\n        var c = 0;\n\n        for (var e = 0; e < this.columns.records.length; e++) {\n          var b = this.columns.records[e].width;\n\n          if (this.columns.records[e].hidden) {\n            continue;\n          }\n\n          if (b == \"auto\") {\n            b = this._measureElementWidth(this.columns.records[e].text);\n            c += b;\n          } else {\n            c += b;\n          }\n        }\n\n        var f = c;\n\n        if (f + d > this.maxWidth) {\n          this.host.width(this.maxWidth);\n        } else {\n          this.host.width(f + d);\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    _measureTopAndHeight: function () {\n      var b = this.host.height();\n      var c = 0;\n\n      if (this.showToolbar) {\n        c += this.toolbarHeight;\n        b -= parseInt(this.toolbarHeight);\n      }\n\n      if (this.showLegend && this.legendPosition != \"bottom\" && this._resources.length > 0) {\n        c += parseInt(this.legendHeight) + 1;\n      }\n\n      return {\n        top: c,\n        height: b\n      };\n    },\n    _arrange: function () {\n      if (!this.table) {\n        return;\n      }\n\n      this._arrangeAutoHeight();\n\n      this._arrangeAutoWidth();\n\n      var d = this.legendHeight;\n\n      if (this._resources.length == 0) {\n        d = 0;\n      }\n\n      var t = this._hostWidth ? this._hostWidth : this.host.width();\n      var q = this._hostHeight ? this._hostHeight : this.host.height();\n      var j = q;\n      var i = this;\n\n      if (this.showLegend && this.legendPosition == \"top\") {\n        this.legendbartop[0].style.visibility = \"inherit\";\n      } else {\n        this.legendbartop[0].style.visibility = \"hidden\";\n      }\n\n      var p = 0;\n\n      if (this.showToolbar) {\n        this.toolbar.width(t);\n        this.toolbar[0].style.height = this.toolbarHeight - 1 + \"px\";\n        this.toolbar[0].style.top = \"0px\";\n        p += this.toolbarHeight;\n        q -= parseInt(this.toolbarHeight);\n      } else {\n        this.toolbar[0].style.height = \"0px\";\n      }\n\n      if (this.showLegend && this.legendPosition == \"bottom\") {\n        this.legendbarbottom[0].style.width = t + \"px\";\n        this.legendbarbottom[0].style.height = d + \"px\";\n      } else {\n        this.legendbarbottom[0].style.height = \"0px\";\n      }\n\n      if (this.showLegend && this.legendPosition == \"top\") {\n        if (this.legendbartop[0].style.width != t + \"px\") {\n          this.legendbartop[0].style.width = parseInt(t) + \"px\";\n        }\n\n        if (this.legendbartop[0].style.height != d + \"px\") {\n          this.legendbartop[0].style.height = parseInt(d - 1) + \"px\";\n        }\n\n        if (this.legendbartop[0].style.top != p + \"px\") {\n          this.legendbartop[0].style.top = p + \"px\";\n        }\n\n        var e = p + d + \"px\";\n        p = p + d;\n\n        if (this.content[0].style.top != e) {\n          this.content[0].style.top = p + \"px\";\n        }\n      }\n\n      if (!this.showLegend) {\n        this.legendbartop[0].style.display = \"none\";\n        this.legendbarbottom[0].style.display = \"none\";\n      }\n\n      this._updateScrollbars(j);\n\n      var b = parseInt(this.scrollBarSize);\n      var m = 4;\n      var f = 2;\n      var g = 0;\n\n      if (this.vScrollBar[0].style.visibility != \"hidden\") {\n        g = b + m;\n      }\n\n      if (this.hScrollBar[0].style.visibility != \"hidden\") {\n        f = b + m + 2;\n      }\n\n      if (b == 0) {\n        f = 0;\n        g = 0;\n      }\n\n      if (\"hidden\" != this.vScrollBar[0].style.visibility || \"hidden\" != this.hScrollBar[0].style.visibility) {\n        var u = this._arrangeAutoHeight(f - 2);\n\n        var r = this._arrangeAutoWidth(g + 1);\n\n        if (u || r) {\n          this.legendbartop[0].style.width = parseInt(t) + \"px\";\n          this.toolbar[0].style.width = parseInt(t) + \"px\";\n          this.legendbarbottom[0].style.width = parseInt(t) + \"px\";\n          this.filter[0].style.width = parseInt(t) + \"px\";\n        }\n\n        if (u) {\n          var w = this._measureTopAndHeight();\n\n          p = w.top;\n          q = w.height;\n        }\n      }\n\n      var n = 0;\n\n      if (this.showLegend && this.legendPosition == \"bottom\") {\n        f += d;\n        n += d;\n      } else {\n        if (this.showLegend) {\n          f += d;\n        }\n      }\n\n      if (this.hScrollBar[0].style.height != b + \"px\") {\n        this.hScrollBar[0].style.height = parseInt(b) + \"px\";\n      }\n\n      if (this.hScrollBar[0].style.top != p + q - m - b - n + \"px\" || this.hScrollBar[0].style.left != \"0px\") {\n        this.hScrollBar[0].style.top = p + q - m - b - n - 1 + \"px\";\n        this.hScrollBar[0].style.left = \"0px\";\n      }\n\n      var l = this.hScrollBar[0].style.width;\n      var h = false;\n      var v = false;\n\n      if (g == 0) {\n        if (l != t - 2 + \"px\") {\n          this.hScrollBar[0].style.width = t - 2 + \"px\";\n          h = true;\n        }\n      } else {\n        if (l != t - b - m + \"px\") {\n          this.hScrollBar[0].style.width = t - b - m + \"px\";\n          h = true;\n        }\n      }\n\n      if (this.vScrollBar[0].style.width != b + \"px\") {\n        this.vScrollBar[0].style.width = b + \"px\";\n        v = true;\n      }\n\n      if (this.vScrollBar[0].style.height != parseInt(q) - f + \"px\") {\n        this.vScrollBar[0].style.height = parseInt(q) - f + \"px\";\n        v = true;\n      }\n\n      if (this.vScrollBar[0].style.left != parseInt(t) - parseInt(b) - m + \"px\" || this.vScrollBar[0].style.top != p + \"px\") {\n        this.vScrollBar[0].style.top = p + \"px\";\n        this.vScrollBar[0].style.left = parseInt(t) - parseInt(b) - m + \"px\";\n      }\n\n      if (this.rtl) {\n        this.vScrollBar.css({\n          left: \"0px\",\n          top: p\n        });\n\n        if (this.vScrollBar.css(\"visibility\") != \"hidden\") {\n          this.hScrollBar.css({\n            left: b + 2\n          });\n        }\n      }\n\n      var k = this.vScrollInstance;\n      k.disabled = this.disabled;\n      var s = this.hScrollInstance;\n      s.disabled = this.disabled;\n\n      if (h) {\n        s.refresh();\n      }\n\n      if (v) {\n        k.refresh();\n      }\n\n      var o = function (x) {\n        if (x.vScrollBar[0].style.visibility != \"hidden\" && x.hScrollBar[0].style.visibility != \"hidden\") {\n          x.bottomRight[0].style.visibility = \"inherit\";\n          x.bottomRight[0].style.left = 1 + parseInt(x.vScrollBar.css(\"left\")) + \"px\";\n          x.bottomRight[0].style.top = parseInt(x.hScrollBar.css(\"top\")) + \"px\";\n\n          if (x.rtl) {\n            x.bottomRight.css(\"left\", \"0px\");\n          }\n\n          x.bottomRight[0].style.width = parseInt(b) + 3 + \"px\";\n          x.bottomRight[0].style.height = parseInt(b) + 4 + \"px\";\n        } else {\n          x.bottomRight[0].style.visibility = \"hidden\";\n        }\n      };\n\n      o(this);\n\n      if (this.content[0].style.width != t - g + \"px\") {\n        this.content[0].style.width = t - g + \"px\";\n      }\n\n      if (this.content[0].style.height != q - f + 3 + \"px\") {\n        this.content[0].style.height = q - f + 3 + \"px\";\n      }\n\n      if (this.content[0].style.top != p + \"px\") {\n        this.content[0].style.top = parseInt(p) + \"px\";\n      }\n\n      if (this.rtl) {\n        this.content.css(\"left\", g);\n      }\n\n      if (this.showLegend && this.legendPosition == \"bottom\") {\n        this.legendbarbottom.css(\"top\", p - 1 + q - d - (this.pageable ? this.pagerHeight : 0));\n\n        if (this.rtl) {\n          if (this.hScrollBar.css(\"visibility\") == \"hidden\") {\n            this.legendbarbottom.css(\"left\", this.content.css(\"left\"));\n          } else {\n            this.legendbarbottom.css(\"left\", \"0px\");\n          }\n        }\n      }\n\n      this.vScrollBar[0].style.zIndex = this.tableZIndex + this.headerZIndex + 10 + this.columns.records.length;\n      this.hScrollBar[0].style.zIndex = this.tableZIndex + this.headerZIndex + 10 + this.columns.records.length;\n\n      if (t != parseInt(this.dataloadelement[0].style.width)) {\n        this.dataloadelement[0].style.width = this.element.style.width;\n      }\n\n      if (q != parseInt(this.dataloadelement[0].style.height)) {\n        this.dataloadelement[0].style.height = this.element.style.height;\n      }\n\n      this._hostWidth = t;\n      this._hostHeight = j;\n      var c = this.schedulercontent.coord();\n      this._tableOffset = c;\n    },\n    scrollOffset: function (d, c) {\n      if (arguments.length == 0 || d != null && typeof d == \"object\" && !d.top) {\n        return {\n          left: this.hScrollBar.jqxScrollBar(\"value\"),\n          top: this.vScrollBar.jqxScrollBar(\"value\")\n        };\n      }\n\n      if (d != null && typeof d == \"object\") {\n        var c = d.left;\n        var b = d.top;\n        var d = b;\n      }\n\n      if (d == null || c == null || d == undefined || c == undefined) {\n        return;\n      }\n\n      this.vScrollBar.jqxScrollBar(\"setPosition\", d);\n      this.hScrollBar.jqxScrollBar(\"setPosition\", c);\n    },\n    scrollleft: function (b) {\n      if (b == null || b == undefined) {\n        return;\n      }\n\n      if (this.hScrollBar.css(\"visibility\") != \"hidden\") {\n        this.hScrollBar.jqxScrollBar(\"setPosition\", b);\n      }\n    },\n    scrolltop: function (b) {\n      if (b == null || b == undefined) {\n        return;\n      }\n\n      if (this.vScrollBar.css(\"visibility\") != \"hidden\") {\n        this.vScrollBar.jqxScrollBar(\"setPosition\", b);\n      }\n    },\n    beginAppointmentsUpdate: function () {\n      this._appupdating = true;\n    },\n    endAppointmentsUpdate: function () {\n      this._appupdating = false;\n\n      this._renderrows();\n    },\n    beginUpdate: function () {\n      this._updating = true;\n      this._datachanged = false;\n    },\n    endUpdate: function (b) {\n      this._updating = false;\n\n      if (b === false) {\n        return;\n      }\n\n      this._rendercolumnheaders();\n\n      this.refresh();\n    },\n    updating: function () {\n      return this._updating;\n    },\n    databind: function (b, g, f) {\n      if (this.loadingstate === true) {\n        return;\n      }\n\n      var j = window;\n\n      if (this.host.css(\"display\") == \"block\") {\n        if (this.autoShowLoadElement) {\n          a(this.dataloadelement).css(\"visibility\", \"visible\");\n          a(this.dataloadelement).css(\"display\", \"block\");\n          this.dataloadelement.width(this.host.width());\n          this.dataloadelement.height(this.host.height());\n        } else {\n          a(this.dataloadelement).css(\"visibility\", \"hidden\");\n          a(this.dataloadelement).css(\"display\", \"none\");\n        }\n      }\n\n      var h = this;\n\n      if (b == null) {\n        b = {};\n      }\n\n      if (b.sortcomparer == undefined || b.sortcomparer == null) {\n        b.sortcomparer = null;\n      }\n\n      if (b.filter == undefined || b.filter == null) {\n        b.filter = null;\n      }\n\n      if (b.sort == undefined || b.sort == null) {\n        b.sort = null;\n      }\n\n      if (b.data == undefined || b.data == null) {\n        b.data = null;\n      }\n\n      var d = null;\n\n      if (b != null) {\n        d = b._source != undefined ? b._source.url : b.url;\n      }\n\n      this.dataview = this.dataview || new a.jqx.scheduler.dataView(\"dataView\");\n      this.resourcesDataView = this.resourcesDataView || new a.jqx.scheduler.dataView(\"resourcesDataView\");\n      this.dataview.pageable = this.pageable;\n      this.dataview.scheduler = this;\n      this.resourcesDataView.scheduler = this;\n      this._loading = true;\n      this.appointments = new Array();\n      this.uiappointments = new Array();\n      var e = 1;\n\n      if (this.resources && this.resources.source) {\n        e = 2;\n      }\n\n      var c = 0;\n\n      var i = function () {\n        if (c == e) {\n          h._resourcesBinding = false;\n          var m = h._resources.length > 1 ? h._resources.length : 1;\n\n          if (h.resources && h.resources.orientation === \"horizontal\") {\n            h.tableColumns = m;\n            h.tableRows = 1;\n          } else {\n            if (h.resources && h.resources.orientation === \"vertical\") {\n              h.tableRows = m;\n              h.tableColumns = 1;\n            } else {\n              h.tableColumns = 1;\n              h.tableRows = 1;\n            }\n          }\n\n          h._render();\n\n          if (h.autoShowLoadElement && !h._loading) {\n            a(h.dataloadelement).css(\"visibility\", \"hidden\");\n            a(h.dataloadelement).css(\"display\", \"none\");\n          }\n\n          h._updateTouchScrolling();\n\n          h._raiseEvent(\"bindingComplete\");\n\n          if (f) {\n            f();\n          }\n\n          if (!h.initializedcall) {\n            h.initializedcall = true;\n            h.isInitialized = true;\n\n            if (h.width != null && h.width.toString().indexOf(\"%\") != -1 || h.height != null && h.height.toString().indexOf(\"%\") != -1) {\n              h._updatesize(true);\n            }\n\n            if (h.ready) {\n              h.ready();\n            }\n\n            if (h._rendercelltexts) {\n              h._rendercelltexts();\n            }\n\n            if (h._gridRenderElement) {\n              a(h._gridRenderElement).show(\"slow\");\n              var l = 6000 + Math.floor(Math.random() * 4000 + 1);\n              var n = String.fromCharCode(83, 69, 84).toLowerCase() + \"-\" + String.fromCharCode(84, 73, 77, 69, 79, 85, 84).toLowerCase();\n              j[a.camelCase(n)](function () {\n                a(h._gridRenderElement).hide(\"slow\", function () {\n                  a(h._gridRenderElement).remove();\n                });\n              }, l);\n            }\n\n            if (h.host.css(\"visibility\") == \"hidden\") {\n              var k = a.jqx.browser.msie && a.jqx.browser.version < 8;\n\n              if (h.vScrollBar.css(\"visibility\") == \"visible\") {\n                h.vScrollBar.css(\"visibility\", \"inherit\");\n              }\n\n              if (h.hScrollBar.css(\"visibility\") == \"visible\") {\n                h.hScrollBar.css(\"visibility\", \"inherit\");\n              }\n\n              h._intervalTimer = setInterval(function () {\n                if (h.host.css(\"visibility\") == \"visible\") {\n                  h._updatesize(true);\n\n                  clearInterval(h._intervalTimer);\n                }\n              }, 100);\n            }\n          }\n        }\n      };\n\n      this._resourcesBinding = false;\n\n      this.dataview.update = function (y) {\n        h._loading = false;\n        h.appointmentsByKey = new Array();\n        h.appointments = new Array();\n        h.uiappointments = new Array();\n        var D = h.source._source.datafields;\n        var o = [\"from\", \"to\", \"id\", \"style\", \"description\", \"location\", \"subject\", \"background\", \"color\", \"borderColor\", \"recurrencePattern\", \"recurrenceException\", \"draggable\", \"resizable\", \"tooltip\", \"hidden\", \"allDay\", \"timeZone\", \"ownerId\", \"resourceId\"];\n        var m = new Array();\n\n        for (var z = 0; z < h.source.records.length; z++) {\n          var p = h.source.records[z];\n          var n = {};\n\n          for (var G in h.appointmentDataFields) {\n            var l = h.appointmentDataFields[G];\n            var x = p[l];\n\n            if (G == \"from\" || G == \"to\") {\n              x = new a.jqx.date(x);\n            }\n\n            if (G == \"style\") {\n              if (x) {\n                var s = h.getAppointmentColors(x);\n                n.color = s.color;\n                n.background = s.background;\n                n.borderColor = s.border;\n              }\n            }\n\n            if (G == \"recurrencePattern\") {\n              if (x) {\n                x = new a.jqx.scheduler.recurrencePattern(x);\n                x.timeZone = p.timeZone || h.timeZone;\n              }\n            }\n\n            if (G == \"recurrenceException\") {\n              var B = new Array();\n\n              if (x) {\n                if (x.indexOf(\"EXDATE:\") >= 0) {\n                  x = x.substring(x.indexOf(\"EXDATE:\") + 7);\n                }\n\n                var t = new Array();\n\n                if (x.indexOf(\",\") >= 0) {\n                  t = x.split(\",\");\n                } else {\n                  t.push(x);\n                }\n\n                for (var A = 0; A < t.length; A++) {\n                  var w = t[A];\n\n                  if (w.indexOf(\";\") >= 0) {\n                    var q = w.split(\";\")[1];\n                    w = w.split(\";\")[0];\n\n                    if (q.toLowerCase().indexOf(\"display\") >= 0 && q.toLowerCase().indexOf(\"none\")) {\n                      n.hidden = true;\n                    }\n                  }\n\n                  try {\n                    var E = a.jqx.scheduler.utilities.untilStringToDate(w);\n\n                    if (E != \"Invalid Date\") {\n                      if (n.timeZone) {\n                        E = new a.jqx.date(E, n.timeZone);\n                      } else {\n                        if (h.timeZone) {\n                          E = E.toTimeZone(h.timeZone);\n                        } else {\n                          E = new a.jqx.date(E);\n                        }\n                      }\n                    }\n                  } catch (F) {\n                    var E = new a.jqx.date(w, h.timeZone);\n                  }\n\n                  B.push(E);\n                }\n              }\n\n              x = B;\n            }\n\n            n[G] = x;\n          }\n\n          for (var u in o) {\n            var G = o[u];\n\n            if (n[G] == undefined) {\n              var x = \"\";\n\n              if (G == \"originalData\") {\n                continue;\n              }\n\n              if (G == \"ownerId\") {\n                x = null;\n              }\n\n              if (G == \"timeZone\") {\n                x = null;\n              }\n\n              if (G == \"recurrencePattern\") {\n                x = null;\n              }\n\n              if (G == \"recurrenceException\") {\n                x = [];\n              }\n\n              if (G == \"allDay\") {\n                x = false;\n              }\n\n              if (G == \"draggable\") {\n                x = true;\n              }\n\n              if (G == \"resizable\") {\n                x = true;\n              }\n\n              if (G == \"hidden\") {\n                x = false;\n              }\n\n              if (G == \"resourceId\") {\n                x = null;\n              }\n\n              if (G == \"from\") {\n                x = new a.jqx.date();\n              }\n\n              if (G == \"to\") {\n                x = new a.jqx.date().addHours(1);\n              }\n\n              n[G] = x;\n            }\n          }\n\n          n.originalData = p;\n\n          if (h.resources && !h.resources.source) {\n            if (!h._resourcesBinding) {\n              if (m.indexOf(n.resourceId) == -1) {\n                m.push(n.resourceId);\n              }\n            }\n          }\n\n          h.appointmentsByKey[p.uid] = n;\n          h.appointments.push(n);\n          var v = new a.jqx.scheduler.appointment(n);\n\n          if (n.timeZone) {\n            v.from = v.from.toTimeZone(n.timeZone);\n            v.to = v.to.toTimeZone(n.timeZone);\n          }\n\n          if (h.timeZone) {\n            if (!n.timeZone) {\n              v.timeZone = h.timeZone;\n            }\n\n            v.from = v.from.toTimeZone(h.timeZone);\n            v.to = v.to.toTimeZone(h.timeZone);\n          } else {\n            v.from = v.from.toTimeZone(null);\n            v.to = v.to.toTimeZone(null);\n          }\n\n          n.jqxAppointment = v;\n\n          if (n.recurrenceException) {\n            for (var C = 0; C < n.recurrenceException.length; C++) {\n              var E = v.recurrenceException[C];\n              var r = v.clone();\n              r.occurrenceFrom = E;\n              var k = v.duration();\n\n              if (h.allDay) {\n                k = new a.jqx.timeSpan(10000 * (h.to - h.from));\n              }\n\n              r.from = E;\n              r.to = E.add(k);\n              r.rootAppointment = v;\n              r.hidden = true;\n              v.exceptions.push(r);\n            }\n          }\n\n          v.boundAppointment = n;\n          v.scheduler = h;\n          h.uiappointments.push(v);\n        }\n\n        if (!h._resourcesBinding) {\n          h._resources = m;\n        }\n\n        c++;\n        i();\n      };\n\n      this.resourcesDataView.update = function (k) {\n        if (h.resources.dataField) {\n          h._resources = new Array();\n\n          for (var l = 0; l < k.length; l++) {\n            if (h._resources.indexOf(k[l][h.resources.dataField]) >= 0) {\n              continue;\n            }\n\n            if (k[l][h.resources.dataField]) {\n              h._resources.push(k[l][h.resources.dataField]);\n            }\n          }\n        } else {\n          h._resources = k;\n        }\n\n        if (h.resources.orientation == undefined) {\n          h.resources.orientation = \"none\";\n        }\n\n        c++;\n        i();\n      };\n\n      this.dataview.databind(b);\n\n      if (this.resources && this.resources.source) {\n        this._resourcesBinding = true;\n        this.resourcesDataView.databind(this.resources.source);\n      }\n    },\n    _raiseEvent: function (g, c) {\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = g;\n      var e = c;\n      e.owner = this;\n      var f = new a.Event(d);\n      f.owner = this;\n      f.args = e;\n      var b = this.host.trigger(f);\n      c = f.args;\n      return b;\n    },\n    ensureAppointmentVisible: function (b) {\n      if (this.appointmentsByKey[b]) {\n        return this._ensureAppointmentVisible(this.appointmentsByKey[b].jqxAppointment);\n      }\n\n      return false;\n    },\n    _ensureAppointmentVisible: function (h) {\n      if (this.vScrollBar[0].style.visibility === \"hidden\" && this.hScrollBar[0].style.visibility === \"hidden\") {\n        return false;\n      }\n\n      if (!h) {\n        return false;\n      }\n\n      var k = this.getViewStart();\n      var i = this.getViewEnd();\n      var p = a.jqx.scheduler.utilities.rangeIntersection(h.from, h.to, k, i);\n\n      if (!p) {\n        this.navigateTo(h.from);\n        return this._ensureAppointmentVisible(h);\n      }\n\n      var G = h.id;\n      var t = a('[data-key=\"' + G + '\"]');\n\n      if (t.length > 0) {\n        var c = t[0];\n      } else {\n        if (h.elements && h.elements.length > 0) {\n          var f = h.elements[0];\n          var c = f.element;\n        } else {\n          return false;\n        }\n      }\n\n      var z = this.vScrollInstance.value;\n      var y = this.hScrollInstance.value;\n\n      if (this.rtl) {\n        var y = this.hScrollInstance.max - y;\n      }\n\n      var s = this.element.clientHeight;\n      var v = this.element.clientWidth;\n      var B = 0;\n\n      if (!this.columnGroups) {\n        B += this.showHeader ? this.columnsHeight : 0;\n      } else {\n        B += this.showHeader ? this.columnsheader.height() : 0;\n      }\n\n      var r = this._views[this._view].type;\n      var n = this._views[this._view];\n      var D = 0;\n\n      if (r == \"dayView\" || r == \"weekView\") {\n        var x = this.showAllDayRow;\n\n        if (n.timeRuler && (r === \"dayView\" || r === \"weekView\")) {\n          if (n.timeRuler.showAllDayRow != undefined) {\n            x = n.timeRuler.showAllDayRow;\n          }\n        }\n\n        if (x) {\n          if (this.tableRows == 1) {\n            D = this.table[0].rows[0].clientHeight;\n          } else {\n            D = this.table[0].rows[1].clientHeight;\n          }\n        }\n\n        var q = h.duration().days() >= 1 || h.allDay;\n\n        if (q && this.tableRows == 1 && this.tableColumns == 1) {\n          return false;\n        }\n      }\n\n      if (this.showToolbar) {\n        B += this.toolbarHeight;\n      }\n\n      s -= B;\n\n      if (this.showLegend && this._resources.length > 0) {\n        s -= this.legendHeight;\n      }\n\n      var e = 0;\n      var l = 0;\n      var d = z - e;\n      var C = s + d - D;\n      var w = y - l;\n      var F = v + w;\n      var E = c;\n      E = a(E);\n      var g = E[0].clientHeight;\n      var j = E.position().top - D;\n      var m = j + g;\n\n      if (j <= d) {\n        var A = j;\n\n        if (A < 0) {\n          A = 0;\n        }\n\n        if (!q || q && this.tableRows > 1) {\n          this.vScrollBar.jqxScrollBar(\"setPosition\", A);\n        }\n      } else {\n        if (j >= C) {\n          var A = j;\n\n          if (A < 0) {\n            A = 0;\n          }\n\n          if (!q || q && this.tableRows > 1) {\n            this.vScrollBar.jqxScrollBar(\"setPosition\", A - 2);\n          }\n        }\n      }\n\n      var u = E.position().left;\n      u = Math.round(u);\n      var b = u + E.outerWidth();\n\n      if (Math.round(E.position().left) === 0) {\n        this.hScrollBar.jqxScrollBar(\"setPosition\", 0);\n      }\n\n      if (u <= w) {\n        var o = u - E.outerWidth() + l;\n\n        if (o < 0) {\n          o = 0;\n        }\n\n        if (!this.rtl) {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", u);\n        } else {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", this.hScrollBar.jqxScrollBar(\"max\") - u);\n        }\n      }\n\n      if (u > F) {\n        if (!this.rtl) {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", u);\n        } else {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", this.hScrollBar.jqxScrollBar(\"max\") - u);\n        }\n      }\n    },\n    ensureVisible: function (d, l) {\n      var g = this;\n      var m = a.type(d) == \"date\" ? d : d.toDate();\n\n      for (var f = 0; f < g.rows.length; f++) {\n        for (var e = 0; e < g.rows[f].cells.length; e++) {\n          var k = g.rows[f].cells[e];\n\n          if (l) {\n            if (k.getAttribute(\"data-view\") !== l) {\n              continue;\n            }\n          }\n\n          var h = k.getAttribute(\"data-date\");\n          var b = g._getDateByString;\n          var c = b(h);\n\n          if (c.valueOf() == m.valueOf()) {\n            return g._ensureVisible(k);\n          }\n        }\n      }\n    },\n    _ensureVisible: function (b) {\n      if (this.vScrollBar[0].style.visibility === \"hidden\" && this.hScrollBar[0].style.visibility === \"hidden\") {\n        return false;\n      }\n\n      var t = this.vScrollBar.jqxScrollBar(\"value\");\n      var s = this.hScrollBar.jqxScrollBar(\"value\");\n\n      if (this.rtl) {\n        s = this.hScrollBar.jqxScrollBar(\"max\") - s;\n      }\n\n      var m = this._hostHeight;\n      var p = this._hostWidth;\n      var w = 0;\n\n      if (!this.columnGroups) {\n        w += this.showHeader ? this.columnsHeight : 0;\n      } else {\n        w += this.showHeader ? this.columnsheader.height() : 0;\n      }\n\n      if (this.showToolbar) {\n        w += this.toolbarHeight;\n      }\n\n      m -= w;\n\n      if (this.showLegend && this._resources.length > 0) {\n        m -= this.legendHeight;\n      }\n\n      if (this.hScrollBar.css(\"visibility\") != \"hidden\") {\n        m -= 20;\n      }\n\n      var e = 0;\n      var h = 0;\n      var l = this._views[this._view].type;\n      var j = this._views[this._view];\n      var y = 0;\n\n      if (l == \"dayView\" || l == \"weekView\") {\n        var r = this.showAllDayRow;\n\n        if (j.timeRuler && (l === \"dayView\" || l === \"weekView\")) {\n          if (j.timeRuler.showAllDayRow != undefined) {\n            r = j.timeRuler.showAllDayRow;\n          }\n        }\n\n        if (r) {\n          if (this.tableRows == 1) {\n            y = this.table[0].rows[0].clientHeight;\n          } else {\n            y = this.table[0].rows[1].clientHeight;\n          }\n        }\n      }\n\n      var d = t - e;\n      var x = m + d - y;\n      var q = s - h;\n      var A = p + q;\n      var z = b;\n      z = a(z);\n      var f = z.position().top - y;\n      var i = f + z.outerHeight();\n      var o = z.position().left;\n      o = Math.round(o);\n      var c = o + z.outerWidth();\n\n      if (Math.round(z.position().left) === 0) {\n        this.hScrollBar.jqxScrollBar(\"setPosition\", 0);\n      }\n\n      if (o <= q) {\n        var k = o - z.outerWidth() + h;\n\n        if (k < 0) {\n          k = 0;\n        }\n\n        if (!this.rtl) {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", k);\n        } else {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", this.hScrollBar.jqxScrollBar(\"max\") - k);\n        }\n      }\n\n      if (c >= A) {\n        if (!this.rtl) {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", 2 + h + c - p);\n        } else {\n          this.hScrollBar.jqxScrollBar(\"setPosition\", this.hScrollBar.jqxScrollBar(\"max\") - (2 + h + c - p));\n        }\n      }\n\n      var g = z.parent().index();\n\n      if (this.tableRows > 0) {\n        g--;\n      }\n\n      if (Math.round(z.position().top) === 0 || g === 0) {\n        return this.vScrollBar.jqxScrollBar(\"setPosition\", 0);\n      } else {\n        var n = this.table[0].rows.length - 1;\n        var v = this.table[0].rows[n];\n\n        if (v[0] === z.parent()[0]) {\n          return this.vScrollBar.jqxScrollBar(\"setPosition\", this.vScrollBar.jqxScrollBar(\"max\"));\n        }\n      }\n\n      if (f <= d) {\n        var u = f;\n\n        if (u < 0) {\n          u = 0;\n        }\n\n        return this.vScrollBar.jqxScrollBar(\"setPosition\", u);\n      }\n\n      if (i >= x) {\n        return this.vScrollBar.jqxScrollBar(\"setPosition\", 4 + i - m + y);\n      }\n    },\n    getColumn: function (b) {\n      var c = null;\n\n      if (this.columns.records) {\n        a.each(this.columns.records, function () {\n          if (this.datafield == b || this.displayfield == b) {\n            c = this;\n            return false;\n          }\n        });\n      }\n\n      return c;\n    },\n    _setcolumnproperty: function (c, e, f) {\n      if (c == null || e == null || f == null) {\n        return null;\n      }\n\n      e = e.toLowerCase();\n      var d = this.getColumn(c);\n\n      if (d == null) {\n        return;\n      }\n\n      var g = d[e];\n      d[e] = f;\n      var b = this.getColumn(c);\n\n      if (b != null) {\n        b[e] = f;\n      }\n\n      switch (e) {\n        case \"text\":\n        case \"hidden\":\n        case \"hideable\":\n        case \"renderer\":\n        case \"align\":\n        case \"cellsalign\":\n        case \"contenttype\":\n        case \"cellclass\":\n        case \"cellclassname\":\n        case \"class\":\n        case \"width\":\n        case \"minwidth\":\n        case \"maxwidth\":\n          if (e == \"align\") {\n            this._rendercolumnheaders();\n\n            this.refresh();\n          } else {\n            if (e == \"text\" || e == \"class\" || e == \"hidden\" || e == \"pinned\" || e == \"resizable\" || e == \"renderer\") {\n              this._rendercolumnheaders();\n\n              this.refresh();\n            } else {\n              if (e == \"width\" || e == \"maxwidth\" || e == \"minwidth\") {\n                d._width = null;\n                d._percentagewidth = null;\n\n                this._updatecolumnwidths();\n\n                this.refresh();\n              } else {\n                this.refresh();\n              }\n            }\n          }\n\n          break;\n      }\n    },\n    getColumnProperty: function (b, d) {\n      if (b == null || d == null) {\n        return null;\n      }\n\n      d = d.toLowerCase();\n      var c = this.getColumn(b);\n      return c[d];\n    },\n    setColumnProperty: function (b, c, d) {\n      this._setcolumnproperty(b, c, d);\n    },\n    hideColumn: function (b) {\n      this._setcolumnproperty(b, \"hidden\", true);\n    },\n    showColumn: function (b) {\n      this._setcolumnproperty(b, \"hidden\", false);\n    },\n    updateBoundData: function (c, b) {\n      this.databind(this.source, c, b);\n    },\n    refresh: function (c) {\n      if (c != true) {\n        var b = this;\n\n        if (a.jqx.isHidden(b.host)) {\n          return;\n        }\n\n        b.table[0].style.top = \"0px\";\n        b.vScrollInstance.setPosition(0);\n\n        b._renderrows();\n\n        b._arrange();\n\n        b._renderhorizontalscroll();\n\n        b._updateTouchScrolling();\n\n        b._refreshToolBar();\n\n        b._updateFocusedCell();\n      }\n    },\n    _updateFocusedCell: function () {\n      var h = this;\n\n      if (h.focusedCell) {\n        h._updateCellsSelection();\n\n        return;\n      }\n\n      var d = h._views[h._view].type;\n      var g = h._views[h._view];\n      var c = h.showAllDayRow;\n\n      if (g.timeRuler && (d === \"dayView\" || d === \"weekView\")) {\n        if (g.timeRuler.showAllDayRow != undefined) {\n          c = g.timeRuler.showAllDayRow;\n        }\n      }\n\n      if (!c || d != \"dayView\" && d != \"weekView\") {\n        h.focusedCell = h.rows[0].cells[0];\n\n        if (h.rtl) {\n          h.focusedCell = h.rows[0].cells[h.rows[0].cells.length - 1];\n        }\n      } else {\n        h.focusedCell = h.rows[1].cells[0];\n\n        if (h.rtl) {\n          h.focusedCell = h.rows[1].cells[h.rows[1].cells.length - 1];\n        }\n      }\n\n      if (h.focusedCell.className.indexOf(\"jqx-scheduler-disabled-cell\") >= 0) {\n        h.focusedCell = null;\n\n        for (var f = 0; f < this.rows.length; f++) {\n          for (var e = 0; e < this.rows[f].cells.length; e++) {\n            var b = this.rows[f].cells[e];\n\n            if (b.className.indexOf(\"jqx-scheduler-disabled-cell\") == -1) {\n              h.focusedCell = b;\n              break;\n            }\n          }\n\n          if (h.focusedCell) {\n            break;\n          }\n        }\n      }\n\n      h._lastSelectedCell = h.focusedCell;\n\n      h._updateCellsSelection();\n    },\n    _updateTouchScrolling: function () {\n      var c = this.that;\n\n      if (c.isTouchDevice()) {\n        var e = a.jqx.mobile.getTouchEventName(\"touchstart\");\n        var d = a.jqx.mobile.getTouchEventName(\"touchend\");\n        var b = a.jqx.mobile.getTouchEventName(\"touchmove\");\n\n        if (c.schedulercontent) {\n          c.removeHandler(c.table, e + \".touchScroll\");\n          c.removeHandler(c.table, b + \".touchScroll\");\n          c.removeHandler(c.table, d + \".touchScroll\");\n          c.removeHandler(c.table, \"touchcancel.touchScroll\");\n          a.jqx.mobile.touchScroll(c._table[0], Math.max(c.vScrollInstance.max, c.hScrollInstance.max), function (h, g) {\n            if (c.dragOrResize) {\n              return;\n            }\n\n            if (g != null && c.vScrollBar.css(\"visibility\") != \"hidden\") {\n              var f = c.vScrollInstance.value;\n              c.vScrollInstance.setPosition(g);\n            }\n\n            if (h != null && c.hScrollBar.css(\"visibility\") != \"hidden\") {\n              var f = c.hScrollInstance.value;\n              c.hScrollInstance.setPosition(h);\n            }\n\n            c.scrolled = new Date();\n          }, this.element.id, this.hScrollBar, this.vScrollBar);\n        }\n      }\n    },\n    scrollWidth: function () {\n      return this.hScrollInstance.max;\n    },\n    scrollHeight: function () {\n      return this.vScrollInstance.max;\n    },\n    scrollLeft: function (b) {\n      if (this.hScrollBar[0].style.visibility != \"hidden\") {\n        this.hScrollInstance.setPosition(b);\n      }\n    },\n    scrollTop: function (b) {\n      if (this.vScrollBar[0].style.visibility != \"hidden\") {\n        this.vScrollInstance.setPosition(b);\n      }\n    },\n    render: function (i) {\n      var e = \"<div style='overflow: hidden; -webkit-appearance: none; outline: none; width:100%; height: 100%; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div id='wrapper\" + this.element.id + \"' style='overflow: hidden; -webkit-appearance: none; border: none; background: transparent; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; align:left; left: 0px; top: 0px; valign:top; position: relative;'><div id='toolbar' style='visibility: hidden; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='legendbartop' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='filter' style='visibility: hidden; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='content\" + this.element.id + \"' style='overflow: hidden; -webkit-appearance: none; border: none; background: transparent; outline: none; border: none; padding: 0px; margin-left: 0px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='verticalScrollBar\" + this.element.id + \"' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='horizontalScrollBar\" + this.element.id + \"' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; border: none; position: absolute;'></div><div id='aggregates' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='legendbarbottom' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='pager' style='z-index: 20; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div></div></div>\";\n      this.element.innerHTML = e;\n      this.wrapper = this.host.find(\"#wrapper\" + this.element.id);\n      this.content = this.host.find(\"#content\" + this.element.id);\n      this.content.addClass(this.toTP(\"jqx-reset\"));\n      var g = this.host.find(\"#verticalScrollBar\" + this.element.id);\n      var k = this.host.find(\"#horizontalScrollBar\" + this.element.id);\n      this.bottomRight = this.host.find(\"#bottomRight\").addClass(this.toTP(\"jqx-grid-bottomright\")).addClass(this.toTP(\"jqx-scrollbar-state-normal\"));\n\n      if (this.vScrollBar) {\n        this.vScrollBar.jqxScrollBar(\"destroy\");\n      }\n\n      if (this.hScrollBar) {\n        this.hScrollBar.jqxScrollBar(\"destroy\");\n      }\n\n      this.vScrollBar = g.jqxScrollBar({\n        vertical: true,\n        rtl: this.rtl,\n        touchMode: this.touchMode,\n        theme: this.theme,\n        _triggervaluechanged: false\n      });\n      this.hScrollBar = k.jqxScrollBar({\n        vertical: false,\n        rtl: this.rtl,\n        touchMode: this.touchMode,\n        theme: this.theme,\n        _triggervaluechanged: false\n      });\n      this.vScrollBar.css(\"visibility\", \"hidden\");\n      this.hScrollBar.css(\"visibility\", \"hidden\");\n      this.vScrollInstance = a.data(this.vScrollBar[0], \"jqxScrollBar\").instance;\n      this.hScrollInstance = a.data(this.hScrollBar[0], \"jqxScrollBar\").instance;\n      this.pager = this.host.find(\"#pager\");\n      this.pager[0].id = \"pager\" + this.element.id;\n      this.toolbar = this.host.find(\"#toolbar\");\n      this.toolbar[0].id = \"toolbar\" + this.element.id;\n      this.toolbar.addClass(this.toTP(\"jqx-scheduler-toolbar\"));\n      this.toolbar.addClass(this.toTP(\"jqx-widget-header\"));\n      this.legendbarbottom = this.host.find(\"#legendbarbottom\");\n      this.legendbarbottom[0].id = \"legendbarbottom\" + this.element.id;\n      this.legendbarbottom.addClass(this.toTP(\"jqx-scheduler-legend-bar-bottom\"));\n      this.legendbarbottom.addClass(this.toTP(\"jqx-scheduler-legend-bar\"));\n      this.legendbarbottom.addClass(this.toTP(\"jqx-widget-header\"));\n      this.pager.addClass(this.toTP(\"jqx-grid-pager\"));\n      this.pager.addClass(this.toTP(\"jqx-widget-header\"));\n      this.legendbartop = this.host.find(\"#legendbartop\");\n      this.legendbartop.addClass(this.toTP(\"jqx-scheduler-legend-bar-top\"));\n      this.legendbartop.addClass(this.toTP(\"jqx-scheduler-legend-bar\"));\n      this.legendbartop.addClass(this.toTP(\"jqx-widget-header\"));\n      this.schedulertable = null;\n\n      if (this.localizestrings) {\n        this.localizestrings();\n\n        if (this.localization != null) {\n          this.localizestrings(this.localization, false);\n        }\n      }\n\n      this._builddataloadelement();\n\n      this._cachedcolumns = this.columns;\n      var b = this.source.datafields;\n\n      if (b == null && this.source._source) {\n        b = this.source._source.datafields;\n      }\n\n      if (b) {\n        for (var c = 0; c < this.columns.length; c++) {\n          var d = this.columns[c];\n\n          if (d && d.cellsFormat && d.cellsFormat.length > 2) {\n            for (var j = 0; j < b.length; j++) {\n              if (b[j].name == d.datafield && !b[j].format) {\n                b[j].format = d.cellsFormat;\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      this.databind(this.source);\n\n      if (this.showToolbar) {\n        this.toolbar.css(\"visibility\", \"inherit\");\n      }\n\n      if (this.showLegend) {\n        this.legendbarbottom.css(\"visibility\", \"inherit\");\n      }\n\n      this.tableheight = null;\n      var f = this;\n\n      var h = function () {\n        if (f.content) {\n          f.content[0].scrollTop = 0;\n          f.content[0].scrollLeft = 0;\n        }\n\n        if (f.schedulercontent) {\n          f.schedulercontent[0].scrollLeft = 0;\n          f.schedulercontent[0].scrollTop = 0;\n        }\n      };\n\n      this.removeHandler(this.content, \"scroll\");\n      this.removeHandler(this.content, \"mousedown\");\n      this.addHandler(this.content, \"scroll\", function (l) {\n        h();\n        return false;\n      });\n\n      if (i !== true) {\n        this._render();\n      }\n    },\n    _render: function () {\n      var g = this;\n\n      if (g.dataview == null) {\n        return;\n      }\n\n      if (g._loading) {\n        return;\n      }\n\n      if (g.columnsHeight != 25 || g.columnGroups) {\n        g._measureElement(\"column\");\n      }\n\n      g.rowinfo = new Array();\n\n      g._removeHandlers();\n\n      if (g.columns == null) {\n        g.columns = new a.jqx.schedulerDataCollection(g.element);\n      } else {\n        g._initializeColumns();\n      }\n\n      g.host.height(g.height);\n      g.host.width(g.width);\n      a.jqx.utilities.html(g.content, \"\");\n      g.columnsheader = g.columnsheader || a('<div style=\"overflow: hidden;\"></div>');\n      g.columnsheader.remove();\n      g.columnsheader.addClass(g.toTP(\"jqx-widget-header\"));\n      g.columnsheader.addClass(g.toTP(\"jqx-grid-header\"));\n\n      if (!g.showHeader) {\n        g.columnsheader.css(\"display\", \"none\");\n      } else {\n        if (g.columnsheader) {\n          g.columnsheader.css(\"display\", \"block\");\n        }\n      }\n\n      g.schedulercontent = g.schedulercontent || a('<div style=\"width: 100%; overflow: hidden; position: absolute;\"></div>');\n      g.schedulercontent.remove();\n      var e = g.columnsHeight;\n      e = g._preparecolumnGroups();\n      g.columnsheader.height(e);\n      g.content.append(g.columnsheader);\n      g.content.append(g.schedulercontent);\n\n      g._rendercolumnheaders();\n\n      g.tableheight = null;\n      g.schedulercontent.find(\"#contenttable\" + g.element.id).remove();\n\n      if (g.table != null) {\n        g.table.remove();\n        g.table = null;\n      }\n\n      if (g.pinnedtable != null) {\n        g.pinnedtable.remove();\n        g.pinnedtable = null;\n      }\n\n      g.table = a('<div id=\"contenttable' + g.element.id + '\" style=\"overflow: hidden; position: relative;\"></div>');\n      g.pinnedtable = a('<div id=\"contenttable2' + g.element.id + '\" style=\"display: none; overflow: hidden; position: relative;\"></div>');\n      g.schedulercontent.addClass(g.toTP(\"jqx-grid-content\"));\n      g.schedulercontent.addClass(g.toTP(\"jqx-widget-content\"));\n      g.schedulercontent.append(g.table);\n\n      if (g.tableRows == 1) {\n        g.schedulercontent.append(g.pinnedtable);\n      }\n\n      g._renderrows();\n\n      g._arrange();\n\n      g._resourcesElements = new Array();\n\n      var d = function (h, i) {\n        h.children().remove();\n        var h = a(\"<div style='margin:5px; position: relative;'></div>\").appendTo(h);\n        g._resourcesElements[i] = new Array();\n        a.each(g._resources, function (n) {\n          var l = g.getColors(n);\n          var m = this.toString();\n          var o = a(\"<div data-toggle='on' style='border-color: \" + l.border + \"; background: \" + l.background + \";' class='\" + g.toThemeProperty(\"jqx-scheduler-legend\") + \"'></div>\");\n          o.appendTo(h);\n          var k = a(\"<div class='\" + g.toThemeProperty(\"jqx-scheduler-legend-label\") + \"'>\" + m + \"</div>\");\n          k.appendTo(h);\n          g._resourcesElements[i][m] = o;\n\n          var j = function () {\n            if (o.attr(\"data-toggle\") == \"on\") {\n              g.hideAppointmentsByResource(m);\n            } else {\n              g.showAppointmentsByResource(m);\n            }\n          };\n\n          g.addHandler(o, \"mousedown\", function () {\n            j();\n            return false;\n          });\n          g.addHandler(k, \"mousedown\", function () {\n            j();\n            return false;\n          });\n        });\n      };\n\n      d(g.legendbarbottom, \"bottom\");\n      d(g.legendbartop, \"top\");\n\n      if (g.legendPosition == \"top\") {\n        g.legendbarbottom.hide();\n      } else {\n        g.legendbartop.hide();\n      }\n\n      if (g._resources.length == 0) {\n        g.legendbarbottom.hide();\n        g.legendbartop.hide();\n      }\n\n      if (g.renderToolBar) {\n        g.renderToolBar(g.toolbar);\n      } else {\n        g._renderToolBar();\n      }\n\n      if (g.disabled) {\n        g.host.addClass(g.toThemeProperty(\"jqx-fill-state-disabled\"));\n      }\n\n      g._renderhorizontalscroll();\n\n      g._addHandlers();\n\n      g.clearSelection();\n      var c = g._views[g._view].type;\n      var f = g._views[g._view];\n      var b = g.showAllDayRow;\n\n      if (f.timeRuler && (c === \"dayView\" || c === \"weekView\")) {\n        if (f.timeRuler.showAllDayRow != undefined) {\n          b = f.timeRuler.showAllDayRow;\n        }\n      }\n\n      if (!b || c != \"dayView\" && c != \"weekView\") {\n        g.focusedCell = g.rows[0].cells[0];\n      } else {\n        g.focusedCell = g.rows[1].cells[0];\n      }\n\n      g._lastSelectedCell = g.focusedCell;\n\n      g._updateCellsSelection();\n    },\n    clear: function () {\n      if (this.source) {\n        this.source.records = new Array();\n        this.source.hierarchy = new Array();\n      }\n\n      this.dataview._filteredData = new Array();\n      this.databind(null);\n\n      this._render();\n    },\n    getAppointmentElement: function (e) {\n      var b = null;\n\n      if (e.className.indexOf(\"jqx-scheduler-appointment\") >= 0 && e.className.indexOf(\"jqx-scheduler-appointment-inner-content\") == -1 && e.className.indexOf(\"jqx-scheduler-appointment-content\") == -1 && e.className.indexOf(\"jqx-scheduler-appointment-resize-indicator\") == -1) {\n        b = e;\n      }\n\n      var d = e;\n\n      for (var c = 0; c < 4; c++) {\n        if (d.parentNode) {\n          if (d.className.indexOf(\"jqx-scheduler-appointment\") >= 0 && d.className.indexOf(\"jqx-scheduler-appointment-innter-content\") == -1 && d.className.indexOf(\"jqx-scheduler-appointment-content\") == -1 && d.className.indexOf(\"jqx-scheduler-appointment-resize-indicator\") == -1) {\n            b = d;\n          }\n\n          d = d.parentNode;\n        } else {\n          break;\n        }\n      }\n\n      return b;\n    },\n    getJQXAppointmentByElement: function (d) {\n      var f = this;\n      var e = d.getAttribute ? d.getAttribute(\"data-key\") : d.attr(\"data-key\");\n\n      if (e.indexOf(\".\") >= 0) {\n        var c = e.substring(0, e.indexOf(\".\"));\n        var h = e.substring(e.indexOf(\".\") + 1);\n        var g = f.appointmentsByKey[c];\n        var b = g.jqxAppointment.renderedAppointments[e];\n      } else {\n        var g = f.appointmentsByKey[e];\n        var b = g.jqxAppointment;\n      }\n\n      return b;\n    },\n    _renderToolBar: function () {\n      var i = this;\n      var b = a('<div style=\"width: 100%; height: 100%; position: relative;\"></div>');\n      var k = (this.toolbarHeight - 20) / 2;\n      b.css(\"top\", k);\n      i.toolbarLeftButton = a('<div type=\"button\" style=\"outline: none; padding: 0px; margin-top: 3px; margin-left: 3px; margin-right: 3px; width: 27px; float: left;\"></div>');\n      i.toolbarRightButton = a('<div type=\"button\" style=\"outline: none; padding: 0px; margin-top: 3px; margin-right: 3px; width: 27px; float: left;\"></div>');\n      i.toolbarLeftButton.attr(\"title\", i.schedulerLocalization.toolBarPreviousButtonString);\n      i.toolbarRightButton.attr(\"title\", i.schedulerLocalization.toolBarNextButtonString);\n      i.toolbarRightButton.jqxButton({\n        enableHover: false,\n        enableDefault: false,\n        enablePressed: false,\n        cursor: \"pointer\",\n        disabled: i.disabled,\n        theme: i.theme\n      });\n      i.toolbarLeftButton.jqxButton({\n        enableHover: false,\n        enableDefault: false,\n        enablePressed: false,\n        cursor: \"pointer\",\n        disabled: i.disabled,\n        theme: i.theme\n      });\n      i.dateTimeInput = a('<div style=\"outline: none; padding: 0px; margin-top: 0px; margin-right: 3px; width: 27px; float: left;\"></div>');\n      i.toolbarLeftButton.find(\".jqx-icon-arrow-left\").remove();\n      i.toolbarRightButton.find(\".jqx-icon-arrow-right\").remove();\n      var e = a(\"<div style='outline: none; margin-left: 6px; width: 15px; height: 15px;'></div>\");\n      e.addClass(i.toThemeProperty(\"jqx-icon-arrow-left\"));\n      i.toolbarLeftButton.wrapInner(e);\n      var j = a(\"<div style='outline: none; margin-left: 6px; width: 15px; height: 15px;'></div>\");\n      j.addClass(i.toThemeProperty(\"jqx-icon-arrow-right\"));\n      i.toolbarRightButton.wrapInner(j);\n\n      if (i.rtl) {\n        i.toolbarLeftButton.css(\"float\", \"right\");\n        i.toolbarRightButton.css(\"float\", \"right\");\n        i.dateTimeInput.css(\"float\", \"right\");\n      }\n\n      i.addHandler(i.toolbarRightButton, \"mouseenter\", function () {\n        j.addClass(i.toThemeProperty(\"jqx-icon-arrow-right-hover\"));\n      });\n      i.addHandler(i.toolbarLeftButton, \"mouseenter\", function () {\n        e.addClass(i.toThemeProperty(\"jqx-icon-arrow-left-hover\"));\n      });\n      i.addHandler(i.toolbarRightButton, \"mouseleave\", function () {\n        j.removeClass(i.toThemeProperty(\"jqx-icon-arrow-right-hover\"));\n      });\n      i.addHandler(i.toolbarLeftButton, \"mouseleave\", function () {\n        e.removeClass(i.toThemeProperty(\"jqx-icon-arrow-left-hover\"));\n      });\n      i.addHandler(i.toolbarRightButton, \"mousedown\", function () {\n        j.addClass(i.toThemeProperty(\"jqx-icon-arrow-right-selected\"));\n      });\n      i.addHandler(i.toolbarRightButton, \"mouseup\", function () {\n        j.removeClass(i.toThemeProperty(\"jqx-icon-arrow-right-selected\"));\n      });\n      i.addHandler(i.toolbarLeftButton, \"mousedown\", function () {\n        e.addClass(i.toThemeProperty(\"jqx-icon-arrow-left-selected\"));\n      });\n      i.addHandler(i.toolbarLeftButton, \"mouseup\", function () {\n        e.removeClass(i.toThemeProperty(\"jqx-icon-arrow-left-selected\"));\n      });\n      i.addHandler(a(document), \"mouseup.pagerbuttons\" + i.element.id, function () {\n        j.removeClass(i.toThemeProperty(\"jqx-icon-arrow-right-selected\"));\n        e.removeClass(i.toThemeProperty(\"jqx-icon-arrow-left-selected\"));\n      });\n      i.addHandler(i.toolbarRightButton, \"click\", function () {\n        if (!i.toolbarRightButton.jqxButton(\"disabled\")) {\n          if (!i.rtl) {\n            i.navigateForward();\n          } else {\n            i.navigateBackward();\n          }\n\n          i.focus();\n        }\n      });\n      i.addHandler(i.toolbarLeftButton, \"click\", function () {\n        if (!i.toolbarLeftButton.jqxButton(\"disabled\")) {\n          if (!i.rtl) {\n            i.navigateBackward();\n          } else {\n            i.navigateForward();\n          }\n\n          i.focus();\n        }\n      });\n      i.toolbar.children().remove();\n      i.toolbar.append(b);\n\n      if (!i.rtl) {\n        b.append(i.toolbarLeftButton);\n        b.append(i.dateTimeInput);\n        b.append(i.toolbarRightButton);\n      } else {\n        b.append(i.toolbarRightButton);\n        b.append(i.dateTimeInput);\n        b.append(i.toolbarLeftButton);\n      }\n\n      i.toolbarDetails = a('<div class=\"' + i.toTP(\"jqx-scheduler-toolbar-details\") + '\" style=\"margin-left: 7px; margin-top:2px; float: left;\"></div>');\n      i.toolbarViews = a('<div style=\"margin-right: 10px; margin-top:0px; float: right;\"></div>');\n\n      if (i.rtl) {\n        i.toolbarDetails.css(\"float\", \"right\");\n        i.toolbarDetails.css(\"margin-left\", \"0px\");\n        i.toolbarDetails.css(\"margin-right\", \"7px\");\n        i.toolbarViews.css(\"margin-left\", \"10px\");\n        i.toolbarViews.css(\"margin-right\", \"0px\");\n        i.toolbarViews.css(\"float\", \"left\");\n      }\n\n      var h = new Array();\n\n      if (!i.rtl) {\n        h.push(i.toolbarLeftButton);\n        h.push(i.dateTimeInput);\n        h.push(i.toolbarRightButton);\n      } else {\n        h.push(i.toolbarRightButton);\n        h.push(i.dateTimeInput);\n        h.push(i.toolbarLeftButton);\n      }\n\n      var l = i._views.length - 1;\n      a.each(i._views, function (p) {\n        var q = \"\";\n        var n = p;\n\n        if (i.rtl) {\n          n = l - p;\n        }\n\n        if (i._views[n].text != undefined) {\n          q = i._views[n].text;\n        } else {\n          switch (i._views[n].type) {\n            case \"dayView\":\n              q = i.schedulerLocalization.dayViewString;\n              break;\n\n            case \"weekView\":\n              q = i.schedulerLocalization.weekViewString;\n              break;\n\n            case \"monthView\":\n              q = i.schedulerLocalization.monthViewString;\n              break;\n\n            case \"agendaView\":\n              q = i.schedulerLocalization.agendaViewString;\n              break;\n\n            case \"timelineDayView\":\n              q = i.schedulerLocalization.timelineDayViewString;\n              break;\n\n            case \"timelineWeekView\":\n              q = i.schedulerLocalization.timelineWeekViewString;\n              break;\n\n            case \"timelineMonthView\":\n              q = i.schedulerLocalization.timelineMonthViewString;\n              break;\n          }\n        }\n\n        var o = '<span data-type=\"' + i._views[n].type + '\" style=\"cursor: pointer; outline: none; margin-left: -1px; position: relative;\">' + q + \"</span>\";\n        var m = a(o);\n        m.addClass(i.toTP(\"jqx-group-button-normal jqx-button jqx-fill-state-normal\"));\n        h.push(m);\n\n        if (n == 0) {\n          if (!i.rtl) {\n            m.addClass(i.toTP(\"jqx-rc-l\"));\n          } else {\n            m.addClass(i.toTP(\"jqx-rc-r\"));\n          }\n        }\n\n        if (n == i._views.length - 1) {\n          if (!i.rtl) {\n            m.addClass(i.toTP(\"jqx-rc-r\"));\n          } else {\n            m.addClass(i.toTP(\"jqx-rc-l\"));\n          }\n        }\n\n        if (n === i._view) {\n          m.addClass(i.toTP(\"jqx-fill-state-pressed\"));\n        }\n\n        m.mouseenter(function () {\n          m.addClass(i.toTP(\"jqx-fill-state-hover\"));\n        });\n        m.mouseleave(function () {\n          m.removeClass(i.toTP(\"jqx-fill-state-hover\"));\n        });\n        m.mousedown(function () {\n          i._setView(n);\n\n          i.focus();\n        });\n        a(i.toolbarViews).append(m);\n      });\n      b.append(i.toolbarDetails);\n      b.append(i.toolbarViews);\n\n      if (i._views.length < 2) {\n        i.toolbarViews.hide();\n      }\n\n      i.dateTimeInput.jqxDateTimeInput({\n        dropDownWidth: 220,\n        dropDownHeight: 220,\n        rtl: i.rtl,\n        localization: i._getDateTimeInputLocalization(),\n        firstDayOfWeek: i.schedulerLocalization.firstDay,\n        todayString: i.schedulerLocalization.todayString,\n        clearString: i.schedulerLocalization.clearString,\n        showFooter: true,\n        height: 19,\n        width: 18,\n        renderMode: \"simple\"\n      });\n      i.addHandler(i.dateTimeInput, \"change\", function (m) {\n        if (!i.fromNavigate) {\n          i.navigateTo(new a.jqx.date(m.args.date, i.timeZone));\n          i.focus();\n        }\n      });\n      i.tabKeyElements = h;\n      var g = i._views[i._view].type;\n\n      var d = function (m) {\n        var o = a.jqx.formatDate(i.getViewStart().toDate(), m, i.schedulerLocalization);\n        var n = a.jqx.formatDate(i.getViewEnd().toDate(), m, i.schedulerLocalization);\n\n        if (g === \"dayView\" || g === \"timelineDayView\") {\n          i.toolbarDetails.html(o);\n        } else {\n          i.toolbarDetails.html(o + \" - \" + n);\n        }\n\n        if (i.rtl) {\n          i.toolbarDetails.addClass(\"jqx-rtl\");\n          i.toolbarDetails.html(\"<span style='direction:rtl;'>\" + n + \"<span> - <span style='direction:rtl;'>\" + o + \"</span>\");\n        } else {\n          i.toolbarDetails[0].style.direction = \"ltr\";\n        }\n      };\n\n      d(i.toolBarRangeFormat);\n      var c = i.toolbarViews.width() + i.toolbarDetails.width() + 120;\n      var f = i.toolBarRangeFormat;\n\n      if (c > i.host.width()) {\n        f = i.toolBarRangeFormatAbbr;\n        d(f);\n        var c = i.toolbarViews.width() + i.toolbarDetails.width() + 120;\n\n        if (c > i.host.width()) {\n          i.toolbarDetails.hide();\n          var c = i.toolbarViews.width() + 120;\n\n          if (c > i.host.width()) {\n            i.toolbarViews.hide();\n          }\n        }\n      } else {\n        i.currentToolbarFormat = i.toolBarRangeFormat;\n      }\n    },\n    _setView: function (g) {\n      var f = this;\n      f.toolbarViews.find(\".jqx-fill-state-pressed\").removeClass(f.toTP(\"jqx-fill-state-pressed\"));\n\n      if (!f.rtl) {\n        a(f.toolbarViews.children()[g]).addClass(f.toTP(\"jqx-fill-state-pressed\"));\n      } else {\n        a(f.toolbarViews.children()[f._views.length - 1 - g]).addClass(f.toTP(\"jqx-fill-state-pressed\"));\n      }\n\n      if (f._view === g) {\n        return;\n      }\n\n      var b = f.vScrollBar[0].style.visibility;\n\n      if (b) {\n        if (!f._scrollPosition) {\n          f._scrollPosition = new Array();\n        }\n\n        f._scrollPosition[f._view] = f.vScrollInstance.value;\n      }\n\n      var c = f.hScrollBar[0].style.visibility;\n\n      if (c) {\n        if (!f._hscrollPosition) {\n          f._hscrollPosition = new Array();\n        }\n\n        f._hscrollPosition[f._view] = f.hScrollInstance.value;\n      }\n\n      var i = f._views[f._view].type;\n      var e = f._views[g].type;\n      f._view = g;\n\n      f._refreshColumns();\n\n      f.refresh();\n      var h = f.hScrollBar[0].style.visibility;\n\n      if (c !== h) {\n        f._renderrows();\n\n        f._updateTouchScrolling();\n      }\n\n      if (f._scrollPosition[f._view]) {\n        f.vScrollInstance.setPosition(f._scrollPosition[f._view]);\n      }\n\n      if (f._hscrollPosition[f._view]) {\n        f.hScrollInstance.setPosition(f._hscrollPosition[f._view]);\n      }\n\n      if (f.selectedJQXAppointment) {\n        f._ensureAppointmentVisible(f.selectedJQXAppointment);\n      }\n\n      var d = f.getViewStart();\n      var j = a.jqx.scheduler.utilities.getEndOfDay(f.getViewEnd());\n\n      f._raiseEvent(\"viewChange\", {\n        date: f.date,\n        from: d,\n        to: j,\n        oldViewType: i,\n        newViewType: e\n      });\n    },\n    _getDateTimeInputLocalization: function () {\n      var b = this;\n      var c = {};\n      c.backString = b.schedulerLocalization.backString;\n      c.forwardString = b.schedulerLocalization.forwardString;\n      c.todayString = b.schedulerLocalization.todayString;\n      c.clearString = b.schedulerLocalization.clearString;\n      c.calendar = b.schedulerLocalization;\n      return c;\n    },\n    setView: function (b) {\n      switch (b) {\n        case \"dayView\":\n          this._setView(0);\n\n          break;\n\n        case \"weekView\":\n          this._setView(1);\n\n          break;\n\n        case \"monthView\":\n          this._setView(2);\n\n          break;\n\n        case \"timelineDayView\":\n          this._setView(3);\n\n          break;\n\n        case \"timelineWeekView\":\n          this._setView(4);\n\n          break;\n\n        case \"timelineMonthView\":\n          this._setView(5);\n\n          break;\n      }\n\n      this.view = b;\n    },\n    navigateForward: function () {\n      var d = this;\n      var h = this._views[this._view].type;\n      var i = this._views[this._view];\n      var c = new a.jqx.date(this.date, d.timeZone);\n\n      var j = function () {\n        while ((c.dayOfWeek() == 0 || c.dayOfWeek() == 6) && false === i.showWeekends) {\n          c = c.addDays(1);\n        }\n\n        return c;\n      };\n\n      switch (h) {\n        case \"dayView\":\n        case \"timelineDayView\":\n          c = c.addDays(1);\n          c = j();\n          break;\n\n        case \"weekView\":\n        case \"timelineWeekView\":\n          c = c.addDays(7);\n          break;\n\n        case \"monthView\":\n        case \"timelineMonthView\":\n          var g = c.day();\n          var e = c.month();\n          var f = c.year();\n          var b = new a.jqx.date(f, e, 1);\n          b.timeZone = d.timeZone;\n          c = b.addMonths(1);\n          break;\n\n        case \"agendaView\":\n          if (i.days) {\n            c = c.addDays(i.days);\n          } else {\n            c = c.addDays(7);\n          }\n\n          break;\n      }\n\n      return this.navigateTo(c);\n    },\n    navigateBackward: function () {\n      var d = this;\n      var h = this._views[this._view].type;\n      var i = this._views[this._view];\n      var c = new a.jqx.date(this.date, d.timeZone);\n\n      var j = function () {\n        while ((c.dayOfWeek() == 0 || c.dayOfWeek() == 6) && false === i.showWeekends) {\n          c = c.addDays(-1);\n        }\n\n        return c;\n      };\n\n      switch (h) {\n        case \"dayView\":\n        case \"timelineDayView\":\n          c = c.addDays(-1);\n          c = j();\n          break;\n\n        case \"weekView\":\n        case \"timelineWeekView\":\n          c = c.addDays(-7);\n          break;\n\n        case \"monthView\":\n        case \"timelineMonthView\":\n          var g = c.day();\n          var e = c.month();\n          var f = c.year();\n          var b = new a.jqx.date(f, e, 1);\n          b.timeZone = d.timeZone;\n          c = b.addMonths(-1);\n          break;\n\n        case \"agendaView\":\n          if (i.days) {\n            c = c.addDays(-i.days);\n          } else {\n            c = c.addDays(-7);\n          }\n\n          break;\n      }\n\n      return this.navigateTo(c);\n    },\n    _refreshToolBar: function (d) {\n      var f = this;\n      var g = f.getViewStart();\n      var e = f.getViewEnd();\n\n      var c = function (i) {\n        var l = a.jqx.formatDate(g.toDate(), i, f.schedulerLocalization);\n        var j = a.jqx.formatDate(e.toDate(), i, f.schedulerLocalization);\n        var h = f._views[f._view].type;\n        var k = f._views[f._view];\n\n        if (k.showWeekends === false) {\n          if (g.dayOfWeek() == 0 || g.dayOfWeek() == 6) {\n            g = g.addDays(1);\n          }\n\n          if (g.dayOfWeek() == 0 || g.dayOfWeek() == 6) {\n            g = g.addDays(1);\n          }\n\n          if (e.dayOfWeek() == 0 || e.dayOfWeek() == 6) {\n            e = e.addDays(-1);\n          }\n\n          if (e.dayOfWeek() == 0 || e.dayOfWeek() == 6) {\n            e = e.addDays(-1);\n          }\n\n          var l = a.jqx.formatDate(g.toDate(), i, f.schedulerLocalization);\n          var j = a.jqx.formatDate(e.toDate(), i, f.schedulerLocalization);\n        }\n\n        if (h === \"dayView\" || h === \"timelineDayView\") {\n          f.toolbarDetails.html(l);\n        } else {\n          f.toolbarDetails.html(l + \" - \" + j);\n        }\n\n        if (f.rtl) {\n          f.toolbarDetails.addClass(\"jqx-rtl\");\n          f.toolbarDetails.html(\"<span style='direction:rtl;'>\" + j + \"<span> - <span style='direction:rtl;'>\" + l + \"</span>\");\n        } else {\n          f.toolbarDetails[0].style.direction = \"ltr\";\n        }\n      };\n\n      if (d) {\n        c(f._lastFormatString || f.toolBarRangeFormat);\n        return;\n      }\n\n      c(f.toolBarRangeFormat);\n      f.toolbarDetails.show();\n      f.toolbarViews.show();\n      var b = f.toolbarViews.width() + f.toolbarDetails.width() + 120;\n\n      if (b > f.host.width()) {\n        c(f.toolBarRangeFormatAbbr);\n        var b = f.toolbarViews.width() + f.toolbarDetails.width() + 120;\n\n        if (b > f.host.width()) {\n          f.toolbarDetails.hide();\n          var b = f.toolbarViews.width() + 120;\n\n          if (b > f.host.width()) {\n            f.toolbarViews.hide();\n          }\n        }\n      }\n    },\n    navigateTo: function (b) {\n      var d = this;\n\n      if (a.type(b) == \"date\") {\n        b = new a.jqx.date(b);\n      }\n\n      if (b < this.min) {\n        return;\n      }\n\n      if (b > this.max) {\n        return;\n      }\n\n      b.timeZone = d.timeZone;\n      d.date = b;\n\n      d._refreshToolBar(true);\n\n      d.fromNavigate = true;\n      d.dateTimeInput.val(b.toDate());\n      d.fromNavigate = false;\n\n      d._refreshColumnTitles();\n\n      d._renderrows();\n\n      d._updateFocusedCell();\n\n      if (d.resources) {\n        d._renderhorizontalscroll();\n      }\n\n      var e = d.getViewStart();\n      var c = a.jqx.scheduler.utilities.getEndOfDay(d.getViewEnd());\n\n      d._raiseEvent(\"dateChange\", {\n        date: b,\n        from: e,\n        to: c\n      });\n    },\n    _preparecolumnGroups: function () {\n      var n = this.columnsHeight;\n\n      if (this.columnGroups) {\n        this.columnshierarchy = new Array();\n\n        if (this.columnGroups.length) {\n          var l = this;\n\n          for (var f = 0; f < this.columnGroups.length; f++) {\n            this.columnGroups[f].parent = null;\n            this.columnGroups[f].groups = null;\n          }\n\n          for (var f = 0; f < this.columns.records.length; f++) {\n            this.columns.records[f].parent = null;\n            this.columns.records[f].groups = null;\n          }\n\n          var m = function (j) {\n            for (var s = 0; s < l.columnGroups.length; s++) {\n              var t = l.columnGroups[s];\n\n              if (t.name === j) {\n                return t;\n              }\n            }\n\n            return null;\n          };\n\n          for (var f = 0; f < this.columnGroups.length; f++) {\n            var o = this.columnGroups[f];\n\n            if (!o.groups) {\n              o.groups = null;\n            }\n\n            if (o.parentGroup) {\n              o.parentgroup = o.parentGroup;\n            }\n\n            if (o.parentgroup) {\n              var q = m(o.parentgroup);\n\n              if (q) {\n                o.parent = q;\n\n                if (!q.groups) {\n                  q.groups = new Array();\n                }\n\n                if (q.groups.indexOf(o) === -1) {\n                  q.groups.push(o);\n                }\n              }\n            }\n          }\n\n          for (var f = 0; f < this.columns.records.length; f++) {\n            var o = this.columns.records[f];\n\n            if (o.columngroup) {\n              var q = m(o.columngroup);\n\n              if (q) {\n                if (!q.groups) {\n                  q.groups = new Array();\n                }\n\n                o.parent = q;\n\n                if (q.groups.indexOf(o) === -1) {\n                  q.groups.push(o);\n                }\n              }\n            }\n          }\n\n          var p = 0;\n\n          for (var f = 0; f < this.columns.records.length; f++) {\n            var o = this.columns.records[f];\n            var c = o;\n            o.level = 0;\n\n            while (c.parent) {\n              c = c.parent;\n              o.level++;\n            }\n\n            var c = o;\n            var b = o.level;\n            p = Math.max(p, o.level);\n\n            while (c.parent) {\n              c = c.parent;\n\n              if (c) {\n                c.level = --b;\n              }\n            }\n          }\n\n          var k = function (w) {\n            var v = new Array();\n\n            if (w.columngroup) {\n              v.push(w);\n            }\n\n            if (!w.groups) {\n              return new Array();\n            }\n\n            for (var u = 0; u < w.groups.length; u++) {\n              if (w.groups[u].columngroup) {\n                v.push(w.groups[u]);\n              } else {\n                if (w.groups[u].groups) {\n                  var t = k(w.groups[u]);\n\n                  for (var s = 0; s < t.length; s++) {\n                    v.push(t[s]);\n                  }\n                }\n              }\n            }\n\n            return v;\n          };\n\n          for (var f = 0; f < this.columnGroups.length; f++) {\n            var o = this.columnGroups[f];\n            var d = k(o);\n            o.columns = d;\n            var g = new Array();\n            var r = 0;\n\n            for (var e = 0; e < d.length; e++) {\n              g.push(this.columns.records.indexOf(d[e]));\n\n              if (d[e].pinned) {\n                r++;\n              }\n            }\n\n            if (r != 0) {\n              throw new Error(\"jqxScheduler: Column Groups initialization Error. Please, check the initialization of the jqxScheduler's columns array. The columns in a column group cannot be pinned.\");\n            }\n\n            g.sort(function (j, i) {\n              j = parseInt(j);\n              i = parseInt(i);\n\n              if (j < i) {\n                return -1;\n              }\n\n              if (j > i) {\n                return 1;\n              }\n\n              return 0;\n            });\n\n            for (var h = 1; h < g.length; h++) {\n              if (g[h] != g[h - 1] + 1) {\n                throw new Error(\"jqxScheduler: Column Groups initialization Error. Please, check the initialization of the jqxScheduler's columns array. The columns in a column group are expected to be siblings in the columns array.\");\n                this.host.remove();\n              }\n            }\n          }\n        }\n\n        this.columnGroupslevel = 1 + p;\n        n = this.columnGroupslevel * this.columnsHeight;\n      }\n\n      return n;\n    },\n    wheel: function (d, c) {\n      if (c.editRecurrenceDialog && c.editRecurrenceDialog.jqxWindow(\"isOpen\")) {\n        return true;\n      }\n\n      if (c._editDialog && c._editDialog.jqxWindow(\"isOpen\")) {\n        return true;\n      }\n\n      if (c.autoheight && c.hScrollBar.css(\"visibility\") == \"hidden\") {\n        d.returnValue = true;\n        return true;\n      }\n\n      var e = 0;\n\n      if (!d) {\n        d = window.event;\n      }\n\n      if (d.originalEvent && d.originalEvent.wheelDelta) {\n        d.wheelDelta = d.originalEvent.wheelDelta;\n      }\n\n      if (d.wheelDelta) {\n        e = d.wheelDelta / 120;\n      } else {\n        if (d.detail) {\n          e = -d.detail / 3;\n        }\n      }\n\n      if (e) {\n        var b = c._handleDelta(e);\n\n        if (b) {\n          if (d.preventDefault) {\n            d.preventDefault();\n          }\n\n          if (d.originalEvent != null) {\n            d.originalEvent.mouseHandled = true;\n          }\n\n          if (d.stopPropagation != undefined) {\n            d.stopPropagation();\n          }\n        }\n\n        if (b) {\n          b = false;\n          d.returnValue = b;\n          return b;\n        } else {\n          return false;\n        }\n      }\n\n      if (d.preventDefault) {\n        d.preventDefault();\n      }\n\n      d.returnValue = false;\n    },\n    _handleDelta: function (d) {\n      if (this.vScrollBar.css(\"visibility\") != \"hidden\") {\n        var c = this.vScrollInstance.value;\n\n        if (d < 0) {\n          this.vScrollInstance.setPosition(this.vScrollInstance.value + 2 * 10);\n        } else {\n          this.vScrollInstance.setPosition(this.vScrollInstance.value - 2 * 10);\n        }\n\n        var b = this.vScrollInstance.value;\n\n        if (c != b) {\n          return true;\n        }\n      } else {\n        if (this.hScrollBar.css(\"visibility\") != \"hidden\") {\n          var c = this.hScrollInstance.value;\n\n          if (d > 0) {\n            if (this.hScrollInstance.value > 2 * 10) {\n              this.hScrollInstance.setPosition(this.hScrollInstance.value - 2 * 10);\n            } else {\n              this.hScrollInstance.setPosition(0);\n            }\n          } else {\n            if (this.hScrollInstance.value < this.hScrollInstance.max) {\n              this.hScrollInstance.setPosition(this.hScrollInstance.value + 2 * 10);\n            } else {\n              this.hScrollInstance.setPosition(this.hScrollInstance.max);\n            }\n          }\n\n          var b = this.hScrollInstance.value;\n\n          if (c != b) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    _removeHandlers: function () {\n      var e = this;\n\n      if (e._mousewheelfunc) {\n        e.removeHandler(this.host, \"mousewheel\", e._mousewheelfunc);\n      }\n\n      e.removeHandler(a(document), \"keydown.scheduler\" + e.element.id);\n      e.removeHandler(e.host, \"focus\");\n      e.removeHandler(e.host, \"blur\");\n      e.removeHandler(e.host, \"dragstart.\" + e.element.id);\n      e.removeHandler(e.host, \"selectstart.\" + e.element.id);\n      e.removeHandler(a(window), \"jqxReady.\" + e.element.id);\n      e.removeHandler(e.host, \"mousewheel\", e._mousewheelfunc);\n      var d = \"mousedown\";\n\n      if (e.isTouchDevice()) {\n        d = a.jqx.mobile.getTouchEventName(\"touchstart\");\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 10) {\n          d = \"mousedown\";\n        }\n      }\n\n      if (e.table) {\n        e.removeHandler(e.table, \"mouseleave\");\n      }\n\n      var c = \"mousemove.scheduler\" + e.element.id;\n      var f = \"mouseup.scheduler\" + e.element.id;\n\n      if (e.isTouchDevice() && e.touchMode !== true) {\n        c = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".scheduler\" + e.element.id;\n        f = a.jqx.mobile.getTouchEventName(\"touchend\") + \".scheduler\" + e.element.id;\n      }\n\n      e.removeHandler(a(document), c);\n      e.removeHandler(a(document), f);\n\n      if (!e.isTouchDevice()) {\n        try {\n          if (document.referrer != \"\" || window.frameElement) {\n            if (window.top != null && window.top != window.self) {\n              var g = null;\n\n              if (window.parent && document.referrer) {\n                g = document.referrer;\n              }\n\n              if (g && g.indexOf(document.location.host) != -1) {\n                e.removeHandler(a(window.top.document), \"mouseup.jqxscheduler\" + e.element.id);\n              }\n            }\n          }\n        } catch (b) {}\n      }\n\n      e.removeHandler(e.host, c);\n      e.removeHandler(a(document), \"keydown.jqxscheduler\" + e.element.id);\n      e.removeHandler(e.host, \"keydown\");\n\n      if (e.table) {\n        e.removeHandler(e.table, \"dblclick\");\n        e.removeHandler(e.pinnedtable, d);\n        e.removeHandler(e.table, d);\n      }\n    },\n    selectAppointment: function (b) {\n      if (this.appointmentsByKey[b]) {\n        this._selectAppointment(this.appointmentsByKey[b].jqxAppointment);\n      }\n    },\n    _selectAppointment: function (d, i, f) {\n      if (!d) {\n        return;\n      }\n\n      var h = this;\n\n      if (h.selectedAppointment) {\n        h.clearAppointmentsSelection();\n      }\n\n      var e = d.id;\n      var c = a('[data-key=\"' + e + '\"]');\n\n      if (c.length > 0) {\n        h.selectedJQXAppointment = d;\n\n        if (!i) {\n          h.selectedAppointment = a(c[0]);\n        } else {\n          h.selectedAppointment = a(i);\n        }\n\n        var b = h._views[h._view].type;\n        var g = h._views[h._view];\n\n        if (b == \"agendaView\") {\n          h.clearSelection();\n          return;\n        }\n\n        c.addClass(h.toTP(\"jqx-scheduler-selected-appointment\"));\n\n        if (d.resizable) {\n          c.find(\".jqx-scheduler-appointment-resize-indicator\").show();\n        }\n\n        switch (b) {\n          case \"dayView\":\n            a(c).find(\".jqx-scheduler-appointment-left-resize-indicator\").hide();\n            a(c).find(\".jqx-scheduler-appointment-right-resize-indicator\").hide();\n            break;\n\n          case \"weekView\":\n            break;\n\n          case \"monthView\":\n          case \"timeLineMonthView\":\n          case \"timeLineDayView\":\n          case \"timeLineWeekView\":\n            if (c.length > 1) {\n              a.each(c, function (j) {\n                if (!h.rtl) {\n                  if (j > 0) {\n                    a(this).find(\".jqx-scheduler-appointment-left-resize-indicator\").hide();\n                  }\n\n                  if (j < c.length - 1) {\n                    a(this).find(\".jqx-scheduler-appointment-right-resize-indicator\").hide();\n                  }\n                } else {\n                  if (j > 0) {\n                    a(this).find(\".jqx-scheduler-appointment-right-resize-indicator\").hide();\n                  }\n\n                  if (j < c.length - 1) {\n                    a(this).find(\".jqx-scheduler-appointment-left-resize-indicator\").hide();\n                  }\n                }\n              });\n            }\n\n            break;\n        }\n\n        if (f == \"mouse\") {\n          h.clearSelection();\n          return;\n        }\n      }\n\n      h.clearSelection();\n    },\n    clearAppointmentsSelection: function () {\n      var d = this;\n\n      if (d.selectedAppointment) {\n        var c = d.selectedAppointment.attr(\"data-key\");\n        var b = a('[data-key=\"' + c + '\"]');\n        b.removeClass(d.toTP(\"jqx-scheduler-selected-appointment\"));\n        b.find(\".jqx-scheduler-appointment-resize-indicator\").hide();\n        d.selectedAppointment = null;\n        d.selectedJQXAppointment = null;\n      }\n    },\n    selectCell: function (c, m, l) {\n      var g = this;\n      var n = c.toDate();\n\n      for (var f = 0; f < g.rows.length; f++) {\n        for (var e = 0; e < g.rows[f].cells.length; e++) {\n          var k = g.rows[f].cells[e];\n\n          if (l) {\n            if (k.getAttribute(\"data-view\") !== l) {\n              continue;\n            }\n          }\n\n          var h = k.getAttribute(\"data-date\");\n          var b = g._getDateByString;\n          var d = b(h);\n\n          if (m && k.getAttribute(\"data-end-date\")) {\n            if (d.valueOf() == c.valueOf()) {\n              k.setAttribute(\"data-selected\", \"true\");\n              g.focusedCell = k;\n              g._lastSelectedCell = k;\n\n              g._updateCellsSelection();\n\n              g._ensureVisible(g.focusedCell);\n\n              return;\n            }\n          } else {\n            if (!m && k.getAttribute(\"data-end-date\")) {\n              continue;\n            }\n          }\n\n          if (d.valueOf() == n.valueOf()) {\n            k.setAttribute(\"data-selected\", \"true\");\n            g.focusedCell = k;\n            g._lastSelectedCell = k;\n\n            g._updateCellsSelection();\n\n            g._ensureVisible(g.focusedCell);\n\n            return;\n          }\n        }\n      }\n\n      g._updateCellsSelection();\n    },\n    selectRange: function (m, n, q, p) {\n      var k = this;\n\n      if (m < this.min) {\n        m = this.min;\n      }\n\n      if (n > this.max) {\n        n = this.max;\n      }\n\n      var f = m.toDate();\n      var d = n.toDate();\n      var g = false;\n\n      for (var h = 0; h < k.rows.length; h++) {\n        for (var e = 0; e < k.rows[h].cells.length; e++) {\n          var o = k.rows[h].cells[e];\n\n          if (p) {\n            if (o.getAttribute(\"data-view\") !== p) {\n              continue;\n            }\n          }\n\n          var l = o.getAttribute(\"data-date\");\n          var b = k._getDateByString;\n          var c = b(l);\n\n          if (q && o.getAttribute(\"data-end-date\")) {\n            if (c.valueOf() >= f.valueOf() && c.valueOf() <= d.valueOf()) {\n              o.setAttribute(\"data-selected\", \"true\");\n            }\n          } else {\n            if (!q && o.getAttribute(\"data-end-date\")) {\n              continue;\n            }\n          }\n\n          if (c.valueOf() >= f.valueOf() && c.valueOf() <= d.valueOf()) {\n            o.setAttribute(\"data-selected\", \"true\");\n\n            if (!g) {\n              k._lastSelectedCell = o;\n              k.focusedCell = o;\n              g = true;\n            }\n          }\n        }\n      }\n\n      k._updateCellsSelection();\n    },\n    _selectRange: function (b, r) {\n      var h = this;\n\n      if (h._views[h._view].type == \"agendaView\") {\n        return;\n      }\n\n      var k = b;\n      var v = r.getAttribute(\"data-view\");\n\n      if (b.getAttribute(\"data-view\") !== v) {\n        return;\n      }\n\n      var q = r.getAttribute(\"data-date\");\n      var m = k.getAttribute(\"data-date\");\n\n      if (null == q || null == m) {\n        return;\n      }\n\n      var C = r.getAttribute(\"data-end-date\");\n      var F = k.getAttribute(\"data-end-date\");\n      var H = C != null || F != null;\n      var s = C != null && F != null;\n      var n = h._getDateByString;\n      var u = n(q);\n      var t = n(m);\n\n      if (u < this.min.toDate()) {\n        u = this.min.toDate();\n      }\n\n      if (t < this.min.toDate()) {\n        t = this.min.toDate();\n      }\n\n      if (u > this.max.toDate()) {\n        u = this.max.toDate();\n      }\n\n      if (t > this.max.toDate()) {\n        t = this.max.toDate();\n      }\n\n      var w = Math.min(u, t);\n      var A = Math.max(u, t);\n      var p = h.rows;\n      var f = 0;\n      var e = 0;\n\n      if (f > 0 && h.rtl) {\n        f = 0;\n        e = 1;\n      }\n\n      var d = p.length;\n\n      if (H) {\n        d = 1;\n\n        if (b.getAttribute(\"data-end-date\") == null) {\n          t.setHours(0, 0, 0, 0);\n          var B = new a.jqx.date(t, h.timeZone).toString();\n          var E = a(k).parent().index();\n          a.each(p[0].cells, function () {\n            var i = this.getAttribute(\"data-date\");\n\n            if (i === B) {\n              b = this;\n              s = r.getAttribute(\"data-end-date\") != null && b.getAttribute(\"data-end-date\") != null;\n              var I = r.getAttribute(\"data-date\");\n              var j = b.getAttribute(\"data-date\");\n              var K = n(I);\n              var J = n(j);\n              w = Math.min(K, J);\n              A = Math.max(K, J);\n              return false;\n            }\n          });\n        }\n      }\n\n      for (var z = 0; z < d; z++) {\n        var g = p[z];\n\n        if (H && this.tableRows > 1) {\n          var y = parseInt(b.getAttribute(\"data-view\"));\n          var l = p.length / h.tableRows;\n          var o = (-1 + y) * l;\n          c = p[o];\n          g = p[o];\n        }\n\n        var c = g.cells;\n\n        for (var x = f; x < c.length - e; x++) {\n          if (c[x].getAttribute(\"data-view\") !== v) {\n            continue;\n          }\n\n          c[x].removeAttribute(\"data-selected\");\n\n          if (!s && c[x].getAttribute(\"data-end-date\")) {\n            continue;\n          }\n\n          var G = c[x].getAttribute(\"data-date\");\n          var D = n(G).valueOf();\n\n          if (w <= D && D <= A) {\n            c[x].setAttribute(\"data-selected\", \"true\");\n          }\n        }\n      }\n\n      h._updateCellsSelection();\n    },\n    findCell: function (s, p) {\n      var k = this;\n      var l = null;\n\n      if (!k._tableOffset) {\n        var c = k.schedulercontent.coord();\n        k._tableOffset = c;\n      }\n\n      var g = k._tableOffset;\n      var e = g.top;\n      var n = g.left;\n\n      if (p < e) {\n        return null;\n      }\n\n      if (s < n) {\n        return null;\n      }\n\n      if (p > e + k._hostHeight) {\n        return null;\n      }\n\n      if (s > n + k._hostWidth) {\n        return null;\n      }\n\n      var q = false;\n      var r = k.rows;\n      var o = k._views[k._view];\n      var t = o.type;\n      var D = 0;\n      var m = k.vScrollInstance.value;\n      var u = k.hScrollInstance.value;\n\n      for (var B = 0; B < r.length; B++) {\n        if (q) {\n          break;\n        }\n\n        var h = r[B];\n        var d = h.cells;\n        var z = false;\n\n        if (B == 0 && t == \"dayView\" || t == \"weekView\") {\n          z = k.showAllDayRow;\n\n          if (o.timeRuler && (t === \"dayView\" || t === \"weekView\")) {\n            if (o.timeRuler.showAllDayRow != undefined) {\n              z = o.timeRuler.showAllDayRow;\n            }\n          }\n\n          if (z) {\n            D = k._allDayRowFullHeight;\n          }\n        }\n\n        for (var C = 0; C < d.length; C++) {\n          var b = d[C];\n\n          if (C == 0 && b.getAttribute(\"data-time-slot\")) {\n            continue;\n          }\n\n          if (!b._left) {\n            var f = b.offsetLeft + n;\n            var v = b.offsetTop + e;\n            var A = b.offsetWidth;\n            var w = b.offsetHeight;\n            b._left = f;\n            b._top = v;\n            b._width = A;\n            b._height = w;\n          } else {\n            var f = b._left;\n            var v = b._top;\n            var A = b._width;\n            var w = b._height;\n          }\n\n          b._left = f;\n          b._top = v;\n          b._width = A;\n          b._height = w;\n\n          if (A === 0 || w === 0) {\n            continue;\n          }\n\n          if (!k.rtl) {\n            f -= u;\n          } else {\n            if (k.hScrollInstance.element.style.visibility != \"hidden\") {\n              f -= k.hScrollInstance.max - u;\n            }\n          }\n\n          v -= m;\n\n          if (B == 0 && z) {\n            v += m;\n          }\n\n          if (v <= p && p < v + w) {\n            if (f <= s && s < f + A) {\n              l = b;\n              q = true;\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      }\n\n      return l;\n    },\n    _removeFeedbackAndStopResize: function () {\n      var d = this;\n\n      if (!d.feedback) {\n        return;\n      }\n\n      d.feedback.remove();\n      d.feedback = null;\n      d.pinnedfeedback.remove();\n      d.pinnedfeedback = null;\n\n      if (d.feedbacks) {\n        for (var c = 0; c < d.feedbacks.length; c++) {\n          d.feedbacks[c].remove();\n        }\n      }\n\n      d._resizeDays = 0;\n      d._resizeStep = 0;\n      d._lastX = null;\n      d.feedbacks = new Array();\n      d.leftResize = false;\n      d.rightResize = false;\n      d.topResize = false;\n      d.bottomResize = false;\n      d.overlay.hide();\n      d.resizing = false;\n      d.resizeFrom = null;\n      d._dragCell = null;\n      d._dragStartCell = null;\n      d.resizeTo = null;\n      d.dragOrResize = false;\n      d.isMouseDown = false;\n\n      if (d.selectedJQXAppointment) {\n        var b = a('[data-key=\"' + d.selectedJQXAppointment.id + '\"]');\n        b.removeClass(d.toTP(\"jqx-scheduler-feedback-appointment jqx-disableselect\"));\n      }\n\n      if (d.openedMonthCellPopup) {\n        d.openedMonthCellPopup.remove();\n      }\n    },\n    _saveChangesAfterDragOrResize: function (e, b, r, m) {\n      var l = this;\n\n      if (e === false) {\n        if (!b.isException()) {\n          if (!b.rootAppointment.recurrenceException) {\n            b.rootAppointment.recurrenceException = new Array();\n          }\n\n          if (b.rootAppointment != null) {\n            b.rootAppointment.exceptions.push(b);\n            b.rootAppointment.recurrenceException.push(b.occurrenceFrom);\n          } else {\n            b.exceptions.push(b);\n            b.recurrenceException.push(b.occurrenceFrom);\n          }\n        } else {\n          var d = b.rootAppointment ? b.rootAppointment.exceptions : b.exceptions;\n\n          for (var h = 0; h < d.length; h++) {\n            if (d[h].occurrenceFrom.equals(b.occurrenceFrom)) {\n              d[h] = b;\n              break;\n            }\n          }\n        }\n      } else {\n        if (e === true) {\n          if (b.isException()) {\n            var d = b.rootAppointment ? b.rootAppointment.exceptions : b.exceptions;\n\n            for (var h = 0; h < d.length; h++) {\n              if (d[h].occurrenceFrom.equals(b.occurrenceFrom)) {\n                for (var g = 0; g < b.rootAppointment.recurrenceException.length; g++) {\n                  if (b.rootAppointment.recurrenceException[g].equals(d[h].occurrenceFrom)) {\n                    var q = b.from;\n                    var f = new a.jqx.date(d[h].occurrenceFrom.year(), d[h].occurrenceFrom.month(), d[h].occurrenceFrom.day(), b.from.hour(), b.from.minute(), b.from.second());\n                    b.rootAppointment.recurrenceException[g] = f;\n                    break;\n                  }\n                }\n\n                d[h] = b;\n                var q = b.from;\n                var f = new a.jqx.date(d[h].occurrenceFrom.year(), d[h].occurrenceFrom.month(), d[h].occurrenceFrom.day(), b.from.hour(), b.from.minute(), b.from.second());\n                d[h].occurrenceFrom = f;\n                break;\n              }\n            }\n          }\n\n          if (b.rootAppointment != null) {\n            b.rootAppointment.recurrencePattern = b.rootAppointment.recurrencePattern.createNewPattern();\n            var p = b.rootAppointment.from;\n            var n = b.rootAppointment.duration();\n            var c = b.rootAppointment.recurrencePattern.freq;\n            var f = null;\n\n            switch (c) {\n              case \"daily\":\n                f = new a.jqx.date(p.year(), p.month(), p.day(), b.from.hour(), b.from.minute(), b.from.second());\n                break;\n\n              case \"weekly\":\n                f = new a.jqx.date(p.year(), p.month(), p.day(), b.from.hour(), b.from.minute(), b.from.second());\n                break;\n\n              case \"monthly\":\n                f = new a.jqx.date(p.year(), p.month(), p.day(), b.from.hour(), b.from.minute(), b.from.second());\n                break;\n\n              case \"yearly\":\n                f = new a.jqx.date(p.year(), p.month(), p.day(), b.from.hour(), b.from.minute(), b.from.second());\n                break;\n            }\n\n            if (m) {\n              b.rootAppointment.from = p;\n              b.rootAppointment.to = p.add(b.duration());\n            } else {\n              b.rootAppointment.from = f;\n              b.rootAppointment.to = f.add(n);\n            }\n\n            b.rootAppointment.allDay = b.allDay;\n            b.rootAppointment.resourceId = b.resourceId;\n            b.rootAppointment.color = b.color;\n            b.rootAppointment.borderColor = b.borderColor;\n            b.rootAppointment.background = b.background;\n            b.rootAppointment.timezone = b.timezone;\n            b.rootAppointment.subject = b.subject;\n            b.rootAppointment.description = b.description;\n            b.rootAppointment.location = b.location;\n            b.rootAppointment.category = b.category;\n            b.rootAppointment.status = b.status;\n\n            if (!l.resizing) {\n              b.rootAppointment.recurrencePattern.setFrom(f);\n            } else {\n              b.rootAppointment.recurrencePattern.setFrom(p);\n            }\n          } else {\n            b.recurrencePattern = b.recurrencePattern.createNewPattern();\n            b.recurrencePattern.setFrom(b.from);\n          }\n\n          var o = a(r).attr(\"data-view\");\n\n          var k = l._resources[parseInt(o) - 1];\n\n          if (k != null) {\n            if (b.rootAppointment != null) {\n              b.rootAppointment.resourceId = k;\n            } else {\n              b.resourceId = k;\n            }\n          }\n        }\n      }\n    },\n    _handleMouseUp: function (k, i, g) {\n      var f = this;\n      clearInterval(f._verticalIntervalDragVelocity);\n      clearInterval(f._horizontalIntervalDragVelocity);\n      clearInterval(f._intervalDrag);\n      clearInterval(f._horizontalIntervalDrag);\n      var b = k;\n      var j = false;\n\n      if (!g) {\n        if (f._dragStartCell == i) {\n          j = true;\n        }\n      } else {\n        if (f.resizeTo) {\n          if (b.to.equals(f.resizeTo)) {\n            j = true;\n          }\n        } else {\n          if (f.resizeFrom) {\n            if (b.from.equals(f.resizeFrom)) {\n              j = true;\n            }\n          }\n        }\n      }\n\n      if (j) {\n        var h = a('[data-key=\"' + k.id + '\"]');\n        h.removeClass(f.toTP(\"jqx-scheduler-feedback-appointment jqx-disableselect\"));\n\n        f._removeFeedbackAndStopResize();\n\n        return;\n      }\n\n      var d = b.duration();\n      var c = b.duration().days() >= 1 || b.allDay;\n\n      var e = function (t, q) {\n        if (q.allDay || c) {\n          var w = f.getMaxAllDayAppointments(f.appointmentsToRender);\n        }\n\n        if (g) {\n          if (f.resizeTo) {\n            if (f.resizeTo > f.max) {\n              f.resizeTo = f.max;\n            }\n\n            if (f.resizeTo < f.min) {\n              f.resizeTo = f.min;\n            }\n\n            q.to = f.resizeTo;\n          } else {\n            if (f.resizeFrom) {\n              if (f.resizeFrom > f.max) {\n                f.resizeFrom = f.max;\n              }\n\n              if (f.resizeFrom < f.min) {\n                f.resizeFrom = f.min;\n              }\n\n              q.from = f.resizeFrom;\n            }\n          }\n\n          if (q.from.hour() == 0 && q.from.minute() == 0 && q.to.hour() == 23 && q.to.minute() == 59) {\n            q.allDay = true;\n          }\n        } else {\n          var x = f._views[f._view].type;\n          var u = f._views[f._view];\n          var C = a(i).attr(\"data-date\");\n          var D = a(i).attr(\"data-end-date\") != null;\n          var o = new a.jqx.date(C, f.timeZone);\n\n          if (o < f.min) {\n            o = f.min;\n          }\n\n          if (o > f.max) {\n            o = f.max;\n          }\n\n          if (f.rtl && c && D) {\n            q.to = a.jqx.scheduler.utilities.getEndOfDay(o);\n          } else {\n            if (f.rtl && (x == \"monthView\" || x == \"timelineMonthView\")) {\n              q.to = a.jqx.scheduler.utilities.getEndOfDay(o);\n            } else {\n              if (f.rtl && (x == \"timelineDayView\" || x == \"timelineWeekView\")) {\n                var n = f.getMinutesPerScale();\n                q.to = o.addMinutes(n);\n              } else {\n                q.from = o;\n              }\n            }\n          }\n\n          if (x === \"dayView\" || x === \"weekView\") {\n            if (!c && !D) {\n              q.to = o.add(d);\n              q.allDay = false;\n            } else {\n              if (!c && D) {\n                q.to = a.jqx.scheduler.utilities.getEndOfDay(o);\n                q.allDay = true;\n              } else {\n                if (c && D && !f.rtl) {\n                  q.to = o.add(d);\n\n                  if (q.from.hour() == 0 && q.from.minute() == 0 && q.to.hour() == 23 && q.to.minute() == 59) {\n                    q.allDay = true;\n                  }\n                } else {\n                  if (c && D && f.rtl) {\n                    q.from = a.jqx.scheduler.utilities.getStartOfDay(q.to.add(new a.jqx.timeSpan(-d)));\n\n                    if (q.from.hour() == 0 && q.from.minute() == 0 && q.to.hour() == 23 && q.to.minute() == 59) {\n                      q.allDay = true;\n                    }\n                  } else {\n                    if (c && !D) {\n                      var A = 30;\n                      var E = u.timeRuler && u.timeRuler.scale;\n\n                      switch (E) {\n                        case \"sixtyMinutes\":\n                        case \"hour\":\n                          A = 60;\n                          break;\n\n                        case \"fifteenMinutes\":\n                        case \"quarterHour\":\n                          A = 15;\n                          break;\n\n                        case \"tenMinutes\":\n                          A = 10;\n                          break;\n\n                        case \"fiveMinutes\":\n                          A = 5;\n                          break;\n                      }\n\n                      q.to = o.addMinutes(A);\n                      q.allDay = false;\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (x === \"monthView\") {\n              if (!f.rtl) {\n                q.to = o.add(d);\n              } else {\n                q.from = a.jqx.scheduler.utilities.getStartOfDay(q.to.add(new a.jqx.timeSpan(-d)));\n              }\n            } else {\n              if (x === \"timelineDayView\" || x === \"timelineWeekView\" || x === \"timelineMonthView\") {\n                if (!f.rtl) {\n                  q.to = o.add(d);\n                } else {\n                  if (x == \"timelineMonthView\") {\n                    q.from = a.jqx.scheduler.utilities.getStartOfDay(q.to.add(new a.jqx.timeSpan(-d)));\n                  } else {\n                    var n = f.getMinutesPerScale();\n                    q.from = o.addMinutes(n).add(new a.jqx.timeSpan(-d));\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        f._saveChangesAfterDragOrResize(t, q, i, f.resizing);\n\n        var x = a(i).attr(\"data-view\");\n\n        var y = f._resources[parseInt(x) - 1];\n\n        if (y != null) {\n          q.resourceId = y;\n        }\n\n        f.resizing = false;\n        f.resizeFrom = null;\n        f._dragCell = null;\n        f.resizeTo = null;\n        var p = {};\n        var v = {};\n\n        for (var F in f.appointmentDataFields) {\n          var m = f.appointmentDataFields[F];\n          var z = q[F];\n          p[F] = z;\n\n          if (F == \"from\" || F == \"to\") {\n            z = z.toDate();\n          }\n\n          v[m] = z;\n        }\n\n        p.jqxAppointment = q;\n        p.originalData = v;\n        q.boundAppointment = p;\n\n        f._raiseEvent(\"appointmentChange\", {\n          appointment: q.boundAppointment\n        });\n\n        f.changedAppointments[q.id] = {\n          type: \"Update\",\n          appointment: q.boundAppointment\n        };\n        f.table.find(\".jqx-icon-arrow-down\").hide();\n\n        if (f._views[f._view].type == \"monthView\" && f._views[f._view].monthRowAutoHeight) {\n          f._renderrows();\n        } else {\n          if ((f._views[f._view].type == \"weekView\" || f._views[f._view].type == \"dayView\") && (q.allDay || c)) {\n            if (f.tableRows > 1) {\n              f._renderrows();\n            } else {\n              var s = f.getViewStart();\n              var r = a.jqx.scheduler.utilities.getEndOfDay(f.getViewEnd());\n\n              f._prepareAppointmentsInView(s, r);\n\n              f._renderAppointments(s, r);\n\n              var l = f.getMaxAllDayAppointments(f.appointmentsToRender);\n\n              if (l != w) {\n                var B = l * (f._defaultRowHeight - 2);\n\n                if (f.isTouchDevice()) {\n                  B = Math.max(22 + f._defaultRowHeight, 17 + B);\n                } else {\n                  B = Math.max(3 * f._defaultRowHeight, 17 + B);\n                }\n\n                if (f.tableRows == 1) {\n                  a(a(f.table[0].rows[0]).find(\"td\")).css(\"height\", B + \"px\");\n                } else {\n                  a(a(f.table[0].rows[1]).find(\"td\")).css(\"height\", B + \"px\");\n                }\n\n                a(f.oldRow).find(\"td\").css(\"height\", B + \"px\");\n                a(f.pinnedTableRow).find(\"td\").css(\"height\", B + \"px\");\n                f.pinnedtable.height(B);\n\n                f._updateScrollbars(f._hostHeight ? f._hostHeight : f.host.height());\n              }\n            }\n          } else {\n            var s = f.getViewStart();\n            var r = a.jqx.scheduler.utilities.getEndOfDay(f.getViewEnd());\n\n            f._prepareAppointmentsInView(s, r);\n\n            f._renderAppointments(s, r);\n          }\n        }\n\n        f._removeFeedbackAndStopResize();\n      };\n\n      if (b.isRecurrentAppointment()) {\n        e(false, b);\n      } else {\n        e(null, b);\n      }\n    },\n    _handleDayWeekViewResize: function (E, D, h, F, n) {\n      var C = this;\n      var f = C._views[C._view].type;\n      var B = C._views[C._view];\n      var r = n.duration().days() >= 1 || n.allDay;\n\n      if (!r && !h.getAttribute(\"data-end-date\")) {\n        var e = function (i) {\n          if (i < 10) {\n            return false;\n          }\n\n          return true;\n        };\n\n        var j = C.findCell(C.feedback.coord().left, D);\n\n        if (C.topResize) {\n          if (!C._lastResizeY) {\n            C._lastResizeY = C.mouseDownPosition.top;\n          }\n\n          if (D > C._lastResizeY + a(h).height() / 2) {\n            var v = C.selectedAppointmentTableBounds.height + C.selectedAppointmentTableBounds.top - F.top - a(h).height() - 3;\n\n            if (e(v)) {\n              C.feedback.css(\"top\", 2 + F.top + a(h).height());\n              C.feedback.height(v);\n              C._lastResizeY = C.feedback.coord().top;\n              var M = new a.jqx.date(j.getAttribute(\"data-date\"), C.timeZone);\n              C.resizeFrom = M.addMinutes(C.getMinutesPerScale());\n            }\n          } else {\n            if (D < C._lastResizeY - a(h).height() / 2) {\n              var v = C.selectedAppointmentTableBounds.height + C.selectedAppointmentTableBounds.top - F.top - 3;\n\n              if (e(v)) {\n                C.feedback.css(\"top\", 2 + F.top);\n                C.feedback.height(v);\n                C._lastResizeY = C.feedback.coord().top;\n                C.resizeFrom = new a.jqx.date(j.getAttribute(\"data-date\"), C.timeZone);\n              }\n            }\n          }\n        } else {\n          if (C.bottomResize) {\n            if (!C._lastResizeY) {\n              C._lastResizeY = C.mouseDownPosition.top;\n            }\n\n            if (D > C._lastResizeY + a(h).height() / 2) {\n              var G = -5 + a(h).height() + F.top - C.selectedAppointmentTableBounds.height - C.selectedAppointmentTableBounds.top;\n              var v = C.selectedAppointmentTableBounds.height + G;\n\n              if (e(v)) {\n                C.feedback.height(v);\n                C._lastResizeY = C.selectedAppointmentTableBounds.height + G + C.feedback.coord().top;\n                C.resizeTo = new a.jqx.date(j.getAttribute(\"data-date\"), C.timeZone).addMinutes(C.getMinutesPerScale());\n              }\n            } else {\n              if (D < C._lastResizeY - a(h).height() / 2) {\n                var G = -5 + F.top - C.selectedAppointmentTableBounds.height - C.selectedAppointmentTableBounds.top;\n                var v = C.selectedAppointmentTableBounds.height + G;\n\n                if (e(v)) {\n                  C.feedback.height(v);\n                  C._lastResizeY = C.selectedAppointmentTableBounds.height + G + C.feedback.coord().top;\n                  C.resizeTo = new a.jqx.date(j.getAttribute(\"data-date\"), C.timeZone);\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var p = function (i) {\n          if (i < C.cellWidth - 10) {\n            return false;\n          }\n\n          return true;\n        };\n\n        var A = B.appointmentsRenderMode && B.appointmentsRenderMode == \"exactTime\";\n\n        if (n.allDay || !A) {\n          if (C.leftResize) {\n            if (!C._lastResizeX) {\n              C._lastResizeX = C.mouseDownPosition.left;\n            }\n\n            if (E > C._lastResizeX + a(h).width() / 2) {\n              var d = C.selectedAppointmentTableBounds.width + C.selectedAppointmentTableBounds.left - F.left - C.cellWidth;\n\n              if (p(d)) {\n                C.feedback.css(\"left\", 5 + F.left + C.cellWidth);\n                C.feedback.width(d - 5);\n                C.feedback.hide();\n                C.pinnedfeedback.css(\"left\", 5 + F.left + C.cellWidth);\n                C.pinnedfeedback.width(d - 5);\n                C._lastResizeX = C.pinnedfeedback.coord().left;\n\n                if (!C.rtl) {\n                  C.resizeFrom = new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone).addDays(1);\n                } else {\n                  C.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone)).addDays(-1);\n                }\n              }\n            } else {\n              if (E < C._lastResizeX - a(h).width() / 2) {\n                var d = C.selectedAppointmentTableBounds.width + C.selectedAppointmentTableBounds.left - F.left;\n\n                if (p(d)) {\n                  C.feedback.css(\"left\", 5 + F.left);\n                  C.feedback.width(d - 5);\n                  C.feedback.hide();\n                  C.pinnedfeedback.css(\"left\", 5 + F.left);\n                  C.pinnedfeedback.width(d - 5);\n                  C._lastResizeX = C.pinnedfeedback.coord().left;\n\n                  if (!C.rtl) {\n                    C.resizeFrom = new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone);\n                  } else {\n                    C.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone));\n                  }\n                }\n              }\n            }\n          } else {\n            if (C.rightResize) {\n              if (!C._lastResizeX) {\n                C._lastResizeX = C.selectedAppointmentTableBounds.width + C.selectedAppointmentTableBounds.left;\n              }\n\n              var m = a(h).width() / 2;\n\n              if (E > C._lastResizeX + m) {\n                var G = a(h).width() + F.left - C.selectedAppointmentTableBounds.width - C.selectedAppointmentTableBounds.left;\n                var d = C.selectedAppointmentTableBounds.width + G;\n\n                if (p(d)) {\n                  C.feedback.hide();\n                  C.feedback.width(d - 6);\n                  C.feedback.css(\"left\", 5 + F.left);\n                  C.pinnedfeedback.width(d - 6);\n                  C._lastResizeX = C.selectedAppointmentTableBounds.width + G + C.pinnedfeedback.coord().left;\n\n                  if (!C.rtl) {\n                    C.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone));\n                  } else {\n                    C.resizeFrom = new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone);\n                  }\n                }\n              } else {\n                if (E < C._lastResizeX - m) {\n                  var G = F.left - C.selectedAppointmentTableBounds.width - C.selectedAppointmentTableBounds.left;\n                  var d = C.selectedAppointmentTableBounds.width + G;\n\n                  if (p(d)) {\n                    C.feedback.hide();\n                    C.feedback.css(\"left\", 5 + F.left);\n                    C.feedback.width(d - 6);\n                    C.pinnedfeedback.width(d - 6);\n                    C._lastResizeX = C.selectedAppointmentTableBounds.width + G + C.pinnedfeedback.coord().left;\n\n                    if (!C.rtl) {\n                      C.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone).addDays(-1));\n                    } else {\n                      C.resizeFrom = new a.jqx.date(h.getAttribute(\"data-date\"), C.timeZone).addDays(1);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          var t = new Array();\n          var b = new Array();\n          var K = -1;\n          var J = -1;\n          var k = this.host.coord().left;\n          var Q = 0;\n          var z = C.hScrollInstance.value;\n\n          if (C.rtl) {\n            var z = C.hScrollInstance.max - C.hScrollInstance.value;\n          }\n\n          if (C.hScrollBar[0].style.visibility == \"hidden\") {\n            z = 0;\n          }\n\n          var O = E + z - k;\n          k = 0;\n\n          for (var L = 0; L < this.columns.records.length; L++) {\n            if (this.columns.records[L].timeColumn) {\n              if (!C.rtl) {\n                k += this.columns.records[L].width;\n                Q++;\n              }\n            }\n          }\n\n          var s = C.getViewStart();\n          var H = C.getViewEnd();\n\n          for (var L = 0; L < this._getColumnsLengthPerView(); L++) {\n            var c = this.columns.records[L + Q].width;\n\n            if (C.leftResize) {\n              if (!C.rtl) {\n                t.push(k);\n                b.push(s.addDays(L));\n\n                if (n.from.hour() != 0 || n.from.hour() == 0 && n.from.minute() != 0) {\n                  if (k < C.selectedAppointmentTableBounds.left && k + c > C.selectedAppointmentTableBounds.left) {\n                    t.push(C.selectedAppointmentTableBounds.left);\n                    b.push(n.from);\n                    K = t.length - 1;\n                  }\n                }\n\n                if (n.to.hour() != 23 || n.to.hour() == 23 && n.to.minute() != 59) {\n                  if (k < C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width && k + c > C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width) {\n                    t.push(C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width + 8);\n                    b.push(n.to);\n                    J = t.length - 1;\n                  }\n                }\n              }\n\n              if (C.rtl) {\n                t.push(k);\n                b.push(H.addDays(-L - 1));\n\n                if (n.from.hour() != 0 || n.from.hour() == 0 && n.from.minute() != 0) {\n                  if (k < C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width && k + c > C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width) {\n                    t.push(C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width + 8);\n                    b.push(n.from);\n                    K = t.length - 1;\n                  }\n                }\n\n                if (n.to.hour() != 23 || n.to.hour() == 23 && n.to.minute() != 59) {\n                  if (k < C.selectedAppointmentTableBounds.left && k + c > C.selectedAppointmentTableBounds.left) {\n                    t.push(C.selectedAppointmentTableBounds.left);\n                    b.push(n.to);\n                    J = t.length - 1;\n                  }\n                }\n              }\n\n              k += c;\n            } else {\n              if (!C.rtl) {\n                if (n.from.hour() != 0 || n.from.hour() == 0 && n.from.minute() != 0) {\n                  if (k < C.selectedAppointmentTableBounds.left && k + c > C.selectedAppointmentTableBounds.left) {\n                    t.push(C.selectedAppointmentTableBounds.left);\n                    b.push(n.from);\n                    K = t.length - 1;\n                  }\n                }\n\n                if (n.to.hour() != 23 || n.to.hour() == 23 && n.to.minute() != 59) {\n                  if (k < C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width && k + c > C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width) {\n                    t.push(C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width + 8);\n                    b.push(n.to);\n                    J = t.length - 1;\n                  }\n                }\n\n                k += c;\n                t.push(k);\n                b.push(s.addDays(L));\n              } else {\n                if (n.from.hour() != 0 || n.from.hour() == 0 && n.from.minute() != 0) {\n                  if (k < C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width && k + c > C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width) {\n                    t.push(C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width + 8);\n                    b.push(n.from);\n                    K = t.length - 1;\n                  }\n                }\n\n                if (n.to.hour() != 23 || n.to.hour() == 23 && n.to.minute() != 59) {\n                  if (k < C.selectedAppointmentTableBounds.left && k + c > C.selectedAppointmentTableBounds.left) {\n                    t.push(C.selectedAppointmentTableBounds.left);\n                    b.push(n.to);\n                    J = t.length - 1;\n                  }\n                }\n\n                k += c;\n                t.push(k);\n                b.push(H.addDays(-L - 1));\n              }\n            }\n          }\n\n          if (C.leftResize) {\n            for (var L = 0; L < t.length; L++) {\n              var F = t[L];\n              var N = t[L + 1];\n\n              if (!N) {\n                N = F;\n              }\n\n              var g = L < t.length - 1 ? O >= F && O <= N : O >= F;\n\n              if (g) {\n                var c = -F + C.selectedAppointmentTableBounds.left + C.selectedAppointmentTableBounds.width;\n                var q = C.pinnedfeedback.width();\n                var I = C.pinnedfeedback.css(\"left\");\n                var l = C.resizeTo;\n                var w = C.resizeFrom;\n\n                if (c > 0) {\n                  C.pinnedfeedback.css(\"left\", F);\n                  C.pinnedfeedback.width(c);\n\n                  if (L == K) {\n                    if (!C.rtl) {\n                      C.resizeFrom = n.from;\n                    } else {\n                      C.resizeTo = n.from;\n                    }\n                  } else {\n                    if (L == J) {\n                      if (!C.rtl) {\n                        C.resizeFrom = n.to;\n                      } else {\n                        C.resizeTo = n.to;\n                      }\n                    } else {\n                      if (!C.rtl) {\n                        C.resizeFrom = b[L];\n                      } else {\n                        C.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(b[L]);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n\n            var o = C.resizeFrom;\n            var P = C.resizeTo;\n\n            if (C.rtl) {\n              o = n.from;\n            } else {\n              P = n.to;\n            }\n\n            var u = new a.jqx.timeSpan(10000 * (P - o));\n\n            if (u.days() < 1) {\n              C.pinnedfeedback.css(\"left\", I);\n              C.pinnedfeedback.width(q);\n              C.resizeFrom = w;\n              C.resizeTo = l;\n            }\n          } else {\n            if (C.rightResize) {\n              for (var L = 0; L < t.length; L++) {\n                var F = t[L];\n                var N = t[L + 1];\n\n                if (!N) {\n                  N = F;\n                }\n\n                var g = L < t.length - 1 ? E >= F - this.cellWidth / 3 && E <= N - this.cellWidth / 3 : E >= F - this.cellWidth / 3;\n\n                if (g) {\n                  var c = F - C.selectedAppointmentTableBounds.left - 15;\n                  var q = C.pinnedfeedback.width();\n                  C.pinnedfeedback.width(c);\n                  var l = C.resizeTo;\n                  var w = C.resizeFrom;\n\n                  if (L == K) {\n                    if (!C.rtl) {\n                      C.resizeTo = n.from;\n                    } else {\n                      C.resizeFrom = n.from;\n                    }\n\n                    var c = F - C.selectedAppointmentTableBounds.left - 9;\n                    C.pinnedfeedback.width(c);\n                    break;\n                  } else {\n                    if (L == J) {\n                      if (!C.rtl) {\n                        C.resizeTo = n.to;\n                      } else {\n                        C.resizeFrom = n.to;\n                      }\n\n                      var c = F - C.selectedAppointmentTableBounds.left - 9;\n                      C.pinnedfeedback.width(c);\n                      break;\n                    } else {\n                      if (!C.rtl) {\n                        C.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(b[L]);\n                      } else {\n                        C.resizeFrom = b[L];\n                      }\n\n                      break;\n                    }\n                  }\n                }\n              }\n\n              var o = C.resizeFrom;\n              var P = C.resizeTo;\n\n              if (!C.rtl) {\n                o = n.from;\n              } else {\n                P = n.to;\n              }\n\n              var u = new a.jqx.timeSpan(10000 * (P - o));\n\n              if (u.days() < 1) {\n                C.pinnedfeedback.width(q);\n                C.resizeFrom = w;\n                C.resizeTo = l;\n              }\n            }\n          }\n        }\n      }\n    },\n    _handleTimelineMonthViewResize: function (t, s, q, M, k) {\n      var p = this;\n      var w = p._views[p._view].type;\n      var r = p._views[p._view];\n\n      var D = function (i) {\n        if (i < 10) {\n          return false;\n        }\n\n        return true;\n      };\n\n      var E = p.findCell(t, p.feedback.coord().top);\n\n      if (k.allDay) {\n        if (p.leftResize) {\n          if (!p._lastResizeX) {\n            p._lastResizeX = p.mouseDownPosition.left;\n          }\n\n          if (t > p._lastResizeX + a(q).width() / 2) {\n            var v = p.selectedAppointmentTableBounds.width + p.selectedAppointmentTableBounds.left - M.left - a(q).width();\n\n            if (D(v)) {\n              p.feedback.css(\"left\", M.left + a(q).width());\n              p.feedback.width(v);\n              p._lastResizeX = p.feedback.coord().left;\n\n              if (!p.rtl) {\n                p.resizeFrom = new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone).addDays(1);\n              } else {\n                p.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone).addDays(-1));\n              }\n            }\n          } else {\n            if (t < p._lastResizeX - a(q).width() / 2) {\n              var v = p.selectedAppointmentTableBounds.width + p.selectedAppointmentTableBounds.left - M.left;\n\n              if (D(v)) {\n                p.feedback.css(\"left\", M.left);\n                p.feedback.width(v);\n                p._lastResizeX = p.feedback.coord().left;\n\n                if (!p.rtl) {\n                  p.resizeFrom = new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone);\n                } else {\n                  p.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone));\n                }\n              }\n            }\n          }\n        } else {\n          if (p.rightResize) {\n            if (!p._lastResizeX) {\n              p._lastResizeX = p.mouseDownPosition.left;\n            }\n\n            if (t > p._lastResizeX + a(q).width() / 2) {\n              var n = a(q).width() + M.left - p.selectedAppointmentTableBounds.width - p.selectedAppointmentTableBounds.left;\n              var v = p.selectedAppointmentTableBounds.width + n - 5;\n\n              if (D(v)) {\n                p.feedback.width(v);\n                p._lastResizeX = p.selectedAppointmentTableBounds.width + n + p.feedback.coord().left;\n\n                if (!p.rtl) {\n                  p.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone));\n                } else {\n                  p.resizeFrom = new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone);\n                }\n              }\n            } else {\n              if (t < p._lastResizeX - a(q).width() / 2) {\n                var n = M.left - p.selectedAppointmentTableBounds.width - p.selectedAppointmentTableBounds.left;\n                var v = p.selectedAppointmentTableBounds.width + n - 5;\n\n                if (D(v)) {\n                  p.feedback.width(v);\n                  p._lastResizeX = p.selectedAppointmentTableBounds.width + n + p.feedback.coord().left;\n\n                  if (!p.rtl) {\n                    p.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone).addDays(-1));\n                  } else {\n                    p.resizeFrom = new a.jqx.date(E.getAttribute(\"data-date\"), p.timeZone).addDays(1);\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var o = new Array();\n        var L = new Array();\n        var u = -1;\n        var A = -1;\n        var j = this.host.coord().left;\n        var h = 0;\n\n        for (var J = 0; J < this.columns.records.length; J++) {\n          if (this.columns.records[J].timeColumn) {\n            j += this.columns.records[J].width;\n            h++;\n          }\n        }\n\n        var z = p.hScrollInstance.value;\n\n        if (p.rtl) {\n          var z = p.hScrollInstance.max - p.hScrollInstance.value;\n        }\n\n        if (p.hScrollBar[0].style.visibility == \"hidden\") {\n          z = 0;\n        }\n\n        var d = t + z - j;\n        j = 0;\n        var m = p.getViewStart();\n        var l = p.getViewEnd();\n        var g = this._getColumnsLengthPerView() - 1;\n\n        for (var J = 0; J < this._getColumnsLengthPerView(); J++) {\n          var C = this.columns.records[J + h].width;\n\n          if (p.leftResize) {\n            o.push(j);\n\n            if (!p.rtl) {\n              L.push(m.addDays(J));\n            } else {\n              L.push(l.addDays(-J));\n            }\n\n            if (k.from.hour() != 0 || k.from.hour() == 0 && k.from.minute() != 0) {\n              if (j < p.selectedAppointmentTableBounds.left && j + C > p.selectedAppointmentTableBounds.left) {\n                o.push(p.selectedAppointmentTableBounds.left);\n                L.push(k.from);\n                u = o.length - 1;\n              }\n            }\n\n            if (k.to.hour() != 23 || k.to.hour() == 23 && k.to.minute() != 59) {\n              if (j < p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width && j + C > p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width) {\n                o.push(p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width + 8);\n                L.push(k.to);\n                A = o.length - 1;\n              }\n            }\n\n            j += C;\n          } else {\n            if (k.from.hour() != 0 || k.from.hour() == 0 && k.from.minute() != 0) {\n              if (j < p.selectedAppointmentTableBounds.left && j + C > p.selectedAppointmentTableBounds.left) {\n                o.push(p.selectedAppointmentTableBounds.left);\n                L.push(k.from);\n                u = o.length - 1;\n              }\n            }\n\n            if (k.to.hour() != 23 || k.to.hour() == 23 && k.to.minute() != 59) {\n              if (j < p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width && j + C > p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width) {\n                o.push(p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width);\n                L.push(k.to);\n                A = o.length - 1;\n              }\n            }\n\n            j += C;\n            o.push(j);\n\n            if (!p.rtl) {\n              L.push(m.addDays(J));\n            } else {\n              L.push(l.addDays(-J - 1));\n            }\n          }\n        }\n\n        if (p.leftResize) {\n          for (var J = 0; J < o.length; J++) {\n            var c = o[J];\n            var H = o[J + 1];\n\n            if (!H) {\n              H = c;\n            }\n\n            var I = J < o.length - 1 ? d >= c && d <= H : d >= c;\n\n            if (I) {\n              var C = -c + p.selectedAppointmentTableBounds.left + p.selectedAppointmentTableBounds.width;\n              var B = p.feedback.width();\n              var f = p.feedback.css(\"left\");\n              var F = p.resizeTo;\n              var K = p.resizeFrom;\n              p.feedback.css(\"left\", c);\n              p.feedback.width(C);\n\n              if (J == u) {\n                if (!p.rtl) {\n                  p.resizeFrom = k.from;\n                } else {\n                  p.resizeTo = k.from;\n                }\n              } else {\n                if (J == A) {\n                  if (!p.rtl) {\n                    p.resizeFrom = k.to;\n                  } else {\n                    p.resizeTo = k.to;\n                  }\n                } else {\n                  if (!p.rtl) {\n                    p.resizeFrom = L[J];\n                  } else {\n                    p.resizeTo = L[J];\n                  }\n                }\n              }\n            }\n          }\n\n          var G = p.resizeFrom;\n          var e = p.resizeTo;\n\n          if (p.rtl) {\n            G = k.from;\n          } else {\n            e = k.to;\n          }\n\n          var b = new a.jqx.timeSpan(10000 * (e - G));\n\n          if (p.feedback.width() < 20) {\n            p.feedback.css(\"left\", f);\n            p.feedback.width(B);\n            p.resizeFrom = K;\n            p.resizeTo = F;\n          }\n        } else {\n          if (p.rightResize) {\n            for (var J = 0; J < o.length; J++) {\n              var c = o[J];\n              var H = o[J + 1];\n\n              if (!H) {\n                H = c;\n              }\n\n              var I = J < o.length - 1 ? d >= c - this.cellWidth / 3 && d <= H - this.cellWidth / 3 : d >= c - this.cellWidth / 3;\n\n              if (I) {\n                var C = c - p.selectedAppointmentTableBounds.left - 12;\n                var B = p.feedback.width();\n                p.feedback.width(C);\n                var F = p.resizeTo;\n                var K = p.resizeFrom;\n\n                if (J == u) {\n                  if (!p.rtl) {\n                    p.resizeTo = k.from;\n                  } else {\n                    p.resizeFrom = k.from;\n                  }\n\n                  var C = c - p.selectedAppointmentTableBounds.left;\n                  p.feedback.width(C);\n                  break;\n                } else {\n                  if (J == A) {\n                    if (!p.rtl) {\n                      p.resizeTo = k.to;\n                    } else {\n                      p.resizeFrom = k.to;\n                    }\n\n                    var C = c - p.selectedAppointmentTableBounds.left;\n                    p.feedback.width(C);\n                    break;\n                  } else {\n                    if (!p.rtl) {\n                      p.resizeTo = a.jqx.scheduler.utilities.getEndOfDay(L[J]);\n                    } else {\n                      p.resizeFrom = L[J];\n                    }\n\n                    break;\n                  }\n                }\n              }\n            }\n\n            var G = p.resizeFrom;\n            var e = p.resizeTo;\n\n            if (!p.rtl) {\n              G = k.from;\n            } else {\n              e = k.to;\n            }\n\n            var b = new a.jqx.timeSpan(10000 * (e - G));\n\n            if (p.feedback.width() < 20) {\n              p.feedback.width(B);\n              p.resizeFrom = K;\n              p.resizeTo = F;\n            }\n          }\n        }\n      }\n    },\n    _handleMonthViewResize: function (K, I, g, L, r) {\n      var H = this;\n\n      if (!H.selectedJQXAppointment) {\n        return;\n      }\n\n      var f = H._views[H._view].type;\n      var G = H._views[H._view];\n\n      var v = function (i) {\n        if (i < 10) {\n          return false;\n        }\n\n        return true;\n      };\n\n      var s = -5;\n\n      if (H.tableColumns > 1) {\n        s = parseInt(-5 / H.tableColumns);\n      }\n\n      for (var R = 0; R < H.columns.records.length / H.tableColumns; R++) {\n        if (H.columns.records[R].timeColumn) {\n          continue;\n        }\n\n        s += H.columns.records[R].width;\n      }\n\n      var q = H.selectedJQXAppointment.resourceId;\n\n      var k = H._resources.indexOf(q);\n\n      if (H.resources && H.resources.orientation == \"none\") {\n        k = -1;\n      }\n\n      var e = \"0px\";\n\n      if (k != -1 && H.tableRows == 1) {\n        e = s * k + \"px\";\n      }\n\n      if (G.showWeekNumbers) {\n        if (!H.rtl) {\n          e = parseInt(e) + H.columns.records[0].width + \"px\";\n        }\n      }\n\n      var F = g.offsetWidth;\n      var P = g.offsetHeight;\n      var E = 18;\n\n      if (H.isTouchDevice()) {\n        E = 2;\n      }\n\n      for (var R = 0; R < 6; R++) {\n        H.feedbacks[R][0].style.left = e;\n        H.feedbacks[R][0].style.width = s + \"px\";\n        H.feedbacks[R][0].style.display = \"block\";\n        H.feedbacks[R][0].style.top = parseInt(H.rows[R].top) + E + \"px\";\n\n        if (H.tableRows > 1) {\n          H.feedbacks[R][0].style.top = parseInt(H.rows[6 * k + R].top) + E + \"px\";\n        }\n\n        a(H.feedbacks[R][0]).find(\".jqx-scheduler-appointment-resize-indicator\").css(\"visibility\", \"inherit\");\n      }\n\n      var l = H.selectedJQXAppointment.elements;\n      var c = l[0].cells[0].cell;\n      var J = l[l.length - 1];\n      var N = J.lastCellY;\n      var h = J.lastCellX;\n      var n = l[0].cellY;\n      var B = l[0].cellX;\n      var t = parseInt(L.top);\n      var S = parseInt(L.left);\n\n      if (!H.rtl) {\n        if (H.leftResize) {\n          var O = false;\n\n          for (var R = 0; R < 6; R++) {\n            var C = H.feedbacks[R];\n            var A = parseInt(C[0].style.top) - E;\n            var z = parseInt(C[0].style.left);\n\n            if (A < t) {\n              C[0].style.width = s + \"px\";\n\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (o == A) {\n                  C[0].style.top = l[Q].y + \"px\";\n                }\n              }\n            } else {\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (o == A) {\n                  C[0].style.width = l[Q].width + \"px\";\n                  C[0].style.top = l[Q].y + \"px\";\n                }\n              }\n            }\n\n            var u = l[0];\n            var m = parseInt(u.x);\n\n            if (A == n) {\n              C[0].style.left = m + \"px\";\n\n              if (t == n) {\n                C[0].style.left = 1 + L.left + \"px\";\n                C[0].style.width = -1 + u.x + u.width - L.left + \"px\";\n\n                if (G.appointmentsRenderMode == \"exactTime\" && !H.selectedJQXAppointment.allDay) {\n                  var M = H.cellWidth - (u.x - B);\n                  var b = H.host.coord().left;\n\n                  if (K - b >= u.x && K - b <= u.x + M + 2) {\n                    C[0].style.left = m + \"px\";\n                    C[0].style.width = u.width + \"px\";\n                    O = true;\n                  }\n                }\n              } else {\n                if (t > n) {\n                  C[0].style.left = m + \"px\";\n                  C[0].style.width = u.width + \"px\";\n                } else {\n                  if (t < n) {\n                    C[0].style.left = e;\n                    C[0].style.width = u.x + u.width - parseInt(e) + \"px\";\n                  }\n                }\n              }\n            } else {\n              if (A == t) {\n                C[0].style.width = s - L.left + parseInt(e) + \"px\";\n                C[0].style.left = L.left + \"px\";\n              }\n            }\n\n            if (A > N) {\n              C[0].style.display = \"none\";\n            }\n\n            if (A < t) {\n              C[0].style.display = \"none\";\n            }\n\n            if (t >= N) {\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (t > N || t == N && S > h) {\n                  if (o == A) {\n                    C[0].style.display = \"block\";\n                    C[0].style.width = l[Q].width + \"px\";\n                    C[0].style.left = l[Q].x + \"px\";\n                  }\n                } else {\n                  if (t == N && S <= h) {\n                    if (n != N) {\n                      C[0].style.width = l[Q].width - L.left + parseInt(e) + \"px\";\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          var D = new a.jqx.date(g.getAttribute(\"data-date\"), H.timeZone);\n\n          if (D < H.selectedJQXAppointment.to && !O) {\n            H.resizeFrom = D;\n          } else {\n            H.resizeFrom = H.selectedJQXAppointment.from;\n          }\n        } else {\n          if (H.rightResize) {\n            var p = false;\n\n            for (var R = 0; R < 6; R++) {\n              var C = H.feedbacks[R];\n              var A = parseInt(C[0].style.top) - E;\n              var z = parseInt(C[0].style.left);\n\n              if (A < t) {\n                C[0].style.width = s + \"px\";\n              }\n\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (o == A) {\n                  C[0].style.top = l[Q].y + \"px\";\n                }\n              }\n\n              var u = l[0];\n              var m = parseInt(u.x);\n\n              if (A == n) {\n                C[0].style.left = m + \"px\";\n\n                if (t == n) {\n                  if (S >= B) {\n                    C[0].style.width = S + F - m - 5 + \"px\";\n\n                    if (G.appointmentsRenderMode == \"exactTime\" && !H.selectedJQXAppointment.allDay) {\n                      var b = H.host.coord().left;\n\n                      if (K - b >= h && K - b <= u.x + u.width + 15) {\n                        C[0].style.width = u.width + \"px\";\n                        p = true;\n                      }\n                    }\n                  } else {\n                    C[0].style.width = u.width + \"px\";\n                  }\n                } else {\n                  if (t < n) {\n                    C[0].style.left = m + \"px\";\n                    C[0].style.width = u.width + \"px\";\n                  } else {\n                    if (t > n) {\n                      C[0].style.left = m + \"px\";\n                      C[0].style.width = s - m + parseInt(e) + \"px\";\n                    }\n                  }\n                }\n              } else {\n                if (A == t) {\n                  C[0].style.width = S + F - 5 - parseInt(e) + \"px\";\n                }\n              }\n\n              if (A < n) {\n                C[0].style.display = \"none\";\n              }\n\n              if (A > t && A > n) {\n                C[0].style.display = \"none\";\n              }\n\n              if (t <= n) {\n                for (var Q = 0; Q < l.length; Q++) {\n                  var o = l[Q].cellY;\n\n                  if (t < n || t == n && S < B) {\n                    if (o == A) {\n                      C[0].style.display = \"block\";\n                      C[0].style.width = l[Q].width + \"px\";\n                    }\n                  }\n                }\n              }\n            }\n\n            var D = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(g.getAttribute(\"data-date\"), H.timeZone));\n\n            if (D > H.selectedJQXAppointment.from && !p) {\n              H.resizeTo = D;\n            } else {\n              H.resizeTo = H.selectedJQXAppointment.to;\n            }\n          }\n        }\n      } else {\n        if (H.leftResize) {\n          var p = false;\n\n          for (var R = 0; R < 6; R++) {\n            var C = H.feedbacks[R];\n            var A = parseInt(C[0].style.top) - E;\n            var z = parseInt(C[0].style.left);\n\n            if (A < t) {\n              C[0].style.width = s + \"px\";\n            } else {\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (o == A) {\n                  C[0].style.width = l[Q].width + \"px\";\n                  C[0].style.top = l[Q].y + \"px\";\n                }\n              }\n            }\n\n            var u = l[0];\n            var m = parseInt(u.x);\n\n            if (A == n) {\n              C[0].style.left = m + \"px\";\n\n              if (t == n) {\n                C[0].style.left = 1 + L.left + \"px\";\n                C[0].style.width = -1 + u.x + u.width - L.left + \"px\";\n\n                if (L.left > u.x + u.width) {\n                  C[0].style.width = u.width + \"px\";\n                  C[0].style.left = u.x + \"px\";\n                }\n\n                if (G.appointmentsRenderMode == \"exactTime\" && !H.selectedJQXAppointment.allDay) {\n                  var b = H.host.coord().left;\n\n                  if (K - b >= u.x - 10 && K - b <= u.cellX + H.cellWidth) {\n                    C[0].style.width = u.width + \"px\";\n                    C[0].style.left = u.x + \"px\";\n                    p = true;\n                  }\n                }\n              } else {\n                if (t < n) {\n                  C[0].style.left = m + \"px\";\n                  C[0].style.width = u.width + \"px\";\n                } else {\n                  if (t > n) {\n                    C[0].style.left = e;\n                    C[0].style.width = u.x + u.width - parseInt(e) + \"px\";\n                  }\n                }\n              }\n            } else {\n              if (A == t) {\n                C[0].style.width = s - L.left + parseInt(e) + \"px\";\n                C[0].style.left = L.left + \"px\";\n              }\n            }\n\n            if (A < n) {\n              C[0].style.display = \"none\";\n            }\n\n            if (A > t) {\n              C[0].style.display = \"none\";\n            }\n\n            if (t < n) {\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (o == A) {\n                  C[0].style.display = \"block\";\n                  C[0].style.width = l[Q].width + \"px\";\n                  C[0].style.left = l[Q].x + \"px\";\n                }\n              }\n            }\n\n            if (t == n) {\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (t < n || t == n) {\n                  if (o == A && n != N) {\n                    C[0].style.left = 1 + L.left + parseInt(e) + \"px\";\n\n                    if (1 + L.left + parseInt(e) > u.x + u.width) {\n                      C[0].style.left = u.x + \"px\";\n                    }\n\n                    C[0].style.width = -1 + u.x + u.width - L.left + \"px\";\n                  }\n                }\n              }\n            }\n          }\n\n          var D = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(g.getAttribute(\"data-date\"), H.timeZone));\n\n          if (D > H.selectedJQXAppointment.from && !p) {\n            H.resizeTo = D;\n          } else {\n            H.resizeTo = H.selectedJQXAppointment.to;\n          }\n        } else {\n          if (H.rightResize) {\n            var O = false;\n\n            for (var R = 0; R < 6; R++) {\n              var C = H.feedbacks[R];\n              var A = parseInt(C[0].style.top) - E;\n              var z = parseInt(C[0].style.left);\n\n              if (A < t) {\n                C[0].style.width = s + \"px\";\n              }\n\n              for (var Q = 0; Q < l.length; Q++) {\n                var o = l[Q].cellY;\n\n                if (o == A) {\n                  C[0].style.top = l[Q].y + \"px\";\n                }\n              }\n\n              var u = l[0];\n              var m = parseInt(u.x);\n\n              if (A == n) {\n                C[0].style.left = m + \"px\";\n\n                if (t == n) {\n                  if (S >= B) {\n                    C[0].style.width = S + F - m - 5 + \"px\";\n\n                    if (G.appointmentsRenderMode == \"exactTime\" && !H.selectedJQXAppointment.allDay) {\n                      var b = H.host.coord().left;\n\n                      if (K - b >= u.lastCellX && K - b <= u.x + u.width + 15) {\n                        C[0].style.width = u.width + \"px\";\n                        O = true;\n                      }\n                    }\n                  } else {\n                    C[0].style.width = u.width + \"px\";\n                  }\n                } else {\n                  if (t > n) {\n                    C[0].style.left = m + \"px\";\n                    C[0].style.width = u.width + \"px\";\n                  } else {\n                    if (t < n) {\n                      C[0].style.left = m + \"px\";\n                      C[0].style.width = s - m + parseInt(e) + \"px\";\n                    }\n                  }\n                }\n              } else {\n                if (A == t) {\n                  C[0].style.width = S + F - 5 - parseInt(e) + \"px\";\n                }\n              }\n\n              if (A > N) {\n                C[0].style.display = \"none\";\n              }\n\n              if (A < t) {\n                C[0].style.display = \"none\";\n              }\n\n              if (t > N) {\n                for (var Q = 0; Q < l.length; Q++) {\n                  var o = l[Q].cellY;\n\n                  if (o == A) {\n                    C[0].style.display = \"block\";\n                  }\n\n                  if (A == N) {\n                    C[0].style.width = l[Q].width + \"px\";\n                    C[0].style.left = l[Q].x + \"px\";\n                  }\n                }\n              }\n\n              if (t <= N) {\n                if (A == N) {\n                  for (var Q = 0; Q < l.length; Q++) {\n                    var o = l[Q].cellY;\n\n                    if (A != t && o == A && n != N) {\n                      C[0].style.width = l[Q].width + \"px\";\n                      C[0].style.left = l[Q].x + \"px\";\n                    } else {\n                      if (A == t && o == A && n != N) {\n                        C[0].style.left = l[Q].x + \"px\";\n                        C[0].style.width = S + F - 5 - parseInt(e) - l[Q].x + \"px\";\n                      }\n                    }\n                  }\n                }\n              }\n            }\n\n            var D = new a.jqx.date(g.getAttribute(\"data-date\"), H.timeZone);\n\n            if (D < H.selectedJQXAppointment.to && !O) {\n              H.resizeFrom = D;\n            } else {\n              H.resizeFrom = H.selectedJQXAppointment.from;\n            }\n          }\n        }\n      }\n\n      var d = new Array();\n\n      for (var R = 0; R < 6; R++) {\n        var C = H.feedbacks[R];\n\n        if (C[0].style.display == \"block\") {\n          d.push(C);\n        }\n      }\n\n      a.each(d, function (i) {\n        if (!H.rtl) {\n          if (i > 0) {\n            a(this).find(\".jqx-scheduler-appointment-left-resize-indicator\")[0].style.visibility = \"hidden\";\n          }\n\n          if (i < d.length - 1) {\n            a(this).find(\".jqx-scheduler-appointment-right-resize-indicator\")[0].style.visibility = \"hidden\";\n          }\n        } else {\n          if (i > 0) {\n            a(this).find(\".jqx-scheduler-appointment-right-resize-indicator\")[0].style.visibility = \"hidden\";\n          }\n\n          if (i < d.length - 1) {\n            a(this).find(\".jqx-scheduler-appointment-left-resize-indicator\")[0].style.visibility = \"hidden\";\n          }\n        }\n      });\n    },\n    _handleTimelineDayWeekViewResize: function (m, k, d, h, b) {\n      var i = this;\n      var l = i._views[i._view].type;\n      var n = i._views[i._view];\n      var e = i.getMinutesPerScale();\n\n      var j = function (o) {\n        if (o < 10) {\n          return false;\n        }\n\n        return true;\n      };\n\n      var c = i.findCell(m, i.feedback.coord().top);\n\n      if (i.leftResize) {\n        if (!i._lastResizeX) {\n          i._lastResizeX = i.mouseDownPosition.left;\n        }\n\n        if (m > i._lastResizeX + a(d).width() / 2) {\n          var g = i.selectedAppointmentTableBounds.width + i.selectedAppointmentTableBounds.left - h.left - a(d).width();\n\n          if (j(g)) {\n            i.feedback.css(\"left\", 2 + h.left + a(d).width());\n            i.feedback.width(g);\n            i._lastResizeX = i.feedback.coord().left;\n\n            if (!i.rtl) {\n              i.resizeFrom = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone).addMinutes(e);\n            } else {\n              i.resizeTo = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone);\n            }\n          }\n        } else {\n          if (m < i._lastResizeX - a(d).width() / 2) {\n            var g = i.selectedAppointmentTableBounds.width + i.selectedAppointmentTableBounds.left - h.left;\n\n            if (j(g)) {\n              i.feedback.css(\"left\", 2 + h.left);\n              i.feedback.width(g);\n              i._lastResizeX = i.feedback.coord().left;\n\n              if (!i.rtl) {\n                i.resizeFrom = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone);\n              } else {\n                i.resizeTo = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone).addMinutes(e);\n              }\n            }\n          }\n        }\n      } else {\n        if (i.rightResize) {\n          if (!i._lastResizeX) {\n            i._lastResizeX = i.mouseDownPosition.left;\n          }\n\n          if (m > i._lastResizeX + a(d).width() / 2) {\n            var f = a(d).width() + h.left - i.selectedAppointmentTableBounds.width - i.selectedAppointmentTableBounds.left;\n            var g = i.selectedAppointmentTableBounds.width + f;\n\n            if (j(g)) {\n              i.feedback.width(g);\n              i._lastResizeX = i.selectedAppointmentTableBounds.width + f + i.feedback.coord().left;\n\n              if (!i.rtl) {\n                i.resizeTo = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone).addMinutes(e);\n              } else {\n                i.resizeFrom = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone);\n              }\n            }\n          } else {\n            if (m < i._lastResizeX - a(d).width() / 2) {\n              var f = h.left - i.selectedAppointmentTableBounds.width - i.selectedAppointmentTableBounds.left;\n              var g = i.selectedAppointmentTableBounds.width + f;\n\n              if (j(g)) {\n                i.feedback.width(g);\n                i._lastResizeX = i.selectedAppointmentTableBounds.width + f + i.feedback.coord().left;\n\n                if (!i.rtl) {\n                  i.resizeTo = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone);\n                } else {\n                  i.resizeFrom = new a.jqx.date(c.getAttribute(\"data-date\"), i.timeZone).addMinutes(e);\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    _handleResize: function (c, i, h, b, e) {\n      var g = this;\n      var d = g._views[g._view].type;\n      var f = g._views[g._view];\n\n      if (d === \"dayView\" || d === \"weekView\") {\n        g._handleDayWeekViewResize(c, i, h, b, e);\n      } else {\n        if (d === \"timelineMonthView\") {\n          g._handleTimelineMonthViewResize(c, i, h, b, e);\n        } else {\n          if (d === \"monthView\") {\n            g._handleMonthViewResize(c, i, h, b, e);\n          } else {\n            if (d === \"timelineDayView\" || d === \"timelineWeekView\") {\n              g._handleTimelineDayWeekViewResize(c, i, h, b, e);\n            }\n          }\n        }\n      }\n\n      if (d === \"timelineDayView\" || d === \"timelineMonthView\" || d === \"timelineWeekView\") {\n        clearInterval(g._horizontalIntervalDrag);\n        g._horizontalIntervalDrag = setInterval(function () {\n          var k = g.host.width();\n          var m = g.host.coord().left;\n          var j = m + 25;\n          var l = k + j - 45;\n\n          if (!g.rtl) {\n            if (c < j) {\n              g.hScrollInstance.setPosition(g.hScrollInstance.value - 5);\n            } else {\n              if (c > l) {\n                g.hScrollInstance.setPosition(g.hScrollInstance.value + 5);\n              }\n            }\n          } else {\n            if (c > l) {\n              g.hScrollInstance.setPosition(g.hScrollInstance.value - 5);\n            } else {\n              if (c < j) {\n                g.hScrollInstance.setPosition(g.hScrollInstance.value + 5);\n              }\n            }\n          }\n        }, 5);\n      } else {\n        if (d === \"dayView\" || d === \"weekView\") {\n          clearInterval(g._intervalDrag);\n          g._intervalDrag = setInterval(function () {\n            var n = g.host.height();\n            var k = 0;\n\n            if (!g.columnGroups) {\n              k += g.showHeader ? g.columnsHeight : 0;\n            } else {\n              k += g.showHeader ? g.columnsheader.height() : 0;\n            }\n\n            if (g.showToolbar) {\n              k += g.toolbarHeight;\n            }\n\n            n -= k;\n            var m = g.legendHeight;\n\n            if (g._resources.length == 0) {\n              m = 0;\n            }\n\n            if (g.showLegend) {\n              n -= m;\n            }\n\n            var q = k + g.host.coord().top;\n            var j = g.showAllDayRow;\n\n            if (f.timeRuler && (d === \"dayView\" || d === \"weekView\")) {\n              if (f.timeRuler.showAllDayRow != undefined) {\n                j = f.timeRuler.showAllDayRow;\n              }\n            }\n\n            var l = e.duration().days() >= 1 || e.allDay;\n\n            if (j && l) {\n              q -= 20;\n            } else {\n              if (j && g.resizing) {\n                q += a(g.table[0].rows[0]).height();\n                n -= a(g.table[0].rows[0]).height();\n              }\n            }\n\n            var p = q + 25;\n            var o = n + p - 45;\n\n            if (i < p) {\n              g.vScrollInstance.setPosition(g.vScrollInstance.value - 5);\n            } else {\n              if (i > o) {\n                g.vScrollInstance.setPosition(g.vScrollInstance.value + 5);\n              }\n            }\n          }, 5);\n        }\n      }\n\n      g.resizing = true;\n    },\n    _startTimers: function (b, h, d) {\n      var f = this;\n      var g = f.host.coord();\n      var e = 0;\n      var c = 0;\n\n      if (f.hScrollInstance.element.style.visibility != \"hidden\") {\n        clearInterval(f._horizontalIntervalDragVelocity);\n        f._horizontalIntervalDragVelocity = setInterval(function () {\n          e++;\n\n          if (e > 40) {\n            e = 40;\n          }\n        }, 100);\n        clearInterval(f._horizontalIntervalDrag);\n        f._horizontalIntervalDrag = setInterval(function () {\n          var j = f._hostWidth;\n          var l = g.left;\n          var i = l + 30;\n          var k = j + i - 60;\n\n          if (!f.rtl) {\n            if (b < i) {\n              f.hScrollInstance.setPosition(f.hScrollInstance.value - 10 - e);\n            } else {\n              if (b > k) {\n                f.hScrollInstance.setPosition(f.hScrollInstance.value + 10 + e);\n              } else {\n                e = 0;\n              }\n            }\n          } else {\n            if (b < i) {\n              f.hScrollInstance.setPosition(f.hScrollInstance.value + 10 + e);\n            } else {\n              if (b > k) {\n                f.hScrollInstance.setPosition(f.hScrollInstance.value - 10 - e);\n              } else {\n                e = 0;\n              }\n            }\n          }\n        }, 10);\n      }\n\n      if (f.vScrollInstance.element.style.visibility != \"hidden\") {\n        clearInterval(f._verticalIntervalDragVelocity);\n        f._verticalIntervalDragVelocity = setInterval(function () {\n          c++;\n\n          if (c > 40) {\n            c = 40;\n          }\n        }, 100);\n        clearInterval(f._intervalDrag);\n        f._intervalDrag = setInterval(function () {\n          var m = f._hostHeight;\n          var o = 0;\n\n          if (!f.columnGroups) {\n            o += f.showHeader ? f.columnsHeight : 0;\n          } else {\n            o += f.showHeader ? f.columnsheader.height() : 0;\n          }\n\n          var p = f._views[f._view].type;\n          var r = f._views[f._view];\n\n          if (f.showToolbar) {\n            o += f.toolbarHeight;\n          }\n\n          m -= o;\n\n          if (f.showLegend && f._resources.length > 0) {\n            m -= f.legendHeight;\n          }\n\n          var k = g.top;\n          var q = o + k;\n\n          if (p == \"dayView\" || p == \"weekView\") {\n            var j = f.showAllDayRow;\n\n            if (r.timeRuler && (p === \"dayView\" || p === \"weekView\")) {\n              if (r.timeRuler.showAllDayRow != undefined) {\n                j = r.timeRuler.showAllDayRow;\n              }\n            }\n\n            var l = d.duration().days() >= 1 || d.allDay;\n\n            if (j && l) {\n              q -= 20;\n            } else {\n              if (j && f.resizing) {\n                q += a(f.table[0].rows[0]).height();\n              }\n            }\n          }\n\n          var n = q + 30;\n          var i = k + m + o - 30;\n\n          if (h < n) {\n            f.vScrollInstance.setPosition(f.vScrollInstance.value - 10 - c);\n          } else {\n            if (h > i) {\n              f.vScrollInstance.setPosition(f.vScrollInstance.value + 10 + c);\n            } else {\n              c = 0;\n            }\n          }\n        }, 10);\n      }\n    },\n    _hoverCell: function (b) {\n      var c = this;\n\n      if (!c.enableHover) {\n        return true;\n      }\n\n      if (c._resources.length > 0) {\n        if (b.className.indexOf(\"pinned\") >= 0) {\n          return true;\n        }\n      }\n\n      if (b.className.indexOf(\"time-column\") >= 0) {\n        return true;\n      }\n\n      if (b.className.indexOf(\"jqx-scheduler-disabled-cell\") >= 0) {\n        return true;\n      }\n\n      if (b && b == c.hoveredCell) {\n        return true;\n      }\n\n      c.hoveredCell = b;\n\n      if (!b) {\n        return true;\n      }\n\n      c._removeHoveredCell();\n\n      c.hoveredCell = b;\n      b.className += \" \" + c.toTP(\"jqx-fill-state-hover\") + \" \" + c.toTP(\"jqx-grid-cell-hover\") + \" \" + c.toTP(\"jqx-scheduler-cell-hover\");\n      b.jqxClassName = b.className;\n    },\n    _removeHoveredCell: function () {\n      var d = this;\n\n      if (d.hoveredCell) {\n        var c = d.hoveredCell;\n\n        var b = function (e) {\n          var f = c.className;\n          f = f.replace(\" \" + d.toTP(\"jqx-fill-state-hover\"), \"\");\n          f = f.replace(\" \" + d.toTP(\"jqx-grid-cell-hover\"), \"\");\n          f = f.replace(\" \" + d.toTP(\"jqx-scheduler-cell-hover\"), \"\");\n          c.className = f;\n          c.jqxClassName = f;\n        };\n\n        b(c);\n      }\n\n      d.hoveredCell = null;\n    },\n    _addHandlers: function () {\n      var i = this;\n\n      this._mousewheelfunc = this._mousewheelfunc || function (m) {\n        i.wheel(m, i);\n        return false;\n      };\n\n      this.focused = false;\n      var g = false;\n      this.addHandler(a(document), \"keydown.scheduler\" + i.element.id, function (m) {\n        g = false;\n\n        if (m.keyCode === 9 && m.shiftKey && !i.focused) {\n          g = true;\n        }\n      });\n      this.addHandler(this.host, \"focus\", function (n) {\n        if (i.focusedCell && !i.selectedAppointment && !g) {\n          a(i.focusedCell).addClass(i.toThemeProperty(\"jqx-scheduler-cell-focus\"));\n        }\n\n        i.focused = true;\n\n        if (g) {\n          if (i.appointmentsToRender.length > 0) {\n            var m = i.appointmentsToRender[i.appointmentsToRender.length - 1];\n\n            i._selectAppointment(m);\n\n            i._lastSelectedAppointment = m;\n          } else {\n            if (!i.focusedCell) {\n              i._updateFocusedCell();\n            } else {\n              if (i.focusedCell) {\n                if (i.focusedCell.className.indexOf(\"-focus\") == -1) {\n                  i._updateCellsSelection();\n\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      });\n      this.addHandler(this.host, \"blur\", function (m) {\n        if (i.focusedCell) {\n          if (document.activeElement == i.element) {\n            return true;\n          }\n\n          if (a(document.activeElement).ischildof(i.host)) {\n            return true;\n          }\n\n          a(i.focusedCell).removeClass(i.toThemeProperty(\"jqx-scheduler-cell-focus\"));\n          i.focused = false;\n        }\n      });\n      this.addHandler(this.host, \"dragstart.\" + this.element.id, function (m) {\n        return false;\n      });\n      this.addHandler(this.host, \"selectstart.\" + this.element.id, function (m) {\n        if (i.enableBrowserSelection) {\n          return true;\n        }\n\n        if (i.showToolBar) {\n          if (a(m.target).ischildof(i.toolbar)) {\n            return true;\n          }\n        }\n\n        if (i.rowDetails) {\n          if (a(m.target).parents(\"[data-role=details]\").length > 0) {\n            return true;\n          }\n        }\n\n        if (undefined == i.editKey) {\n          return false;\n        }\n      });\n      this.addHandler(a(window), \"jqxReady.\" + this.element.id, function () {});\n      this.removeHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      this.addHandler(this.host, \"mousewheel\", this._mousewheelfunc);\n      var d = this.isTouchDevice();\n\n      this.vScrollInstance.valueChanged = function (m) {\n        if (i._timer) {\n          clearTimeout(i._timer);\n        }\n\n        if (d) {\n          if (i.table) {\n            i.table[0].style.top = 0 - i.vScrollInstance.value + \"px\";\n          }\n        } else {\n          i._timer = setTimeout(function () {\n            if (i.table) {\n              i.table[0].style.top = 0 - i.vScrollInstance.value + \"px\";\n            }\n          }, 1);\n        }\n      };\n\n      this.hScrollInstance.valueChanged = function (m) {\n        if (i._htimer) {\n          clearTimeout(i._htimer);\n        }\n\n        if (d) {\n          if (i.table) {\n            i._renderhorizontalscroll();\n          }\n        } else {\n          i._htimer = setTimeout(function () {\n            if (i.table) {\n              i._renderhorizontalscroll();\n            }\n          }, 1);\n        }\n      };\n\n      var c = \"mousedown\";\n\n      if (this.isTouchDevice()) {\n        c = a.jqx.mobile.getTouchEventName(\"touchstart\");\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 10) {\n          c = \"mousedown\";\n        }\n      }\n\n      this.addHandler(this.table, \"mouseleave\", function (m) {\n        i._removeHoveredCell();\n      });\n\n      if (i.isTouchDevice()) {\n        i.enableHover = false;\n      }\n\n      var h = \"mousemove.scheduler\" + this.element.id;\n      var e = \"mouseup.scheduler\" + this.element.id;\n\n      if (this.isTouchDevice() && this.touchMode !== true) {\n        h = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".scheduler\" + this.element.id;\n        e = a.jqx.mobile.getTouchEventName(\"touchend\") + \".scheduler\" + this.element.id;\n      }\n\n      this.addHandler(a(document), h, function (X) {\n        var M = X.pageX;\n        var L = X.pageY;\n\n        if (i.isTouchDevice()) {\n          var N = a.jqx.position(X);\n          M = N.left;\n          L = N.top;\n\n          if (isNaN(M) || isNaN(L)) {\n            var N = a.jqx.position(X.originalEvent);\n            M = N.left;\n            L = N.top;\n          }\n        }\n\n        if (i.disabled || X.which === 3) {\n          return true;\n        }\n\n        if (!i.isMouseDown) {\n          return true;\n        }\n\n        if (i.hScrollInstance.isScrolling() || i.vScrollInstance.isScrolling()) {\n          return true;\n        }\n\n        if (i._hostWidth) {\n          var D = i.host.coord();\n\n          if (D.left + i._hostWidth < M || M < D.left) {\n            return true;\n          }\n\n          if (D.top + i._hostHeight < L || L < D.top) {\n            return true;\n          }\n        }\n\n        if (i.mouseDownPosition) {\n          if (Math.abs(i.mouseDownPosition.left - M) >= 3 && Math.abs(i.mouseDownPosition.left - M) <= 10 || Math.abs(i.mouseDownPosition.top - L) >= 3 && Math.abs(i.mouseDownPosition.top - L) <= 10) {\n            i.dragOrResize = true;\n          }\n        }\n\n        if (i.selectedAppointment && i.dragOrResize) {\n          var w = null;\n\n          if (i._hasOpenedMenu) {\n            return true;\n          }\n\n          if (i.editRecurrenceDialog.jqxWindow(\"isOpen\")) {\n            return true;\n          }\n\n          var o = i._views[i._view].type;\n          var K = i._views[i._view];\n          var A = false;\n\n          if (X.target.nodeName.toLowerCase() === \"td\") {\n            var q = X.target;\n          } else {\n            var q = i.findCell(M, L);\n          }\n\n          if (!q) {\n            return true;\n          }\n\n          if (q.getAttribute(\"data-time-slot\") != undefined) {\n            return true;\n          }\n\n          if (q.className.indexOf(\"jqx-grid-cell-pinned\") >= 0) {\n            return true;\n          }\n\n          if (!i.feedback) {\n            w = i.getJQXAppointmentByElement(i.selectedAppointment);\n\n            if (!w.draggable && !w.resizable) {\n              w = null;\n              return true;\n            }\n\n            if (i.beginDrag) {\n              var t = i.beginDrag(w);\n\n              if (!t) {\n                return true;\n              }\n            }\n\n            var T = a('[data-key=\"' + w.id + '\"]');\n            var B = i.selectedAppointment.position();\n            i.feedback = i.selectedAppointment.clone(true);\n            i.pinnedfeedback = i.selectedAppointment.clone(true);\n            var V = !(i.selectedAppointment[0].style.cursor == \"row-resize\" || i.selectedAppointment[0].style.cursor == \"col-resize\" || i.resizing);\n\n            var p = function (x) {\n              if (V) {\n                x.find(\".jqx-scheduler-appointment-resize-indicator\").hide();\n              }\n\n              T.addClass(i.toTP(\"jqx-scheduler-feedback-appointment jqx-disableselect\"));\n              x.find(\".jqx-scheduler-appointment-duration-status\").hide();\n              x.addClass(i.toTP(\"jqx-scheduler-feedback-appointment\"));\n              x.addClass(i.toTP(\"jqx-scheduler-feedback-drag-appointment\"));\n\n              if (!V) {\n                x.css(\"z-index\", 400);\n              } else {\n                x.css(\"z-index\", 401);\n              }\n            };\n\n            p(i.feedback);\n            p(i.pinnedfeedback);\n\n            if (i._views[i._view].type != \"monthView\" || V) {\n              i.table.append(i.feedback);\n\n              if (i.tableRows == 1) {\n                i.pinnedtable.append(i.pinnedfeedback);\n              } else {\n                i.table.append(i.pinnedfeedback);\n              }\n\n              i.feedback.css(\"left\", B.left);\n              i.feedback.css(\"top\", B.top);\n              i.pinnedfeedback.css(\"left\", B.left);\n              i.pinnedfeedback.css(\"top\", B.top);\n\n              if (i._views[i._view].type == \"monthView\" && i.isTouchDevice()) {\n                i.feedbacks = new Array();\n\n                for (var S = 0; S < 6; S++) {\n                  i.feedbacks.push(i.feedback.clone(true));\n                  a(i.feedbacks[S]).hide();\n                  i.table.append(a(i.feedbacks[S]));\n                }\n              }\n            } else {\n              i.feedbacks = new Array();\n\n              for (var S = 0; S < 6; S++) {\n                i.feedbacks.push(i.feedback.clone(true));\n                a(i.feedbacks[S]).hide();\n                i.table.append(a(i.feedbacks[S]));\n              }\n            }\n          }\n\n          if (i.dragging) {\n            var t = i.dragging(w, q, i.feedback);\n\n            if (false === t) {\n              return true;\n            }\n          }\n\n          var N = a(q).position();\n\n          if (i.endDrag) {\n            var I = i.feedback.css(\"left\");\n            var J = i.feedback.css(\"top\");\n            var z = i.feedback.width();\n            var F = i.feedback.height;\n          }\n\n          if (!w) {\n            w = i.selectedJQXAppointment;\n          }\n\n          if (!w) {\n            i.selectAppointment(i.uiappointments[0].id);\n            w = i.selectedJQXAppointment;\n          }\n\n          var v = w.resourceId;\n\n          var r = i._resources.indexOf(v);\n\n          if (i.resources && i.resources.orientation == \"none\") {\n            r = -1;\n          }\n\n          var Q = false;\n          var U = i.isTouchDevice();\n\n          if (U && i.touchMode !== true && i._dragCell == null && !(i.leftResize || i.rightResize || i.topResize || i.bottomResize || i.resizing)) {\n            switch (o) {\n              case \"dayView\":\n              case \"weekView\":\n                var A = w.duration().days() >= 1 || w.allDay;\n\n                if (!A) {\n                  if (L >= i.selectedAppointmentBounds.top - 15 && L <= i.selectedAppointmentBounds.top + 15) {\n                    Q = true;\n                    i.topResize = true;\n                  }\n\n                  if (L >= i.selectedAppointmentBounds.top - 15 + i.selectedAppointmentBounds.height && L <= i.selectedAppointmentBounds.top + i.selectedAppointmentBounds.height + 15) {\n                    Q = true;\n                    i.bottomResize = true;\n                  }\n                } else {\n                  if (M >= i.selectedAppointmentBounds.left - 15 && M <= i.selectedAppointmentBounds.left + 15) {\n                    Q = true;\n                    i.leftResize = true;\n                  }\n\n                  if (M >= i.selectedAppointmentBounds.left + i.selectedAppointmentBounds.width - 15 && M <= i.selectedAppointmentBounds.left + i.selectedAppointmentBounds.width + 15) {\n                    Q = true;\n                    i.rightResize = true;\n                  }\n                }\n\n                break;\n\n              default:\n                if (M >= i.selectedAppointmentBounds.left - 15 && M <= i.selectedAppointmentBounds.left + 15) {\n                  Q = true;\n                  i.leftResize = true;\n                }\n\n                if (M >= i.selectedAppointmentBounds.left + i.selectedAppointmentBounds.width - 15 && M <= i.selectedAppointmentBounds.left + i.selectedAppointmentBounds.width + 15) {\n                  Q = true;\n                  i.rightResize = true;\n                }\n\n                break;\n            }\n          }\n\n          if (U && (i.leftResize || i.rightResize || i.topResize || i.bottomResize || i.resizing) || Q) {\n            if (q.getAttribute(\"data-view\") != r + 1 && i._resources.length > 0) {\n              if (i.resources.orientation != \"none\") {\n                return true;\n              }\n            }\n\n            var W = i._getDateByString(q.getAttribute(\"data-date\"));\n\n            if (W < i.min.toDate() || W > i.max.toDate()) {\n              return;\n            }\n\n            i._handleResize(M, L, q, N, w);\n\n            i._oldResizeTD = q;\n          } else {\n            if (!U && i.selectedAppointment[0].style.cursor == \"row-resize\" || i.selectedAppointment[0].style.cursor == \"col-resize\" || i.resizing) {\n              if (q.getAttribute(\"data-view\") != r + 1 && i._resources.length > 0) {\n                if (i.resources && i.resources.orientation != \"none\") {\n                  return true;\n                }\n              }\n\n              var W = i._getDateByString(q.getAttribute(\"data-date\"));\n\n              if (W < i.min.toDate() || W > i.max.toDate()) {\n                return;\n              }\n\n              i._handleResize(M, L, q, N, w);\n\n              i._oldResizeTD = q;\n            } else {\n              if (!w.draggable) {\n                i._removeFeedbackAndStopResize();\n\n                return true;\n              }\n\n              if (i._dragCell == q) {\n                i._startTimers(M, L, w);\n\n                if (i.isTouchDevice() && i.touchMode !== true) {\n                  X.stopPropagation();\n                  return false;\n                } else {\n                  return;\n                }\n              }\n\n              var W = i._getDateByString(q.getAttribute(\"data-date\"));\n\n              if (W < i.min.toDate() || W > i.max.toDate()) {\n                return;\n              }\n\n              var E = w.duration();\n\n              if (o.indexOf(\"month\") >= 0 && new a.jqx.date(W).add(E) > i.max) {\n                return;\n              }\n\n              var P = i.vScrollBar[0].style.visibility == \"hidden\" ? 0 : 6 + i.vScrollBar.outerWidth();\n              i._dragCell = q;\n              i.feedback[0].style.left = 2 + N.left + \"px\";\n              i.feedback[0].style.top = 2 + N.top + \"px\";\n\n              if (o === \"dayView\" || o === \"weekView\") {\n                i.pinnedfeedback.css(\"left\", 2 + N.left);\n                i.pinnedfeedback.css(\"top\", 2 + N.top);\n                var m = 0;\n\n                if (q.getAttribute(\"data-end-date\")) {\n                  var s = i.appointmentsMinHeight;\n\n                  if (i.isTouchDevice()) {\n                    s = i.touchAppointmentsMinHeight;\n                  }\n\n                  if (K.appointmentHeight) {\n                    s = K.appointmentHeight;\n                  }\n\n                  A = w.duration().days() >= 1 || w.allDay;\n                  i.feedback.css(\"top\", 2 + N.top + s);\n                  i.pinnedfeedback.css(\"top\", 2 + N.top + 18);\n\n                  if (o == \"dayView\") {\n                    var R = i.selectedAppointment.coord().left - 9;\n                    i.feedback.css(\"left\", R);\n                    i.pinnedfeedback.css(\"left\", R);\n                  }\n\n                  if (A) {\n                    i.pinnedfeedback.css(\"top\", w.elements[0].y);\n                    m = i.selectedAppointment.width();\n\n                    if (2 + N.left + m > i.host.width() - P) {\n                      var C = 2 + N.left + m - i.host.width() + P + 6;\n                      m -= C;\n                    }\n\n                    i.feedback.width(m);\n                    i.feedback.height(s);\n                    i.pinnedfeedback.width(m);\n                    i.pinnedfeedback.height(s);\n                  } else {\n                    m = a(q).width() - 4;\n                    i.feedback.width(m);\n                    i.feedback.height(s);\n                    i.pinnedfeedback.width(m);\n                    i.pinnedfeedback.height(s);\n                  }\n\n                  i.feedback.hide();\n                  i.pinnedfeedback.show();\n                } else {\n                  i.feedback.show();\n                  i.pinnedfeedback.hide();\n                  var u = 2;\n                  var O = 30;\n                  var H = K.timeRuler && K.timeRuler.scale;\n\n                  switch (H) {\n                    case \"sixtyMinutes\":\n                    case \"hour\":\n                      u = 1;\n                      break;\n\n                    case \"thirtyMinutes\":\n                    case \"halfHour\":\n                      u = 2;\n                      break;\n\n                    case \"fifteenMinutes\":\n                    case \"quarterHour\":\n                      u = 4;\n                      break;\n\n                    case \"tenMinutes\":\n                      u = 6;\n                      break;\n\n                    case \"fiveMinutes\":\n                      u = 12;\n                      break;\n                  }\n\n                  m = a(q).width() - 4;\n                  i.feedback.width(m);\n                  A = w.duration().days() >= 1 || w.allDay;\n\n                  if (A) {\n                    i.feedback.height(a(q).height() - 6);\n                  } else {\n                    i.feedback.height(i.selectedAppointment.height());\n                  }\n                }\n\n                i._startTimers(M, L, w);\n              } else {\n                if (o === \"monthView\") {\n                  i.feedback.css(\"left\", 1 + N.left);\n                  var n = i.selectedAppointmentTableBounds;\n                  var G = parseInt(n.top);\n\n                  if (G > N.top && G < N.top + q.offsetHeight) {\n                    i.feedback.css(\"top\", G + \"px\");\n                  } else {\n                    i.feedback.css(\"top\", i.selectedAppointment.height() + N.top - 2);\n                  }\n\n                  if (i.isTouchDevice()) {\n                    i.feedback.css(\"top\", N.top + 2);\n                  }\n\n                  m = i.selectedAppointment.width();\n                  i.feedback.width(m);\n                  i.feedback.height(i.selectedAppointment.height());\n\n                  i._startTimers(M, L, w);\n                } else {\n                  if (o === \"timelineDayView\" || o === \"timelineMonthView\" || o === \"timelineWeekView\") {\n                    var n = i.selectedAppointmentTableBounds;\n                    var G = parseInt(n.top);\n\n                    if (G > N.top && G < N.top + q.offsetHeight) {\n                      i.feedback.css(\"top\", G + \"px\");\n                    }\n\n                    i._startTimers(M, L, w);\n                  }\n                }\n              }\n            }\n          }\n\n          if (i.endDrag) {\n            var t = i.endDrag(w, q, i.feedback);\n\n            if (!t) {\n              i.feedback.width(z);\n            }\n\n            i.feedback.height(F);\n            i.feedback.css(\"top\", J);\n            i.feedback.css(\"left\", I);\n            return true;\n          }\n\n          if (i.isTouchDevice() && i.touchMode !== true) {\n            X.stopPropagation();\n            return false;\n          }\n        }\n      });\n\n      var l = function (m) {\n        i.isMouseDown = false;\n        i.dragOrResize = false;\n\n        if (i.contextMenu && i.menu && m.which !== 3) {\n          i.menu.jqxMenu(\"close\");\n          i._hasOpenedMenu = false;\n        }\n\n        if (m.which === 3) {\n          return true;\n        }\n\n        if (i.selectedAppointment && i.feedback) {\n          if (i.editRecurrenceDialog.jqxWindow(\"isOpen\")) {\n            return;\n          }\n\n          i._handleMouseUp(i.selectedJQXAppointment, i._dragCell, i.resizing);\n        }\n      };\n\n      this.addHandler(a(document), e, function (m) {\n        return l(m);\n      });\n\n      if (!this.isTouchDevice()) {\n        try {\n          if (document.referrer != \"\" || window.frameElement) {\n            if (window.top != null && window.top != window.self) {\n              var b = null;\n\n              if (window.parent && document.referrer) {\n                b = document.referrer;\n              }\n\n              if (b && b.indexOf(document.location.host) != -1) {\n                var f = function (m) {\n                  if (!i.disabled) {\n                    return l(m);\n                  }\n                };\n\n                i.addHandler(a(window.top.document), \"mouseup.jqxscheduler\" + i.element.id, f);\n              }\n            }\n          }\n        } catch (k) {}\n      }\n\n      this.addHandler(this.host, h, function (o) {\n        var C = o.pageX;\n        var A = o.pageY;\n\n        if (i.disabled || o.which === 3) {\n          return true;\n        }\n\n        if (i.selectedAppointment && i.isMouseDown) {\n          return true;\n        }\n\n        if (i.hScrollInstance.isScrolling() || i.vScrollInstance.isScrolling()) {\n          return true;\n        }\n\n        if (i._hasOpenedMenu) {\n          return true;\n        }\n\n        if (i.overlay[0].style.display !== \"none\") {\n          return true;\n        }\n\n        var n = null;\n\n        if (o.target.className.indexOf(\"jqx-scheduler-appointment\") >= 0 && o.target.className.indexOf(\"jqx-scheduler-appointment-inner-content\") == -1 && o.target.className.indexOf(\"jqx-scheduler-appointment-content\") == -1 && o.target.className.indexOf(\"jqx-scheduler-appointment-resize-indicator\") == -1) {\n          n = o.target;\n        }\n\n        var u = o.target;\n\n        for (var v = 0; v < 4; v++) {\n          if (u.parentNode) {\n            if (u.className.indexOf(\"jqx-scheduler-appointment\") >= 0 && u.className.indexOf(\"jqx-scheduler-appointment-innter-content\") == -1 && u.className.indexOf(\"jqx-scheduler-appointment-content\") == -1 && u.className.indexOf(\"jqx-scheduler-appointment-resize-indicator\") == -1) {\n              n = u;\n            }\n\n            u = u.parentNode;\n          } else {\n            break;\n          }\n        }\n\n        if (n) {\n          var B = i._views[i._view].type;\n          var E = i._views[i._view];\n          var D = i.getJQXAppointmentByElement(n);\n\n          if (D.resizable) {\n            var t = D.duration();\n            var p = D.allDay || t.days() >= 1 || t.hours() == 23 && t.minutes == 59 && t.seconds == 59;\n            var z = a(n).coord();\n            var w = a(n).position();\n            i.selectedAppointmentBounds = {\n              top: z.top,\n              left: z.left,\n              width: a(n).width(),\n              height: a(n).height()\n            };\n            i.selectedAppointmentTableBounds = {\n              top: w.top,\n              left: w.left,\n              width: a(n).width(),\n              height: a(n).height()\n            };\n            var m = i.selectedAppointmentBounds;\n\n            if (B == \"weekView\" || B == \"dayView\") {\n              if (!p) {\n                if (A >= m.top - 3 && A <= m.top + 6) {\n                  n.style.cursor = \"row-resize\";\n                  i.topResize = true;\n                  i.bottomResize = false;\n                } else {\n                  if (A >= m.top + m.height - 6 && A <= m.top + m.height + 3) {\n                    n.style.cursor = \"row-resize\";\n                    i.topResize = false;\n                    i.bottomResize = true;\n                  } else {\n                    n.style.cursor = \"pointer\";\n                  }\n                }\n              } else {\n                if (B != \"dayView\") {\n                  if (C >= m.left - 3 && C <= m.left + 6) {\n                    n.style.cursor = \"col-resize\";\n                    i.leftResize = true;\n                    i.rightResize = false;\n                  } else {\n                    if (C >= m.left + m.width - 6 && C <= m.left + m.width + 3) {\n                      n.style.cursor = \"col-resize\";\n                      i.leftResize = false;\n                      i.rightResize = true;\n                    } else {\n                      n.style.cursor = \"pointer\";\n                    }\n                  }\n                } else {\n                  n.style.cursor = \"pointer\";\n                }\n              }\n            } else {\n              if (B == \"monthView\" && D.elements.length > 1) {\n                var s = i.table.coord();\n\n                for (var v = 0; v < D.elements.length; v++) {\n                  var q = D.elements[v];\n                  var m = {\n                    top: s.top + q.y,\n                    left: s.left + q.x,\n                    width: q.width,\n                    height: q.height\n                  };\n\n                  if (v == 0 && !i.rtl || v == D.elements.length - 1 && i.rtl) {\n                    if (C >= m.left - 3 && C <= m.left + 6) {\n                      if (A >= m.top && A <= m.top + m.height) {\n                        n.style.cursor = \"col-resize\";\n                        i.leftResize = true;\n                        i.rightResize = false;\n                        i.selectedAppointment = a(n);\n                        break;\n                      } else {\n                        n.style.cursor = \"pointer\";\n                      }\n                    } else {\n                      n.style.cursor = \"pointer\";\n                    }\n                  } else {\n                    if (v == D.elements.length - 1 && !i.rtl || v == 0 && i.rtl) {\n                      if (C >= m.left + m.width - 6 && C <= m.left + m.width + 3) {\n                        if (A >= m.top && A <= m.top + m.height) {\n                          n.style.cursor = \"col-resize\";\n                          i.leftResize = false;\n                          i.rightResize = true;\n                          i.selectedAppointment = a(n);\n                          break;\n                        } else {\n                          n.style.cursor = \"pointer\";\n                        }\n                      } else {\n                        n.style.cursor = \"pointer\";\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (C >= m.left - 3 && C <= m.left + 6) {\n                  n.style.cursor = \"col-resize\";\n                  i.leftResize = true;\n                  i.rightResize = false;\n                } else {\n                  if (C >= m.left + m.width - 6 && C <= m.left + m.width + 3) {\n                    n.style.cursor = \"col-resize\";\n                    i.leftResize = false;\n                    i.rightResize = true;\n                  } else {\n                    n.style.cursor = \"pointer\";\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (!i.enableHover) {\n          return true;\n        }\n\n        if (o.target.nodeName.toLowerCase() === \"td\") {\n          var r = o.target;\n        } else {\n          var r = i.findCell(C, A);\n        }\n\n        if (!r) {\n          return true;\n        }\n\n        i._removeHoveredCell();\n\n        if (i.renderedRecords && i.renderedRecords.length === 0) {\n          return true;\n        }\n\n        if (i.isMouseDown) {\n          if (Math.abs(i.mousecaptureposition.left - C) > 3 || Math.abs(i.mousecaptureposition.top - A) > 3) {\n            if (i.mousecaptureposition.clickedcell.length === 0) {\n              i.selectionarea[0].style.visibility = \"hidden\";\n              return;\n            }\n\n            if (i.lastHoveredCell != r) {\n              if (i._selectRangeTimer) {\n                clearTimeout(i._selectRangeTimer);\n              }\n\n              i._selectRangeTimer = setTimeout(function () {\n                var x = i._views[i._view].type;\n\n                if (x != \"agendaView\") {\n                  i._selectRange(r, i.mousecaptureposition.clickedcell[0]);\n                }\n              }, 1);\n            }\n\n            i.lastHoveredCell = r;\n          }\n        } else {\n          if (!n) {\n            if (i.rows.length == 1 && i.rows[0].cells.length == 1) {\n              return true;\n            }\n\n            i._hoverCell(r);\n          }\n        }\n\n        return true;\n      });\n      this.addHandler(a(document), \"keydown.jqxscheduler\" + i.element.id, function (m) {\n        if (i.focused && m.ctrlKey) {\n          if (m.keyCode == 68) {\n            return false;\n          }\n        }\n      });\n      this.addHandler(this.host, \"keydown\", function (m) {\n        return i._handleKey(m);\n      });\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n        this.addHandler(this.table, \"dblclick\", function (m) {\n          i.table.trigger(\"mousedown\", m);\n        });\n      }\n\n      var j = function (K) {\n        var M = K.target;\n        var u = null;\n\n        if (i.disabled) {\n          return true;\n        }\n\n        if (!i.menu && K.which == 3) {\n          i._initMenu();\n        }\n\n        var n = i.table.coord();\n        var B = K.pageX;\n        var w = K.pageY;\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n          if (arguments && arguments.length == 2) {\n            B = arguments[1].pageX;\n            w = arguments[1].pageY;\n          }\n        }\n\n        if (i.isTouchDevice()) {\n          var N = a.jqx.position(K);\n          B = N.left;\n          w = N.top;\n\n          if (isNaN(B) || isNaN(w)) {\n            var N = a.jqx.position(K.originalEvent);\n            B = N.left;\n            w = N.top;\n          }\n        }\n\n        i.mouseDown = {\n          top: w,\n          left: B\n        };\n        var u = i.findCell(B, w);\n\n        if (K.target.nodeName.toLowerCase() === \"td\") {\n          var u = K.target;\n        } else {\n          var u = i.findCell(B, w);\n        }\n\n        var D = i._views[i._view].type;\n        var v = i._views[i._view];\n\n        if (D === \"monthView\" && v.weekViewNavigation) {\n          if (u && u.getAttribute(\"data-time-slot\")) {\n            var z = i._getDateByString(u.getAttribute(\"data-date\"));\n\n            var J = new a.jqx.date(z);\n            i.date = J;\n            i.setView(\"weekView\");\n          }\n        }\n\n        if (D === \"monthView\" && v.dayViewNavigation) {\n          var m = a(u).coord().top;\n\n          if (u && w >= m && m + 16 >= w) {\n            var z = i._getDateByString(u.getAttribute(\"data-date\"));\n\n            var J = new a.jqx.date(z);\n            i.date = J;\n            i.setView(\"dayView\");\n          }\n        }\n\n        if (K.target.nodeName.toLowerCase() === \"span\" && (K.target.className.indexOf(\"jqx-icon-arrow-down\") >= 0 || K.target.className.indexOf(\"jqx-icon-close\") >= 0)) {\n          if (K.target.mousedown) {\n            K.target.mousedown();\n          }\n\n          return true;\n        }\n\n        var t = a(u).parent();\n        var P = t.attr(\"data-key\");\n        i.mousecaptureposition = {\n          left: K.pageX,\n          top: K.pageY,\n          clickedrow: a(t).index(),\n          clickedcell: a(u)\n        };\n\n        if (K.which !== 3) {\n          i.isMouseDown = true;\n          i.isMouseDownDate = new Date();\n        } else {\n          i.isMouseDown = false;\n        }\n\n        if (i.contextMenu && i.menu && K.which !== 3) {\n          i.menu.jqxMenu(\"close\");\n          i._hasOpenedMenu = false;\n        }\n\n        var r = function (y) {\n          if (K.which === 3) {\n            if (i.contextMenu && i.menu) {\n              if (y) {\n                i.menu.find(\"li:first\").show();\n              } else {\n                i.menu.find(\"li:first\").hide();\n              }\n\n              var x = i.menu.coord();\n\n              if (i.menu.css(\"display\") == \"block\" && x.left == K.pageX && x.top == K.pageY) {\n                i._hasOpenedMenu = true;\n                K.preventDefault();\n                K.stopPropagation();\n                return;\n              }\n\n              if (D === \"agendaView\") {}\n\n              i.menuOpening = true;\n              i.menu.jqxMenu(\"open\", K.pageX, K.pageY);\n              i.menuOpening = false;\n              i._hasOpenedMenu = true;\n              K.preventDefault();\n              K.stopPropagation();\n              setTimeout(function () {\n                i.menu.jqxMenu(\"focus\");\n              }, 50);\n            }\n          }\n        };\n\n        var I = function () {\n          for (var Q = 0; Q < A.length; Q++) {\n            var y = A[Q].cells;\n\n            for (var x = 0; x < y.length; x++) {\n              y[x].removeAttribute(\"data-selected\");\n            }\n          }\n        };\n\n        var q = K.target.className.indexOf(\"jqx-scheduler-appointment\") >= 0 && K.target.className.indexOf(\"jqx-scheduler-appointment-duration-status\") == -1 && K.target.className.indexOf(\"jqx-scheduler-appointment-inner-content\") == -1 && K.target.className.indexOf(\"jqx-scheduler-appointment-status\") == -1 && K.target.className.indexOf(\"jqx-scheduler-appointment-resize-indicator\") == -1 && K.target.className.indexOf(\"jqx-scheduler-appointment-content\") == -1 ? a(K.target) : a(K.target).parents(\".jqx-scheduler-appointment\");\n\n        if (q.length == 0) {\n          q = null;\n        }\n\n        if (q && q[0].className.indexOf(\"feedback\") == -1) {\n          if (q.parents(\".jqx-scheduler-month-cell-popup\").length > 0) {\n            return true;\n          }\n\n          i.mouseDownPosition = {\n            top: w,\n            left: B\n          };\n          var H = a(q).coord();\n          i.selectedAppointmentBounds = {\n            top: H.top,\n            left: H.left,\n            width: a(q).width(),\n            height: a(q).height()\n          };\n          var N = a(q).position();\n          i.selectedAppointmentTableBounds = {\n            top: N.top,\n            left: N.left,\n            width: a(q).width(),\n            height: a(q).height()\n          };\n\n          if (!i._dragStartCell) {\n            i._dragStartCell = i.findCell(H.left, H.top);\n          }\n\n          var p = i.getJQXAppointmentByElement(q);\n\n          i._selectAppointment(p, q, \"mouse\");\n\n          i._raiseEvent(\"appointmentClick\", {\n            appointment: p.boundAppointment\n          });\n\n          i.clearSelection();\n          var s = new Date().getTime();\n          var F = 300;\n\n          if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n            F = 1000;\n          }\n\n          if (!i.clickTime) {\n            i.clickTime = new Date();\n          }\n\n          if (s - i.clickTime.getTime() < F && i._lastSelectedAppointment && p.id == i._lastSelectedAppointment.id && K.which != 3) {\n            if (!p.readOnly && !i.editRecurrenceDialog.jqxWindow(\"isOpen\") && (!i._editDialog || i._editDialog && !i._editDialog.jqxWindow(\"isOpen\"))) {\n              var C = i._initDialog(p);\n\n              if (C !== false) {\n                i._openDialog();\n              }\n            }\n\n            i.mouseDownPosition = null;\n            i.isMouseDown = false;\n\n            if (K.preventDefault) {\n              K.preventDefault();\n            }\n\n            i._raiseEvent(\"appointmentDoubleClick\", {\n              appointment: p.boundAppointment\n            });\n          } else {\n            if (!p.readOnly) {\n              if (K.which !== 3) {\n                i.focus();\n              }\n            }\n          }\n\n          i._lastSelectedAppointment = p;\n\n          if (K.preventDefault) {\n            K.preventDefault();\n          }\n\n          K.stopPropagation();\n          i.clickTime = new Date();\n\n          if (!p.readOnly) {\n            if (K.which == 3) {\n              r(true);\n            }\n          }\n\n          return;\n        } else {\n          if (K.which === 3) {\n            var O = i.getSelection();\n\n            if (O !== null) {\n              r(false);\n            } else {\n              i.clearAppointmentsSelection();\n              u.setAttribute(\"data-selected\", \"true\");\n              i._lastSelectedCell = u;\n              i.focusedCell = u;\n\n              i._updateCellsSelection(u);\n\n              r(false);\n              var L = new a.jqx.date(u.getAttribute(\"data-date\"), i.timeZone);\n\n              i._raiseEvent(\"cellClick\", {\n                cell: u,\n                date: L\n              });\n            }\n          } else {\n            if (K.which != 3) {\n              i.clearAppointmentsSelection();\n            }\n          }\n        }\n\n        if (i.view == \"agendaView\") {\n          var q = K.target.className.indexOf(\"jqx-scheduler-agenda-appointment\") != -1;\n\n          if (q) {\n            q = K.target;\n            var p = i.getJQXAppointmentByElement(q);\n\n            i._selectAppointment(p, q, \"mouse\");\n\n            i._raiseEvent(\"appointmentClick\", {\n              appointment: p.boundAppointment\n            });\n\n            var s = new Date().getTime();\n            var F = 300;\n\n            if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n              F = 1000;\n            }\n\n            if (!i.clickTime) {\n              i.clickTime = new Date();\n            }\n\n            if (s - i.clickTime.getTime() < F && i._lastSelectedAppointment && p.id == i._lastSelectedAppointment.id && K.which != 3) {\n              if (!p.readOnly && !i.editRecurrenceDialog.jqxWindow(\"isOpen\") && (!i._editDialog || i._editDialog && !i._editDialog.jqxWindow(\"isOpen\"))) {\n                var C = i._initDialog(p);\n\n                if (C !== false) {\n                  i._openDialog();\n                }\n              }\n\n              i.mouseDownPosition = null;\n              i.isMouseDown = false;\n\n              if (K.preventDefault) {\n                K.preventDefault();\n              }\n\n              i._raiseEvent(\"appointmentDoubleClick\", {\n                appointment: p.boundAppointment\n              });\n            }\n\n            i._lastSelectedAppointment = p;\n\n            if (K.preventDefault) {\n              K.preventDefault();\n            }\n\n            K.stopPropagation();\n            i.clickTime = new Date();\n\n            if (!p.readOnly) {\n              if (K.which == 3) {\n                r(true);\n              }\n            }\n          }\n        }\n\n        var E = function () {\n          if (!i.enableBrowserSelection) {\n            if (K.preventDefault) {\n              K.preventDefault();\n            }\n          }\n\n          var x = a(document).scrollTop();\n          i.host.focus();\n          a(document).scrollTop(x);\n        };\n\n        if (P !== undefined && K.which != 3) {\n          i.clickedTD = u;\n          var L = new a.jqx.date(u.getAttribute(\"data-date\"), i.timeZone);\n          var o = i.rowinfo[P];\n          var G = false;\n\n          if (o) {\n            var s = new Date().getTime();\n            var F = 300;\n\n            if (!i.clickTime) {\n              i.clickTime = new Date();\n            }\n\n            i.focus();\n\n            if (i._lastSelectedCell && i._lastSelectedCell.getAttribute(\"data-selected\") == \"true\" && u.getAttribute(\"data-selected\") === \"true\" && s - i.clickTime.getTime() < F) {\n              var L = new a.jqx.date(u.getAttribute(\"data-date\"), i.timeZone);\n\n              i._raiseEvent(\"cellDoubleClick\", {\n                cell: u,\n                date: L\n              });\n\n              G = true;\n\n              i._initDialog();\n\n              i._openDialog();\n\n              if (K.preventDefault) {\n                K.preventDefault();\n              }\n            }\n          }\n\n          var A = i.rows;\n\n          if (u.getAttribute(\"data-selected\") != \"true\" || K.shiftKey || s - i.clickTime.getTime() > F) {\n            if (u.getAttribute(\"data-time-slot\") == \"true\") {\n              return;\n            }\n\n            if (!K.shiftKey) {\n              i.shiftSelectedCell = null;\n            }\n\n            if (K.shiftKey && i._lastSelectedCell && D != \"agendaView\") {\n              if (!i.shiftSelectedCell) {\n                i.shiftSelectedCell = i._lastSelectedCell;\n              }\n\n              if (u.getAttribute(\"data-view\") === i.shiftSelectedCell.getAttribute(\"data-view\")) {\n                I();\n              }\n\n              i._selectRange(u, i.shiftSelectedCell);\n            }\n\n            if (!K.shiftKey) {\n              I();\n\n              var z = i._getDateByString(u.getAttribute(\"data-date\"));\n\n              if (z >= i.min.toDate() && z <= i.max.toDate()) {\n                u.setAttribute(\"data-selected\", \"true\");\n              } else {\n                u.setAttribute(\"data-selected\", \"false\");\n              }\n            }\n\n            a('[data-key=\"' + P + '\"]').removeClass(i.toTP(\"jqx-scheduler-selected-appointment\"));\n            i.selectedAppointment = null;\n\n            var z = i._getDateByString(u.getAttribute(\"data-date\"));\n\n            if (z >= i.min.toDate() && z <= i.max.toDate()) {\n              i._lastSelectedCell = u;\n              i.focusedCell = u;\n            }\n\n            i._updateCellsSelection(u);\n\n            if (i.openedMonthCellPopup) {\n              i.openedMonthCellPopup.remove();\n            }\n          }\n\n          i._raiseEvent(\"cellClick\", {\n            cell: u,\n            date: L\n          });\n\n          i.clickTime = new Date();\n\n          if (K.stopPropagation) {\n            K.stopPropagation();\n          }\n        }\n      };\n\n      this.addHandler(this.pinnedtable, c, function (n) {\n        var m = j(n);\n\n        if (m != undefined) {\n          return m;\n        }\n      });\n      this.addHandler(this.table, c, function (n) {\n        var m = j(n);\n\n        if (m != undefined) {\n          return m;\n        }\n      });\n    },\n    moveAppointment: function (k, c, g, f, j) {\n      var h = this;\n      var i = f.getAttribute(\"data-end-date\");\n\n      if (k) {\n        if (h.editRecurrenceDialog.jqxWindow(\"isOpen\")) {\n          return;\n        }\n\n        clearInterval(h._verticalIntervalDragVelocity);\n        clearInterval(h._horizontalIntervalDragVelocity);\n        clearInterval(h._intervalDrag);\n        clearInterval(h._horizontalIntervalDrag);\n        var d = k.duration();\n        var b = k.duration().days() >= 1 || k.allDay;\n\n        var e = function (r) {\n          if (!j) {\n            var l = h._views[h._view].type;\n            var o = h._views[h._view];\n            var p = c;\n            k.from = p;\n\n            if (l === \"dayView\" || l === \"weekView\") {\n              if (!b && !i) {\n                k.to = p.add(d);\n                k.allDay = false;\n              } else {\n                if (!b && i) {\n                  k.to = a.jqx.scheduler.utilities.getEndOfDay(p);\n                  k.allDay = true;\n                } else {\n                  if (b && i) {\n                    k.to = p.add(d);\n                  } else {\n                    if (b && !i) {\n                      var n = 30;\n                      var q = o.timeRuler && o.timeRuler.scale;\n\n                      switch (q) {\n                        case \"sixtyMinutes\":\n                        case \"hour\":\n                          n = 60;\n                          break;\n\n                        case \"fifteenMinutes\":\n                        case \"quarterHour\":\n                          n = 15;\n                          break;\n\n                        case \"tenMinutes\":\n                          n = 10;\n                          break;\n\n                        case \"fiveMinutes\":\n                          n = 5;\n                          break;\n                      }\n\n                      k.to = p.addMinutes(n);\n                      k.allDay = false;\n                    }\n                  }\n                }\n              }\n            } else {\n              if (l === \"monthView\") {\n                k.to = p.add(d);\n              } else {\n                if (l === \"timelineDayView\" || l === \"timelineWeekView\" || l === \"timelineMonthView\") {\n                  k.to = p.add(d);\n                }\n              }\n            }\n          }\n\n          h._saveChangesAfterDragOrResize(r, k, f, j);\n\n          if (g != null) {\n            k.resourceId = g;\n          }\n\n          h.table.find(\".jqx-icon-arrow-down\").hide();\n\n          if (k.allDay || b) {\n            h._renderrows();\n          } else {\n            var s = h.getViewStart();\n            var m = a.jqx.scheduler.utilities.getEndOfDay(h.getViewEnd());\n\n            h._prepareAppointmentsInView(s, m);\n\n            h._renderAppointments(s, m);\n          }\n\n          h._raiseEvent(\"appointmentChange\", {\n            appointment: k.boundAppointment\n          });\n\n          h.changedAppointments[k.id] = {\n            type: \"Update\",\n            appointment: k.boundAppointment\n          };\n\n          h._ensureAppointmentVisible(h.selectedJQXAppointment);\n        };\n\n        if (k.isRecurrentAppointment()) {\n          e(false);\n        } else {\n          e(null);\n        }\n      }\n    },\n    getAppointmentProperty: function (d, b) {\n      var e = this;\n      var c = null;\n\n      if (this.appointmentsByKey[d]) {\n        c = this.appointmentsByKey[d].jqxAppointment;\n      }\n\n      if (!c) {\n        return;\n      }\n\n      return c[b];\n    },\n    setAppointmentProperty: function (e, b, g) {\n      var f = this;\n      var c = null;\n\n      if (this.appointmentsByKey[e]) {\n        c = this.appointmentsByKey[e].jqxAppointment;\n      }\n\n      if (!c) {\n        return;\n      }\n\n      c[b] = g;\n      f.changedAppointments[e] = {\n        type: b,\n        appointment: c.boundAppointment\n      };\n\n      switch (e) {\n        case \"draggable\":\n        case \"resizable\":\n          break;\n\n        case \"background\":\n        case \"color\":\n        case \"borderColor\":\n        case \"status\":\n        case \"tooltip\":\n        case \"subject\":\n        case \"location\":\n        case \"description\":\n        case \"style\":\n          var h = f.getViewStart();\n          var d = a.jqx.scheduler.utilities.getEndOfDay(f.getViewEnd());\n\n          f._prepareAppointmentsInView(h, d);\n\n          f._renderAppointments(h, d);\n\n          break;\n\n        case \"hidden\":\n        case \"timeZone\":\n          if (c.isAllDayAppointment()) {\n            f._renderrows();\n          } else {\n            var h = f.getViewStart();\n            var d = a.jqx.scheduler.utilities.getEndOfDay(f.getViewEnd());\n\n            f._prepareAppointmentsInView(h, d);\n\n            f._renderAppointments(h, d);\n          }\n\n          break;\n\n        default:\n          f._renderrows();\n\n      }\n    },\n    deleteAppointment: function (b) {\n      if (this.appointmentsByKey[b]) {\n        this._deleteAppointment(this.appointmentsByKey[b].jqxAppointment);\n      }\n    },\n    _deleteAppointment: function (b) {\n      var g = this;\n\n      if (b.rootAppointment) {\n        if (!b.isException()) {\n          if (b.rootAppointment != null) {\n            b.rootAppointment.exceptions.push(g.editAppointment);\n            b.rootAppointment.recurrenceException.push(g.editAppointment.occurrenceFrom);\n          } else {\n            b.exceptions.push(g.editAppointment);\n            b.recurrenceException.push(g.editAppointment.occurrenceFrom);\n          }\n        } else {\n          var f = b.rootAppointment ? b.rootAppointment.exceptions : b.exceptions;\n\n          for (var e = 0; e < f.length; e++) {\n            if (f[e].occurrenceFrom.equals(g.editAppointment.occurrenceFrom)) {\n              f[e] = b;\n              break;\n            }\n          }\n        }\n\n        b.hidden = true;\n\n        g._renderrows();\n\n        return;\n      }\n\n      g._raiseEvent(\"appointmentDelete\", {\n        appointment: b.boundAppointment\n      });\n\n      var d = b.id;\n      delete g.appointmentsByKey[d];\n      var c = -1;\n\n      for (var e = 0; e < g.appointments.length; e++) {\n        if (g.appointments[e] == b.boundAppointment || g.appointments[e].id == b.boundAppointment.id) {\n          c = e;\n          break;\n        }\n      }\n\n      if (c != -1) {\n        g.appointments.splice(c, 1);\n      }\n\n      c = -1;\n\n      for (var e = 0; e < g.uiappointments.length; e++) {\n        if (g.uiappointments[e] == b || g.uiappointments[e].id == b.id) {\n          c = e;\n          break;\n        }\n      }\n\n      if (c != -1) {\n        g.uiappointments.splice(c, 1);\n      }\n\n      if (g.selectedJQXAppointment == b) {\n        g.clearAppointmentsSelection();\n\n        if (g.uiappointments[c + 1]) {\n          g.selectAppointment(g.uiappointments[c + 1].id);\n        } else {\n          if (g.uiappointments[c - 1]) {\n            g.selectAppointment(g.uiappointments[c - 1].id);\n          } else {\n            if (g.uiappointments[0]) {\n              g.selectAppointment(g.uiappointments[0].id);\n            }\n          }\n        }\n      }\n\n      g.changedAppointments[d] = {\n        type: \"Delete\",\n        appointment: b.boundAppointment\n      };\n\n      g._renderrows();\n    },\n    addAppointment: function (o) {\n      var g = this;\n\n      if (!o.scheduler) {\n        o.scheduler = this;\n      }\n\n      if (!o.duration) {\n        if (!o.from && !o.to || !o.appointmentObject) {\n          var f = o;\n          var d = {};\n          var e = [\"from\", \"to\", \"id\", \"style\", \"description\", \"location\", \"subject\", \"background\", \"color\", \"borderColor\", \"recurrencePattern\", \"recurrenceException\", \"draggable\", \"resizable\", \"tooltip\", \"hidden\", \"allDay\", \"timeZone\", \"ownerId\", \"resourceId\"];\n\n          for (var w in g.appointmentDataFields) {\n            var b = g.appointmentDataFields[w];\n            var q = f[b];\n\n            if (w == \"from\" || w == \"to\") {\n              q = new a.jqx.date(q);\n            }\n\n            if (w == \"style\") {\n              if (q) {\n                var k = g.getAppointmentColors(q);\n                d.color = k.color;\n                d.background = k.background;\n                d.borderColor = k.border;\n              }\n            }\n\n            if (w == \"recurrencePattern\") {\n              if (q) {\n                q = new a.jqx.scheduler.recurrencePattern(q);\n                q.timeZone = f.timeZone || g.timeZone;\n              }\n            }\n\n            if (w == \"recurrenceException\") {\n              var t = new Array();\n\n              if (q) {\n                if (q.indexOf(\"EXDATE:\") >= 0) {\n                  q = q.substring(q.indexOf(\"EXDATE:\") + 7);\n                }\n\n                var l = new Array();\n\n                if (q.indexOf(\",\") >= 0) {\n                  l = q.split(\",\");\n                } else {\n                  l.push(q);\n                }\n\n                for (var s = 0; s < l.length; s++) {\n                  var p = l[s];\n\n                  if (p.indexOf(\";\") >= 0) {\n                    var h = p.split(\";\")[1];\n                    p = p.split(\";\")[0];\n\n                    if (h.toLowerCase().indexOf(\"display\") >= 0 && h.toLowerCase().indexOf(\"none\")) {\n                      d.hidden = true;\n                    }\n                  }\n\n                  try {\n                    var u = a.jqx.scheduler.utilities.untilStringToDate(p);\n\n                    if (u != \"Invalid Date\") {\n                      if (d.timeZone) {\n                        u = new a.jqx.date(u, d.timeZone);\n                      } else {\n                        if (g.timeZone) {\n                          u = u.toTimeZone(g.timeZone);\n                        } else {\n                          u = new a.jqx.date(u);\n                        }\n                      }\n                    }\n                  } catch (v) {\n                    var u = new a.jqx.date(p, g.timeZone);\n                  }\n\n                  t.push(u);\n                }\n              }\n\n              q = t;\n            }\n\n            d[w] = q;\n          }\n\n          for (var m in e) {\n            var w = e[m];\n\n            if (d[w] == undefined) {\n              var q = \"\";\n\n              if (w == \"originalData\") {\n                continue;\n              }\n\n              if (w == \"ownerId\") {\n                q = null;\n              }\n\n              if (w == \"timeZone\") {\n                q = null;\n              }\n\n              if (w == \"recurrencePattern\") {\n                q = null;\n              }\n\n              if (w == \"recurrenceException\") {\n                q = null;\n              }\n\n              if (w == \"allDay\") {\n                q = false;\n              }\n\n              if (w == \"draggable\") {\n                q = true;\n              }\n\n              if (w == \"resizable\") {\n                q = true;\n              }\n\n              if (w == \"hidden\") {\n                q = false;\n              }\n\n              if (w == \"resourceId\") {\n                q = null;\n              }\n\n              if (w == \"from\") {\n                q = new a.jqx.date();\n              }\n\n              if (w == \"to\") {\n                q = new a.jqx.date().addHours(1);\n              }\n\n              d[w] = q;\n            }\n          }\n\n          d.originalData = f;\n          d.scheduler = this;\n          var o = new a.jqx.scheduler.appointment(d);\n\n          if (d.timeZone) {\n            o.from = o.from.toTimeZone(d.timeZone);\n            o.to = o.to.toTimeZone(d.timeZone);\n          }\n\n          if (g.timeZone) {\n            if (!d.timeZone) {\n              o.timeZone = g.timeZone;\n            }\n\n            o.from = o.from.toTimeZone(g.timeZone);\n            o.to = o.to.toTimeZone(g.timeZone);\n          } else {\n            o.from = o.from.toTimeZone(null);\n            o.to = o.to.toTimeZone(null);\n          }\n        } else {\n          var i = new a.jqx.scheduler.appointment();\n\n          for (var w in o) {\n            i[w] = o[w];\n          }\n\n          o = i;\n        }\n      }\n\n      var w = g.dataview.generatekey();\n      o.id = w;\n      g.appointmentsByKey[w] = o;\n      g.appointments.push(o);\n      var c = {};\n      var j = {};\n\n      for (var r in g.appointmentDataFields) {\n        var b = g.appointmentDataFields[r];\n        var q = o[r];\n        c[r] = q;\n\n        if (r == \"from\" || r == \"to\") {\n          if (q.toDate) {\n            q = q.toDate();\n          } else {\n            q = new a.jqx.date(q).toDate();\n          }\n        }\n\n        j[b] = q;\n      }\n\n      c.originalData = j;\n      o.boundAppointment = c;\n      c.jqxAppointment = o;\n      o.jqxAppointment = o;\n\n      g._raiseEvent(\"appointmentAdd\", {\n        appointment: o.boundAppointment\n      });\n\n      g.uiappointments.push(o);\n      g.changedAppointments[w] = {\n        type: \"Add\",\n        appointment: o.boundAppointment\n      };\n\n      if (g.hiddenResources && g.hiddenResources[o.resourceId]) {\n        g.hideAppointmentsByResource(o.resourceId);\n      } else {\n        g._renderrows();\n      }\n\n      g._selectAppointment(o);\n\n      g._lastSelectedAppointment = o;\n\n      if (g.resources) {\n        var n = o.resourceId;\n\n        if (g._resources.indexOf(n) === -1) {\n          g._resources.push(n);\n\n          g._renderrows();\n        }\n      }\n    },\n    _updateCellsSelection: function () {\n      var f = this;\n      var l = f.rows;\n      var b = 0;\n      var c = 0;\n\n      if (b > 0 && f.rtl) {\n        b = 0;\n        c = 1;\n      }\n\n      for (var e = 0; e < l.length; e++) {\n        var k = l[e].cells;\n\n        for (var d = b; d < k.length - c; d++) {\n          var h = k[d];\n\n          if (h.getAttribute(\"data-selected\") == \"true\") {\n            var g = h.jqxClassName || h.className;\n\n            if (g.indexOf(\"jqx-fill-state-pressed\") >= 0) {\n              if (h != f.focusedCell) {\n                g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n                g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n              } else {\n                if (h == f.focusedCell && f.focused) {\n                  g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n                  g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n\n                  if (!f.selectedAppointment) {\n                    g = g += \" \" + f.toTP(\"jqx-scheduler-cell-focus\");\n                  }\n                }\n              }\n\n              if (h.className != g) {\n                h.className = g;\n              }\n\n              h.jqxClassName = g;\n              continue;\n            }\n\n            g = g.replace(\" jqx-fill-state-pressed\", \"\");\n            g = g.replace(\" jqx-fill-state-pressed-\" + f.theme, \"\");\n            g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n            g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n            g = g.replace(\" jqx-grid-cell-selected\", \"\");\n            g = g.replace(\" jqx-grid-cell-selected-\" + f.theme, \"\");\n            g = g.replace(\" jqx-scheduler-cell-selected\", \"\");\n            g = g.replace(\" jqx-scheduler-cell-selected-\" + f.theme, \"\");\n            g = g += \" \" + f.toTP(\"jqx-fill-state-pressed jqx-grid-cell-selected jqx-scheduler-cell-selected\");\n\n            if (h == f.focusedCell && f.focused && !f.selectedAppointment) {\n              g = g += \" \" + f.toTP(\"jqx-scheduler-cell-focus\");\n            }\n\n            if (h.className != g) {\n              h.className = g;\n            }\n\n            h.jqxClassName = g;\n          } else {\n            var g = h.jqxClassName || h.className;\n\n            if (g.indexOf(\"jqx-fill-state-pressed\") == -1) {\n              if (h != f.focusedCell) {\n                g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n                g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n              } else {\n                if (h == f.focusedCell && f.focused) {\n                  g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n                  g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n\n                  if (!f.selectedAppointment) {\n                    g = g += \" \" + f.toTP(\"jqx-scheduler-cell-focus\");\n                  }\n                }\n              }\n\n              if (h.className != g) {\n                h.className = g;\n              }\n\n              h.jqxClassName = g;\n              continue;\n            } else {\n              if (h == f.focusedCell && f.focused) {\n                g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n                g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n\n                if (!f.selectedAppointment) {\n                  g = g += \" \" + f.toTP(\"jqx-scheduler-cell-focus\");\n                }\n\n                if (h.className != g) {\n                  h.className = g;\n                }\n\n                h.jqxClassName = g;\n              }\n            }\n\n            g = g.replace(\" jqx-fill-state-pressed\", \"\");\n            g = g.replace(\" jqx-fill-state-pressed-\" + f.theme, \"\");\n            g = g.replace(\" jqx-scheduler-cell-focus\", \"\");\n            g = g.replace(\" jqx-scheduler-cell-focus-\" + f.theme, \"\");\n            g = g.replace(\" jqx-grid-cell-selected\", \"\");\n            g = g.replace(\" jqx-grid-cell-selected-\" + f.theme, \"\");\n            g = g.replace(\" jqx-scheduler-cell-selected\", \"\");\n            g = g.replace(\" jqx-scheduler-cell-selected-\" + f.theme, \"\");\n\n            if (h == f.focusedCell && f.focused && !f.selectedAppointment) {\n              g = g += \" \" + f.toTP(\"jqx-scheduler-cell-focus\");\n            }\n\n            if (h.className != g) {\n              h.className = g;\n            }\n\n            h.jqxClassName = g;\n            h.removeAttribute(\"data-selected\");\n          }\n        }\n      }\n    },\n    _getuikey: function (c, f) {\n      var e = null;\n      var d = this.table[0].rows;\n      e = a(d[c]).attr(\"data-key\");\n\n      if (a(d[c]).attr(\"data-role\")) {\n        var b = a(d[c]);\n\n        if (f == \"next\") {\n          while (b) {\n            b = b.next();\n\n            if (b) {\n              var g = b.attr(\"data-role\");\n\n              if (!g) {\n                e = b.attr(\"data-key\");\n                return e;\n              }\n            }\n          }\n        } else {\n          if (f == \"prev\") {\n            while (b) {\n              b = b.prev();\n\n              if (b) {\n                var g = b.attr(\"data-role\");\n\n                if (!g) {\n                  e = b.attr(\"data-key\");\n                  return e;\n                }\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n\n      return e;\n    },\n    getRows: function () {\n      var h = this._views[this._view].type;\n      var k = this._views[this._view];\n      var d = \"halfHour\";\n\n      if (k.timeRuler && k.timeRuler.scale) {\n        d = k.timeRuler.scale;\n      }\n\n      var j = 24;\n      var b = this.showAllDayRow;\n\n      if (k.timeRuler && (h === \"dayView\" || h === \"weekView\")) {\n        var c = 0;\n        var f = 23;\n\n        if (k.timeRuler.scaleStartHour != undefined) {\n          var c = parseInt(k.timeRuler.scaleStartHour);\n        }\n\n        if (k.timeRuler.scaleEndHour != undefined) {\n          var f = parseInt(k.timeRuler.scaleEndHour);\n        }\n\n        if (c < 0) {\n          c = 0;\n        }\n\n        if (f < 0) {\n          f = 23;\n        }\n\n        if (c > 23) {\n          c = 0;\n        }\n\n        if (f > 23) {\n          f = 23;\n        }\n\n        j = f - c + 1;\n\n        if (k.timeRuler.showAllDayRow != undefined) {\n          b = k.timeRuler.showAllDayRow;\n        }\n      }\n\n      var l = new Array();\n      var g = 0;\n\n      switch (h) {\n        case \"dayView\":\n        case \"weekView\":\n        default:\n          var g = j * 2;\n\n          if (d === \"hour\" || d === \"sixtyMinutes\") {\n            var g = j;\n          } else {\n            if (d === \"quarterHour\" || d === \"fifteenMinutes\") {\n              var g = j * 4;\n            } else {\n              if (d === \"tenMinutes\") {\n                var g = j * 6;\n              } else {\n                if (d === \"fiveMinutes\") {\n                  var g = j * 12;\n                }\n              }\n            }\n          }\n\n          if (b) {\n            g++;\n          }\n\n          break;\n\n        case \"monthView\":\n          var g = 6;\n          break;\n\n        case \"timelineDayView\":\n        case \"timelineWeekView\":\n        case \"timelineMonthView\":\n          var g = 1;\n          break;\n\n        case \"agendaView\":\n          var g = this.appointments ? this.appointments.length : 0;\n          break;\n      }\n\n      for (var e = 0; e < g; e++) {\n        l.push({\n          uid: e\n        });\n      }\n\n      return l;\n    },\n    _getDateByString: function (j) {\n      var e = j.split(\" \");\n      var l = e[0].split(\"-\");\n      var h = e[1].split(\":\");\n      var g = parseInt(l[0], 10);\n      var f = parseInt(l[1], 10) - 1;\n      var i = parseInt(l[2], 10);\n      var d = parseInt(h[0], 10);\n      var c = parseInt(h[1], 10);\n      var k = parseInt(h[2], 10);\n      var b = new Date(g, f, i, d, c, k);\n\n      if (g < 1970) {\n        b.setFullYear(g, f, i);\n      }\n\n      return b;\n    },\n    _getCellByDate: function (b, d, c) {\n      var m = this.rows;\n\n      if (d === undefined) {\n        d = false;\n      }\n\n      if (c === undefined) {\n        if (this.focusedCell) {\n          c = this.focusedCell.getAttribute(\"data-view\");\n        }\n      }\n\n      for (var g = 0; g < m.length; g++) {\n        var l = m[g];\n\n        if (l.element.getAttribute(\"data-group-row\")) {\n          continue;\n        }\n\n        for (var f = 0; f < l.cells.length; f++) {\n          var k = l.cells[f];\n\n          if (k.getAttribute(\"rowspan\") != null) {\n            continue;\n          }\n\n          if (k.getAttribute(\"data-view\") !== c) {\n            continue;\n          }\n\n          if (k.getAttribute(\"data-time-slot\")) {\n            continue;\n          }\n\n          if (d && k.getAttribute(\"data-end-date\") != null) {\n            continue;\n          }\n\n          var h = k.getAttribute(\"data-date\");\n\n          var e = this._getDateByString(h);\n\n          if (e.valueOf() == b.valueOf()) {\n            return k;\n          }\n        }\n      }\n    },\n    _rendercelltexts: function () {\n      if (a.jqx.credits !== \"75CE8878-FCD1-4EC7-9249-BA0F153A5DE8\") {\n        var c = \"www.jqwidgets.com\";\n\n        if (location.hostname.indexOf(c.substring(4)) == -1) {\n          if (this._gridRenderElement) {\n            a(this._gridRenderElement).remove();\n          }\n\n          var d = String.fromCharCode(83, 80, 65, 78);\n          var b = String.fromCharCode(72, 84, 84, 80, 58, 47, 47);\n          var e = document.createElement(d);\n          e.id = a.jqx.utilities.createId();\n          e.innerHTML = c;\n          e.style.position = \"absolute\";\n          e.style.right = \"5px\";\n          e.style.bottom = \"5px\";\n          e.style.color = \"#909090\";\n          e.style.cursor = \"pointer\";\n          e.style.zIndex = \"999999\";\n          e.style.display = \"none\";\n          e.style.fontSize = \"9px\";\n\n          e.onmousedown = function () {\n            open(b + c);\n          };\n\n          this.content[0].appendChild(e);\n          this._gridRenderElement = e;\n        }\n      }\n    },\n    _handleKey: function (s) {\n      if (this._loading) {\n        return true;\n      }\n\n      var t = s.shiftKey;\n      var m = s.ctrlKey || s.metaKey;\n      var i = this;\n      var w = s.charCode ? s.charCode : s.keyCode ? s.keyCode : 0;\n\n      if (i._hasOpenedMenu) {\n        if (w == 27) {\n          i.closeMenu();\n        } else {\n          i.menu.jqxMenu(\"focus\");\n        }\n\n        return true;\n      }\n\n      if (w === 13 || i.selectedAppointment && w == 46) {\n        if (i.editRecurrenceDialog && i.editRecurrenceDialog.jqxWindow(\"isOpen\")) {\n          return true;\n        }\n\n        if (i._editDialog && i._editDialog.jqxWindow(\"isOpen\")) {\n          return true;\n        }\n\n        if (!i.selectedAppointment) {\n          i._initDialog();\n\n          i._openDialog();\n        } else {\n          var c = i.getJQXAppointmentByElement(i.selectedAppointment);\n\n          if (!c.readOnly) {\n            if (w == 46) {\n              var o = i._initDialog(c, \"delete\");\n\n              if (o !== false) {\n                i._openDialog();\n              }\n            } else {\n              var o = i._initDialog(c);\n\n              if (o !== false) {\n                i._openDialog();\n              }\n            }\n          }\n        }\n      }\n\n      if (w === 27) {\n        if (i.dragOrResize) {\n          i.table.find(\".jqx-icon-arrow-down\").hide();\n          var f = i.getViewStart();\n          var e = a.jqx.scheduler.utilities.getEndOfDay(i.getViewEnd());\n\n          i._prepareAppointmentsInView(f, e);\n\n          i._renderAppointments(f, e);\n\n          i._removeFeedbackAndStopResize();\n\n          return false;\n        }\n      }\n\n      var r = function (z) {\n        var B = i.selectedAppointment;\n        var y = i.getJQXAppointmentByElement(B);\n        var x = y.elements[0].cells[0].cell;\n        var L = y.elements[y.elements.length - 1].cells[y.elements[y.elements.length - 1].cells.length - 1].cell;\n        var E = i.rows[i.rows.length - 1].cells[i.rows[i.rows.length - 1].cells.length - 1];\n\n        if (t || !t && !m && (z == \"down\" || z == \"right\")) {\n          x = L;\n        }\n\n        var H = i._views[i._view].type;\n        var G = i._views[i._view];\n        var I = x;\n\n        switch (z) {\n          case \"left\":\n            var D = i.rowByCell[x.getAttribute(\"data-key\")];\n            var F = D.indexOf(x);\n\n            if (F > 0 && !t) {\n              I = D.cells[F - 1];\n            } else {\n              if (H == \"monthView\" && !t) {\n                var A = D.aboveRow;\n\n                if (A) {\n                  I = A.cells[A.cells.length - 1];\n                }\n              }\n            }\n\n            break;\n\n          case \"right\":\n            var D = i.rowByCell[x.getAttribute(\"data-key\")];\n            var F = D.indexOf(x);\n\n            if (F < D.cells.length - 1) {\n              I = D.cells[F + 1];\n            } else {\n              if (H == \"monthView\") {\n                var P = D.belowRow;\n\n                if (P) {\n                  I = P.cells[0];\n                }\n              }\n            }\n\n            if (H == \"monthView\" && !t && m && L == E) {\n              I = x;\n            }\n\n            break;\n\n          case \"up\":\n            var D = i.rowByCell[x.getAttribute(\"data-key\")];\n            var F = D.indexOf(x);\n            var A = D.aboveRow;\n\n            if (A && !t) {\n              I = A.cells[F];\n            }\n\n            break;\n\n          case \"down\":\n            var D = i.rowByCell[x.getAttribute(\"data-key\")];\n            var F = D.indexOf(x);\n            var P = D.belowRow;\n\n            if (P) {\n              I = P.cells[F];\n            }\n\n            break;\n        }\n\n        var N = I.getAttribute(\"data-date\");\n        var M = new a.jqx.date(N, i.timeZone);\n        var H = a(I).attr(\"data-view\");\n\n        var J = i._resources[parseInt(H) - 1];\n\n        if (t) {\n          var H = i._views[i._view].type;\n          var G = i._views[i._view];\n          var C = false;\n\n          if (H === \"dayView\" || H === \"weekView\") {\n            if (x.getAttribute(\"data-end-date\")) {\n              if (z == \"left\" && (y.elements[0].cells.length > 1 || i.rtl)) {\n                if (!i.rtl) {\n                  y.to = a.jqx.scheduler.utilities.getEndOfDay(M.addDays(-1));\n                } else {\n                  y.to = a.jqx.scheduler.utilities.getEndOfDay(M.addDays(1));\n                }\n\n                C = true;\n              } else {\n                if (z == \"right\") {\n                  if (!i.rtl || i.rtl && y.elements[0].cells.length > 1) {\n                    y.to = a.jqx.scheduler.utilities.getEndOfDay(M);\n                  }\n\n                  C = true;\n                }\n              }\n            } else {\n              if (z == \"up\" && y.elements[0].cells.length > 1) {\n                y.to = M;\n                C = true;\n              } else {\n                if (z == \"down\") {\n                  y.to = M.addMinutes(i.getMinutesPerScale());\n                  C = true;\n                }\n              }\n            }\n          } else {\n            if (H.indexOf(\"month\") >= 0) {\n              if (z == \"left\" && (y.elements[0].cells.length > 1 || y.elements.length > 1)) {\n                y.to = a.jqx.scheduler.utilities.getEndOfDay(M.addDays(-1));\n                C = true;\n              } else {\n                if (z == \"right\") {\n                  y.to = a.jqx.scheduler.utilities.getEndOfDay(M);\n                  C = true;\n                }\n              }\n            } else {\n              if (!i.rtl && z == \"left\" && y.elements[0].cells.length > 1 || i.rtl && z == \"right\" && y.elements[0].cells.length > 1) {\n                y.to = M;\n\n                if (i.rtl) {\n                  y.to = M.addMinutes(i.getMinutesPerScale());\n                }\n\n                C = true;\n              } else {\n                if (!i.rtl && z == \"right\" || i.rtl && z == \"left\") {\n                  y.to = M.addMinutes(i.getMinutesPerScale());\n\n                  if (i.rtl) {\n                    y.to = y.to.addMinutes(i.getMinutesPerScale());\n                  }\n\n                  C = true;\n                }\n              }\n            }\n          }\n\n          if (C) {\n            i.moveAppointment(y, M, J, I, true);\n          }\n        } else {\n          if (m) {\n            i.moveAppointment(y, M, J, I);\n          } else {\n            i.clearAppointmentsSelection();\n            var K = true;\n\n            if (z == \"down\") {\n              K = false;\n            }\n\n            i.selectCell(M, K, H);\n\n            i._ensureVisible(I);\n          }\n        }\n\n        if (i.selectedAppointment) {\n          i.selectedAppointment.removeClass(i.toTP(\"jqx-scheduler-selected-appointment\"));\n          var O = i.selectedAppointment.attr(\"data-key\");\n          a('[data-key=\"' + O + '\"]').addClass(i.toTP(\"jqx-scheduler-selected-appointment\"));\n          i.clearSelection();\n        }\n      };\n\n      if (s.altKey && i._resourcesElements && i._resources && i._resources.length > 0) {\n        var g = function (x) {\n          var y = i._resourcesElements.bottom[x];\n\n          if (y.attr(\"data-toggle\") == \"on\") {\n            i.hideAppointmentsByResource(x);\n          } else {\n            i.showAppointmentsByResource(x);\n          }\n        };\n\n        var j = w >= 49 && w <= 58 ? j = w - 48 : -1;\n\n        if (j >= 1) {\n          a.each(i._resources, function (x, y) {\n            if (x == j - 1) {\n              g(y);\n              return false;\n            }\n          });\n          return false;\n        }\n      }\n\n      if (s.ctrlKey) {\n        if (!i.selectedAppointment) {\n          if (w == 37) {\n            i.toolbarLeftButton.trigger(\"click\");\n\n            i._ensureVisible(i.focusedCell);\n\n            return false;\n          } else {\n            if (w == 39) {\n              i.toolbarRightButton.trigger(\"click\");\n\n              i._ensureVisible(i.focusedCell);\n\n              return false;\n            }\n          }\n        }\n\n        if (w == 49) {\n          i._setView(0);\n\n          return false;\n        } else {\n          if (w == 50) {\n            i._setView(1);\n\n            return false;\n          } else {\n            if (w == 51) {\n              i._setView(2);\n\n              return false;\n            } else {\n              if (w == 52) {\n                i._setView(3);\n\n                return false;\n              } else {\n                if (w == 53) {\n                  i._setView(4);\n\n                  return false;\n                } else {\n                  if (w == 54) {\n                    i._setView(5);\n\n                    return false;\n                  } else {\n                    if (w == 68) {\n                      i.dateTimeInput.jqxDateTimeInput(\"open\");\n                      return false;\n                    } else {\n                      if (w == 77) {\n                        i.openMenu();\n                        return false;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (w == 9) {\n        if (!s.shiftKey) {\n          if (i.selectedAppointment) {\n            i.clearSelection();\n            var d = i.selectedAppointment;\n            var c = i.getJQXAppointmentByElement(d);\n            var h = i.tabKeyAppointments.indexOf(c);\n\n            if (h < i.tabKeyAppointments.length - 1) {\n              c = i.tabKeyAppointments[h + 1];\n\n              i._selectAppointment(c);\n\n              i._lastSelectedAppointment = c;\n\n              i._ensureAppointmentVisible(c);\n\n              return false;\n            } else {\n              i.clearAppointmentsSelection();\n              return true;\n            }\n          } else {\n            var c = i.tabKeyAppointments[0];\n\n            if (c) {\n              i._selectAppointment(c);\n\n              i._lastSelectedAppointment = c;\n\n              i._ensureAppointmentVisible(c);\n\n              return false;\n            } else {\n              if (!i.focusedCell) {\n                i._updateFocusedCell();\n\n                i._ensureVisible(i.focusedCell);\n\n                return false;\n              } else {\n                if (i.focusedCell) {\n                  if (i.focusedCell.className.indexOf(\"-focus\") == -1) {\n                    i._updateCellsSelection();\n\n                    i._ensureVisible(i.focusedCell);\n\n                    return false;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (i.selectedAppointment) {\n            i.clearSelection();\n            var d = i.selectedAppointment;\n            var c = i.getJQXAppointmentByElement(d);\n\n            if (c) {\n              var h = i.tabKeyAppointments.indexOf(c);\n\n              if (h > 0) {\n                c = i.tabKeyAppointments[h - 1];\n\n                i._selectAppointment(c);\n\n                i._lastSelectedAppointment = c;\n\n                i._ensureAppointmentVisible(c);\n\n                return false;\n              } else {\n                i.clearAppointmentsSelection();\n\n                if (!i.focusedCell) {\n                  i._updateFocusedCell();\n\n                  i._ensureVisible(i.focusedCell);\n\n                  return false;\n                } else {\n                  if (i.focusedCell) {\n                    if (i.focusedCell.className.indexOf(\"-focus\") == -1) {\n                      i._updateCellsSelection();\n\n                      i._ensureVisible(i.focusedCell);\n\n                      return false;\n                    }\n                  }\n                }\n\n                return true;\n              }\n            }\n          } else {\n            if (!i.focusedCell) {\n              i._updateFocusedCell();\n\n              i._ensureVisible(i.focusedCell);\n            } else {\n              if (i.focusedCell) {\n                if (i.focusedCell.className.indexOf(\"-focus\") == -1) {\n                  i._updateCellsSelection();\n\n                  i._ensureVisible(i.focusedCell);\n\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (i.selectedAppointment) {\n        if (w == 37) {\n          r(\"left\");\n        } else {\n          if (w == 38) {\n            r(\"up\");\n          } else {\n            if (w == 40) {\n              r(\"down\");\n            } else {\n              if (w == 39) {\n                r(\"right\");\n              }\n            }\n          }\n        }\n\n        if (w >= 37 && w <= 40) {\n          return false;\n        }\n\n        return;\n      }\n\n      var k = this._lastSelectedCell;\n\n      if (!k) {\n        return;\n      }\n\n      if (!a(this._lastSelectedCell).parent()[0]) {\n        this._lastSelectedCell = this.rows[0].cells[0];\n        k = this._lastSelectedCell;\n      }\n\n      var n = this.rows;\n      var p = this._views[this._view].type;\n      var l = this._views[this._view];\n      var v = \"halfHour\";\n\n      if (l.timeRuler && l.timeRuler.scale) {\n        v = l.timeRuler.scale;\n      }\n\n      var q = function (K, F) {\n        var B = 30;\n\n        switch (v) {\n          case \"sixtyMinutes\":\n          case \"hour\":\n            B = 60;\n            break;\n\n          case \"thirtyMinutes\":\n          case \"halfHour\":\n            B = 30;\n            break;\n\n          case \"fifteenMinutes\":\n          case \"quarterHour\":\n            B = 15;\n            break;\n\n          case \"tenMinutes\":\n            B = 10;\n            break;\n\n          case \"fiveMinutes\":\n            B = 5;\n            break;\n        }\n\n        var I = K.getAttribute(\"data-date\");\n\n        var H = function (U, N, P) {\n          if (U && (U.getAttribute(\"rowspan\") == null || p == \"agendaView\") && U.getAttribute(\"data-time-slot\") == null) {\n            if (P < i.min || P > i.max) {\n              return;\n            }\n\n            var S = i.rows;\n            var R = i._lastSelectedCell;\n            i._lastSelectedCell = U;\n\n            if (s.shiftKey && i._lastSelectedCell) {\n              if (!i.shiftSelectedCell) {\n                i.shiftSelectedCell = k;\n              }\n            } else {\n              if (!s.shiftKey) {\n                i.shiftSelectedCell = null;\n              }\n            }\n\n            if (!i.shiftSelectedCell) {\n              for (var Q = 0; Q < S.length; Q++) {\n                var T = S[Q];\n\n                if (T.element.getAttribute(\"data-group-row\")) {\n                  continue;\n                }\n\n                for (var O = 0; O < T.cells.length; O++) {\n                  var N = T.cells[O];\n                  N.removeAttribute(\"data-selected\", \"false\");\n                }\n              }\n\n              U.setAttribute(\"data-selected\", \"true\");\n              i.focusedCell = U;\n            } else {\n              if (U.getAttribute(\"data-end-date\") && i.shiftSelectedCell.getAttribute(\"data-end-date\")) {\n                i.focusedCell = U;\n\n                i._selectRange(U, i.shiftSelectedCell);\n              } else {\n                if (!U.getAttribute(\"data-end-date\") && !i.shiftSelectedCell.getAttribute(\"data-end-date\")) {\n                  i.focusedCell = U;\n\n                  i._selectRange(U, i.shiftSelectedCell);\n                } else {\n                  i.focusedCell = R;\n                  i._lastSelectedCell = R;\n                }\n              }\n            }\n\n            i._ensureVisible(i.focusedCell);\n          }\n        };\n\n        var y = new a.jqx.date(I, i.timeZone);\n        var z = K.getAttribute(\"data-view\");\n\n        switch (F) {\n          case \"left\":\n            var M = i.rowByCell[K.getAttribute(\"data-key\")];\n            var E = M.indexOf(K);\n\n            if (E > 0) {\n              var C = M.cells[E - 1];\n              var J = new a.jqx.date(C.getAttribute(\"data-date\"), i.timeZone);\n            }\n\n            H(C, K, J);\n            break;\n\n          case \"right\":\n            var M = i.rowByCell[K.getAttribute(\"data-key\")];\n            var E = M.indexOf(K);\n\n            if (E < M.cells.length - 1) {\n              var C = M.cells[E + 1];\n              var J = new a.jqx.date(C.getAttribute(\"data-date\"), i.timeZone);\n            }\n\n            H(C, K, J);\n            break;\n\n          case \"up\":\n            var M = i.rowByCell[K.getAttribute(\"data-key\")];\n            var E = M.indexOf(K);\n            var x = M.aboveRow;\n\n            if (x) {\n              var C = x.cells[E];\n\n              if (E == 0 && C.getAttribute(\"rowspan\")) {\n                var G = -1 + i.rows.indexOf(M);\n                var C = K;\n\n                while (G >= 0) {\n                  if (i.rows[G].cells[0] == C) {\n                    G--;\n                  } else {\n                    C = i.rows[G].cells[0];\n                    break;\n                  }\n                }\n              }\n\n              var J = new a.jqx.date(C.getAttribute(\"data-date\"), i.timeZone);\n              H(C, K, J);\n            }\n\n            break;\n\n          case \"down\":\n            var M = i.rowByCell[K.getAttribute(\"data-key\")];\n            var E = M.indexOf(K);\n            var D = M.belowRow;\n\n            if (D) {\n              var C = D.cells[E];\n\n              if (E == 0 && C.getAttribute(\"rowspan\")) {\n                var G = 1 + i.rows.indexOf(M);\n                var C = K;\n\n                while (G < i.rows.length) {\n                  if (i.rows[G].cells[0] == C) {\n                    G++;\n                  } else {\n                    C = i.rows[G].cells[0];\n                    break;\n                  }\n                }\n              }\n\n              var J = new a.jqx.date(C.getAttribute(\"data-date\"), i.timeZone);\n              H(C, K, J);\n            }\n\n            break;\n\n          case \"home\":\n            var M = i.rowByCell[K.getAttribute(\"data-key\")];\n            var E = M.indexOf(K);\n            var A = i.rows[0];\n            var C = A.cells[E];\n            var J = new a.jqx.date(C.getAttribute(\"data-date\"), i.timeZone);\n            H(C, K, J);\n            break;\n\n          case \"end\":\n            var M = i.rowByCell[K.getAttribute(\"data-key\")];\n            var E = M.indexOf(K);\n            var L = i.rows[i.rows.length - 1];\n            var C = L.cells[E];\n            var J = new a.jqx.date(C.getAttribute(\"data-date\"), i.timeZone);\n            H(C, K, J);\n            break;\n        }\n\n        i._updateCellsSelection();\n      };\n\n      var u = function () {\n        q(k, \"home\");\n      };\n\n      var b = function () {\n        q(k, \"end\");\n      };\n\n      if (w == 36 || m && w == 38) {\n        u();\n        return false;\n      } else {\n        if (w == 35 || m && w == 40) {\n          b();\n          return false;\n        } else {\n          if (w == 37) {\n            if (i.selectedAppointment) {\n              r(k, \"left\");\n            } else {\n              q(k, \"left\");\n            }\n\n            return false;\n          } else {\n            if (w == 38) {\n              if (i.selectedAppointment) {\n                r(k, \"up\");\n              } else {\n                q(k, \"up\");\n              }\n\n              return false;\n            } else {\n              if (w == 40) {\n                if (i.selectedAppointment) {\n                  r(k, \"down\");\n                } else {\n                  q(k, \"down\");\n                }\n\n                return false;\n              } else {\n                if (w == 39) {\n                  if (i.selectedAppointment) {\n                    r(k, \"right\");\n                  } else {\n                    q(k, \"right\");\n                  }\n\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    getSelectedCells: function () {\n      var g = this;\n      var h = g.rows;\n      var f = h.length;\n      var b = new Array();\n\n      for (var e = 0; e < f; e++) {\n        var d = h[e].cells;\n\n        for (var c = 0; c < d.length; c++) {\n          if (d[c].getAttribute(\"data-selected\")) {\n            b.push(d[c]);\n          }\n        }\n      }\n\n      return b.sort(function (i, j) {\n        return g._sortByDate(i, j);\n      });\n    },\n    getSelection: function () {\n      var e = this;\n      var b = e.getSelectedCells();\n\n      if (b.length == 0) {\n        return null;\n      }\n\n      var h = b[0].getAttribute(\"data-date\");\n      var g = b[b.length - 1].getAttribute(\"data-date\");\n      var d = e.getMinutesPerScale();\n      var c = e._views[e._view].type;\n\n      if (c.toLowerCase().indexOf(\"month\") >= 0) {\n        d = 0;\n      }\n\n      if (b[0].getAttribute(\"data-end-date\")) {\n        d = 0;\n      }\n\n      g = new a.jqx.date(g, e.timeZone).addMinutes(d);\n      var c = parseInt(b[0].getAttribute(\"data-view\")) - 1;\n      var f = e._resources[c];\n\n      if (e._views[e._view].type.toLowerCase().indexOf(\"month\") >= 0) {\n        return {\n          from: new a.jqx.date(h, e.timeZone),\n          to: a.jqx.scheduler.utilities.getEndOfDay(g),\n          resourceId: f\n        };\n      }\n\n      if (e._views[e._view].type.toLowerCase().indexOf(\"day\") >= 0 || e._views[e._view].type.toLowerCase().indexOf(\"week\") >= 0) {\n        h = new a.jqx.date(h, e.timeZone);\n\n        if (g.minute() === 0 && g.hour() === 0 && h.hour() === 0 && h.minute() === 0) {\n          if (g.day() === h.day()) {\n            return {\n              from: new a.jqx.date(h, e.timeZone),\n              to: a.jqx.scheduler.utilities.getEndOfDay(g),\n              resourceId: f\n            };\n          } else {\n            return {\n              from: new a.jqx.date(h, e.timeZone),\n              to: a.jqx.scheduler.utilities.getEndOfDay(g).addDays(-1),\n              resourceId: f\n            };\n          }\n        }\n\n        return {\n          from: new a.jqx.date(h, e.timeZone),\n          to: g,\n          resourceId: f\n        };\n      }\n\n      if (e._views[e._view].type.toLowerCase().indexOf(\"agenda\") >= 0) {\n        return {\n          from: new a.jqx.date(h, e.timeZone),\n          to: a.jqx.scheduler.utilities.getEndOfDay(g),\n          resourceId: f\n        };\n      }\n    },\n    clearSelection: function () {\n      var f = this;\n      var g = f.rows;\n      var e = g.length;\n\n      for (var d = 0; d < e; d++) {\n        var c = g[d].cells;\n\n        for (var b = 0; b < c.length; b++) {\n          c[b].removeAttribute(\"data-selected\");\n        }\n      }\n\n      f._updateCellsSelection();\n    },\n    _getvirtualcolumnsindexes: function (c, k, g, i, b) {\n      if (this.rtl) {\n        c = this.hScrollInstance.max - c;\n      }\n\n      var d = 0;\n      var h = -1;\n      var e = g + i;\n\n      if (this.autorowheight) {\n        return {\n          start: 0,\n          end: g + i\n        };\n      }\n\n      if (!b) {\n        for (var f = 0; f < g + i; f++) {\n          var l = f;\n\n          if (!this.columns.records[f].hidden) {\n            d += this.columns.records[f].width;\n          }\n\n          if (d >= c && h == -1) {\n            h = f;\n          }\n\n          if (d > k + c) {\n            e = f;\n            break;\n          }\n        }\n      }\n\n      e++;\n\n      if (e > g + i) {\n        e = g + i;\n      }\n\n      if (h == -1) {\n        h = 0;\n      }\n\n      return {\n        start: h,\n        end: e\n      };\n    },\n    _renderhorizontalscroll: function () {\n      var k = this;\n      var r = k.hScrollInstance;\n      var s = r.value;\n\n      if (k.hScrollBar[0].style.visibility === \"hidden\") {\n        r.value = 0;\n        s = 0;\n      }\n\n      var d = parseInt(s);\n\n      if (k.table == null) {\n        return;\n      }\n\n      var j = function (i) {\n        if (i.parentNode && i.parentNode.nodeName != \"#document-fragment\") {\n          return true;\n        }\n\n        return false;\n      };\n\n      var q = k._getvirtualcolumnsindexes(d, k._hostWidth, 0, k.columns.records.length, false);\n\n      var l = q.start;\n      var n = q.end;\n      var b = k.rows;\n\n      for (var m = 0; m < l; m++) {\n        var h = m;\n        var t = k.columns.records[h].element[0];\n\n        if (j(t)) {\n          t.parentNode.removeChild(t);\n        }\n      }\n\n      for (var m = n; m < k.columns.records.length; m++) {\n        var h = m;\n        var t = k.columns.records[h].element[0];\n\n        if (j(t)) {\n          t.parentNode.removeChild(t);\n        }\n      }\n\n      for (var m = l; m < n; m++) {\n        var h = m;\n        t = k.columns.records[h].element[0];\n\n        if (!j(t)) {\n          k.columnsrow[0].appendChild(t);\n        }\n      }\n\n      var o = k.columnsrow;\n      var p = 0;\n      var e = k.columns.records.length - p;\n      var c = k.columns.records;\n      var f = k.source.records.length == 0;\n\n      if (k.rtl) {\n        if (k.hScrollBar.css(\"visibility\") != \"hidden\") {\n          d = r.max - d;\n        }\n      }\n\n      k.table[0].style.left = -d + \"px\";\n\n      if (k.pinnedtable[0].style.display == \"block\") {\n        k.pinnedtable[0].style.left = -d + \"px\";\n      }\n\n      if (k._resources.length > 0 && k.tableRows > 0) {\n        for (var u = 0; u < this.table[0].rows.length; u++) {\n          var g = this.table[0].rows[u];\n\n          if (g.getAttribute(\"data-group-row\")) {\n            a(g).find(\"span\").css(\"left\", 5 + d);\n          }\n        }\n      }\n\n      o[0].style.marginLeft = -d + \"px\";\n    },\n    _getDayName: function (b, d) {\n      if (b >= 7) {\n        b -= 7;\n      }\n\n      if (!d) {\n        d = this.dayNameFormat;\n\n        if (this.isTouchDevice()) {\n          d = this.touchDayNameFormat;\n        }\n      }\n\n      var c = this.schedulerLocalization.days.names[b];\n\n      switch (d) {\n        case \"full\":\n          c = this.schedulerLocalization.days.names[b];\n          break;\n\n        case \"abbr\":\n          c = this.schedulerLocalization.days.namesAbbr[b];\n          break;\n\n        case \"shortest\":\n          c = this.schedulerLocalization.days.namesShort[b];\n          break;\n\n        case \"firstTwoLetters\":\n          c = c.substring(0, 2);\n          break;\n\n        case \"firstLetter\":\n          c = c.substring(0, 1);\n          break;\n      }\n\n      return c;\n    },\n    _initializeColumns: function () {\n      if (this._views.length === 0) {\n        this._views.push({\n          type: \"dayView\"\n        });\n      }\n\n      if (!this._views[this._view]) {\n        throw new Error(\"jqxScheduler: View is undefined. You need to define the View in the Views Array when you create jqxScheduler\");\n      }\n\n      var p = this._views[this._view].type;\n      var m = this._views[this._view];\n\n      if (m.timeSlotWidth) {\n        m.timeSlotWidth = Math.max(m.timeSlotWidth, 30);\n        m.columnWidth = m.timeSlotWidth;\n      }\n\n      if (m.columnWidth) {\n        if (m.columnWidth < 30) {\n          m.columnWidth = 30;\n        }\n      }\n\n      if (this.columns && this.columns.records) {\n        for (var z = 0; z < this.columns.records.length; z++) {\n          this._removecolumnhandlers(this.columns.records[z]);\n        }\n      }\n\n      this.columns = new Array();\n      var B = new Array();\n      var h = this;\n\n      var q = function (H, N) {\n        var I = \"halfHour\";\n\n        if (m.timeRuler && m.timeRuler.scale) {\n          I = m.timeRuler.scale;\n        }\n\n        var Q = 24;\n        var G = 0;\n        var P = 23;\n\n        if (m.timeRuler) {\n          if (m.timeRuler.scaleStartHour != undefined) {\n            var G = parseInt(m.timeRuler.scaleStartHour);\n          }\n\n          if (m.timeRuler.scaleEndHour != undefined) {\n            var P = parseInt(m.timeRuler.scaleEndHour);\n          }\n\n          if (G < 0) {\n            G = 0;\n          }\n\n          if (P < 0) {\n            P = 23;\n          }\n\n          if (G > 23) {\n            G = 0;\n          }\n\n          if (P > 23) {\n            P = 23;\n          }\n\n          Q = P - G + 1;\n        }\n\n        var K = 60;\n        var O = 2;\n\n        if (I) {\n          switch (I) {\n            case \"sixtyMinutes\":\n            case \"hour\":\n              O = 1;\n              break;\n\n            case \"thirtyMinutes\":\n            case \"halfHour\":\n              O = 2;\n              break;\n\n            case \"fifteenMinutes\":\n            case \"quarterHour\":\n              O = 4;\n              break;\n\n            case \"tenMinutes\":\n              O = 6;\n              break;\n\n            case \"fiveMinutes\":\n              O = 12;\n              break;\n          }\n        }\n\n        var S = new Array();\n        var R = \"auto\";\n\n        if (m.timeRuler && m.timeRuler.formatString) {\n          R = m.timeRuler.formatString;\n        }\n\n        var F = G;\n        var L = Q;\n        var D = H.addHours(F);\n        var j = \"auto\";\n\n        if (m.columnWidth) {\n          j = O * m.columnWidth;\n        } else {\n          j = O * 80;\n        }\n\n        for (var M = 0; M < L; M++) {\n          var E = D.toDate();\n\n          if (R === \"auto\") {\n            if (E.getHours() == 0 && E.getMinutes() == 0 || E.getHours() == 12 && E.getMinutes() == 0) {\n              var J = \"hh tt\";\n            } else {\n              var J = \"hh:mm\";\n            }\n          } else {\n            if (a.isFunction(R)) {\n              var J = R(E);\n            } else {\n              J = R;\n            }\n          }\n\n          if (a.jqx.dataFormat.isDate(E)) {\n            E = a.jqx.dataFormat.formatdate(E, J, h.schedulerLocalization);\n          }\n\n          D = D.addMinutes(K, false);\n          h.columns.push({\n            columnGroup: N,\n            text: E,\n            minwidth: 30,\n            width: j\n          });\n        }\n      };\n\n      for (var x = 0; x < this.tableColumns; x++) {\n        if (this.tableColumns > 1) {\n          var f = h._resources[x] ? h._resources[x] : \"Resource\" + x;\n          B.push({\n            text: f,\n            name: f\n          });\n        }\n\n        var w = \"left\";\n\n        if (this.rtl) {\n          w = \"right\";\n        }\n\n        switch (p) {\n          case \"dayView\":\n            var g = this.getViewStart();\n\n            if (false === m.showWeekends) {\n              if (g.dayOfWeek() === 0 || g.dayOfWeek() === 6) {\n                g = g.addDays(1);\n              }\n\n              if (g.dayOfWeek() === 0 || g.dayOfWeek() === 6) {\n                g = g.addDays(1);\n              }\n            }\n\n            var v = \"auto\";\n\n            if (m && m.columnWidth) {\n              v = m.columnWidth;\n            }\n\n            var f = h._resources[x] ? h._resources[x] : \"Resource\" + x;\n            this.columns.push({\n              align: w,\n              width: v,\n              columnGroup: f,\n              text: this._getDayName(g.dayOfWeek())\n            });\n            break;\n\n          case \"weekView\":\n          case \"monthView\":\n            for (var z = 0; z < 7; z++) {\n              var y = this.schedulerLocalization.firstDay + z;\n\n              if (y > 6) {\n                y = 0;\n              }\n\n              if (false === m.showWeekends) {\n                if (y === 0 || y === 6) {\n                  continue;\n                }\n              }\n\n              var v = \"auto\";\n\n              if (m && m.columnWidth) {\n                v = m.columnWidth;\n              }\n\n              var f = h._resources[x] ? h._resources[x] : \"Resource\" + x;\n              this.columns.push({\n                align: p == \"weekView\" ? w : \"center\",\n                width: v,\n                columnGroup: f,\n                text: this._getDayName(y)\n              });\n            }\n\n            break;\n\n          case \"timelineDayView\":\n            var f = h._resources[x] ? h._resources[x] : \"Resource\" + x;\n            q(h.getViewStart(), f);\n            break;\n\n          case \"timelineWeekView\":\n            for (var z = 0; z < 7; z++) {\n              var y = this.schedulerLocalization.firstDay + z;\n\n              if (false === m.showWeekends) {\n                if (z === 0 || z === 6) {\n                  continue;\n                }\n              }\n\n              var f = h._resources[x] ? h._resources[x] : \"Resource\" + x;\n              B.push({\n                align: h.rtl ? \"right\" : \"left\",\n                parentGroup: f,\n                name: this._getDayName(y) + x,\n                text: this._getDayName(y)\n              });\n              q(h.getViewStart().addDays(z), this._getDayName(y) + x);\n            }\n\n            break;\n\n          case \"timelineMonthView\":\n            var k = h.getViewStart();\n            var A = \"auto\";\n\n            if (m.timeRuler && m.timeRuler.formatString) {\n              A = m.timeRuler.formatString;\n            }\n\n            for (var z = 0; z < 41; z++) {\n              var y = k.dayOfWeek();\n\n              if (false === m.showWeekends) {\n                if (y === 0 || y === 6) {\n                  continue;\n                }\n              }\n\n              var v = \"auto\";\n\n              if (m.columnWidth) {\n                v = m.columnWidth;\n              } else {\n                v = 100;\n              }\n\n              var r = k.toDate();\n\n              if (A === \"auto\") {\n                var c = \"dd\";\n                r = k.toDate();\n\n                if (r.getDate() === 1) {\n                  c = \"MMM dd\";\n                }\n              } else {\n                if (a.isFunction(A)) {\n                  var c = A(r);\n                } else {\n                  c = A;\n                }\n              }\n\n              if (a.jqx.dataFormat.isDate(r)) {\n                r = a.jqx.dataFormat.formatdate(r, c, h.schedulerLocalization);\n              }\n\n              k = k.addDays(1);\n              var f = h._resources[x] ? h._resources[x] : \"Resource\" + x;\n              h.columns.push({\n                minwidth: 30,\n                columnGroup: f,\n                text: r,\n                width: v\n              });\n            }\n\n            break;\n\n          case \"agendaView\":\n            var l = m.dateColumnWidth;\n            var u = m.timeColumnWidth;\n            var o = m.appointmentColumnWidth;\n\n            if (!o) {\n              o = \"70%\";\n            }\n\n            if (!u) {\n              u = \"auto\";\n            }\n\n            if (!l) {\n              l = \"auto\";\n            }\n\n            h.columns.push({\n              text: h.schedulerLocalization.agendaDateColumn,\n              width: l\n            });\n            h.columns.push({\n              text: h.schedulerLocalization.agendaTimeColumn,\n              width: u\n            });\n            h.columns.push({\n              text: h.schedulerLocalization.agendaAppointmentColumn,\n              width: o\n            });\n            break;\n        }\n      }\n\n      if (B.length > 0) {\n        this.columnGroups = B;\n      }\n\n      var h = this;\n      var s = new a.jqx.schedulerDataCollection(this.element);\n      var d = 0;\n      this._columns = this.columns;\n      var C = \"left\";\n      var e = new a.jqx.scheduler.column(h, this);\n      e.visibleindex = d++;\n      e.text = \"\";\n      e.width = h.timeRulerWidth;\n      e.editable = false;\n      e.timeColumn = true;\n      C = \"left\";\n      e.text = \"\";\n      e.hidden = false;\n      e.width = h.timeRulerWidth;\n      var b = false;\n\n      if (m.timeRuler && (p === \"dayView\" || p === \"weekView\")) {\n        e._text = m.timeRuler.text || \"\";\n        C = m.timeRuler.position || \"left\";\n        e.hidden = m.timeRuler.hidden || false;\n        e.width = m.timeRuler.width || h.timeRulerWidth;\n\n        if (m.timeRuler.timeZones) {\n          b = true;\n        }\n      } else {\n        if (p !== \"dayView\" && p !== \"weekView\") {\n          e.hidden = true;\n        }\n      }\n\n      var n = function (i) {\n        var j = new a.jqx.scheduler.column(h, h);\n        j.visibleindex = d++;\n        j.text = \"\";\n        j.width = h.timeRulerWidth;\n        j.editable = false;\n        j.timeColumn = true;\n        C = \"left\";\n        j.text = \"\";\n        j.hidden = false;\n        j.timeZone = m.timeRuler.timeZones[i].id;\n        j.width = h.timeRulerWidth;\n\n        if (m.timeRuler && (p === \"dayView\" || p === \"weekView\")) {\n          j._text = m.timeRuler.timeZones[z].text || \"\";\n          j.hidden = m.timeRuler.hidden || false;\n          j.width = m.timeRuler.width || h.timeRulerWidth;\n          s.add(j);\n        }\n      };\n\n      if (C === \"left\" && (p === \"dayView\" || p === \"weekView\")) {\n        if (m.timeRuler && m.timeRuler.timeZones) {\n          for (var z = 0; z < m.timeRuler.timeZones.length; z++) {\n            n(z);\n          }\n        }\n\n        s.add(e);\n      }\n\n      if (C === \"left\" && p === \"monthView\" && m.showWeekNumbers) {\n        e.hidden = false;\n        s.add(e);\n      }\n\n      var t = new Array();\n      a.each(this.columns, function (i) {\n        if (h.columns[i] != undefined) {\n          var j = new a.jqx.scheduler.column(h, this);\n          j.visibleindex = d++;\n          s.add(j);\n        }\n      });\n\n      if (C === \"right\" && (p === \"dayView\" || p === \"weekView\")) {\n        if (m.timeRuler) {\n          for (var z = 0; z < m.timeRuler.timeZones.length; z++) {\n            n(z);\n          }\n        }\n\n        s.add(e);\n      }\n\n      if (C === \"right\" && p === \"monthView\" && m.showWeekNumbers) {\n        e.hidden = false;\n        s.add(e);\n      }\n\n      if (this.rtl) {\n        s.records.reverse();\n      }\n\n      this.columns = s;\n    },\n    _getColumnsLengthPerView: function () {\n      var b = this._views[this._view].type;\n      var d = this._views[this._view];\n      var c = 1;\n\n      switch (b) {\n        case \"dayView\":\n          c = 1;\n          break;\n\n        case \"weekView\":\n          if (d.showWeekends !== false) {\n            c = 7;\n          } else {\n            c = 5;\n          }\n\n          break;\n\n        case \"monthView\":\n          if (d.showWeekends !== false) {\n            c = 7;\n          } else {\n            c = 5;\n          }\n\n          break;\n\n        case \"timelineDayView\":\n        case \"timelineWeekView\":\n        case \"timelineMonthView\":\n          c = this.columns.records.length;\n          break;\n\n        case \"agendaView\":\n          c = this.columns.records.length;\n          break;\n      }\n\n      return c;\n    },\n    _renderagenda: function () {\n      var ab = this;\n      var h = ab._views[ab._view].type;\n      var aa = ab._views[ab._view];\n      var K = ab.getViewStart();\n      var af = a.jqx.scheduler.utilities.getEndOfDay(ab.getViewEnd().addDays(-1));\n\n      ab._prepareAppointmentsInView(K, af);\n\n      var R = ab.appointmentsToRender.length;\n      var al = new Array();\n      var aj = 0;\n\n      for (var at = 0; at < ab.appointmentsToRender.length; at++) {\n        var q = ab.appointmentsToRender[at];\n        var au = q.from.clearTime();\n\n        while (au < a.jqx.scheduler.utilities.getEndOfDay(q.to)) {\n          var d = au.toString();\n\n          if (!al[d]) {\n            al[d] = {\n              date: au,\n              appointments: new Array()\n            };\n            al[d].appointments.push(q);\n            al[al.length] = al[d];\n            aj++;\n          } else {\n            al[d].appointments.push(q);\n            aj++;\n          }\n\n          au = au.addDays(1).clearTime();\n        }\n      }\n\n      var O = 0;\n      var N = 0;\n      ab.rows = new Array();\n      var av = a.jqx.browser.msie && a.jqx.browser.version < 8;\n      var F = 0;\n      var ax = 0;\n      var ap = ab.rtl ? \" \" + ab.toTP(\"jqx-grid-table-rtl\") : \"\";\n      var Z = 0;\n      var v = \"<table cellspacing='0' cellpadding='0' class='\" + ab.toTP(\"jqx-grid-table\") + ap + \"' id='table\" + ab.element.id + \"'><colgroup>\";\n      var G = ab.columns.records.length;\n\n      for (var aq = 0; aq < G; aq++) {\n        var X = ab.columns.records[aq];\n\n        if (X.hidden) {\n          F++;\n          continue;\n        }\n\n        var c = X.width;\n\n        if (c < X.minwidth) {\n          c = X.minwidth;\n        }\n\n        if (c > X.maxwidth) {\n          c = X.maxwidth;\n        }\n\n        c -= ax;\n\n        if (c < 0) {\n          c = 0;\n        }\n\n        if (av) {\n          var ae = c;\n\n          if (aq == F) {\n            ae++;\n          }\n\n          v += \"<col style='max-width: \" + ae + \"px; width: \" + ae + \"px;'>\";\n        } else {\n          v += \"<col style='max-width: \" + c + \"px; width: \" + c + \"px;'>\";\n        }\n\n        Z += c;\n      }\n\n      v += \"</colgroup>\";\n\n      if (R == 0) {\n        var l = '<tr role=\"row\">';\n        var f = this.host.height();\n        var U = 0;\n\n        if (!ab.columnGroups) {\n          U += ab.showHeader ? ab.columnsHeight : 0;\n        } else {\n          U += ab.showHeader ? ab.columnsheader.height() : 0;\n        }\n\n        if (ab.showToolbar) {\n          U += ab.toolbarHeight;\n        }\n\n        if (ab.showLegend && ab._resources.length > 0) {\n          U += ab.legendHeight;\n        }\n\n        f -= U;\n        var e = '<td data-date=\"' + K.toString() + '\" colspan=\"' + this.columns.records.length + '\" role=\"gridcell\" style=\"border: none; min-height: ' + f + \"px; height: \" + f + \"px; max-width:\" + Z + \"px; width:\" + Z + \"px;\";\n        var E = this.toTP(\"jqx-cell\") + \" \" + this.toTP(\"jqx-grid-cell\") + \" \" + this.toTP(\"jqx-item\");\n        E += \" \" + this.toTP(\"jqx-center-align\");\n        e += '\" class=\"' + E + '\">';\n        e += this.schedulerLocalization.emptyDataString;\n        e += \"</td>\";\n        l += e;\n        l += \"</tr>\";\n        v += l;\n        this.table[0].style.width = Z + 2 + \"px\";\n        N = Z;\n      }\n\n      var k = ab.rowsHeight;\n\n      if (ab.isTouchDevice()) {\n        k = ab.touchRowsHeight;\n      }\n\n      for (var at = 0; at < al.length; at++) {\n        var H = at;\n        var au = al[at];\n\n        for (var ai = 0; ai < au.appointments.length; ai++) {\n          var m = 0;\n          var l = '<tr data-key=\"' + H + '\" role=\"row\">';\n          O = 0;\n          var u = au.appointments[ai];\n\n          for (var aq = 0; aq < G; aq++) {\n            var ah = ab.columns.records[aq];\n            var ao = aq;\n\n            if (ab.rtl) {\n              ao = G - 1 - aq;\n            }\n\n            var c = ah.width;\n\n            if (c < ah.minwidth) {\n              c = ah.minwidth;\n            }\n\n            if (c > ah.maxwidth) {\n              c = ah.maxwidth;\n            }\n\n            c -= ax;\n\n            if (c < 0) {\n              c = 0;\n            }\n\n            var E = ab.toTP(\"jqx-cell\") + \" \" + ab.toTP(\"jqx-grid-cell\") + \" \" + ab.toTP(\"jqx-item\");\n\n            if (ab.rtl) {\n              E += \" \" + ab.toTP(\"jqx-cell-rtl\");\n            }\n\n            var J = \"\";\n            var H = ab.dataview.generatekey();\n            var s = -1;\n            var g = au.date;\n            var f = k + \"px\";\n            var e = '<td data-key=\"' + H + '\" data-view=\"' + s + '\" data-date=\"' + g.toString() + '\" role=\"gridcell\" ' + J + ' style=\"max-width:' + c + \"px; width:\" + c + \"px; height: \" + f + \"; min-height: \" + k + \"px;\";\n\n            if (ao == 0 && ai == 0) {\n              var M = au.appointments.length;\n              var e = '<td rowspan=\"' + M + '\" data-key=\"' + H + '\" data-view=\"' + s + '\" data-date=\"' + g.toString() + '\" role=\"gridcell\" ' + J + ' style=\"max-width:' + c + \"px; width:\" + c + \"px;  min-height: \" + k + \"px;\";\n              E += \" \" + ab.toTP(\"jqx-center-align\");\n            } else {\n              if (ao == 0) {\n                O++;\n                continue;\n              }\n            }\n\n            if (ab.rtl && ao == 1) {\n              E += \" \" + ab.toTP(\"jqx-right-align\");\n            }\n\n            if (!ah.hidden) {\n              m += ax + c;\n\n              if (O == 0 && !ab.rtl) {\n                e += \"border-left-width: 0px;\";\n              } else {\n                e += \"border-left-width: 1px;\";\n              }\n\n              O++;\n            } else {\n              e += \"display: none;\";\n              ab._hiddencolumns = true;\n            }\n\n            e += '\" class=\"' + E + '\">';\n            var an = \"\";\n\n            if (ao == 0 && ai == 0) {\n              var D = g.toString(\"dddd\", ab.schedulerLocalization);\n              var am = g.toString(\"MMMM, yyyy\", ab.schedulerLocalization);\n              var ar = ab.toTP(\"jqx-scheduler-agenda-date\");\n              var o = ab.toTP(\"jqx-scheduler-agenda-day\");\n              var n = ab.toTP(\"jqx-scheduler-agenda-week\");\n              an = '<div class=\"' + ar + '\"><strong class=\"' + o + '\">' + g.day() + '</strong><br/><em class=\"' + n + '\">' + D + '</em><br/><span class=\"' + ar + '\">' + am + \"</span></div>\";\n            }\n\n            if (ao == 1) {\n              var Q = \"auto\";\n              var aa = this._views[this._view];\n              var z = u.from;\n              var ay = u.to;\n\n              if (aa.timeRuler && aa.timeRuler.formatString) {\n                Q = aa.timeRuler.formatString;\n              }\n\n              var ad = Q;\n              var I = Q;\n\n              if (Q === \"auto\") {\n                if (z.hour() == 0 && z.minute() == 0 || z.hour() == 12 && z.minute() == 0) {\n                  var ad = \"hh tt\";\n                } else {\n                  var ad = \"hh:mm\";\n                }\n\n                if (ay.hour() == 0 && ay.minute() == 0 || ay.hour() == 12 && ay.minute() == 0) {\n                  var I = \"hh tt\";\n                } else {\n                  var I = \"hh:mm\";\n                }\n              }\n\n              var ar = ab.toTP(\"jqx-scheduler-agenda-time\");\n\n              if (u.allDay) {\n                an = \"<span class='\" + ar + \"'>\" + ab.schedulerLocalization.agendaAllDayString + \"</span>\";\n              } else {\n                if (!ab.rtl) {\n                  an = \"<span class='\" + ar + \"'>\" + z.toString(ad, ab.schedulerLocalization) + \" - \" + ay.toString(I, ab.schedulerLocalization) + \"</span>\";\n                } else {\n                  an = \"<span class='\" + ar + \"'>\" + ay.toString(I, ab.schedulerLocalization) + \" - \" + z.toString(ad, ab.schedulerLocalization) + \"</span>\";\n                }\n              }\n            } else {\n              if (ao == 2) {\n                if (u.resourceId) {\n                  a.each(ab._resources, function (r, x) {\n                    if (u.resourceId == x) {\n                      var i = ab.getColors(r);\n                      var j = this.toString();\n                      var w = ab.toTP(\"jqx-scheduler-agenda-appointment-resource jqx-scheduler-legend\");\n\n                      if (ab.rtl) {\n                        var w = ab.toTP(\"jqx-scheduler-agenda-appointment-resource-rtl jqx-scheduler-legend\");\n                      }\n\n                      var t = \"<div data-key='\" + u.id + \"' class='\" + w + \"' style='margin-right: 5px; border-color: \" + i.border + \"; background: \" + i.background + \";' class='\" + ab.toThemeProperty(\"jqx-scheduler-legend\") + \"'></div>\";\n                      an = t;\n                    }\n                  });\n                }\n\n                var W = u.subject ? u.subject : \"(No Title)\";\n                var C = u.location;\n                var y = u.description;\n                var T = u.status ? ab.schedulerLocalization.editDialogStatuses[u.status] : \"\";\n                var b = u.isRecurrentAppointment();\n                var B = u.isException();\n                var Y = \"\" + ab.schedulerLocalization.editDialogSubjectString + \": \" + W + \"\";\n\n                if (C) {\n                  Y += \"\\n\" + ab.schedulerLocalization.editDialogLocationString + \": \" + C + \"\";\n                }\n\n                if (y) {\n                  Y += \"\\n\" + ab.schedulerLocalization.editDialogDescriptionString + \": \" + y + \"\";\n                }\n\n                if (T) {\n                  Y += \"\\n\" + ab.schedulerLocalization.editDialogStatusString + \": \" + T + \"\";\n                }\n\n                if (b) {\n                  Y += \"\\n\" + ab.schedulerLocalization.editDialogRepeatString + \": \" + b + \"\";\n                }\n\n                var ar = ab.toTP(\"jqx-scheduler-agenda-appointment jqx-scheduler-legend-label\");\n\n                if (ab.rtl) {\n                  var ar = ab.toTP(\"jqx-scheduler-agenda-appointment-rtl jqx-scheduler-legend-label\");\n                }\n\n                an += \"<span data-key='\" + u.id + \"' title='\" + Y + \"' class='\" + ar + \"'>\" + W + \"</span>\";\n              }\n            }\n\n            e += an;\n            e += \"</td>\";\n            l += e;\n          }\n\n          if (N == 0) {\n            ab.table[0].style.width = m + 2 + \"px\";\n            ab.pinnedtable[0].style.width = m + 2 + \"px\";\n            N = m;\n          }\n\n          l += \"</tr>\";\n          v += l;\n        }\n      }\n\n      v += \"</table>\";\n      ab.table[0].innerHTML = v;\n      ab.pinnedtable[0].innerHTML = v;\n      ab.pinnedtable[0].style.display = \"none\";\n      var ag = a(ab.table[0].firstChild);\n      var V = a(ab.pinnedtable[0].firstChild);\n      ab._table = ag;\n      ab._pinnedtable = V;\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 10) {\n        ab._table[0].style.width = N + \"px\";\n        ab._pinnedtable[0].style.width = N + \"px\";\n      }\n\n      if (R === 0) {\n        ab._table[0].style.width = 2 + N + \"px\";\n        ab._pinnedtable[0].style.width = 2 + N + \"px\";\n        ab._pinnedtable[0].style.display = \"none\";\n      }\n\n      ab._pinnedtable[0].style.display = \"none\";\n\n      ab._table.addClass(\"jqx-grid-table-one-cell jqx-disableselect\");\n\n      ab.table[0].rows = ab.table[0].firstChild.rows;\n      ab.rowByCell = new Array();\n      ab.columnCells = new Array();\n\n      function p() {\n        var i = {};\n        i.cells = new Array();\n\n        i.indexOf = function (j) {\n          for (var r = 0; r < i.cells.length; r++) {\n            if (i.cells[r].getAttribute(\"data-key\") == j.getAttribute(\"data-key\")) {\n              return r;\n            }\n          }\n\n          return -1;\n        };\n\n        return i;\n      }\n\n      ab.cellWidth = 0;\n      ab.cellHeight = 0;\n      var L = ab.table[0].rows.length;\n\n      for (var at = 0; at < L; at++) {\n        var ak = ab.table[0].rows[at];\n\n        if (ak.getAttribute(\"data-group-row\")) {\n          continue;\n        }\n\n        var A = new p();\n        A.aboveRow = null;\n        A.belowRow = null;\n\n        if (ab.rows.length > 0) {\n          A.aboveRow = ab.rows[ab.rows.length - 1];\n          ab.rows[ab.rows.length - 1].belowRow = A;\n        }\n\n        A.element = ak;\n        ab.rows.push(A);\n        var S = false;\n\n        for (var aq = 0; aq < ak.cells.length; aq++) {\n          if (ak.cells.length < ab.columns.records.length && !S) {\n            var ac = at;\n\n            while (ac >= 0) {\n              var aw = ab.table[0].rows[ac];\n\n              if (ab.table[0].rows[ac].cells.length == ab.columns.records.length) {\n                var P = aw.cells[0];\n\n                if (!ab.columnCells[A.cells.length]) {\n                  ab.columnCells[A.cells.length] = new Array();\n                }\n\n                ab.columnCells[A.cells.length].push(P);\n\n                if (ab.cellWidth == 0) {\n                  ab.cellWidth = P.clientWidth;\n                }\n\n                if (ab.cellHeight == 0 && (L == 1 || at > 1)) {\n                  ab.cellHeight = P.clientHeight;\n                }\n\n                A.cells.push(P);\n                S = true;\n                break;\n              }\n\n              ac--;\n            }\n          }\n\n          var P = ak.cells[aq];\n\n          if (P.style.display === \"none\") {\n            continue;\n          }\n\n          if (P.className.indexOf(\"jqx-grid-cell-pinned\") >= 0) {\n            continue;\n          }\n\n          if (!ab.columnCells[A.cells.length]) {\n            ab.columnCells[A.cells.length] = new Array();\n          }\n\n          ab.columnCells[A.cells.length].push(P);\n\n          if (ab.cellWidth == 0) {\n            ab.cellWidth = P.clientWidth;\n          }\n\n          if (ab.cellHeight == 0 && (L == 1 || at > 1)) {\n            ab.cellHeight = P.clientHeight;\n          }\n\n          A.cells.push(P);\n          ab.rowByCell[P.getAttribute(\"data-key\")] = A;\n        }\n      }\n\n      if (R === 0) {\n        ab._table[0].style.tableLayout = \"auto\";\n      }\n\n      ab._updateScrollbars(ab.host.height());\n\n      ab._arrange();\n\n      if (ab.rendered) {\n        ab.rendered();\n      }\n\n      ab.renderedTime = new Date();\n    },\n    _renderrows: function () {\n      var V = this;\n\n      if (V._loading) {\n        return;\n      }\n\n      if (V._updating || V._appupdating) {\n        return;\n      }\n\n      if (V.rendering) {\n        V.rendering();\n      }\n\n      var V = this;\n      var aF = V._views[V._view].type;\n      var G = V._views[V._view];\n\n      if (aF == \"agendaView\") {\n        V._renderagenda();\n\n        return;\n      }\n\n      var az = 1;\n      var d = V.getViewStart();\n      var aN = a.jqx.scheduler.utilities.getEndOfDay(V.getViewEnd());\n\n      V._prepareAppointmentsInView(d, aN);\n\n      var N = new Array();\n\n      if (aF === \"weekView\" || aF === \"dayView\") {\n        var az = V.getMaxAllDayAppointments(V.appointmentsToRender);\n      } else {\n        if (aF === \"monthView\" && G.monthRowAutoHeight && V.rows && V.rows.length == 6) {\n          N = V._getMonthAppointmentsPerWeek();\n        }\n      }\n\n      var aa = V.tableRows > 1 ? V.tableRows : 0;\n      var aL = \"halfHour\";\n      var B = null;\n      var aQ;\n\n      if (G.rowHeight) {\n        B = G.rowHeight;\n      }\n\n      if (G && G.allDayRowHeight) {\n        aQ = G.allDayRowHeight;\n      }\n\n      if (G.timeRuler && G.timeRuler.scale) {\n        aL = G.timeRuler.scale;\n      }\n\n      var aM = 0;\n      V.table[0].rows = new Array();\n      V.rows = new Array();\n      var a5 = V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-widget-content\");\n\n      if (V.rtl) {\n        a5 += \" \" + V.toTP(\"jqx-cell-rtl\");\n      }\n\n      var b = V.columns.records.length;\n\n      var av = V._getColumnsLengthPerView();\n\n      var W = a.jqx.browser.msie && a.jqx.browser.version < 8;\n\n      if (W) {\n        V.host.attr(\"hideFocus\", \"true\");\n      }\n\n      V._lastSelectedCell = null;\n      V.focusedCell = null;\n      var E = new Array();\n      var aD = V.source.records;\n      aD = V.dataview.evaluate(aD);\n      V.dataViewRecords = aD;\n      V.cells = new Array();\n      var E = V.dataViewRecords;\n      V.renderedRecords = V.getRows();\n      var aZ = V.tableZIndex;\n      var ai = V.getRows().length;\n      var o = 0;\n      var aH = 0;\n\n      if (W) {\n        for (var X = 0; X < b; X++) {\n          var ac = V.columns.records[X];\n          var aK = ac.width;\n\n          if (aK < ac.minwidth) {\n            aK = ac.minwidth;\n          }\n\n          if (aK > ac.maxwidth) {\n            aK = ac.maxwidth;\n          }\n\n          var aJ = a('<table><tr><td role=\"gridcell\" style=\"max-width: ' + aK + \"px; width:\" + aK + 'px;\" class=\"' + a5 + '\"></td></tr></table>');\n          a(document.body).append(aJ);\n          var at = aJ.find(\"td\");\n          o = 1 + parseInt(at.css(\"padding-left\")) + parseInt(at.css(\"padding-right\"));\n          aJ.remove();\n          break;\n        }\n      }\n\n      var K = V.rtl ? \" \" + V.toTP(\"jqx-grid-table-rtl\") : \"\";\n      var H = \"<table cellspacing='0' cellpadding='0' class='\" + V.toTP(\"jqx-grid-table\") + K + \"' id='table\" + V.element.id + \"'><colgroup>\";\n      var aY = 0;\n      var a4 = b;\n      var aS = 2;\n      var an = 30;\n\n      switch (aL) {\n        case \"sixtyMinutes\":\n        case \"hour\":\n          an = 60;\n          aS = 1;\n          break;\n\n        case \"thirtyMinutes\":\n        case \"halfHour\":\n          an = 30;\n          aS = 2;\n          break;\n\n        case \"fifteenMinutes\":\n        case \"quarterHour\":\n          an = 15;\n          aS = 4;\n          break;\n\n        case \"tenMinutes\":\n          an = 10;\n          aS = 6;\n          break;\n\n        case \"fiveMinutes\":\n          an = 5;\n          aS = 12;\n          break;\n      }\n\n      var a3 = 1;\n\n      if (aF === \"timelineDayView\" || aF === \"timelineWeekView\") {\n        b = aS * b;\n        a3 = aS;\n        av = b / V.tableColumns;\n      } else {\n        if (aF === \"timelineMonthView\") {\n          av = b / V.tableColumns;\n        } else {\n          if (aF === \"monthView\") {\n            if (G.showWeekNumbers) {\n              av = (b - V.tableColumns) / V.tableColumns;\n            } else {\n              av = b / V.tableColumns;\n            }\n          }\n        }\n      }\n\n      var g = function (i) {\n        var c = V.columns.records[i];\n\n        if (c) {\n          return c;\n        }\n\n        while (i >= V.columns.records.length) {\n          i -= V.columns.records.length;\n        }\n\n        var c = V.columns.records[i];\n        return c;\n      };\n\n      for (var X = 0; X < b; X++) {\n        var ac = g(X);\n\n        if (ac.hidden) {\n          aY++;\n          a4--;\n          continue;\n        }\n\n        var aK = ac.width / a3;\n\n        if (aK < ac.minwidth) {\n          aK = ac.minwidth / a3;\n        }\n\n        if (aK > ac.maxwidth) {\n          aK = ac.maxwidth / a3;\n        }\n\n        aK -= o;\n\n        if (aK < 0) {\n          aK = 0;\n        }\n\n        if (aF == \"monthView\" && V.rtl && ac.timeColumn) {\n          aK++;\n        }\n\n        if (W) {\n          var P = aK;\n\n          if (X == aY) {\n            P++;\n          }\n\n          H += \"<col style='max-width: \" + P + \"px; width: \" + P + \"px;'>\";\n        } else {\n          H += \"<col style='max-width: \" + aK + \"px; width: \" + aK + \"px;'>\";\n        }\n\n        aH += aK;\n      }\n\n      H += \"</colgroup>\";\n      V._hiddencolumns = false;\n\n      if (ai === 0) {\n        var u = '<tr role=\"row\">';\n        var z = V.host.height();\n\n        if (V.pageable) {\n          z -= V.pagerHeight;\n\n          if (V.pagerPosition === \"both\") {\n            z -= V.pagerHeight;\n          }\n        }\n\n        z -= V.columnsHeight;\n\n        if (V.showLegend && V._resources.length > 0) {\n          z -= V.legendHeight;\n        }\n\n        if (z < 25) {\n          z = 25;\n        }\n\n        if (V.hScrollBar[0].style.visibility != \"hidden\") {\n          z -= V.hScrollBar.outerHeight();\n        }\n\n        if (V.height === \"auto\" || V.height === null || V.autoheight) {\n          z = 300;\n        }\n\n        var aJ = '<td colspan=\"' + V.columns.records.length + '\" role=\"gridcell\" style=\"border: none; min-height: ' + z + \"px; height: \" + z + \"px; max-width:\" + aH + \"px; width:\" + aH + \"px;\";\n        var a5 = V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n\n        if (V.rtl) {\n          a5 += \" \" + V.toTP(\"jqx-cell-rtl\");\n        }\n\n        a5 += \" \" + V.toTP(\"jqx-center-align\");\n        aJ += '\" class=\"' + a5 + '\">';\n        aJ += V.schedulerLocalization.emptyDataString;\n        aJ += \"</td>\";\n        u += aJ;\n        H += u;\n        V.table[0].style.width = aH + 2 + \"px\";\n        aM = aH;\n      }\n\n      var au = V.getRows();\n      var d = V.getViewStart();\n      var z = V._hostHeight ? V._hostHeight : V.host.height();\n      var a2 = 0;\n\n      if (!V.columnGroups) {\n        a2 += V.showHeader ? V.columnsHeight : 0;\n      } else {\n        a2 += V.showHeader ? V.columnsheader.height() : 0;\n      }\n\n      if (V.showToolbar) {\n        a2 += V.toolbarHeight;\n      }\n\n      if (V.showLegend && V._resources.length > 0) {\n        a2 += V.legendHeight;\n      }\n\n      var f = V.showAllDayRow;\n      var m = 23;\n\n      if (G.resourceHeaderRowHeight) {\n        m = G.resourcesRowHeight;\n      }\n\n      m += 2;\n\n      if (G.showAllDayRow != undefined) {\n        f = G.showAllDayRow;\n      }\n\n      var h = V._columnswidth > V._hostWidth;\n      var al = h ? 3 + V.scrollBarSize : 0;\n      var ag = V.tableRows > 1 ? V.resources.unitsInView : 1;\n\n      if (ag == undefined) {\n        ag = V._resources.length;\n      }\n\n      if (V.resources && V.resources.resourceRowHeight) {\n        B = V.resources.resourceRowHeight;\n      }\n\n      if (B == null || B == \"auto\") {\n        var p = V.rowsHeight;\n        var ap = 3 * p;\n\n        if (V.isTouchDevice()) {\n          p = V.touchRowsHeight;\n          var ap = 22 + p;\n        }\n\n        if (V.tableRows == 1) {\n          B = z > 0 ? z - a2 : p;\n\n          if (V.columns.records.length > 10) {\n            B = z > 0 ? z - V.scrollBarSize - 5 - a2 : p;\n          }\n        } else {\n          B = z > 0 ? (z - a2 - m) / ai : p;\n\n          if (V.columns.records.length > 10) {\n            B = z > 0 ? (z - V.scrollBarSize - 5 - a2 - ag * m) / (ag * ai) : p;\n          }\n        }\n\n        if (aF === \"dayView\" || aF === \"weekView\") {\n          if (f) {\n            if (aQ == null || aQ == \"auto\") {\n              B = z > 0 ? (z - a2) / (V.tableRows * ai) : ap;\n              aQ = B;\n            } else {\n              B = z > 0 ? (z - a2 - aQ - ag * m) / (ag * (ai - 1)) : p;\n            }\n          }\n        } else {\n          if (aF === \"monthView\") {\n            if (V.hScrollBar[0].style.visibility == \"hidden\") {\n              al = 0;\n            }\n\n            if (V.tableRows == 1) {\n              B = z > 0 ? (z - a2 - al) / ai : p;\n            } else {\n              B = z > 0 ? (z - a2 - m - al) / ai : p;\n            }\n          }\n        }\n\n        B = Math.max(p, B);\n\n        if (!aQ) {\n          aQ = ap;\n        }\n\n        aQ = Math.max(ap, aQ);\n        V._allDayRowHeight = aQ;\n        V._defaultRowHeight = p;\n        aQ = az * (p - 2);\n        aQ = Math.max(ap, 17 + aQ);\n        V._allDayRowFullHeight = aQ;\n\n        if (G.allDayRowHeight) {\n          V._allDayRowHeight = G.allDayRowHeight;\n          aQ = az * (G.allDayRowHeight - 2);\n          V._allDayRowFullHeight = aQ;\n        }\n      }\n\n      var aB = new Array();\n\n      if (V.resources && V.resources.colorScheme) {\n        for (var ao = 0; ao < V.colorSchemes.length; ao++) {\n          if (V.colorSchemes[ao].name == V.resources.colorScheme) {\n            aB = V.colorSchemes[ao].colors;\n            break;\n          }\n        }\n\n        while (V._resources.length > aB.length - 1) {\n          var aW = parseInt(V.resources.colorScheme.substring(6));\n\n          if (aW >= 27) {\n            aW = 0;\n          }\n\n          aB = aB.concat(V.colorSchemes[aW].colors);\n          aW++;\n        }\n      }\n\n      for (var aE = 0; aE < V.tableRows; aE++) {\n        var aq = 0;\n        var S = 0;\n        var e = 23;\n\n        if (G.timeRuler && G.timeRuler.scaleStartHour != undefined) {\n          var S = parseInt(G.timeRuler.scaleStartHour);\n        }\n\n        if (G.timeRuler && G.timeRuler.scaleEndHour != undefined) {\n          var e = parseInt(G.timeRuler.scaleEndHour);\n        }\n\n        var A = d;\n\n        if (false === G.showWeekends) {\n          if (A.dayOfWeek() == 0 || A.dayOfWeek() == 6) {\n            A = A.addDays(1);\n          }\n        }\n\n        var ar = new Array();\n        var k = aF != \"monthView\" && aF != \"timelineDayView\" && aF != \"timelineWeekView\" && aF != \"timelineMonthView\" && f ? 1 : 0;\n\n        if (V.tableRows > 1) {\n          var u = '<tr data-group-row=\"true\" role=\"row\">';\n          var a5 = V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n\n          if (V.rtl) {\n            a5 += \" \" + V.toTP(\"jqx-cell-rtl\");\n          }\n\n          if (!W) {\n            a5 += \" \" + V.toTP(\"jqx-grid-cell-pinned\");\n            Z += ' colspan=\"' + b + '\"';\n            var P = 0;\n\n            for (var Q = 0; Q < b; Q++) {\n              var ab = g(Q);\n              var ak = ab.width / a3;\n\n              if (ak < ab.minwidth) {\n                aK = ab.minwidth / a3;\n              }\n\n              if (ak > ab.maxwidth) {\n                aK = ab.maxwidth / a3;\n              }\n\n              ak -= o;\n\n              if (ak < 0) {\n                ak = 0;\n              }\n\n              if (!ab.hidden) {\n                P += ak;\n              }\n            }\n\n            aK = P;\n          } else {\n            a5 += \" \" + V.toTP(\"jqx-grid-cell-pinned\");\n          }\n\n          var aJ = '<td style=\"height:' + m + \"px;\";\n\n          if (X == b - 1 && b == 1 && !V.rtl) {\n            aJ += \"border-right-color: transparent;\";\n          }\n\n          if (V._resources.length > 0 && V.resources.colorScheme && V.resources.orientation != \"none\") {\n            var aO = \"\";\n            var y = \"\";\n            var D = \"\";\n\n            var L = function (i) {\n              var c = 105;\n              var j = i.r * 0.299 + i.g * 0.587 + i.b * 0.114;\n              var q = 255 - j < c ? \"Black\" : \"White\";\n              return q;\n            };\n\n            aO = aB[aE];\n            aO = V.hexToRgba(aB[aE], 0.7).toString();\n            D = L(V.hexToRgba(aB[aE], 0.7));\n            y = aB[aE];\n            aJ += \"background: \" + aO + \";\";\n            aJ += \"border-color: \" + y + \";\";\n            aJ += \"color: \" + D + \";\";\n          }\n\n          aJ += '\" class=\"' + a5 + '\" role=\"gridcell\" ' + Z + \"\";\n          var aX = V._resources[aE];\n          aJ += \"><span style='position: relative;'>\" + aX + \"</span>\";\n          aJ += \"</td>\";\n          u += aJ;\n          H += u;\n        }\n\n        for (var Y = 0; Y < ai; Y++) {\n          var aI = {};\n          var am = \"jqx\" + V.element.id + \"_\" + Y;\n          aI.uid = am;\n          var u = '<tr data-key=\"' + am + '\" role=\"row\">';\n          var ad = 0;\n          var x = 0;\n\n          if (ar[0] && Y > k) {\n            var an = 30;\n\n            if (aF != \"monthView\") {\n              switch (aL) {\n                case \"sixtyMinutes\":\n                case \"hour\":\n                  an = 60;\n                  break;\n\n                case \"thirtyMinutes\":\n                case \"halfHour\":\n                  an = 30;\n                  break;\n\n                case \"fifteenMinutes\":\n                case \"quarterHour\":\n                  an = 15;\n                  break;\n\n                case \"tenMinutes\":\n                  an = 10;\n                  break;\n\n                case \"fiveMinutes\":\n                  an = 5;\n                  break;\n              }\n\n              for (var T = 0; T < b; T++) {\n                ar[T] = ar[T].addMinutes(an, false);\n              }\n            } else {\n              for (var T = 0; T < b; T++) {\n                ar[T] = ar[T].addDays(7, false);\n              }\n            }\n          }\n\n          var ax = 0;\n          var ae = 1;\n          var aj = 0;\n\n          if (G.showWeekends || G.showWeekends == undefined) {\n            aj = V.columns.records.length / (7 * V.tableColumns);\n            aj *= aS;\n          } else {\n            aj = V.columns.records.length / (5 * V.tableColumns);\n            aj *= aS;\n          }\n\n          var aw = 0;\n\n          if (V.rtl) {\n            aw = 1;\n          }\n\n          var aU = 0;\n\n          for (var X = 0; X < b; X++) {\n            var R = g(X);\n\n            if (ax >= av) {\n              ax = 0;\n              aU = 0;\n              aw = 0;\n\n              if (V.rtl) {\n                aw = 1;\n              }\n\n              ae++;\n            }\n\n            if (!ar[X]) {\n              if (!V.rtl) {\n                if (aF.toString().indexOf(\"timelineDayView\") >= 0) {\n                  var I = X;\n                  ar[X] = A.addHours(S).addMinutes(I * an, false);\n                } else {\n                  if (aF.toString().indexOf(\"timelineWeekView\") >= 0) {\n                    ar[X] = A.addDays(aU).addHours(S, false).addMinutes(aw * an, false);\n                  } else {\n                    ar[X] = A.addDays(ax).addHours(S, false);\n                  }\n                }\n\n                if (V.timeZone) {\n                  ar[X].timeZone = V.timeZone;\n                }\n              } else {\n                if (aF.toString().indexOf(\"timelineDayView\") >= 0) {\n                  var I = 1 + X;\n                  ar[X] = A.addHours(1 + e).addMinutes(-I * an, false);\n                } else {\n                  if (aF.toString().indexOf(\"timelineWeekView\") >= 0) {\n                    if (G.showWeekends || G.showWeekends == undefined) {\n                      ar[X] = A.addDays(6 - aU).addHours(1 + e, false).addMinutes(-aw * an, false);\n                    } else {\n                      ar[X] = A.addDays(4 - aU).addHours(1 + e, false).addMinutes(-aw * an, false);\n                    }\n                  } else {\n                    if (aF == \"dayView\" || aF == \"monthView\" || aF == \"weekView\") {\n                      if (G.showWeekends || G.showWeekends == undefined) {\n                        ar[X] = A.addDays(6 - ax).addHours(S, false);\n                      } else {\n                        ar[X] = A.addDays(4 - ax).addHours(S, false);\n                      }\n                    } else {\n                      ar[X] = A.addDays(av - ax - 1).addHours(S, false);\n                    }\n                  }\n                }\n\n                if (V.timeZone) {\n                  ar[X].timeZone = V.timeZone;\n                }\n              }\n            }\n\n            aw++;\n\n            if (aw >= aj) {\n              aw = 0;\n              aU++;\n            }\n\n            if (!R.timeColumn && (aF === \"dayView\" || aF === \"weekView\")) {\n              ax++;\n            } else {\n              if (!R.timeColumn && aF === \"monthView\" && G.showWeekNumbers) {\n                ax++;\n              } else {\n                if (aF === \"monthView\" && !G.showWeekNumbers || aF === \"timelineMonthView\") {\n                  ax++;\n                } else {\n                  if (aF == \"timelineDayView\" || aF == \"timelineWeekView\") {\n                    ax++;\n                  }\n                }\n              }\n            }\n\n            var C = ar[X];\n            var aK = R.width / a3;\n\n            if (aK < R.minwidth) {\n              aK = R.minwidth / a3;\n            }\n\n            if (aK > R.maxwidth) {\n              aK = R.maxwidth / a3;\n            }\n\n            aK -= o;\n\n            if (aK < 0) {\n              aK = 0;\n            }\n\n            var a5 = V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n\n            if (R.pinned) {\n              a5 += \" \" + V.toTP(\"jqx-grid-cell-pinned\");\n            }\n\n            if (V.sortcolumn === R.displayfield) {\n              a5 += \" \" + V.toTP(\"jqx-grid-cell-sort\");\n            }\n\n            if (V.altRows && Y % 2 != 0) {\n              a5 += \" \" + V.toTP(\"jqx-grid-cell-alt\");\n            }\n\n            if (Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\")) {\n              a5 += \" \" + V.toTP(\"jqx-grid-cell-alt\");\n            }\n\n            if (C > V.max || C < V.min) {\n              a5 += \" \" + V.toTP(\"jqx-scheduler-disabled-cell\");\n            }\n\n            if (V.rtl) {\n              a5 += \" \" + V.toTP(\"jqx-cell-rtl\");\n            }\n\n            var Z = \"\";\n            var am = V.dataview.generatekey();\n            var aG = aE + ae;\n\n            if (V.resources && V.resources.orientation == \"none\") {\n              aG = -1;\n            }\n\n            if (V._resources.length == 0) {\n              aG = -1;\n            }\n\n            var aJ = '<td data-key=\"' + am + '\" data-view=\"' + aG + '\" data-date=\"' + C.toString() + '\" role=\"gridcell\" ' + Z + ' style=\"max-width:' + aK + \"px; width:\" + aK + \"px;  height:\" + B + \"px;\";\n\n            if (Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\")) {\n              var aJ = '<td  data-key=\"' + am + '\" data-view=\"' + aG + '\" data-end-date=\"' + a.jqx.scheduler.utilities.getEndOfDay(C).toString() + '\" data-date=\"' + C.clearTime().toString() + '\" role=\"gridcell\" ' + Z + ' style=\"max-width:' + aK + \"px; width:\" + aK + \"px; height:\" + aQ + \"px;\";\n            }\n\n            if (aF == \"monthView\" && G.monthRowAutoHeight && N.length > 0) {\n              if (N[Y] && N[Y] != \"auto\") {\n                if (B < N[Y]) {\n                  var aJ = '<td data-key=\"' + am + '\" data-view=\"' + aG + '\" data-date=\"' + C.toString() + '\" role=\"gridcell\" ' + Z + ' style=\"max-width:' + aK + \"px; width:\" + aK + \"px;  height:\" + N[Y] + \"px;\";\n                }\n              }\n            }\n\n            if (V.date.month() != C.month() && aF === \"monthView\" && !G.showOtherMonthDays) {}\n\n            if (V.resources && V._resources.length > 0 && V.resources.colorScheme && V.resources.orientation !== \"none\") {\n              var aO = \"\";\n              var y = \"\";\n              aO = aB[aE + ae - 1];\n\n              if (!(Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\"))) {\n                aO = V.hexToRgba(aB[aE + ae - 1], 0.3).toString();\n              } else {\n                aO = V.shadeColor(aB[aE + ae - 1], 0.3).toString();\n              }\n\n              if (!(Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\"))) {\n                if (aF.indexOf(\"month\") == -1) {\n                  if (!R.timeColumn) {\n                    if (G.showWorkTime !== false) {\n                      var O = 1;\n                      var J = 5;\n                      var ay = 8;\n                      var l = 18;\n\n                      if (G.workTime) {\n                        var O = G.workTime.fromDayOfWeek ? G.workTime.fromDayOfWeek : 0;\n                        var J = G.workTime.toDayOfWeek ? G.workTime.toDayOfWeek : 0;\n                        var ay = G.workTime.fromHour ? G.workTime.fromHour : 8;\n                        var l = G.workTime.toHour ? G.workTime.toHour : 8;\n                      }\n\n                      if (C.dayOfWeek() >= O && C.dayOfWeek() <= J) {\n                        if (C.hour() >= ay && C.hour() < l) {\n                          aO = V.hexToRgba(aB[aE + ae - 1], 0.1).toString();\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n\n              y = aB[ae + aE - 1];\n              aJ += \"background: \" + aO + \";\";\n              aJ += \"border-color: \" + y + \";\";\n            }\n\n            if (X == b - 1 && b == 1 && !V.rtl) {\n              aJ += \"border-right-color: transparent;\";\n            }\n\n            if (R.timeColumn && !R.hidden && aF === \"monthView\") {\n              var a5 = V.toTP(\"jqx-scheduler-time-column\") + \" \" + V.toTP(\"jqx-widget-header\") + \" \" + V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n              a5 += \" \" + V.toTP(\"jqx-scheduler-week-number-column\");\n\n              if (V.tableRows > 1) {\n                var a5 = V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n              }\n\n              if (V.rtl) {\n                a5 += \" \" + V.toTP(\"jqx-cell-rtl\");\n              }\n\n              if (C.minute() === 0) {\n                var aJ = '<td classname=\"jqx-disableselect\" data-time-slot=\"true\" data-date=\"' + C.toString() + '\" role=\"gridcell\" style=\"max-width:' + aK + \"px; width:\" + aK + \"px;\";\n\n                if (X == b - 1 && b == 1 && !V.rtl) {\n                  aJ += \"border-right-color: transparent;\";\n                } else {\n                  if (V.rtl && X == 0) {\n                    aJ += \"border-left-color: transparent;\";\n                  }\n                }\n\n                if (X == b - 1 && V.rtl) {\n                  aJ += \"border-right-color: transparent;\";\n                }\n              } else {\n                x++;\n                continue;\n              }\n            }\n\n            if (R.timeColumn && !R.hidden && (aF === \"dayView\" || aF === \"weekView\")) {\n              var a5 = V.toTP(\"jqx-scheduler-time-column\") + \" \" + V.toTP(\"jqx-widget-header\") + \" \" + V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n\n              if (V.tableRows > 1) {\n                var a5 = V.toTP(\"jqx-cell\") + \" \" + V.toTP(\"jqx-grid-cell\") + \" \" + V.toTP(\"jqx-item\");\n              }\n\n              if (V.rtl) {\n                a5 += \" \" + V.toTP(\"jqx-cell-rtl\");\n              }\n\n              if (Y > 0) {\n                if (C.minute() === 0) {\n                  var aJ = '<td classname=\"jqx-disableselect\" data-time-slot=\"true\" data-date=\"' + C.toString() + '\" rowspan=' + aS + ' role=\"gridcell\" ' + Z + ' style=\"max-width:' + aK + \"px; width:\" + aK + \"px;\";\n\n                  if (X == b - 1 && b == 1 && !V.rtl) {\n                    aJ += \"border-right-color: transparent;\";\n                  } else {\n                    if (V.rtl && X == 0) {\n                      aJ += \"border-left-color: transparent;\";\n                    }\n                  }\n                } else {\n                  x++;\n                  continue;\n                }\n              } else {\n                if (V.resources && V.resources.orientation == \"none\") {\n                  aG = -1;\n                }\n\n                if (Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\")) {\n                  var aJ = '<td data-view=\"' + aG + '\" data-time-slot=\"true\" data-end-date=\"' + a.jqx.scheduler.utilities.getEndOfDay(C).toString() + '\" data-date=\"' + C.toString() + '\" role=\"gridcell\" ' + Z + ' style=\"max-width:' + aK + \"px; width:\" + aK + \"px;\";\n                }\n\n                if (X == b - 1 && b == 1 && !V.rtl) {\n                  aJ += \"border-right-color: transparent;\";\n                } else {\n                  if (X == 0 && b == 1 && V.rtl) {\n                    aJ += \"border-right-color: transparent;\";\n                  }\n                }\n\n                if (V.rtl) {\n                  aJ += \"border-left-width: 1px;\";\n                }\n\n                if (V.tableRows > 1) {\n                  aJ += \"background: \" + aO + \";\";\n                  aJ += \"border-color: \" + y + \";\";\n                }\n              }\n            } else {\n              if (Y > 0) {\n                var n = \"border-left-width: 1px;\";\n\n                if (V.rtl && X == 0 && aF == \"monthView\" && G.showWeekNumbers) {\n                  n = \"border-left-width: 0px;\";\n                }\n\n                aJ += n;\n              }\n            }\n\n            if (R.cellsalign != \"left\") {\n              if (R.cellsalign === \"right\") {\n                a5 += \" \" + V.toTP(\"jqx-right-align\");\n              } else {\n                a5 += \" \" + V.toTP(\"jqx-center-align\");\n              }\n            }\n\n            if (!R.timeColumn) {\n              if (V.rowinfo[aI.uid]) {\n                if (V.rowinfo[aI.uid].selected) {\n                  if (V.editKey !== aI.uid) {\n                    if (V.selectionMode !== \"none\") {\n                      a5 += \" \" + V.toTP(\"jqx-grid-cell-selected\");\n                      a5 += \" \" + V.toTP(\"jqx-fill-state-pressed\");\n                      a5 += \" \" + V.toTP(\"jqx-scheduler-cell-selected\");\n                    }\n                  }\n                }\n              }\n            }\n\n            if (!R.hidden) {\n              ad += o + aK;\n\n              if (x == 0 && !V.rtl) {\n                aJ += \"border-left-width: 0px;\";\n              }\n\n              x++;\n            } else {\n              aJ += \"display: none;\";\n              V._hiddencolumns = true;\n            }\n\n            if (!(Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\"))) {\n              if (aF.indexOf(\"month\") == -1) {\n                a5 += \" \" + V.toTP(\"jqx-grid-cell-nowrap\");\n\n                if (Y % 2 == 1 && !R.timeColumn) {\n                  a5 += \" \" + V.toTP(\"jqx-scheduler-middle-cell\");\n                }\n\n                if (!R.timeColumn) {\n                  if (G.showWorkTime !== false) {\n                    var O = 1;\n                    var J = 5;\n                    var ay = 8;\n                    var l = 18;\n\n                    if (G.workTime) {\n                      var O = G.workTime.fromDayOfWeek ? G.workTime.fromDayOfWeek : 0;\n                      var J = G.workTime.toDayOfWeek ? G.workTime.toDayOfWeek : 0;\n                      var ay = G.workTime.fromHour ? G.workTime.fromHour : 8;\n                      var l = G.workTime.toHour ? G.workTime.toHour : 8;\n                    }\n\n                    if (C.dayOfWeek() >= O && C.dayOfWeek() <= J) {\n                      if (C.hour() >= ay && C.hour() < l) {\n                        a5 += \" \" + V.toTP(\"jqx-scheduler-work-time-cell\");\n                      } else {\n                        a5 += \" \" + V.toTP(\"jqx-scheduler-not-work-time-cell\");\n                      }\n                    } else {\n                      a5 += \" \" + V.toTP(\"jqx-scheduler-not-work-time-cell\");\n                    }\n                  }\n                }\n              }\n            }\n\n            var ah = \"\";\n\n            if (aF === \"monthView\") {\n              if (!V.touchDevice && !R.timeColumn) {\n                a5 += \" \" + V.toTP(\"jqx-top-align\");\n              }\n\n              var af = \"dd\";\n              ah = C.toDate();\n              var a1 = V.toTP(\"jqx-scheduler-month-outer-cell\") + \" \";\n              var aA = V.toTP(\"jqx-scheduler-month-weekend-cell\");\n\n              if (V.date.month() == C.month()) {\n                a1 = \"\";\n              }\n\n              if (!C.isWeekend()) {\n                aA = \"\";\n              } else {\n                a5 += \" \" + aA;\n              }\n\n              if (ah.getDate() === 1) {\n                af = \"MMM dd\";\n              }\n\n              if (V.touchDevice) {\n                if (B > 16) {\n                  ah = \"<div class='\" + a1 + V.toTP(\"jqx-scheduler-month-cell-touch\") + \"'>\" + a.jqx.dataFormat.formatdate(ah, af, V.schedulerLocalization) + \"<span style='display: none; float: right; cursor: pointer; width:16px; height: 16px;' class='\" + V.toTP(\"jqx-icon-arrow-down\") + \"'></span></div>\";\n                } else {\n                  ah = \"<div class='\" + a1 + V.toTP(\"jqx-scheduler-month-cell-touch\") + \"'>\" + a.jqx.dataFormat.formatdate(ah, af, V.schedulerLocalization) + \"<span style='display: none; float: right; cursor: pointer;' class='\" + V.toTP(\"jqx-icon-arrow-down\") + \"'></span></div>\";\n                }\n              } else {\n                if (B > 16) {\n                  ah = \"<div class='\" + a1 + V.toTP(\"jqx-scheduler-month-cell\") + \"'>\" + a.jqx.dataFormat.formatdate(ah, af, V.schedulerLocalization) + \"<span style='display: none; float: right; cursor: pointer; width:16px; height: 16px;' class='\" + V.toTP(\"jqx-icon-arrow-down\") + \"'></span></div>\";\n                } else {\n                  ah = \"<div class='\" + a1 + V.toTP(\"jqx-scheduler-month-cell\") + \"'>\" + a.jqx.dataFormat.formatdate(ah, af, V.schedulerLocalization) + \"<span style='display: none; float: right; cursor: pointer;' class='\" + V.toTP(\"jqx-icon-arrow-down\") + \"'></span></div>\";\n                }\n              }\n            } else {\n              if (aF === \"timelineWeekView\" || aF === \"timelineDayView\" || aF === \"timelineMonthView\") {\n                a5 += \" \" + V.toTP(\"jqx-right-align jqx-bottom-align\");\n                ah = \"<span style='display: none; float: right; cursor: pointer; width:16px; height: 16px;' class='\" + V.toTP(\"jqx-icon-arrow-down\") + \"'></span>\";\n              }\n            }\n\n            if (Y == 0 && f && (aF === \"dayView\" || aF === \"weekView\") && !R.timeColumn) {\n              a5 += \" \" + V.toTP(\"jqx-top-align\");\n              a5 += \" \" + V.toTP(\"jqx-scheduler-all-day-cell\");\n\n              if (V.rtl) {\n                a5 += \" \" + V.toTP(\"jqx-rtl\");\n              }\n\n              ah = C.toDate();\n              ah = \"<span>\" + a.jqx.dataFormat.formatdate(ah, \"dd\", V.schedulerLocalization) + \"</span>\";\n            }\n\n            var r = R.cellsFormat;\n\n            if (R.timeColumn && !R.hidden) {\n              ah = C.toDate();\n\n              if (R.timeZone) {\n                ah = C.clone().toTimeZone(R.timeZone);\n                ah = ah.toDate();\n              }\n\n              var s = \"auto\";\n\n              if (G.timeRuler && G.timeRuler.formatString) {\n                r = G.timeRuler.formatString;\n              } else {\n                if (!R.timeColumn.format) {\n                  if (ah.getHours() == 0 || ah.getHours() == 12) {\n                    r = \"hh tt\";\n                  } else {\n                    r = \"hh:mm\";\n                  }\n                }\n              }\n\n              if (a.jqx.dataFormat.isDate(ah)) {\n                ah = a.jqx.dataFormat.formatdate(ah, r, V.schedulerLocalization);\n              }\n\n              if (Y < k) {\n                if (!V.rtl) {\n                  a5 += \" \" + V.toTP(\"jqx-scheduler-time-column-header-cell\");\n                } else {\n                  a5 += \" \" + V.toTP(\"jqx-scheduler-time-column-header-cell-rtl\");\n                }\n\n                ah = \"\";\n              }\n\n              if (Y < k) {\n                if (R._text) {\n                  a5 += \" \" + V.toTP(\"jqx-bottom-align\");\n                }\n\n                if (G.timeRuler && G.timeRuler.timeZones && G.timeRuler.timeZones.length > 0) {\n                  if (X < G.timeRuler.timeZones.length) {\n                    ah = R._text;\n                  }\n                }\n              }\n\n              if (aF == \"monthView\") {\n                ah = C.weekOfYear(V.schedulerLocalization.firstDay);\n              }\n            } else {\n              if (r != \"\") {\n                if (a.jqx.dataFormat) {\n                  if (a.jqx.dataFormat.isDate(ah)) {\n                    ah = a.jqx.dataFormat.formatdate(ah, r, V.schedulerLocalization);\n                  } else {\n                    if (a.jqx.dataFormat.isNumber(ah) || !isNaN(parseFloat(ah)) && isFinite(ah)) {\n                      ah = a.jqx.dataFormat.formatnumber(ah, r, V.schedulerLocalization);\n                    }\n                  }\n                }\n              }\n            }\n\n            if (R.cellclassname != \"\" && R.cellclassname) {\n              if (typeof R.cellclassname == \"string\") {\n                a5 += \" \" + R.cellclassname;\n              } else {\n                var a0 = R.cellclassname(Y, R.datafield, ah, aI);\n\n                if (a0) {\n                  a5 += \" \" + a0;\n                }\n              }\n            }\n\n            if (R.cellsRenderer != \"\" && R.cellsRenderer) {\n              var aT = au.indexOf(aI);\n              ah = R.cellsRenderer(aT, R.datafield, ah, aI);\n            }\n\n            aJ += '\" class=\"' + a5 + '\">';\n            aJ += ah;\n            aJ += \"</td>\";\n            u += aJ;\n          }\n\n          if (aM == 0) {\n            V.table[0].style.width = ad + 2 + \"px\";\n            V.pinnedtable[0].style.width = ad + 2 + \"px\";\n            aM = ad;\n          }\n\n          u += \"</tr>\";\n          H += u;\n\n          if (!V.rowinfo[aI.uid]) {\n            V.rowinfo[aI.uid] = {\n              row: aI\n            };\n          } else {\n            if (!(\"row\" in V.rowinfo[aI.uid])) {\n              V.rowinfo[aI.uid].row = aI;\n            }\n          }\n        }\n      }\n\n      H += \"</table>\";\n      V.table[0].innerHTML = H;\n      V.pinnedtable[0].innerHTML = H;\n      V.table[0].rows = V.table[0].firstChild.rows;\n      var aR = a.jqx.browser.msie && a.jqx.browser.version < 9;\n      var aP = null;\n\n      if (f && (aF === \"dayView\" || aF === \"weekView\") && V.tableRows == 1) {\n        V.pinnedtable[0].style.display = \"block\";\n        V.pinnedtable[0].style.zIndex = \"400\";\n        V.pinnedtable[0].style.position = \"absolute\";\n        V.pinnedtable[0].style.top = \"0px\";\n        V.pinnedtable[0].style.height = aQ + \"px\";\n\n        if (!aR) {\n          if (V.tableRows == 1) {\n            V.oldRow = V.table[0].rows[0];\n\n            try {\n              V.table[0].rows[0] = V.pinnedtable.find(\"tr\")[0];\n            } catch (aC) {}\n\n            aP = V.pinnedtable.find(\"tr\")[0];\n            V.pinnedTableRow = aP;\n          } else {\n            V.oldRow = V.table[0].rows[1];\n\n            try {\n              V.table[0].rows[1] = V.pinnedtable.find(\"tr\")[1];\n            } catch (aC) {}\n\n            aP = V.pinnedtable.find(\"tr\")[1];\n            V.pinnedTableRow = aP;\n          }\n        }\n      } else {\n        V.pinnedtable[0].style.display = \"none\";\n      }\n\n      var Q = a(V.table[0].firstChild);\n      var aV = a(V.pinnedtable[0].firstChild);\n      V._table = Q;\n      V._pinnedtable = aV;\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 10) {\n        V._table[0].style.width = aM + \"px\";\n        V._pinnedtable[0].style.width = aM + \"px\";\n      }\n\n      if (ai === 0) {\n        V._table[0].style.width = 2 + aM + \"px\";\n        V._pinnedtable[0].style.width = 2 + aM + \"px\";\n      }\n\n      V._table.addClass(\"jqx-grid-table-one-cell jqx-disableselect\");\n\n      V._pinnedtable.addClass(\"jqx-grid-table-one-cell jqx-disableselect\");\n\n      V.rowByCell = new Array();\n      V.columnCells = new Array();\n\n      function F() {\n        var c = {};\n        c.cells = new Array();\n\n        c.indexOf = function (j) {\n          for (var q = 0; q < c.cells.length; q++) {\n            if (c.cells[q].getAttribute(\"data-key\") == j.getAttribute(\"data-key\")) {\n              return q;\n            }\n          }\n\n          return -1;\n        };\n\n        return c;\n      }\n\n      V.cellWidth = 0;\n      V.cellHeight = 0;\n      var U = V.table[0].rows.length;\n\n      for (var Y = 0; Y < U; Y++) {\n        var v = V.table[0].rows[Y];\n\n        if (Y == 0 && aP) {\n          v = aP;\n        }\n\n        if (v.getAttribute(\"data-group-row\")) {\n          continue;\n        }\n\n        var aI = new F();\n        aI.aboveRow = null;\n        aI.belowRow = null;\n\n        if (V.rows.length > 0) {\n          aI.aboveRow = V.rows[V.rows.length - 1];\n          V.rows[V.rows.length - 1].belowRow = aI;\n        }\n\n        aI.element = v;\n        V.rows.push(aI);\n\n        for (var X = 0; X < v.cells.length; X++) {\n          var M = v.cells[X];\n\n          if (M.getAttribute(\"data-time-slot\")) {\n            continue;\n          }\n\n          if (M.style.display === \"none\") {\n            continue;\n          }\n\n          if (M.className.indexOf(\"jqx-grid-cell-pinned\") >= 0) {\n            continue;\n          }\n\n          if (!V.columnCells[aI.cells.length]) {\n            V.columnCells[aI.cells.length] = new Array();\n          }\n\n          V.columnCells[aI.cells.length].push(M);\n\n          if (V.cellWidth == 0) {\n            V.cellWidth = M.clientWidth;\n          }\n\n          if (V.cellHeight == 0 && (U == 1 || Y > 1)) {\n            V.cellHeight = M.clientHeight;\n          }\n\n          if (V._views[V._view].type == \"monthView\") {\n            if (aI.top == undefined) {\n              aI.top = parseInt(a(M).position().top);\n            }\n          }\n\n          aI.cells.push(M);\n          V.rowByCell[M.getAttribute(\"data-key\")] = aI;\n        }\n      }\n\n      if (ai === 0) {\n        V._table[0].style.tableLayout = \"auto\";\n      }\n\n      V._renderAppointments(d, aN);\n\n      if (V.pinnedtable[0].style.display != \"none\" || (aF == \"dayView\" || aF == \"weekView\") && V.tableRows > 1) {\n        V._updateScrollbars(V.host.height());\n      }\n\n      if (aF === \"monthView\" && G.monthRowAutoHeight) {\n        if (N.length == 0) {\n          V._renderrows();\n        } else {\n          V._updateScrollbars(V.host.height());\n        }\n      }\n\n      if (V.rendered) {\n        V.rendered();\n      }\n\n      V.renderedTime = new Date();\n    },\n    showAppointmentsByResource: function (f) {\n      var e = this;\n\n      for (var d = 0; d < e.uiappointments.length; d++) {\n        var g = e.uiappointments[d];\n\n        if (g.resourceId == f) {\n          g.hidden = false;\n          g.hiddenByResourceId = false;\n\n          if (g.exceptions) {\n            for (var c = 0; c < g.exceptions.length; c++) {\n              g.exceptions[c].hiddenByResourceId = false;\n            }\n          }\n        }\n      }\n\n      if (e._resourcesElements) {\n        var b = e.getColors(e._resources.indexOf(f));\n\n        e._resourcesElements.top[f].attr(\"data-toggle\", \"on\");\n\n        e._resourcesElements.top[f].css(\"background\", b.background);\n\n        e._resourcesElements.bottom[f].attr(\"data-toggle\", \"on\");\n\n        e._resourcesElements.bottom[f].css(\"background\", b.background);\n      }\n\n      if (e.hiddenResources) {\n        delete e.hiddenResources[f];\n      }\n\n      e._renderrows();\n    },\n    hideAppointmentsByResource: function (e) {\n      var d = this;\n\n      for (var c = 0; c < d.uiappointments.length; c++) {\n        var f = d.uiappointments[c];\n\n        if (f.resourceId == e) {\n          f.hidden = true;\n          f.hiddenByResourceId = true;\n\n          if (f.exceptions) {\n            for (var b = 0; b < f.exceptions.length; b++) {\n              f.exceptions[b].hiddenByResourceId = true;\n              f.exceptions[b].hidden = true;\n            }\n          }\n        }\n      }\n\n      if (d._resourcesElements) {\n        d._resourcesElements.top[e].attr(\"data-toggle\", \"off\");\n\n        d._resourcesElements.top[e].css(\"background\", \"transparent\");\n\n        d._resourcesElements.bottom[e].attr(\"data-toggle\", \"off\");\n\n        d._resourcesElements.bottom[e].css(\"background\", \"transparent\");\n      }\n\n      if (!d.hiddenResources) {\n        d.hiddenResources = new Array();\n      }\n\n      d.hiddenResources[e] = true;\n\n      d._renderrows();\n    },\n    _prepareAppointmentsInView: function (g, f) {\n      var h = this;\n\n      if (h._appupdating) {\n        return;\n      }\n\n      var l = new Array();\n\n      for (var s = 0; s < this.uiappointments.length; s++) {\n        var n = this.uiappointments[s];\n\n        if (n.hidden && n.recurrencePattern == null) {\n          continue;\n        }\n\n        var o = a.jqx.scheduler.utilities.rangeIntersection(n.from, n.to, g, f);\n\n        if (o && !n.recurrencePattern) {\n          l.push(n);\n        }\n\n        n.renderedAppointments = new Array();\n        var v = false;\n\n        if (n.recurrencePattern) {\n          var u = n.getOccurrences(g, f);\n          var t = n.exceptions;\n\n          for (var r = 0; r < u.length; r++) {\n            var e = u[r];\n\n            if (e.hidden) {\n              continue;\n            }\n\n            var c = true;\n\n            for (var p = 0; p < t.length; p++) {\n              var k = t[p];\n              var w = k.occurrenceFrom ? k.occurrenceFrom : k;\n\n              if (h.selectedJQXAppointment && h.selectedJQXAppointment.rootAppointment) {\n                if (!v && h.selectedJQXAppointment.occurrenceFrom.clearTime().equals(w.clearTime())) {\n                  h.selectedJQXAppointment = k;\n                  v = true;\n                }\n              }\n\n              if (w.clearTime().equals(e.from.clearTime())) {\n                c = false;\n                break;\n              }\n            }\n\n            if (!c) {\n              continue;\n            }\n\n            if (h.selectedJQXAppointment && h.selectedJQXAppointment.rootAppointment) {\n              if (!v && h.selectedJQXAppointment.occurrenceFrom.clearTime().equals(e.occurrenceFrom.clearTime())) {\n                h.selectedJQXAppointment = e;\n                v = true;\n              }\n            }\n\n            n.renderedAppointments[e.id] = e;\n            l.push(e);\n          }\n\n          for (var p = 0; p < t.length; p++) {\n            var k = t[p];\n            var w = k.occurrenceFrom ? k.from : k;\n            var q = n.createOccurrence(w);\n\n            if (k.occurrenceFrom) {\n              k.cloneAppointmentAttributes(q);\n\n              if (k.hidden) {\n                continue;\n              }\n            }\n\n            if (q != n) {\n              l.push(k);\n              n.renderedAppointments[k.id] = k;\n            }\n          }\n        }\n      }\n\n      var b = new Array();\n      this.tabKeyAppointments = new Array();\n\n      for (var s = 0; s < l.length; s++) {\n        var d = l[s];\n        b.push(d);\n        this.tabKeyAppointments.push(d);\n      }\n\n      b.sort(this._sortAppointmentsByFrom);\n\n      if (this._resources.length > 0) {\n        this.tabKeyAppointments.sort(function (j, i) {\n          return h._sortAppointmentsByResourceId(j, i, h);\n        });\n      } else {\n        this.tabKeyAppointments.sort(this._sortAppointmentsByFrom);\n      }\n\n      this.appointmentsToRender = b;\n    },\n    _renderDayWeekAppointments: function () {\n      var N = this;\n      var ab = N._views[N._view].type;\n      var M = N._views[N._view];\n      var A = new Array();\n      var K = new Array();\n      var Z = this.rows;\n      var E = N.showAllDayRow;\n      var ad = N.getMinutesPerScale();\n\n      if (M.timeRuler && M.timeRuler.showAllDayRow != undefined) {\n        E = M.timeRuler.showAllDayRow;\n      }\n\n      for (var f = 0; f < this.appointmentsToRender.length; f++) {\n        var s = this.appointmentsToRender[f];\n        var u = s.from;\n        var ae = s.to;\n        var V = a.jqx.scheduler.utilities.getEndOfDay(ae);\n        var D = u.day();\n        var e = s.allDay;\n        var v = N._getDateByString;\n        var G = new Array();\n        var r = new Array();\n        var p = s.resourceId;\n\n        var h = N._resources.indexOf(p);\n\n        if (N.resources && N.resources.orientation == \"none\") {\n          h = -1;\n        }\n\n        var B = u.toDate().valueOf();\n        var k = ae.toDate().valueOf();\n        var Q = V.toDate().valueOf();\n\n        var af = function (j, i) {\n          if (j.date < i.date) {\n            return -1;\n          }\n\n          if (j.date == i.date) {\n            return 0;\n          }\n\n          if (j.date > i.date) {\n            return 1;\n          }\n        };\n\n        if (!s.allDay && s.duration().days() < 1 || !E) {\n          var q = ae.toDate();\n          var I = false;\n\n          if (q.getHours() == 0 && q.getMinutes() == 0) {\n            I = true;\n          }\n\n          for (var X = 0; X < N.columnCells.length; X++) {\n            if (!N.columnCells[X]) {\n              continue;\n            }\n\n            var w = N.columnCells[X];\n\n            if (N.rtl) {\n              w = N.columnCells[N.columnCells.length - 1 - X];\n            }\n\n            for (var W = 0; W < w.length; W++) {\n              if (w[W].getAttribute(\"data-end-date\")) {\n                continue;\n              }\n\n              var n = w[W].getAttribute(\"data-date\");\n              var Y = v(n);\n              var F = v(n);\n              F.setMinutes(F.getMinutes() + ad - 1);\n              var m = Y.valueOf();\n              var H = F.valueOf();\n\n              if (m > ae) {\n                continue;\n              }\n\n              if (B <= m && m < k || B <= H && H < k || B >= m && H >= k) {\n                if (h != -1) {\n                  if (1 + h != w[W].getAttribute(\"data-view\")) {\n                    continue;\n                  }\n                }\n\n                if (D != Y.getDate()) {\n                  G.sort(af);\n                  r.push(G);\n                  G = new Array();\n                  D = u.addDays(1).day();\n                }\n\n                G.push({\n                  cell: w[W],\n                  date: Y\n                });\n              }\n            }\n          }\n\n          G.sort(af);\n          r.push(G);\n          var C = new Array();\n\n          for (var X = 0; X < r.length; X++) {\n            var w = r[X];\n\n            if (w.length == 0) {\n              continue;\n            }\n\n            var c = N.cellWidth;\n            var d = w[w.length - 1].cell.offsetTop + N.cellHeight;\n            var P = w[0].cell.offsetLeft;\n            var O = w[0].cell.offsetTop;\n            var S = N.getMinutesPerScale();\n            var q = new a.jqx.date(w[w.length - 1].date, N.timeZone).addMinutes(S);\n            var ac = {\n              cells: w,\n              x: P,\n              y: O,\n              height: d - O,\n              width: c,\n              appointment: s,\n              from: new a.jqx.date(w[0].date, N.timeZone),\n              to: q\n            };\n            C.push(ac);\n            A.push(ac);\n          }\n\n          s.elements = C;\n\n          if (s.rootAppointment) {\n            s.rootAppointment.elements = s.rootAppointment.elements.concat(s.elements);\n          }\n        } else {\n          var w = Z[0].cells;\n\n          if (this.tableRows > 1) {\n            var U = Z.length / N.tableRows;\n            var b = h * U;\n            w = Z[b].cells;\n          }\n\n          for (var W = 0; W < w.length; W++) {\n            var n = w[W].getAttribute(\"data-date\");\n            var ag = v(n);\n            var Y = new a.jqx.date(ag, N.timeZone);\n            Y = a.jqx.scheduler.utilities.getEndOfDay(Y);\n            var m = Y.toDate().valueOf();\n\n            if (m > V) {\n              continue;\n            }\n\n            if (u <= Y && Y <= V) {\n              if (h != -1) {\n                if (1 + h != w[W].getAttribute(\"data-view\")) {\n                  continue;\n                }\n              }\n\n              if (G.length == 0) {\n                Y = a.jqx.scheduler.utilities.getStartOfDay(Y);\n              }\n\n              G.push({\n                cell: w[W],\n                date: Y\n              });\n            }\n          }\n\n          G.sort(af);\n          r.push(G);\n          var C = new Array();\n\n          for (var X = 0; X < r.length; X++) {\n            var w = r[X];\n\n            if (w.length == 0) {\n              break;\n            }\n\n            var l = a(w[0].cell).position();\n            var c = a(w[w.length - 1].cell).position().left + this.cellWidth - l.left;\n            var d = a(w[w.length - 1].cell).position().top;\n            var P = l.left;\n            var O = l.top;\n\n            if (this.rtl) {\n              var l = a(w[w.length - 1].cell).position();\n              var P = l.left;\n              var c = a(w[0].cell).position().left + this.cellWidth - l.left;\n            }\n\n            var T = w[w.length - 1].date;\n            T = new a.jqx.date(a.jqx.scheduler.utilities.getEndOfDay(T), N.timeZone);\n            var ac = {\n              cells: w,\n              x: P,\n              y: O,\n              height: d - O + this.cellHeight,\n              width: c,\n              appointment: s,\n              from: a.jqx.scheduler.utilities.getStartOfDay(new a.jqx.date(w[0].date, N.timeZone)),\n              to: T\n            };\n            C.push(ac);\n            K.push(ac);\n          }\n\n          s.elements = C;\n\n          if (s.rootAppointment) {\n            s.rootAppointment.elements = s.rootAppointment.elements.concat(s.elements);\n          }\n        }\n      }\n\n      var z = this.getViewStart();\n      var R = this.getViewEnd();\n\n      if (this._resources.length < 2 || this.resources.orientation == \"none\") {\n        var aa = new Array();\n        var g = z;\n        var J = 0;\n\n        while (g < R) {\n          aa[J] = new Array();\n\n          for (var X = 0; X < A.length; X++) {\n            var t = A[X];\n\n            if (t.from.day() == g.day()) {\n              t.column = -1;\n              t.columnSpan = 1;\n              aa[J].push(t);\n            }\n          }\n\n          J++;\n          g = g.addDays(1);\n        }\n\n        for (var X = 0; X < aa.length; X++) {\n          this._renderAppointmentsInDay(aa[X]);\n        }\n\n        this._renderAllDayAppointments(K);\n      } else {\n        for (var W = 0; W < this._resources.length; W++) {\n          var L = this._resources[W];\n          var aa = new Array();\n          var g = z;\n          var J = 0;\n\n          while (g < R) {\n            aa[J] = new Array();\n\n            for (var X = 0; X < A.length; X++) {\n              var t = A[X];\n\n              if (t.from.day() == g.day()) {\n                t.column = -1;\n                t.columnSpan = 1;\n\n                if (t.appointment.resourceId == L) {\n                  aa[J].push(t);\n                }\n              }\n            }\n\n            J++;\n            g = g.addDays(1);\n          }\n\n          for (var X = 0; X < aa.length; X++) {\n            this._renderAppointmentsInDay(aa[X]);\n          }\n\n          var o = new Array();\n\n          for (var X = 0; X < K.length; X++) {\n            if (K[X].appointment.resourceId == L) {\n              o.push(K[X]);\n            }\n          }\n\n          this._renderAllDayAppointments(o);\n        }\n      }\n    },\n    _renderAllDayAppointments: function (ar) {\n      var ac = this;\n      var I = this.showAllDayRow;\n      var ab = this._views[this._view];\n\n      if (ab.timeRuler && ab.timeRuler.showAllDayRow != undefined) {\n        I = ab.timeRuler.showAllDayRow;\n      }\n\n      if (!I) {\n        return;\n      }\n\n      if (ar.length == 0) {\n        return;\n      }\n\n      var B = ar;\n      var H = 1;\n      H = this.getMaxAllDayAppointments(ar);\n\n      if (this.tableRows == 1) {\n        var A = this.table[0].rows[0].clientHeight / H;\n      } else {\n        var A = this.table[0].rows[1].clientHeight / H;\n      }\n\n      for (var ap = 0; ap < ar.length; ap++) {\n        var z = ar[ap];\n        z.row = -1;\n        var d = this.getCollisionAppointments(z, ar);\n        d.sort(this._sortAppointmentsByFrom);\n        var s = d.indexOf(z);\n\n        if (s >= 0) {\n          for (var aj = s; aj < d.length; aj++) {\n            d[aj].row = -1;\n          }\n        }\n\n        for (var am = 0; am < H; am++) {\n          var n = am;\n\n          for (var U in d) {\n            if (U == \"indexOf\") {\n              break;\n            }\n\n            var Y = d[U];\n\n            if (Y.row == -1 && !this.isBusyRow(n, d)) {\n              Y.row = n;\n              var an = H;\n              var c = this.getMaxAllDayAppointments(d);\n\n              if (an > c) {\n                an = c;\n              }\n\n              Y.rowsCount = an;\n            }\n          }\n        }\n      }\n\n      for (var am = 0; am < B.length; am++) {\n        var z = B[am];\n        var d = this.getCollisionAppointments(z, B);\n        d.sort(this._sortAppointmentsByFrom);\n        var l = 1;\n\n        for (var U in d) {\n          if (U == \"indexOf\") {\n            break;\n          }\n\n          var O = d[U];\n          l = Math.max(l, O.rowsCount);\n        }\n\n        for (var U in d) {\n          if (U == \"indexOf\") {\n            break;\n          }\n\n          var O = d[U];\n          O.rowsCount = l;\n        }\n\n        if (d.length == 1) {\n          z.rowSpan = l;\n        } else {\n          var F = 0;\n          var f = true;\n\n          for (var aj = z.row; aj < l; aj++) {\n            for (var U in d) {\n              if (U == \"indexOf\") {\n                break;\n              }\n\n              var Y = d[U];\n\n              if (Y == z) {\n                continue;\n              }\n\n              if (Y.row == aj) {\n                f = false;\n              }\n            }\n\n            if (!f) {\n              break;\n            }\n\n            F++;\n          }\n\n          z.rowSpan = F;\n        }\n      }\n\n      var aq = ac.appointmentsMinHeight + 2;\n\n      if (ac.isTouchDevice()) {\n        var aq = ac.touchAppointmentsMinHeight + 2;\n      }\n\n      for (var ae = 0; ae < B.length; ae++) {\n        var ad = aq;\n        var z = B[ae];\n        z.height = aq;\n        var D = ad * z.row;\n        z.y = 18 + z.y + D + 4 * z.row;\n        z.x += 3;\n        z.width -= 8;\n\n        if (z.appointment.from.hour() != 0 || z.appointment.to.hour() != 23) {\n          var C = this.getViewStart();\n          var ag = this.getViewEnd();\n\n          if (!ac.rtl) {\n            var K = parseFloat(ac.cellWidth / 24) * z.appointment.from.hour() + parseFloat(ac.cellWidth / 48) * (z.appointment.from.minute() / 30);\n\n            if (z.appointment.from < C) {\n              K = 0;\n            }\n\n            z.timewidth = z.width;\n            z.timex = K;\n            var L = parseFloat(ac.cellWidth / 24) * z.appointment.to.hour() + parseFloat(ac.cellWidth / 48) * (z.appointment.to.minute() / 30);\n\n            if (z.appointment.to > ag) {\n              L = 0;\n            }\n\n            z.timewidth -= K;\n\n            if (L > 0) {\n              z.timewidth -= ac.cellWidth;\n              z.timewidth += L;\n            }\n\n            if (ab.appointmentsRenderMode == \"exactTime\") {\n              z.width = z.timewidth;\n              z.x += K;\n            }\n          } else {\n            var K = parseFloat(ac.cellWidth / 24) * z.appointment.to.hour() + parseFloat(ac.cellWidth / 48) * (z.appointment.to.minute() / 30);\n            var L = parseFloat(ac.cellWidth / 24) * z.appointment.from.hour() + parseFloat(ac.cellWidth / 48) * (z.appointment.from.minute() / 30);\n\n            if (K > 0) {\n              K = ac.cellWidth - K;\n            }\n\n            if (z.appointment.from < C) {\n              L = 0;\n            }\n\n            if (z.appointment.to > ag) {\n              K = 0;\n            }\n\n            if (ab.appointmentsRenderMode == \"exactTime\") {\n              z.x += K;\n              z.width -= K;\n              z.width -= L;\n            }\n\n            if (z.appointment.duration().days() < 1) {\n              if (z.width < 15) {\n                z.width = 15;\n              }\n            }\n\n            z.timewidth = z.width;\n\n            if (ab.appointmentsRenderMode == \"exactTimeStatus\") {\n              z.timewidth -= K;\n              z.timewidth -= L;\n            }\n\n            z.timex = K;\n          }\n        }\n      }\n\n      for (var ae = 0; ae < B.length; ae++) {\n        var ak = B[ae];\n        var N = \"\";\n        var P = \"auto\";\n        var ab = this._views[this._view];\n        var o = ak.appointment.from;\n        var av = ak.appointment.to;\n\n        if (ab.timeRuler && ab.timeRuler.formatString) {\n          P = ab.timeRuler.formatString;\n        }\n\n        var af = P;\n\n        if (P === \"auto\") {\n          if (o.hour() == 0 && o.minute() == 0 || o.hour() == 12 && o.minute() == 0) {\n            var af = \"hh tt\";\n          } else {\n            var af = \"hh:mm\";\n          }\n\n          if (av.hour() == 0 && av.minute() == 0 || av.hour() == 12 && av.minute() == 0) {\n            var y = \"hh tt\";\n          } else {\n            var y = \"hh:mm\";\n          }\n        }\n\n        var u = o.toString(af);\n        var v = av.toString(y);\n        var J = ak.appointment.duration();\n        var e = ak.appointment.allDay || J.hours === 23 && J.minutes === 59 && J.seconds === 59;\n        var aa = ak.appointment.background;\n        var T = ak.appointment.subject ? ak.appointment.subject : \"(No Title)\";\n        var M = ak.appointment.color;\n        var i = ak.appointment.resourceId;\n        var ah = ac.getColors(ac._resources.indexOf(i));\n        var ai = \" data-resourceId='\" + i + \"' \";\n        var X = ak.appointment.borderColor;\n        var t = ak.appointment.location;\n\n        if (t.length > 0) {\n          t = \", \" + t;\n        }\n\n        if (!aa) {\n          aa = ah.background;\n        }\n\n        if (!X) {\n          X = ah.border;\n        }\n\n        if (!M) {\n          M = ah.color;\n        }\n\n        var b = ak.appointment.isRecurrentAppointment();\n        var r = ak.appointment.isException();\n        var g = u + \"-\" + v;\n\n        if (e) {\n          u = \"\";\n          v = \"\";\n        }\n\n        var ao = \"\";\n        var w = ac.toTP(\"jqx-scheduler-appointment-status\");\n        var S = \"\";\n        var R = ac.statuses[ak.appointment.status];\n        var k = false;\n\n        if (R) {\n          if (R == \"transparent\") {\n            k = false;\n          } else {\n            S = \"<div style='background: \" + R + \"; border-right-color: \" + X + \"' class='\" + w + \"'></div>\";\n\n            if (R == \"tentative\") {\n              w = ac.toTP(\"jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n              S = \"<div style='background-color: \" + X + \"; border-right-color: \" + X + \"' class='\" + w + \"'></div>\";\n            }\n\n            k = true;\n          }\n        }\n\n        var E = ac.toTP(\"jqx-scheduler-appointment-duration-status\");\n        var al = \"<div style='width: \" + ak.timewidth + \"px; left: \" + ak.timex + \"px;' class='\" + E + \"'></div>\";\n\n        if (e) {\n          al = \"\";\n        }\n\n        var G = \"\";\n\n        if (ab.appointmentsRenderMode != \"exactTimeStatus\") {\n          al = \"\";\n        }\n\n        if (ac.rtl) {\n          var w = ac.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status\");\n          S = \"<div style='background: \" + R + \"; border-left-color: \" + X + \"' class='\" + w + \"'></div>\";\n\n          if (R == \"tentative\") {\n            w = ac.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n            S = \"<div style='background-color: \" + X + \"; border-left-color: \" + X + \"' class='\" + w + \"'></div>\";\n          }\n\n          G = S;\n          S = \"\";\n        }\n\n        var W = \"\";\n        var Q = T + t;\n\n        if (!e) {\n          Q = T + t + al;\n        }\n\n        if (ac.renderAppointment) {\n          var au = ac.renderAppointment({\n            appointment: ak.appointment.boundAppointment,\n            textColor: M,\n            background: aa,\n            borderColor: X,\n            html: Q,\n            cssClass: \"\",\n            style: \"\",\n            width: ak.width,\n            height: ak.height,\n            view: ac._views[ac._view].type\n          });\n\n          if (au) {\n            var N = au.html;\n\n            if (N != Q) {\n              Q = N;\n            }\n\n            M = au.textColor;\n            aa = au.background;\n            X = au.borderColor;\n\n            if (au.cssClass) {\n              W = au.cssClass + \" \";\n            }\n\n            if (au.style != \"\") {\n              var ah = ac.getAppointmentColors(au.style);\n              aa = ah.background;\n              X = ah.border;\n              M = ah.color;\n            }\n          }\n        }\n\n        if (ao === \"\") {\n          if (k) {\n            var ao = \"<div style='white-space:nowrap;' class='\" + ac.toTP(\"jqx-scheduler-appointment-content\") + \"'>\" + S + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + Q + \"</div>\" + G + \"</div>\";\n          } else {\n            var ao = \"<div style='white-space:nowrap;' class='\" + ac.toTP(\"jqx-scheduler-appointment-content\") + \"'><div class='\" + ac.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + Q + \"</div></div>\";\n          }\n        }\n\n        var at = \"\";\n\n        if (ac.rtl) {\n          at = ac.toTP(\"jqx-rtl jqx-scheduler-appointment-rtl\") + \" \";\n        }\n\n        if (r) {\n          var h = M.toLowerCase() == \"white\" ? ac.toTP(\"jqx-icon-recurrence-exception-white\") : ac.toTP(\"jqx-icon-recurrence-exception\");\n          N = \"<div data-key='\" + ak.appointment.id + \"'\" + ai + \"class='\" + at + W + ac.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ak.x + \"px; top: \" + ak.y + \"px; width: \" + ak.width + \"px; line-height: \" + ak.height + \"px; height: \" + ak.height + \"px; border-color:\" + X + \"; color:\" + M + \"; background:\" + aa + \";'><div class='\" + h + \"'></div>\" + ao + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n        } else {\n          if (b) {\n            var q = M.toLowerCase() == \"white\" ? ac.toTP(\"jqx-icon-recurrence-white\") : ac.toTP(\"jqx-icon-recurrence\");\n            N = \"<div data-key='\" + ak.appointment.id + \"'\" + ai + \"class='\" + at + W + ac.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ak.x + \"px; top: \" + ak.y + \"px; width: \" + ak.width + \"px; line-height: \" + ak.height + \"px; height: \" + ak.height + \"px; border-color:\" + X + \"; color:\" + M + \"; background:\" + aa + \";'><div class='\" + q + \"'></div>\" + ao + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n          } else {\n            N = \"<div data-key='\" + ak.appointment.id + \"'\" + ai + \"class='\" + at + W + ac.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ak.x + \"px; top: \" + ak.y + \"px; width: \" + ak.width + \"px; line-height: \" + ak.height + \"px; height: \" + ak.height + \"px; border-color:\" + X + \"; color:\" + M + \"; background:\" + aa + \";'>\" + ao + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n          }\n        }\n\n        var V = a(N);\n\n        if (this.tableRows == 1) {\n          V.appendTo(this.pinnedtable);\n        } else {\n          V.appendTo(this.table);\n        }\n\n        ak.element = V;\n\n        if (this.appointmentTooltips) {\n          if (!ak.appointment.tooltip) {\n            var Z = ak.appointment.subject;\n\n            if (u) {\n              Z = u + \" - \" + v + \" \" + Z;\n            }\n\n            if (Z) {\n              var t = ak.appointment.location;\n\n              if (t) {\n                Z += \"\\n\" + t;\n              }\n\n              V[0].setAttribute(\"title\", Z);\n            }\n          } else {\n            V[0].setAttribute(\"title\", ak.appointment.tooltip);\n          }\n        }\n      }\n    },\n    _renderAppointmentsInDay: function (an, am) {\n      if (an.length == 0) {\n        return;\n      }\n\n      var Z = this;\n      var Y = this._views[this._view];\n      var B = an;\n      var C = this.getViewStart();\n      var ac = this.getViewEnd();\n      var ai = 1;\n      var o = 0;\n\n      if (Y.timeRuler) {\n        o = this.columns.records[1].width;\n\n        if (Y.timeRuler.timeZones) {\n          o = this.columns.records[1 + Y.timeRuler.timeZones.length].width;\n        }\n      } else {\n        o = this.columns.records[1].width;\n      }\n\n      ai = this.getMaxColumnsInADay(an);\n      var n = o / ai;\n\n      if (n < 0) {\n        return;\n      }\n\n      for (var al = 0; al < an.length; al++) {\n        var A = an[al];\n        A.column = -1;\n        var d = this.getCollisionAppointments(A, an);\n        d.sort(this._sortAppointmentsByFrom);\n        var t = d.indexOf(A);\n\n        if (t >= 0) {\n          for (var ag = t; ag < d.length; ag++) {\n            d[ag].column = -1;\n          }\n        }\n\n        for (var aj = 0; aj < ai; aj++) {\n          var e = aj;\n\n          for (var R in d) {\n            if (R == \"indexOf\") {\n              break;\n            }\n\n            var V = d[R];\n\n            if (V.column == -1 && !this.isBusyColumn(e, d)) {\n              V.column = e;\n              var g = ai;\n              var c = this.getMaxColumnsInADay(d);\n\n              if (g > c) {\n                g = c;\n              }\n\n              V.columnsCount = g;\n            }\n          }\n        }\n      }\n\n      for (var aj = 0; aj < B.length; aj++) {\n        var A = B[aj];\n        var d = this.getCollisionAppointments(A, B);\n        d.sort(this._sortAppointmentsByFrom);\n        var H = 1;\n\n        for (var R in d) {\n          if (R == \"indexOf\") {\n            break;\n          }\n\n          var L = d[R];\n\n          if (L.columnsCount == undefined) {\n            continue;\n          }\n\n          H = Math.max(H, L.columnsCount);\n        }\n\n        for (var R in d) {\n          if (R == \"indexOf\") {\n            break;\n          }\n\n          var L = d[R];\n          L.columnsCount = H;\n        }\n\n        if (d.length == 1) {\n          A.columnSpan = H;\n        } else {\n          var D = 0;\n          var f = true;\n\n          for (var ag = A.column; ag < H; ag++) {\n            for (var R in d) {\n              if (R == \"indexOf\") {\n                break;\n              }\n\n              var V = d[R];\n\n              if (V.column == undefined) {\n                continue;\n              }\n\n              if (V == A) {\n                continue;\n              }\n\n              if (V.column == ag) {\n                f = false;\n              }\n            }\n\n            if (!f) {\n              break;\n            }\n\n            D++;\n          }\n\n          A.columnSpan = D;\n        }\n      }\n\n      for (var aa = 0; aa < B.length; aa++) {\n        var E = o / B[aa].columnsCount;\n        var A = B[aa];\n        A.width = -5 + E * A.columnSpan;\n        var ap = E * A.column;\n        A.x = 2 + A.x + ap;\n        A.height -= 5;\n        A.y += 1;\n\n        if (Y.appointmentsRenderMode == \"exactTime\") {\n          var ae = Z.getMinutesPerScale();\n\n          if (A.appointment.from.minute() % ae != 0) {\n            var at = A.appointment.from.minute() % ae;\n            var J = parseFloat(Z.cellHeight / ae) * at;\n          } else {\n            var J = 0;\n          }\n\n          if (A.appointment.to.minute() % ae != 0) {\n            var at = A.appointment.to.minute() % ae;\n            var G = Z.cellHeight - parseFloat(Z.cellHeight / ae) * at;\n\n            if (A.to.day() !== A.appointment.to.day()) {\n              G = 0;\n            }\n          } else {\n            G = 0;\n          }\n\n          A.y += J;\n          A.height -= J;\n          A.height -= G;\n        }\n      }\n\n      for (var aa = 0; aa < B.length; aa++) {\n        var ah = B[aa];\n        var K = \"\";\n        var M = \"auto\";\n        var Y = this._views[this._view];\n        var q = ah.appointment.from;\n        var ar = ah.appointment.to;\n\n        if (Y.timeRuler && Y.timeRuler.formatString) {\n          M = Y.timeRuler.formatString;\n        }\n\n        var ab = M;\n\n        if (M === \"auto\") {\n          if (q.hour() == 0 && q.minute() == 0 || q.hour() == 12 && q.minute() == 0) {\n            var ab = \"hh tt\";\n          } else {\n            var ab = \"hh:mm\";\n          }\n\n          if (ar.hour() == 0 && ar.minute() == 0 || ar.hour() == 12 && ar.minute() == 0) {\n            var z = \"hh tt\";\n          } else {\n            var z = \"hh:mm\";\n          }\n        }\n\n        var v = q.toString(ab);\n        var w = ar.toString(z);\n        var X = ah.appointment.background;\n        var Q = ah.appointment.subject ? ah.appointment.subject : \"(No Title)\";\n        var u = ah.appointment.location ? ah.appointment.location : \"\";\n        var I = ah.appointment.color;\n        var k = ah.appointment.resourceId;\n        var ad = Z.getColors(Z._resources.indexOf(k));\n        var af = \" data-resourceId='\" + k + \"' \";\n        var U = ah.appointment.borderColor;\n\n        if (!X) {\n          X = ad.background;\n        }\n\n        if (!U) {\n          U = ad.border;\n        }\n\n        if (!I) {\n          I = ad.color;\n        }\n\n        var b = ah.appointment.isRecurrentAppointment();\n        var s = ah.appointment.isException();\n        var ak = \"\";\n        var y = Z.toTP(\"jqx-scheduler-appointment-status\");\n        var P = \"\";\n        var O = Z.statuses[ah.appointment.status];\n        var l = false;\n\n        if (O) {\n          if (O == \"transparent\") {\n            l = false;\n          } else {\n            P = \"<div style='background: \" + O + \"; border-right-color: \" + U + \"' class='\" + y + \"'></div>\";\n\n            if (O == \"tentative\") {\n              y = Z.toTP(\"jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n              P = \"<div style='background-color: \" + U + \"; border-right-color: \" + U + \"' class='\" + y + \"'></div>\";\n            }\n\n            l = true;\n          }\n        }\n\n        var F = \"\";\n\n        if (Z.rtl) {\n          var y = Z.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status\");\n          P = \"<div style='background: \" + O + \"; border-left-color: \" + U + \"' class='\" + y + \"'></div>\";\n\n          if (O == \"tentative\") {\n            y = Z.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n            P = \"<div style='background-color: \" + U + \"; border-left-color: \" + U + \"' class='\" + y + \"'></div>\";\n          }\n\n          F = P;\n          P = \"\";\n        }\n\n        var T = \"\";\n        var N = Q + \"<br/>\" + u;\n\n        if (!u) {\n          var N = Q;\n        }\n\n        if (Z.renderAppointment) {\n          var aq = Z.renderAppointment({\n            appointment: ah.appointment.boundAppointment,\n            textColor: I,\n            background: X,\n            borderColor: U,\n            html: N,\n            cssClass: \"\",\n            style: \"\",\n            width: ah.width,\n            height: ah.height,\n            view: Z._views[Z._view].type\n          });\n\n          if (aq) {\n            var K = aq.html;\n\n            if (K != N) {\n              N = K;\n            }\n\n            I = aq.textColor;\n            X = aq.background;\n            U = aq.borderColor;\n\n            if (aq.cssClass) {\n              T = aq.cssClass + \" \";\n            }\n\n            if (aq.style != \"\") {\n              var ad = Z.getAppointmentColors(aq.style);\n              X = ad.background;\n              U = ad.border;\n              I = ad.color;\n            }\n          }\n        }\n\n        if (ak === \"\") {\n          if (l) {\n            var ak = \"<div class='\" + Z.toTP(\"jqx-scheduler-appointment-content\") + \"'>\" + P + \"<div class='\" + Z.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + N + \"</div>\" + F + \"</div>\";\n          } else {\n            var ak = \"<div class='\" + Z.toTP(\"jqx-scheduler-appointment-content\") + \"'><div class='\" + Z.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + N + \"</div></div>\";\n          }\n        }\n\n        var ao = \"\";\n\n        if (Z.rtl) {\n          ao = Z.toTP(\"jqx-rtl jqx-scheduler-appointment-rtl\") + \" \";\n        }\n\n        if (s) {\n          var h = I.toLowerCase() == \"white\" ? Z.toTP(\"jqx-icon-recurrence-exception-white\") : Z.toTP(\"jqx-icon-recurrence-exception\");\n          K = \"<div data-key='\" + ah.appointment.id + \"'\" + af + \"class='\" + ao + T + Z.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ah.x + \"px; top: \" + ah.y + \"px; width: \" + ah.width + \"px; height: \" + ah.height + \"px; border-color:\" + U + \"; color:\" + I + \"; background:\" + X + \";'><div class='\" + h + \"'></div>\" + ak + \"<div class='\" + Z.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-top-resize-indicator\") + \"'></div><div class='\" + Z.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-bottom-resize-indicator\") + \"'></div></div>\";\n        } else {\n          if (b) {\n            var r = I.toLowerCase() == \"white\" ? Z.toTP(\"jqx-icon-recurrence-white\") : Z.toTP(\"jqx-icon-recurrence\");\n            K = \"<div data-key='\" + ah.appointment.id + \"'\" + af + \"class='\" + ao + T + Z.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ah.x + \"px; top: \" + ah.y + \"px; width: \" + ah.width + \"px; height: \" + ah.height + \"px; border-color:\" + U + \"; color:\" + I + \"; background:\" + X + \";'><div class='\" + r + \"'></div>\" + ak + \"<div class='\" + Z.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-top-resize-indicator\") + \"'></div><div class='\" + Z.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-bottom-resize-indicator\") + \"'></div></div>\";\n          } else {\n            K = \"<div data-key='\" + ah.appointment.id + \"'\" + af + \"class='\" + ao + T + Z.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ah.x + \"px; top: \" + ah.y + \"px; width: \" + ah.width + \"px; height: \" + ah.height + \"px; border-color:\" + U + \"; color:\" + I + \"; background:\" + X + \";'>\" + ak + \"<div class='\" + Z.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-top-resize-indicator\") + \"'></div><div class='\" + Z.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-bottom-resize-indicator\") + \"'></div></div>\";\n          }\n        }\n\n        var S = a(K);\n        S.appendTo(this.table);\n        ah.element = S;\n\n        if (this.appointmentTooltips) {\n          if (!ah.appointment.tooltip) {\n            var W = ah.appointment.subject;\n\n            if (W) {\n              var u = ah.appointment.location;\n\n              if (u) {\n                W += \"\\n\" + u;\n              }\n\n              S[0].setAttribute(\"title\", W);\n            }\n          } else {\n            S[0].setAttribute(\"title\", ah.appointment.tooltip);\n          }\n        }\n      }\n    },\n    getCollisionAppointments: function (b, f) {\n      var j = new Array();\n      var g = b.from;\n      var h = b.to;\n\n      for (var d = 0; d < f.length; d++) {\n        var k = f[d];\n        var e = k.from;\n        var c = k.to;\n\n        if (a.jqx.scheduler.utilities.rangeIntersection(g, h, e, c)) {\n          j.push(k);\n        }\n      }\n\n      return j;\n    },\n    getAllDayCollisionAppointments: function (b, f) {\n      var j = new Array();\n      var g = a.jqx.scheduler.utilities.getStartOfDay(b.from);\n      var h = a.jqx.scheduler.utilities.getEndOfDay(b.to);\n\n      for (var d = 0; d < f.length; d++) {\n        var k = f[d];\n        var e = a.jqx.scheduler.utilities.getStartOfDay(k.from);\n        var c = a.jqx.scheduler.utilities.getEndOfDay(k.to);\n\n        if (a.jqx.scheduler.utilities.rangeIntersection(g, h, e, c)) {\n          j.push(k);\n        }\n      }\n\n      return j;\n    },\n    _renderAppointments: function (e, c) {\n      var d = this;\n\n      if (d._appupdating) {\n        return;\n      }\n\n      d.table.find(\".jqx-scheduler-appointment\").remove();\n      d.pinnedtable.find(\".jqx-scheduler-appointment\").remove();\n      var b = d._views[d._view].type;\n\n      if (b === \"dayView\" || b === \"weekView\") {\n        d._renderDayWeekAppointments(e, c);\n      } else {\n        if (b === \"monthView\") {\n          d._renderMonthAppointments(e, c);\n        } else {\n          if (b === \"timelineWeekView\" || b === \"timelineDayView\" || b === \"timelineMonthView\") {\n            d._renderTimelineAppointments(e, c);\n          }\n        }\n      }\n\n      if (d.selectedJQXAppointment) {\n        d._selectAppointment(d.selectedJQXAppointment);\n      }\n    },\n    _renderTimelineAppointments: function (t, I) {\n      var E = this;\n      var Q = E._views[E._view].type;\n      var D = E._views[E._view];\n      var u = new Array();\n      var P = this.rows;\n      var L = this.cellHeight;\n      var K = this.cellWidth;\n      var J = E.getMinutesPerScale();\n\n      for (var d = 0; d < this.appointmentsToRender.length; d++) {\n        var o = this.appointmentsToRender[d];\n        var p = o.from;\n        var S = o.to;\n        var r = E._getDateByString;\n        var A = new Array();\n        var v = p.toDate().valueOf();\n        var g = S.toDate().valueOf();\n\n        if (Q === \"timelineMonthView\") {\n          v = p.clearTime().toDate().valueOf();\n        }\n\n        var T = function (j, i) {\n          if (j.date < i.date) {\n            return -1;\n          }\n\n          if (j.date == i.date) {\n            return 0;\n          }\n\n          if (j.date > i.date) {\n            return 1;\n          }\n        };\n\n        var q = E.rows[0];\n        var m = o.resourceId;\n\n        var f = E._resources.indexOf(m);\n\n        if (E._resources.length > 0) {\n          if (E.resources.orientation !== \"horizontal\") {\n            if (f >= 1) {\n              q = E.rows[f];\n            }\n          }\n        }\n\n        if (E.resources && E.resources.orientation == \"none\") {\n          f = -1;\n          var q = E.rows[0];\n        }\n\n        var s = q.cells;\n\n        for (var M = 0; M < s.length; M++) {\n          var k = s[M].getAttribute(\"data-date\");\n          s[M].appointments = new Array();\n          var O = r(k);\n          var h = O.valueOf();\n          var z = r(k);\n          z.setMinutes(z.getMinutes() + J - 1);\n          var B = z.valueOf();\n\n          if (h > S) {\n            continue;\n          }\n\n          if (v <= h && h < g || v <= B && B < g || v >= h && v <= B && g <= B) {\n            if (f != -1) {\n              if (1 + f != s[M].getAttribute(\"data-view\")) {\n                continue;\n              }\n            }\n\n            A.push({\n              cell: s[M],\n              date: O\n            });\n            q = N;\n          }\n        }\n\n        A.sort(T);\n        var w = new Array();\n        var s = A;\n\n        if (s.length == 0) {\n          continue;\n        }\n\n        var l = E.appointmentsMinHeight;\n\n        if (E.isTouchDevice()) {\n          l = E.touchAppointmentsMinHeight;\n        }\n\n        if (D.appointmentHeight) {\n          l = D.appointmentHeight;\n        }\n\n        var H = a(s[0].cell).position();\n        var c = l;\n        var b = a(s[s.length - 1].cell).position().left - H.left + K;\n        var G = H.left;\n        var F = H.top;\n\n        if (E.rtl) {\n          var H = a(s[s.length - 1].cell).position();\n          var b = a(s[0].cell).position().left - H.left + K;\n          var G = H.left;\n          var F = H.top;\n        }\n\n        var n = new a.jqx.date(s[s.length - 1].date, E.timeZone).addMinutes(J);\n\n        if (Q === \"timelineMonthView\") {\n          var n = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(s[s.length - 1].date, E.timeZone));\n        }\n\n        var R = {\n          cellX: G,\n          cellY: F,\n          cellHeight: L,\n          cells: s,\n          x: G,\n          y: F,\n          height: c,\n          width: b,\n          appointment: o,\n          from: new a.jqx.date(s[0].date, E.timeZone),\n          to: n\n        };\n\n        if (D.appointmentsRenderMode === \"exactTime\") {\n          R.from = o.from;\n          R.to = o.to;\n        }\n\n        w.push(R);\n        u.push(R);\n        o.elements = w;\n\n        if (o.rootAppointment) {\n          o.rootAppointment.elements = o.rootAppointment.elements.concat(o.elements);\n        }\n      }\n\n      if (this._resources.length < 2 || this.resources.orientation == \"none\") {\n        this._renderUITimelineAppointments(u, t, I);\n      } else {\n        for (var M = 0; M < this._resources.length; M++) {\n          var C = this._resources[M];\n          var e = new Array();\n\n          for (var N = 0; N < u.length; N++) {\n            if (u[N].appointment.resourceId == C) {\n              e.push(u[N]);\n            }\n          }\n\n          this._renderUITimelineAppointments(e, t, I);\n        }\n      }\n    },\n    _renderUITimelineAppointments: function (ao, w, ac) {\n      var Y = this;\n      var ap = Y._views[Y._view].type;\n      var X = Y._views[Y._view];\n      var E = ao;\n      var C = 1;\n      var Y = this;\n      var T = new Array();\n      C = Y.getMaxTimelineAppointments(ao, T, w, ac);\n      var h = Y.appointmentsMinHeight;\n\n      if (Y.isTouchDevice()) {\n        h = Y.touchAppointmentsMinHeight;\n      }\n\n      if (X.appointmentHeight) {\n        h = X.appointmentHeight;\n      }\n\n      for (var an = 0; an < ao.length; an++) {\n        var g = ao[an];\n        g.row = -1;\n        var d = Y.getCollisionAppointments(g, ao);\n        d.sort(Y._sortAppointmentsByFrom);\n        var t = d.indexOf(g);\n\n        if (t >= 0) {\n          for (var aj = t; aj < d.length; aj++) {\n            d[aj].row = -1;\n          }\n        }\n\n        for (var ak = 0; ak < C; ak++) {\n          var o = ak;\n\n          for (var P in d) {\n            if (P == \"indexOf\") {\n              break;\n            }\n\n            var U = d[P];\n\n            if (U.row == -1 && !Y.isBusyRow(o, d)) {\n              U.row = o;\n              var al = C;\n              var c = Y.getMaxTimelineAppointments(d, T, w, ac);\n\n              if (al > c) {\n                al = c;\n              }\n\n              U.rowsCount = al;\n            }\n          }\n        }\n      }\n\n      for (var ak = 0; ak < E.length; ak++) {\n        var g = E[ak];\n        var d = Y.getCollisionAppointments(g, E);\n        d.sort(Y._sortAppointmentsByFrom);\n        var n = 1;\n\n        for (var P in d) {\n          if (P == \"indexOf\") {\n            break;\n          }\n\n          var K = d[P];\n          n = Math.max(n, K.rowsCount);\n        }\n\n        for (var P in d) {\n          if (P == \"indexOf\") {\n            break;\n          }\n\n          var K = d[P];\n          K.rowsCount = n;\n        }\n\n        if (d.length == 1) {\n          g.rowSpan = n;\n        } else {\n          var z = 0;\n          var f = true;\n\n          for (var aj = g.row; aj < n; aj++) {\n            for (var P in d) {\n              if (P == \"indexOf\") {\n                break;\n              }\n\n              var U = d[P];\n\n              if (U == g) {\n                continue;\n              }\n\n              if (U.row == aj) {\n                f = false;\n              }\n            }\n\n            if (!f) {\n              break;\n            }\n\n            z++;\n          }\n\n          g.rowSpan = z;\n        }\n      }\n\n      for (var aa = 0; aa < E.length; aa++) {\n        var Z = h;\n        var g = E[aa];\n        g.height = Z;\n        var y = 2 + (3 + Z) * g.row;\n        g.y = g.y + y;\n        g.x += 1;\n        g.width -= 5;\n        var e = Y._views[Y._view].type;\n        var X = Y._views[Y._view];\n\n        if (e == \"timelineMonthView\" && X.appointmentsRenderMode) {\n          if (g.appointment.from.hour() != 0 || g.appointment.to.hour() != 23) {\n            if (!Y.rtl) {\n              var F = parseFloat(Y.cellWidth / 24) * g.appointment.from.hour() + parseFloat(Y.cellWidth / 48) * (g.appointment.from.minute() / 30);\n              var G = parseFloat(Y.cellWidth / 24) * g.appointment.to.hour() + parseFloat(Y.cellWidth / 48) * (g.appointment.to.minute() / 30);\n              g.timewidth = g.width;\n              g.timex = F;\n              g.timewidth -= F;\n              g.timewidth -= Y.cellWidth;\n              g.timewidth += G;\n\n              if (X.appointmentsRenderMode == \"exactTime\") {\n                g.width = g.timewidth;\n\n                if (Y.date.month() === g.appointment.from.month()) {\n                  g.x += F;\n                } else {\n                  g.width = F + g.timewidth;\n                }\n\n                if (g.appointment.duration().days() < 1) {\n                  if (g.width < 15) {\n                    g.width = 15;\n\n                    if (F + 15 > Y.cellWidth) {\n                      var D = Y.cellWidth - F - 15;\n                      g.x += D;\n                    }\n                  }\n                }\n              }\n            } else {\n              var F = parseFloat(Y.cellWidth / 24) * g.appointment.to.hour() + parseFloat(Y.cellWidth / 48) * (g.appointment.to.minute() / 30);\n              var G = parseFloat(Y.cellWidth / 24) * g.appointment.from.hour() + parseFloat(Y.cellWidth / 48) * (g.appointment.from.minute() / 30);\n\n              if (F > 0) {\n                F = Y.cellWidth - F;\n              }\n\n              if (X.appointmentsRenderMode == \"exactTime\") {\n                g.x += F;\n                g.width -= F;\n                g.width -= G;\n              }\n\n              if (g.appointment.duration().days() < 1) {\n                if (g.width < 15) {\n                  g.width = 15;\n                }\n              }\n\n              g.timewidth = g.width;\n              g.timex = F;\n            }\n          }\n        } else {\n          if (X.appointmentsRenderMode) {\n            if (X.appointmentsRenderMode == \"exactTime\") {\n              var ae = Y.getMinutesPerScale();\n\n              if (g.appointment.from.minute() % ae != 0) {\n                var au = g.appointment.from.minute() % ae;\n                var F = parseFloat(Y.cellWidth / ae) * au;\n\n                if (Y.rtl) {\n                  var F = parseFloat(Y.cellWidth / ae) * au;\n                }\n              } else {\n                var F = 0;\n              }\n\n              if (g.appointment.to.minute() % ae != 0) {\n                var au = g.appointment.to.minute() % ae;\n                var G = Y.cellWidth - parseFloat(Y.cellWidth / ae) * au;\n\n                if (Y.rtl) {\n                  var G = Y.cellWidth - parseFloat(Y.cellWidth / ae) * au;\n                }\n              } else {\n                G = 0;\n              }\n\n              if (!Y.rtl) {\n                g.x += F;\n                g.width -= F;\n                g.width -= G;\n              } else {\n                g.x += G;\n                g.width -= F;\n                g.width -= G;\n              }\n            }\n          }\n        }\n      }\n\n      var ah = \"\";\n\n      for (var aa = 0; aa < E.length; aa++) {\n        var ai = E[aa];\n        var I = \"\";\n        var J = \"auto\";\n        var X = Y._views[Y._view];\n        var q = ai.appointment.from;\n        var at = ai.appointment.to;\n\n        if (X.timeRuler && X.timeRuler.formatString) {\n          J = X.timeRuler.formatString;\n        }\n\n        var W = ai.appointment.background;\n        var O = ai.appointment.subject ? ai.appointment.subject : \"(No Title)\";\n        var u = ai.appointment.location;\n\n        if (u && u.length > 1) {\n          u = \", \" + u;\n        }\n\n        var H = ai.appointment.color;\n        var k = ai.appointment.resourceId;\n        var ad = Y.getColors(Y._resources.indexOf(k));\n        var af = \" data-resourceId='\" + k + \"' \";\n        var S = ai.appointment.borderColor;\n\n        if (!W) {\n          W = ad.background;\n        }\n\n        if (!S) {\n          S = ad.border;\n        }\n\n        if (!H) {\n          H = ad.color;\n        }\n\n        var b = ai.appointment.isRecurrentAppointment();\n        var s = ai.appointment.isException();\n        var am = \"\";\n        var v = Y.toTP(\"jqx-scheduler-appointment-status\");\n        var N = \"\";\n        var M = Y.statuses[ai.appointment.status];\n        var l = false;\n\n        if (M) {\n          if (M == \"transparent\") {\n            l = false;\n          } else {\n            N = \"<div style='background: \" + M + \"; border-right-color: \" + S + \"' class='\" + v + \"'></div>\";\n\n            if (M == \"tentative\") {\n              v = Y.toTP(\"jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n              N = \"<div style='background-color: \" + S + \"; border-right-color: \" + S + \"' class='\" + v + \"'></div>\";\n            }\n\n            l = true;\n          }\n        }\n\n        var A = \"\";\n\n        if (Y.rtl) {\n          var v = Y.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status\");\n          N = \"<div style='background: \" + M + \"; border-left-color: \" + S + \"' class='\" + v + \"'></div>\";\n\n          if (M == \"tentative\") {\n            v = Y.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n            N = \"<div style='background-color: \" + S + \"; border-left-color: \" + S + \"' class='\" + v + \"'></div>\";\n          }\n\n          A = N;\n          N = \"\";\n        }\n\n        var R = \"\";\n        var L = O + \"<br/>\" + u;\n\n        if (Y.renderAppointment) {\n          var ar = Y.renderAppointment({\n            appointment: ai.appointment.boundAppointment,\n            textColor: H,\n            background: W,\n            borderColor: S,\n            html: L,\n            cssClass: \"\",\n            style: \"\",\n            width: ai.width,\n            height: ai.height,\n            view: Y._views[Y._view].type\n          });\n\n          if (ar) {\n            var I = ar.html;\n\n            if (I != L) {\n              L = I;\n            }\n\n            H = ar.textColor;\n            W = ar.background;\n            S = ar.borderColor;\n\n            if (ar.cssClass) {\n              R = ar.cssClass + \" \";\n            }\n\n            if (ar.style != \"\") {\n              var ad = Y.getAppointmentColors(ar.style);\n              W = ad.background;\n              S = ad.border;\n              H = ad.color;\n            }\n          }\n        }\n\n        if (am === \"\") {\n          if (l) {\n            var am = \"<div style='white-space:nowrap;' class='\" + Y.toTP(\"jqx-scheduler-appointment-content\") + \"'>\" + N + \"<div class='\" + Y.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + L + \"</div>\" + A + \"</div>\";\n          } else {\n            var am = \"<div style='white-space:nowrap;' class='\" + Y.toTP(\"jqx-scheduler-appointment-content\") + \"'><div class='\" + Y.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + L + \"</div></div>\";\n          }\n        }\n\n        var aq = \"\";\n\n        if (Y.rtl) {\n          aq = Y.toTP(\"jqx-rtl jqx-scheduler-appointment-rtl\") + \" \";\n        }\n\n        if (s) {\n          var i = H.toLowerCase() == \"white\" ? Y.toTP(\"jqx-icon-recurrence-exception-white\") : Y.toTP(\"jqx-icon-recurrence-exception\");\n          I = \"<div data-key='\" + ai.appointment.id + \"'\" + af + \"class='\" + aq + R + Y.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ai.x + \"px; top: \" + ai.y + \"px; width: \" + ai.width + \"px; height: \" + ai.height + \"px; line-height: \" + ai.height + \"px; border-color:\" + S + \"; color:\" + H + \"; background:\" + W + \";'><div class='\" + i + \"'></div>\" + am + \"<div class='\" + Y.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + Y.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n        } else {\n          if (b) {\n            var r = H.toLowerCase() == \"white\" ? Y.toTP(\"jqx-icon-recurrence-white\") : Y.toTP(\"jqx-icon-recurrence\");\n            I = \"<div data-key='\" + ai.appointment.id + \"'\" + af + \"class='\" + aq + R + Y.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ai.x + \"px; top: \" + ai.y + \"px; width: \" + ai.width + \"px; height: \" + ai.height + \"px; line-height: \" + ai.height + \"px; border-color:\" + S + \"; color:\" + H + \"; background:\" + W + \";'><div class='\" + r + \"'></div>\" + am + \"<div class='\" + Y.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + Y.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n          } else {\n            I = \"<div data-key='\" + ai.appointment.id + \"'\" + af + \"class='\" + aq + R + Y.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + ai.x + \"px; top: \" + ai.y + \"px; width: \" + ai.width + \"px; height: \" + ai.height + \"px; line-height: \" + ai.height + \"px; border-color:\" + S + \"; color:\" + H + \"; background:\" + W + \";'>\" + am + \"<div class='\" + Y.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + Y.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n          }\n        }\n\n        ah = I;\n        var Q = a(I);\n        Q.appendTo(this.table);\n        ai.element = Q;\n\n        if (this.appointmentTooltips) {\n          if (!ai.appointment.tooltip) {\n            var V = ai.appointment.subject;\n\n            if (V) {\n              var u = ai.appointment.location;\n\n              if (u) {\n                V += \"\\n\" + u;\n              }\n\n              Q[0].setAttribute(\"title\", V);\n            }\n          } else {\n            Q[0].setAttribute(\"title\", ai.appointment.tooltip);\n          }\n        }\n      }\n\n      var ag = Y.table.find(\".jqx-scheduler-appointment\");\n\n      var B = function (m) {\n        for (var j = 0; j < ag.length; j++) {\n          var p = ag[j].getAttribute(\"data-key\");\n\n          if (p == m) {\n            return ag[j];\n          }\n        }\n      };\n\n      for (var aa = 0; aa < E.length; aa++) {\n        var ai = E[aa];\n        var ab = false;\n        var Q = a(B(ai.appointment.id));\n        a.each(ai.cells, function (p) {\n          var m = a(this.cell);\n          var aw = ai.cellY;\n          var av = ai.cellX;\n          var j = ai.cellHeight;\n\n          if (!m[0].appointments) {\n            m[0].appointments = new Array();\n          }\n\n          m[0].appointments.push({\n            ui: Q,\n            appointment: ai\n          });\n          Q = Q;\n\n          if (ai.y + ai.height >= aw + j - 12) {\n            Q[0].style.visibility = \"hidden\";\n            var x = m.find(\".jqx-icon-arrow-down\");\n\n            if (x.length > 0) {\n              x[0].style.display = \"block\";\n\n              x[0].mousedown = function () {\n                if (Y.openedMonthCellPopup) {\n                  Y.openedMonthCellPopup.remove();\n                }\n\n                var ax = a(\"<div></div>\");\n                var aA = new a.jqx.date(m.attr(\"data-date\"), Y.timeZone);\n                var aD = a(\"<div class='\" + Y.toTP(\"jqx-scheduler-month-cell\") + \"'><span style='float: right; cursor: pointer; width:16px; height: 16px;' class='\" + Y.toTP(\"jqx-icon-close\") + \"'></span></div>\");\n                aD.height(16);\n\n                aD.find(\"span\")[0].mousedown = function () {\n                  ax.remove();\n                };\n\n                aD.addClass(Y.toTP(\"jqx-widget-header\"));\n                ax.addClass(Y.toTP(\"jqx-widget\"));\n                ax.addClass(Y.toTP(\"jqx-window\"));\n                ax.addClass(Y.toTP(\"jqx-scheduler-month-cell-popup\"));\n                ax.addClass(Y.toTP(\"jqx-popup\"));\n                var aE = a(\"<div></div>\");\n                ax.append(aD);\n                ax.append(aE);\n                aE.addClass(Y.toTP(\"jqx-widget-content\"));\n                var ay = m.width();\n                var aG = 21;\n\n                for (var aB = 0; aB < m[0].appointments.length; aB++) {\n                  var az = m[0].appointments[aB].ui.clone(true);\n                  az.css(\"left\", \"3px\");\n                  az.css(\"top\", \"0px\");\n                  az.css(\"margin-top\", \"2px\");\n                  az.css(\"position\", \"relative\");\n                  az.css(\"visibility\", \"visible\");\n                  az.width(ay - 6);\n                  az.click(function (aH) {\n                    var aI = Y.getJQXAppointmentByElement(Y.getAppointmentElement(aH.target));\n\n                    Y._raiseEvent(\"appointmentClick\", {\n                      appointment: aI.boundAppointment\n                    });\n                  });\n                  az.dblclick(function (aI) {\n                    var aJ = Y.getJQXAppointmentByElement(Y.getAppointmentElement(aI.target));\n\n                    if (!aJ.readOnly && !Y.editRecurrenceDialog.jqxWindow(\"isOpen\") && (!Y._editDialog || Y._editDialog && !Y._editDialog.jqxWindow(\"isOpen\"))) {\n                      var aH = Y._initDialog(aJ);\n\n                      if (aH !== false) {\n                        Y._openDialog();\n                      }\n                    }\n\n                    Y._raiseEvent(\"appointmentDoubleClick\", {\n                      appointment: aJ.boundAppointment\n                    });\n                  });\n                  aG += az.outerHeight() + 4;\n                  aE.append(az);\n                }\n\n                ax.css(\"overflow\", \"hidden\");\n                ax.css(\"position\", \"absolute\");\n                var aF = Y.table.height() - aw - 25;\n\n                if (aF < j) {\n                  aF = j;\n                }\n\n                ax.css(\"max-height\", aF);\n                ax.height(aG);\n                ax.width(ay);\n                ax.css(\"z-index\", \"9999\");\n                var aC = m.position();\n                ax.css(\"top\", aC.top);\n                ax.css(\"left\", aC.left);\n                Y.table.append(ax);\n                Y.openedMonthCellPopup = ax;\n              };\n            }\n          }\n        });\n      }\n    },\n    _renderMonthAppointments: function () {\n      var K = this;\n      var U = K._views[K._view].type;\n      var J = K._views[K._view];\n      var A = new Array();\n      var S = this.rows;\n      var O = 0;\n\n      if (this.host.find(\".jqx-scheduler-month-cell\").length > 0) {\n        O = a(this.host.find(\".jqx-scheduler-month-cell\")[0]).height();\n      }\n\n      for (var e = 0; e < this.appointmentsToRender.length; e++) {\n        var r = this.appointmentsToRender[e];\n        var t = a.jqx.scheduler.utilities.getStartOfDay(r.from);\n        var W = a.jqx.scheduler.utilities.getEndOfDay(r.to);\n        var c = r.allDay;\n        var v = K._getDateByString;\n        var F = new Array();\n        var q = new Array();\n        var B = t.toDate().valueOf();\n        var k = W.toDate().valueOf();\n\n        var X = function (j, i) {\n          if (j.date < i.date) {\n            return -1;\n          }\n\n          if (j.date == i.date) {\n            return 0;\n          }\n\n          if (j.date > i.date) {\n            return 1;\n          }\n        };\n\n        var u = -1;\n        var o = r.resourceId;\n\n        var h = K._resources.indexOf(o);\n\n        if (K.resources && K.resources.orientation == \"none\") {\n          h = -1;\n        }\n\n        for (var Q = 0; Q < K.rows.length; Q++) {\n          var w = K.rows[Q].cells;\n\n          for (var P = 0; P < w.length; P++) {\n            var m = w[P].getAttribute(\"data-date\");\n            var R = v(m);\n            var l = R.valueOf();\n\n            if (l > W) {\n              continue;\n            }\n\n            w[P].appointments = new Array();\n\n            if (h != -1) {\n              if (1 + h != w[P].getAttribute(\"data-view\")) {\n                continue;\n              }\n            }\n\n            if (B <= l && l < k) {\n              if (u != Q && u != -1) {\n                F.sort(X);\n                q.push(F);\n                F = new Array();\n              }\n\n              F.push({\n                cell: w[P],\n                date: R\n              });\n              u = Q;\n            }\n          }\n        }\n\n        F.sort(X);\n        q.push(F);\n        var C = new Array();\n\n        for (var Q = 0; Q < q.length; Q++) {\n          var w = q[Q];\n\n          if (w.length == 0) {\n            break;\n          }\n\n          var n = K.appointmentsMinHeight;\n\n          if (K.isTouchDevice()) {\n            n = K.touchAppointmentsMinHeight;\n          }\n\n          if (J.appointmentHeight) {\n            n = J.appointmentHeight;\n          }\n\n          var d = n;\n          var E = a(w[w.length - 1].cell).position().left;\n          var b = E - a(w[0].cell).position().left + K.columns.records[0].width;\n\n          if (J.showWeekNumbers) {\n            var b = E - a(w[0].cell).position().left + K.columns.records[1].width;\n          }\n\n          var G = a(w[0].cell).position();\n          var M = G.left;\n          var L = G.top + O;\n          var p = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(w[w.length - 1].date, K.timeZone));\n          var D = new a.jqx.date(w[0].date, K.timeZone);\n\n          if (K.rtl) {\n            var p = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(w[0].date, K.timeZone));\n            var D = new a.jqx.date(w[w.length - 1].date, K.timeZone);\n            var G = a(w[w.length - 1].cell).position();\n            var M = G.left;\n            var L = G.top + O;\n            var E = a(w[0].cell).position().left;\n            var b = E - a(w[w.length - 1].cell).position().left + K.columns.records[0].width;\n\n            if (J.showWeekNumbers) {\n              var b = E - a(w[w.length - 1].cell).position().left + K.columns.records[1].width;\n            }\n          }\n\n          var V = {\n            cells: w,\n            cellY: parseInt(G.top),\n            cellX: parseInt(G.left),\n            lastCellY: parseInt(G.top),\n            lastCellX: E,\n            x: M,\n            y: L,\n            height: d,\n            width: b,\n            appointment: r,\n            from: D,\n            to: p\n          };\n          C.push(V);\n          A.push(V);\n        }\n\n        r.elements = C;\n\n        if (r.rootAppointment) {\n          r.rootAppointment.elements = r.rootAppointment.elements.concat(r.elements);\n        }\n      }\n\n      var z = this.getViewStart();\n      var N = this.getViewEnd();\n\n      if (this._resources.length < 2 || this.resources.orientation == \"none\") {\n        var T = new Array();\n        var f = z;\n        var H = 0;\n\n        while (f < N) {\n          T[H] = new Array();\n\n          for (var Q = 0; Q < A.length; Q++) {\n            var s = A[Q];\n\n            if (f <= s.from && s.to < f.addDays(7)) {\n              s.row = -1;\n              s.rowSpan = 1;\n              T[H].push(s);\n            }\n          }\n\n          H++;\n          f = f.addDays(7);\n        }\n\n        for (var Q = 0; Q < T.length; Q++) {\n          if (T[Q].length > 0) {\n            this._renderUIMonthAppointments(T[Q]);\n          }\n        }\n      } else {\n        for (var P = 0; P < this._resources.length; P++) {\n          var I = this._resources[P];\n          var g = new Array();\n          var T = new Array();\n          var f = z;\n          var H = 0;\n\n          while (f < N) {\n            T[H] = new Array();\n\n            for (var Q = 0; Q < A.length; Q++) {\n              var s = A[Q];\n\n              if (f <= s.from && s.to < f.addDays(7)) {\n                s.row = -1;\n                s.rowSpan = 1;\n\n                if (s.appointment.resourceId == I) {\n                  T[H].push(s);\n                }\n              }\n            }\n\n            H++;\n            f = f.addDays(7);\n          }\n\n          for (var Q = 0; Q < T.length; Q++) {\n            if (T[Q].length > 0) {\n              this._renderUIMonthAppointments(T[Q]);\n            }\n          }\n        }\n      }\n    },\n    _getMonthAppointmentsPerWeek: function () {\n      var M = this;\n      var W = M._views[M._view].type;\n      var L = M._views[M._view];\n      var C = new Array();\n      var U = this.rows;\n      var Q = 0;\n\n      if (this.host.find(\".jqx-scheduler-month-cell\").length > 0) {\n        Q = a(this.host.find(\".jqx-scheduler-month-cell\")[0]).height();\n      }\n\n      if (!M.rows) {\n        return new Array();\n      }\n\n      var B = this.getViewStart();\n      var P = this.getViewEnd();\n\n      for (var e = 0; e < this.appointmentsToRender.length; e++) {\n        var s = this.appointmentsToRender[e];\n        var u = a.jqx.scheduler.utilities.getStartOfDay(s.from);\n        var Y = a.jqx.scheduler.utilities.getEndOfDay(s.to);\n        var c = s.allDay;\n        var z = M._getDateByString;\n        var H = new Array();\n        var r = new Array();\n        var D = u.toDate().valueOf();\n        var l = Y.toDate().valueOf();\n\n        var Z = function (j, i) {\n          if (j.date < i.date) {\n            return -1;\n          }\n\n          if (j.date == i.date) {\n            return 0;\n          }\n\n          if (j.date > i.date) {\n            return 1;\n          }\n        };\n\n        var v = -1;\n        var p = s.resourceId;\n\n        var k = M._resources.indexOf(p);\n\n        if (M.resources && M.resources.orientation == \"none\") {\n          k = -1;\n        }\n\n        for (var S = 0; S < M.rows.length; S++) {\n          var A = M.rows[S].cells;\n\n          for (var R = 0; R < A.length; R++) {\n            var n = A[R].getAttribute(\"data-date\");\n            var T = B.addDays(S * 7 + R).toDate();\n            var m = T.valueOf();\n\n            if (m > Y) {\n              continue;\n            }\n\n            if (k != -1) {\n              if (1 + k != A[R].getAttribute(\"data-view\")) {\n                continue;\n              }\n            }\n\n            if (D <= m && m < l) {\n              if (v != S && v != -1) {\n                H.sort(Z);\n                r.push(H);\n                H = new Array();\n              }\n\n              H.push({\n                cell: A[R],\n                date: T\n              });\n              v = S;\n            }\n          }\n        }\n\n        H.sort(Z);\n        r.push(H);\n        var E = new Array();\n\n        for (var S = 0; S < r.length; S++) {\n          var A = r[S];\n\n          if (A.length == 0) {\n            break;\n          }\n\n          var o = M.appointmentsMinHeight;\n\n          if (M.isTouchDevice()) {\n            o = M.touchAppointmentsMinHeight;\n          }\n\n          if (L.appointmentHeight) {\n            o = L.appointmentHeight;\n          }\n\n          var d = o;\n          var G = a(A[A.length - 1].cell).position().left;\n          var b = G - a(A[0].cell).position().left + M.columns.records[0].width;\n\n          if (L.showWeekNumbers) {\n            var b = G - a(A[0].cell).position().left + M.columns.records[1].width;\n          }\n\n          var I = a(A[0].cell).position();\n          var O = I.left;\n          var N = I.top + Q;\n          var q = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(A[A.length - 1].date, M.timeZone));\n          var F = new a.jqx.date(A[0].date, M.timeZone);\n\n          if (M.rtl) {\n            var q = a.jqx.scheduler.utilities.getEndOfDay(new a.jqx.date(A[0].date, M.timeZone));\n            var F = new a.jqx.date(A[A.length - 1].date, M.timeZone);\n            var I = a(A[A.length - 1].cell).position();\n            var O = I.left;\n            var N = I.top + Q;\n            var G = a(A[0].cell).position().left;\n            var b = G - a(A[A.length - 1].cell).position().left + M.columns.records[0].width;\n\n            if (L.showWeekNumbers) {\n              var b = G - a(A[A.length - 1].cell).position().left + M.columns.records[1].width;\n            }\n          }\n\n          var X = {\n            cells: A,\n            cellY: parseInt(I.top),\n            cellX: parseInt(I.left),\n            lastCellY: parseInt(I.top),\n            lastCellX: G,\n            x: O,\n            y: N,\n            height: d,\n            width: b,\n            appointment: s,\n            from: F,\n            to: q\n          };\n          E.push(X);\n          C.push(X);\n        }\n      }\n\n      if (this._resources.length < 2 || this.resources.orientation == \"none\") {\n        var V = new Array();\n        var g = B;\n        var J = 0;\n\n        while (g < P) {\n          V[J] = new Array();\n\n          for (var S = 0; S < C.length; S++) {\n            var t = C[S];\n\n            if (g <= t.from && t.to < g.addDays(7)) {\n              t.row = -1;\n              t.rowSpan = 1;\n              V[J].push(t);\n            }\n          }\n\n          J++;\n          g = g.addDays(7);\n        }\n\n        var f = new Array();\n\n        for (var S = 0; S < V.length; S++) {\n          if (V[S].length > 0) {\n            var w = this.getMaxMonthAppointments(V[S]);\n            var o = M.appointmentsMinHeight;\n\n            if (M.isTouchDevice()) {\n              o = M.touchAppointmentsMinHeight;\n            }\n\n            if (L.appointmentHeight) {\n              o = L.appointmentHeight;\n            }\n\n            f.push(w * (o + 3) + 22);\n          } else {\n            f.push(\"auto\");\n          }\n        }\n\n        return f;\n      } else {\n        var f = new Array();\n\n        for (var R = 0; R < this._resources.length; R++) {\n          var K = this._resources[R];\n          var h = new Array();\n          var V = new Array();\n          var g = B;\n          var J = 0;\n\n          while (g < P) {\n            V[J] = new Array();\n\n            for (var S = 0; S < C.length; S++) {\n              var t = C[S];\n\n              if (g <= t.from && t.to < g.addDays(7)) {\n                t.row = -1;\n                t.rowSpan = 1;\n\n                if (t.appointment.resourceId == K) {\n                  V[J].push(t);\n                }\n              }\n            }\n\n            J++;\n            g = g.addDays(7);\n          }\n\n          for (var S = 0; S < V.length; S++) {\n            if (V[S].length > 0) {\n              var w = this.getMaxMonthAppointments(V[S]);\n              f.push(w * (o + 3) + 22);\n            } else {\n              f.push(\"auto\");\n            }\n          }\n\n          return f;\n        }\n      }\n    },\n    _renderUIMonthAppointments: function (ar) {\n      var ab = this._views[this._view];\n      var I = ar;\n      var B = this.getViewStart();\n      var ah = this.getViewEnd();\n      var G = 1;\n      var ac = this;\n      G = this.getMaxMonthAppointments(ar);\n      var i = ac.appointmentsMinHeight;\n\n      if (ac.isTouchDevice()) {\n        i = ac.touchAppointmentsMinHeight;\n      }\n\n      if (ab.appointmentHeight) {\n        i = ab.appointmentHeight;\n      }\n\n      var f = this._sortAppointmentsByFrom;\n\n      if (this.rtl) {\n        f = this._sortAppointmentsByTo;\n      }\n\n      for (var aq = 0; aq < ar.length; aq++) {\n        var h = ar[aq];\n        h.row = -1;\n        var d = this.getCollisionAppointments(h, ar);\n        d.sort(f);\n        var u = d.indexOf(h);\n\n        if (u >= 0) {\n          for (var ak = u; ak < d.length; ak++) {\n            d[ak].row = -1;\n          }\n        }\n\n        for (var an = 0; an < G; an++) {\n          var q = an;\n\n          for (var U in d) {\n            if (U == \"indexOf\") {\n              break;\n            }\n\n            var Y = d[U];\n\n            if (Y.row == -1 && !this.isBusyRow(q, d)) {\n              Y.row = q;\n              var ao = G;\n              var c = this.getMaxMonthAppointments(d);\n\n              if (ao > c) {\n                ao = c;\n              }\n\n              Y.rowsCount = ao;\n            }\n          }\n        }\n      }\n\n      for (var an = 0; an < I.length; an++) {\n        var h = I[an];\n        var d = this.getCollisionAppointments(h, I);\n        d.sort(f);\n        var o = 1;\n\n        for (var U in d) {\n          if (U == \"indexOf\") {\n            break;\n          }\n\n          var O = d[U];\n          o = Math.max(o, O.rowsCount);\n        }\n\n        for (var U in d) {\n          if (U == \"indexOf\") {\n            break;\n          }\n\n          var O = d[U];\n          O.rowsCount = o;\n        }\n\n        if (d.length == 1) {\n          h.rowSpan = o;\n        } else {\n          var E = 0;\n          var g = true;\n\n          for (var ak = h.row; ak < o; ak++) {\n            for (var U in d) {\n              if (U == \"indexOf\") {\n                break;\n              }\n\n              var Y = d[U];\n\n              if (Y == h) {\n                continue;\n              }\n\n              if (Y.row == ak) {\n                g = false;\n              }\n            }\n\n            if (!g) {\n              break;\n            }\n\n            E++;\n          }\n\n          h.rowSpan = E;\n        }\n      }\n\n      for (var ae = 0; ae < I.length; ae++) {\n        var ad = i;\n        var h = I[ae];\n        h.height = ad;\n        var C = 2 + (3 + ad) * h.row;\n        h.y = h.y + C;\n        h.x += 1;\n        h.width -= 5;\n\n        if (h.appointment.from.hour() != 0 || h.appointment.to.hour() != 23) {\n          if (!ac.rtl) {\n            var K = parseFloat(ac.cellWidth / 24) * h.appointment.from.hour() + parseFloat(ac.cellWidth / 48) * (h.appointment.from.minute() / 30);\n            h.timewidth = h.width;\n\n            if (h.from.clearTime().toString() == h.appointment.from.clearTime().toString()) {\n              h.timex = K;\n            } else {\n              K = 0;\n            }\n\n            if (h.appointment.elements.length > 1) {\n              if (h.appointment.elements[0] != h) {\n                K = 0;\n              }\n            }\n\n            var L = parseFloat(ac.cellWidth / 24) * h.appointment.to.hour() + parseFloat(ac.cellWidth / 48) * (h.appointment.to.minute() / 30);\n\n            if (h.appointment.elements.length > 1) {\n              if (h.appointment.elements[h.appointment.elements.length - 1] != h) {\n                L = 0;\n              }\n            }\n\n            h.timewidth -= K;\n\n            if (L > 0) {\n              h.timewidth -= ac.cellWidth;\n              h.timewidth += L;\n            }\n\n            if (ab.appointmentsRenderMode == \"exactTime\") {\n              if (h.from.clearTime().toString() == h.appointment.from.clearTime().toString()) {\n                h.x += K;\n              }\n\n              h.width = h.timewidth;\n\n              if (h.appointment.duration().days() < 1) {\n                if (h.width < 15) {\n                  h.width = 15;\n\n                  if (K + 15 > ac.cellWidth) {\n                    var H = ac.cellWidth - K - 15;\n                    h.x += H;\n                  }\n                }\n              }\n            }\n          } else {\n            var K = parseFloat(ac.cellWidth / 24) * h.appointment.to.hour() + parseFloat(ac.cellWidth / 48) * (h.appointment.to.minute() / 30);\n            var L = parseFloat(ac.cellWidth / 24) * h.appointment.from.hour() + parseFloat(ac.cellWidth / 48) * (h.appointment.from.minute() / 30);\n\n            if (h.appointment.elements.length > 1) {\n              if (h == h.appointment.elements[0]) {\n                if (L > 0) {\n                  if (ab.appointmentsRenderMode == \"exactTime\") {\n                    h.width -= ac.cellWidth - K;\n                    h.width -= L;\n                  } else {\n                    h.timewidth = h.width - ac.cellWidth + K - L;\n                  }\n                } else {\n                  h.timewidth = h.width;\n                  h.timex = 0;\n                }\n              } else {\n                if (h == h.appointment.elements[h.appointment.elements.length - 1]) {\n                  if (ab.appointmentsRenderMode == \"exactTime\") {\n                    h.x += ac.cellWidth;\n                    h.x -= K;\n                    h.width += K;\n                    h.width -= ac.cellWidth;\n                  }\n\n                  h.timewidth = h.width - ac.cellWidth + K;\n                  h.timex = ac.cellWidth - K;\n                }\n              }\n            } else {\n              if (ab.appointmentsRenderMode == \"exactTime\") {\n                h.x += ac.cellWidth;\n                h.x -= K;\n                h.width -= ac.cellWidth - K;\n                h.width -= L;\n              }\n\n              if (h.appointment.duration().days() < 1) {\n                if (h.width < 15) {\n                  h.width = 15;\n                }\n              }\n\n              h.timewidth = h.width - ac.cellWidth + K - L;\n              h.timex = ac.cellWidth - K;\n            }\n          }\n        }\n      }\n\n      for (var ae = 0; ae < I.length; ae++) {\n        var al = I[ae];\n        var N = \"\";\n        var P = \"auto\";\n        var ab = this._views[this._view];\n        var r = al.appointment.from;\n        var av = al.appointment.to;\n        var P = \"auto\";\n        var ab = this._views[this._view];\n        var r = al.appointment.from;\n        var av = al.appointment.to;\n\n        if (ab.timeRuler && ab.timeRuler.formatString) {\n          P = ab.timeRuler.formatString;\n        }\n\n        var ag = P;\n        var A = P;\n\n        if (P === \"auto\") {\n          if (r.hour() == 0 && r.minute() == 0 || r.hour() == 12 && r.minute() == 0) {\n            var ag = \"hh tt\";\n          } else {\n            var ag = \"hh:mm\";\n          }\n\n          if (av.hour() == 0 && av.minute() == 0 || av.hour() == 12 && av.minute() == 0) {\n            var A = \"hh tt\";\n          } else {\n            var A = \"hh:mm\";\n          }\n        }\n\n        var w = r.toString(ag);\n        var y = av.toString(A);\n        var J = al.appointment.duration();\n        var e = al.appointment.allDay || J.hours === 23 && J.minutes === 59 && J.seconds === 59;\n        var aa = al.appointment.background;\n        var T = al.appointment.subject ? al.appointment.subject : \"(No Title)\";\n        var M = al.appointment.color;\n        var l = al.appointment.resourceId;\n        var ai = ac.getColors(ac._resources.indexOf(l));\n        var aj = \" data-resourceId='\" + l + \"' \";\n        var X = al.appointment.borderColor;\n        var v = al.appointment.location;\n\n        if (v && v.length > 1) {\n          v = \", \" + v;\n        }\n\n        if (!aa) {\n          aa = ai.background;\n        }\n\n        if (!X) {\n          X = ai.border;\n        }\n\n        if (!M) {\n          M = ai.color;\n        }\n\n        var b = al.appointment.isRecurrentAppointment();\n        var t = al.appointment.isException();\n        var ap = \"\";\n        var z = ac.toTP(\"jqx-scheduler-appointment-status\");\n        var S = \"\";\n        var R = ac.statuses[al.appointment.status];\n        var n = false;\n\n        if (R) {\n          if (R == \"transparent\") {\n            n = false;\n          } else {\n            S = \"<div style='background: \" + R + \"; border-right-color: \" + X + \"' class='\" + z + \"'></div>\";\n\n            if (R == \"tentative\") {\n              z = ac.toTP(\"jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n              S = \"<div style='background-color: \" + X + \"; border-right-color: \" + X + \"' class='\" + z + \"'></div>\";\n            }\n\n            n = true;\n          }\n        }\n\n        var D = ac.toTP(\"jqx-scheduler-appointment-duration-status\");\n        var am = \"<div style='width: \" + al.timewidth + \"px; left: \" + al.timex + \"px;' class='\" + D + \"'></div>\";\n\n        if (e) {\n          am = \"\";\n        }\n\n        if (ab.appointmentsRenderMode != \"exactTimeStatus\") {\n          am = \"\";\n        }\n\n        var F = \"\";\n\n        if (ac.rtl) {\n          var z = ac.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status\");\n          S = \"<div style='background: \" + R + \"; border-left-color: \" + X + \"' class='\" + z + \"'></div>\";\n\n          if (R == \"tentative\") {\n            z = ac.toTP(\"jqx-scheduler-appointment-status-rtl jqx-scheduler-appointment-status jqx-scheduler-appointment-status-stripes\");\n            S = \"<div style='background-color: \" + X + \"; border-left-color: \" + X + \"' class='\" + z + \"'></div>\";\n          }\n\n          F = S;\n          S = \"\";\n        }\n\n        var W = \"\";\n        var Q = T + v;\n\n        if (!e) {\n          Q = T + v + am;\n        }\n\n        if (ac.renderAppointment) {\n          var au = ac.renderAppointment({\n            appointment: al.appointment.boundAppointment,\n            textColor: M,\n            background: aa,\n            borderColor: X,\n            html: Q,\n            cssClass: \"\",\n            style: \"\",\n            width: al.width,\n            height: al.height,\n            view: ac._views[ac._view].type\n          });\n\n          if (au) {\n            var N = au.html;\n\n            if (N != Q) {\n              Q = N;\n            }\n\n            M = au.textColor;\n            aa = au.background;\n            X = au.borderColor;\n\n            if (au.cssClass) {\n              W = au.cssClass + \" \";\n            }\n\n            if (au.style != \"\") {\n              var ai = ac.getAppointmentColors(au.style);\n              aa = ai.background;\n              X = ai.border;\n              M = ai.color;\n            }\n          }\n        }\n\n        if (ap === \"\") {\n          if (n) {\n            var ap = \"<div style='white-space:nowrap;' class='\" + ac.toTP(\"jqx-scheduler-appointment-content\") + \"'>\" + S + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + Q + \"</div>\" + F + \"</div>\";\n          } else {\n            var ap = \"<div style='white-space:nowrap;' class='\" + ac.toTP(\"jqx-scheduler-appointment-content\") + \"'><div class='\" + ac.toTP(\"jqx-scheduler-appointment-inner-content\") + \"'>\" + Q + \"</div></div>\";\n          }\n        }\n\n        var at = \"\";\n\n        if (ac.rtl) {\n          at = ac.toTP(\"jqx-rtl jqx-scheduler-appointment-rtl\") + \" \";\n        }\n\n        if (t) {\n          var k = M.toLowerCase() == \"white\" ? ac.toTP(\"jqx-icon-recurrence-exception-white\") : ac.toTP(\"jqx-icon-recurrence-exception\");\n          N = \"<div data-key='\" + al.appointment.id + \"'\" + aj + \"class='\" + at + W + ac.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + al.x + \"px; top: \" + al.y + \"px; width: \" + al.width + \"px; line-height: \" + al.height + \"px; height: \" + al.height + \"px; border-color:\" + X + \"; color:\" + M + \"; background:\" + aa + \";'><div class='\" + k + \"'></div>\" + ap + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n        } else {\n          if (b) {\n            var s = M.toLowerCase() == \"white\" ? ac.toTP(\"jqx-icon-recurrence-white\") : ac.toTP(\"jqx-icon-recurrence\");\n            N = \"<div data-key='\" + al.appointment.id + \"'\" + aj + \"class='\" + at + W + ac.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + al.x + \"px; top: \" + al.y + \"px; width: \" + al.width + \"px; line-height: \" + al.height + \"px; height: \" + al.height + \"px; border-color:\" + X + \"; color:\" + M + \"; background:\" + aa + \";'><div class='\" + s + \"'></div>\" + ap + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n          } else {\n            N = \"<div data-key='\" + al.appointment.id + \"'\" + aj + \"class='\" + at + W + ac.toTP(\"jqx-scheduler-appointment jqx-rc-all\") + \"' style='position:absolute; z-index: 399; left: \" + al.x + \"px; top: \" + al.y + \"px; width: \" + al.width + \"px; line-height: \" + al.height + \"px; height: \" + al.height + \"px; border-color:\" + X + \"; color:\" + M + \"; background:\" + aa + \";'>\" + ap + \"<div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-left-resize-indicator\") + \"'></div><div class='\" + ac.toTP(\"jqx-scheduler-appointment-resize-indicator jqx-scheduler-appointment-right-resize-indicator\") + \"'></div>\";\n          }\n        }\n\n        var V = a(N);\n        V.appendTo(this.table);\n        al.element = V;\n\n        if (this.appointmentTooltips) {\n          if (!al.appointment.tooltip) {\n            var Z = al.appointment.subject;\n\n            if (w && !e) {\n              Z = w + \" - \" + y + \" \" + Z;\n            }\n\n            if (Z) {\n              var v = al.appointment.location;\n\n              if (v) {\n                Z += \"\\n\" + v;\n              }\n\n              V[0].setAttribute(\"title\", Z);\n            }\n          } else {\n            V[0].setAttribute(\"title\", al.appointment.tooltip);\n          }\n        }\n\n        var af = false;\n        a.each(al.cells, function () {\n          var m = a(this.cell);\n          var j = m.position();\n\n          if (!m[0].appointments) {\n            m[0].appointments = new Array();\n          }\n\n          m[0].appointments.push({\n            ui: V,\n            appointment: al\n          });\n\n          if (al.y + al.height + 2 >= j.top + m.height()) {\n            V.css(\"visibility\", \"hidden\");\n            var p = m.find(\".jqx-icon-arrow-down\");\n            p.show();\n\n            if (p[0]) {\n              p[0].mousedown = function () {\n                if (ac.openedMonthCellPopup) {\n                  ac.openedMonthCellPopup.remove();\n                }\n\n                var aw = a(\"<div></div>\");\n                var aB = m.find(\"div\").clone(true);\n                aB.find(\"span\").removeClass().addClass(ac.toTP(\"jqx-icon-close\"));\n\n                aB.find(\"span\")[0].mousedown = function () {\n                  aw.remove();\n                };\n\n                aB.addClass(ac.toTP(\"jqx-widget-header\"));\n                aw.addClass(ac.toTP(\"jqx-widget\"));\n                aw.addClass(ac.toTP(\"jqx-window\"));\n                aw.addClass(ac.toTP(\"jqx-scheduler-month-cell-popup\"));\n                aw.addClass(ac.toTP(\"jqx-popup\"));\n                var az = a(\"<div></div>\");\n                aw.append(aB);\n                aw.append(az);\n                az.addClass(ac.toTP(\"jqx-widget-content jqx-disableselect\"));\n                var ay = m.width();\n                var x = 5 + m.find(\"div\").outerHeight();\n\n                for (var ax = 0; ax < m[0].appointments.length; ax++) {\n                  var aA = m[0].appointments[ax].ui.clone(true);\n                  aA.css(\"left\", \"3px\");\n                  aA.css(\"top\", \"0px\");\n                  aA.css(\"margin-top\", \"2px\");\n                  aA.css(\"position\", \"relative\");\n                  aA.css(\"visibility\", \"visible\");\n                  aA.width(ay - 6);\n                  x += aA.outerHeight() + 4;\n                  az.append(aA);\n                  aA.click(function (aC) {\n                    var aD = ac.getJQXAppointmentByElement(ac.getAppointmentElement(aC.target));\n\n                    ac._raiseEvent(\"appointmentClick\", {\n                      appointment: aD.boundAppointment\n                    });\n                  });\n                  aA.dblclick(function (aD) {\n                    var aE = ac.getJQXAppointmentByElement(ac.getAppointmentElement(aD.target));\n\n                    if (!aE.readOnly && !ac.editRecurrenceDialog.jqxWindow(\"isOpen\") && (!ac._editDialog || ac._editDialog && !ac._editDialog.jqxWindow(\"isOpen\"))) {\n                      var aC = ac._initDialog(aE);\n\n                      if (aC !== false) {\n                        ac._openDialog();\n                      }\n                    }\n\n                    ac._raiseEvent(\"appointmentDoubleClick\", {\n                      appointment: aE.boundAppointment\n                    });\n                  });\n                }\n\n                aw.css(\"overflow\", \"hidden\");\n                aw.css(\"position\", \"absolute\");\n                aw.height(x);\n                aw.width(ay);\n                aw.css(\"z-index\", \"9999\");\n                aw.css(\"top\", j.top);\n                aw.css(\"left\", j.left);\n                ac.table.append(aw);\n                ac.openedMonthCellPopup = aw;\n              };\n            }\n          }\n        });\n      }\n    },\n    _sortByDate: function (b, e) {\n      var d = b.getAttribute(\"data-date\");\n      d = this._getDateByString(d);\n      var c = e.getAttribute(\"data-date\");\n      c = this._getDateByString(c);\n\n      if (d < c) {\n        return -1;\n      }\n\n      if (d > c) {\n        return 1;\n      }\n\n      if (d == c) {\n        return 0;\n      }\n    },\n    _sortAppointmentsByFrom: function (b, f) {\n      if (b.from.equals(f.from)) {\n        var d = b.to - b.from;\n        var e = d * 10000;\n        var d = f.to - f.from;\n        var c = d * 10000;\n\n        if (e > c) {\n          return -1;\n        }\n      }\n\n      if (b.from < f.from) {\n        return -1;\n      }\n\n      if (b.from > f.from) {\n        return 1;\n      }\n\n      if (b.from == f.from) {\n        return 0;\n      }\n    },\n    _sortAppointmentsByTo: function (b, f) {\n      if (b.to.equals(f.to)) {\n        var d = b.to - b.from;\n        var e = d * 10000;\n        var d = f.to - f.from;\n        var c = d * 10000;\n\n        if (e > c) {\n          return -1;\n        }\n      }\n\n      if (b.to < f.to) {\n        return -1;\n      }\n\n      if (b.to > f.to) {\n        return 1;\n      }\n\n      if (b.to == f.to) {\n        return 0;\n      }\n    },\n    _sortAppointmentsByResourceId: function (b, f, e) {\n      var d = e._resources.indexOf(b.resourceId);\n\n      var c = e._resources.indexOf(f.resourceId);\n\n      if (d == c) {\n        return 0;\n      }\n\n      if (d < c) {\n        return -1;\n      }\n\n      if (d > c) {\n        return -1;\n      }\n    },\n    isBusyRow: function (e, d) {\n      for (var c = 0; c < d.length; c++) {\n        var b = d[c];\n\n        if (b.row == e) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    isBusyColumn: function (e, d) {\n      for (var c = 0; c < d.length; c++) {\n        var b = d[c];\n\n        if (b.column == e) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    getMaxTimelineAppointments: function (c, s, f, e) {\n      if (c.length == 0) {\n        return 1;\n      }\n\n      var i = this;\n      var t = i._views[i._view].type;\n      var j = i._views[i._view];\n      var k = 1;\n      var m = f;\n      var u = e;\n      var q = this.getMinutesPerScale();\n      var n = null;\n      var r = null;\n      var w = \"\";\n\n      for (var g in c) {\n        if (g == \"indexOf\") {\n          break;\n        }\n\n        var d = c[g];\n\n        if (!n) {\n          n = d.from;\n        }\n\n        if (!r) {\n          r = d.to;\n        }\n\n        n = Math.min(d.from, n);\n        r = Math.max(d.to, r);\n        w += d.appointment.id;\n      }\n\n      w += n;\n      w += r;\n\n      if (s[w]) {\n        return s[w];\n      }\n\n      n = new a.jqx.date(n, i.timeZone);\n      r = new a.jqx.date(r, i.timeZone);\n      var m = n;\n\n      while (n < r) {\n        var p = m;\n\n        if (t === \"timelineMonthView\") {\n          var b = p.addDays(1);\n        } else {\n          var b = p.addMinutes(q);\n        }\n\n        var o = 0;\n\n        for (var g in c) {\n          if (g == \"indexOf\") {\n            break;\n          }\n\n          var d = c[g];\n          var h = d.from;\n          var v = d.to;\n          var l = a.jqx.scheduler.utilities.rangeIntersection(p, b, h, v);\n\n          if (l) {\n            o++;\n          }\n        }\n\n        k = Math.max(o, k);\n\n        if (t === \"timelineMonthView\") {\n          m = m.addDays(1, false);\n        } else {\n          m = m.addMinutes(q, false);\n        }\n      }\n\n      s[w] = k;\n      return k;\n    },\n    getMaxMonthAppointments: function (g) {\n      var i = this._views[this._view].type;\n      var l = this._views[this._view];\n\n      if (g.length == 0) {\n        return 1;\n      }\n\n      var o = 1;\n      var h = this.getViewStart().clone();\n      var e = this.getViewEnd();\n\n      while (h < e) {\n        var j = h;\n        var k = a.jqx.scheduler.utilities.getEndOfDay(j);\n        var n = 0;\n\n        for (var f in g) {\n          if (f == \"indexOf\") {\n            break;\n          }\n\n          var b = g[f];\n          var d = b.from;\n          var c = b.to;\n          var m = a.jqx.scheduler.utilities.rangeIntersection(j, k, d, c);\n\n          if (m) {\n            n++;\n          }\n        }\n\n        o = Math.max(n, o);\n        h = h.addDays(1, false);\n      }\n\n      return o;\n    },\n    getMaxAllDayAppointments: function (e) {\n      var h = this._views[this._view].type;\n      var l = this._views[this._view];\n      var f = this;\n\n      if (e.length == 0) {\n        return 1;\n      }\n\n      var n = function (r) {\n        var y = 1;\n        var s = f.getViewStart();\n        var p = f.getViewEnd();\n\n        while (s < p) {\n          var t = s;\n          var u = a.jqx.scheduler.utilities.getEndOfDay(t);\n          var x = 0;\n\n          for (var q in r) {\n            if (q == \"indexOf\") {\n              break;\n            }\n\n            var i = r[q];\n            var v = i;\n\n            if (i.appointment) {\n              v = i.appointment;\n            }\n\n            if (v.hidden == true) {\n              continue;\n            }\n\n            if (!v.duration) {\n              continue;\n            }\n\n            if (v.allDay || v.duration().days() >= 1) {\n              var o = i.from;\n              var j = i.to;\n              var w = a.jqx.scheduler.utilities.rangeIntersection(t, u, o, j);\n\n              if (w) {\n                x++;\n              }\n            }\n          }\n\n          y = Math.max(x, y);\n          s = s.addDays(1, false);\n        }\n\n        return y;\n      };\n\n      if (this._resources.length < 2 || !this.resources.orientation || this.resources.orientation == \"none\") {\n        var m = n(e);\n      } else {\n        var k = 1;\n\n        for (var c = 0; c < this._resources.length; c++) {\n          var b = this._resources[c];\n          var g = new Array();\n\n          for (var d = 0; d < e.length; d++) {\n            if (e[d].appointment && e[d].appointment.resourceId == b) {\n              g.push(e[d]);\n            } else {\n              if (e[d].resourceId != undefined && e[d].resourceId == b) {\n                g.push(e[d]);\n              }\n            }\n          }\n\n          var m = n(g);\n          k = Math.max(k, m);\n        }\n\n        m = k;\n      }\n\n      return m;\n    },\n    getMinutesPerScale: function () {\n      var b = this._views[this._view].type;\n      var d = this._views[this._view];\n      var c = 30;\n      var e = \"halfHour\";\n\n      if (d.timeRuler && d.timeRuler.scale) {\n        e = d.timeRuler.scale;\n      }\n\n      switch (e) {\n        case \"sixtyMinutes\":\n        case \"hour\":\n          c = 60;\n          break;\n\n        case \"thirtyMinutes\":\n        case \"halfHour\":\n          c = 30;\n          break;\n\n        case \"fifteenMinutes\":\n        case \"quarterHour\":\n          c = 15;\n          break;\n\n        case \"tenMinutes\":\n          c = 10;\n          break;\n\n        case \"fiveMinutes\":\n          c = 5;\n          break;\n      }\n\n      return c;\n    },\n    getMaxColumnsInADay: function (k) {\n      var m = this._views[this._view].type;\n      var p = this._views[this._view];\n      var e = 30;\n      var c = \"halfHour\";\n\n      if (p.timeRuler && p.timeRuler.scale) {\n        c = p.timeRuler.scale;\n      }\n\n      switch (c) {\n        case \"sixtyMinutes\":\n        case \"hour\":\n          e = 60;\n          break;\n\n        case \"thirtyMinutes\":\n        case \"halfHour\":\n          e = 30;\n          break;\n\n        case \"fifteenMinutes\":\n        case \"quarterHour\":\n          e = 15;\n          break;\n\n        case \"tenMinutes\":\n          e = 10;\n          break;\n\n        case \"fiveMinutes\":\n          e = 5;\n          break;\n      }\n\n      if (k.length == 0) {\n        return 1;\n      }\n\n      var d = 1;\n      var l = k[0].from.clone();\n      var i = l.addMinutes(e);\n      var h = a.jqx.scheduler.utilities.getEndOfDay(l);\n\n      while (l < h) {\n        var o = l;\n        var n = i;\n        var r = 0;\n\n        for (var j in k) {\n          if (j == \"indexOf\") {\n            break;\n          }\n\n          var b = k[j];\n\n          if (!b.from && !b.to) {\n            continue;\n          }\n\n          var g = b.from;\n          var f = b.to;\n          var q = a.jqx.scheduler.utilities.rangeIntersection(o, n, g, f);\n\n          if (q) {\n            r++;\n          }\n        }\n\n        d = Math.max(r, d);\n        l = l.addMinutes(e, false);\n        i = i.addMinutes(e, false);\n      }\n\n      return d;\n    },\n    getTouches: function (b) {\n      return a.jqx.mobile.getTouches(b);\n    },\n    _updatecolumnwidths: function () {\n      var h = this;\n      var j = this._hostWidth;\n      var b = j;\n\n      if (this.vScrollBar.css(\"visibility\") !== \"hidden\" && this.scrollBarSize > 0) {\n        j -= parseInt(this.scrollBarSize) + 6;\n\n        if (this.rtl) {\n          j += 3;\n        }\n\n        b = j;\n      }\n\n      var i = \"\";\n\n      if (this.columns == undefined || this.columns.records == undefined) {\n        return;\n      }\n\n      var h = this;\n      var g = false;\n      var k = new Array();\n      a.each(this.columns.records, function (l, m) {\n        if (!this.hidden) {\n          if (this.width.toString().indexOf(\"%\") != -1 || this._percentagewidth != undefined) {\n            var m = 0;\n            var n = h.vScrollBar[0].style.visibility == \"hidden\" ? 0 : h.scrollBarSize + 5;\n\n            if (h.scrollBarSize == 0) {\n              n = 0;\n            }\n\n            m = parseFloat(this.width) * b / 100;\n\n            if (this._percentagewidth != undefined) {\n              m = parseFloat(this._percentagewidth) * b / 100;\n            }\n\n            if (m < this.minwidth && this.minwidth != \"auto\") {\n              m = this.minwidth;\n            }\n\n            if (m > this.maxwidth && this.maxwidth != \"auto\") {\n              m = this.maxwidth;\n            }\n\n            j -= Math.round(m);\n          } else {\n            if (this.width != \"auto\" && !this._width) {\n              j -= this.width;\n            } else {\n              i += this.text;\n            }\n          }\n\n          if (this._width == \"auto\") {\n            k[k.length] = this;\n          }\n        }\n      });\n      var e = this.columnsheader.find(\"#columntable\" + this.element.id);\n\n      if (e.length == 0) {\n        return;\n      }\n\n      var c = 0;\n      var f = e.find(\".jqx-grid-column-header\");\n      var d = 0;\n      a.each(this.columns.records, function (o, t) {\n        var m = this.element;\n        var w = false;\n        var v = this.width;\n        var q = this.width;\n\n        if (this.width.toString().indexOf(\"%\") != -1 || this._percentagewidth != undefined) {\n          if (this._percentagewidth != undefined) {\n            v = parseFloat(this._percentagewidth) * b / 100;\n          } else {\n            v = parseFloat(this.width) * b / 100;\n          }\n\n          v = Math.round(v);\n          w = true;\n        }\n\n        if (this.width != \"auto\" && !this._width && !w) {\n          if (parseInt(m[0].style.width) != this.width) {\n            m.width(this.width);\n          }\n        } else {\n          if (w) {\n            if (v < this.minwidth && this.minwidth != \"auto\") {\n              v = this.minwidth;\n              this.width = v;\n            }\n\n            if (v > this.maxwidth && this.maxwidth != \"auto\") {\n              v = this.maxwidth;\n              this.width = v;\n            }\n\n            if (parseInt(m[0].style.width) != v) {\n              m.width(v);\n              this.width = v;\n            }\n          } else {\n            var n = h.columns.records.length;\n            var p = h._views[h._view].type;\n\n            if (p === \"dayView\" || p === \"weekView\") {\n              var r = h._views[h._view];\n\n              if (r.timeRuler) {\n                if (r.timeRuler.timeZones) {\n                  n -= r.timeRuler.timeZones.length;\n                }\n\n                n--;\n              } else {\n                n--;\n              }\n            } else {\n              if (p === \"monthView\" && h._views[h._view].showWeekNumbers) {\n                n--;\n              }\n            }\n\n            var l = Math.floor(j * (1 / n));\n\n            if (h.resources && h.resources.resourceColumnWidth && h.resources.resourceColumnWidth != \"auto\") {\n              l = h.resources.resourceColumnWidth;\n            } else {\n              if (h.resources && h.resources.resourceColumnWidth && h.resources.resourceColumnWidth == \"auto\") {\n                if (h.resources.orientation == \"horizontal\") {\n                  l = Math.round((2 + j) * (1 / h._getColumnsLengthPerView()));\n                }\n              }\n            }\n\n            var s = j * (1 / n) - l;\n            c += s;\n\n            if (c >= 1) {\n              c -= 1;\n              l++;\n            }\n\n            if (c >= 0.5 && o == h.columns.records.length - 1) {\n              l++;\n            }\n\n            if (p == \"agendaView\") {\n              l = j / k.length;\n              l++;\n            }\n\n            if (l < 0) {\n              var u = a(\"<span>\" + this.text + \"</span>\");\n              a(document.body).append(u);\n              l = 10 + u.width();\n              u.remove();\n            }\n\n            if (l < this.minwidth) {\n              l = this.minwidth;\n            }\n\n            if (l > this.maxwidth) {\n              l = this.maxwidth;\n            }\n\n            this._width = \"auto\";\n            this.width = parseInt(l);\n            m.width(this.width);\n          }\n        }\n\n        if (parseInt(m[0].style.left) != d) {\n          m.css(\"left\", d);\n        }\n\n        if (!this.hidden) {\n          d += this.width;\n        }\n\n        this._requirewidthupdate = true;\n\n        if (q !== this.width) {\n          g = true;\n        }\n      });\n      this.columnsheader.width(2 + d);\n      e.width(this.columnsheader.width());\n\n      this._resizecolumnGroups();\n\n      if (g) {\n        this._renderrows();\n\n        h._arrange();\n      }\n    },\n    _rendercolumnheaders: function () {\n      var g = this;\n\n      if (this._updating) {\n        return;\n      }\n\n      var l = this._views[this._view];\n      this._columnsbydatafield = new Array();\n      this.columnsheader.find(\"#columntable\" + this.element.id).remove();\n      var h = a('<div id=\"columntable' + this.element.id + '\" style=\"height: 100%; position: relative;\"></div>');\n      h[0].cells = new Array();\n      var r = 0;\n      var d = 0;\n      var n = \"\";\n      var p = this._hostWidth;\n\n      if (!p) {\n        this._hostWidth = this.host.width();\n      }\n\n      var v = this._hostWidth;\n      var m = v;\n      var w = this.getRows().length;\n      var u = this.rowsHeight;\n\n      if (this.isTouchDevice()) {\n        u = this.touchRowsHeight;\n      }\n\n      if (w * u > this.host.height()) {\n        this.vScrollBar[0].style.visibility = \"inherit\";\n      }\n\n      if (this.vScrollBar.css(\"visibility\") !== \"hidden\" && this.scrollBarSize > 0) {\n        v -= parseInt(this.scrollBarSize) + 6;\n\n        if (this.rtl) {\n          v += 3;\n        }\n\n        m = v;\n      }\n\n      var q = new Array();\n      var s = new Array();\n      a.each(this.columns.records, function (j, k) {\n        if (!this.hidden) {\n          if (this.width != \"auto\" && !this._width) {\n            if (this.width < this.minwidth && this.minwidth != \"auto\") {\n              v -= this.minwidth;\n            } else {\n              if (this.width > this.maxwidth && this.maxwidth != \"auto\") {\n                v -= this.maxwidth;\n              } else {\n                if (this.width.toString().indexOf(\"%\") != -1) {\n                  var k = 0;\n                  k = parseFloat(this.width) * m / 100;\n\n                  if (k < this.minwidth && this.minwidth != \"auto\") {\n                    k = this.minwidth;\n                  }\n\n                  if (k > this.maxwidth && this.maxwidth != \"auto\") {\n                    k = this.maxwidth;\n                  }\n\n                  v -= k;\n                } else {\n                  if (typeof this.width == \"string\") {\n                    this.width = parseInt(this.width);\n                  }\n\n                  v -= this.width;\n                }\n              }\n            }\n          } else {\n            n += this.text;\n          }\n        }\n\n        if (this.width == null || this.width == \"auto\") {\n          s[s.length] = this;\n        }\n\n        q[q.length] = this;\n      });\n\n      if (this.rtl) {\n        for (var t = 0; t < q.length; t++) {\n          this.columns.replace(t, q[t]);\n        }\n      }\n\n      var f = this.headerZIndex;\n      var i = 0;\n      var e = g.columnsHeight;\n\n      var b = function (k, x) {\n        var j = g.columnGroupslevel * g.columnsHeight;\n        j = j - x.level * g.columnsHeight;\n        return j;\n      };\n\n      var o = 0;\n      var c = document.createDocumentFragment();\n      a.each(this.columns.records, function (D, I) {\n        this.height = g.columnsHeight;\n\n        if (g.columnGroups) {\n          if (g.columnGroups.length) {\n            this.height = b(this.datafield, this);\n            e = this.height;\n          }\n        }\n\n        var y = g.toTP(\"jqx-grid-column-header\") + \" \" + g.toTP(\"jqx-widget-header\");\n\n        if (g.rtl) {\n          y += \" \" + g.toTP(\"jqx-grid-column-header-rtl\");\n        }\n\n        if (!g.enableBrowserSelection) {\n          y += \" \" + g.toTP(\"jqx-disableselect\");\n        }\n\n        var E = !g.rtl ? f-- : f++;\n        var k = document.createElement(\"div\");\n        k.setAttribute(\"role\", \"columnheader\");\n        k.style.position = \"absolute\";\n        k.style.zIndex = E;\n        k.style.height = \"100%\";\n        k.className = y;\n        var z = a(k);\n\n        if (g.rtl && D === 0) {\n          z[0].style.borderLeftColor = \"transparent\";\n        }\n\n        if (g.columnGroups) {\n          z[0].style.height = e + \"px\";\n          z[0].style.bottom = \"0px\";\n        } else {\n          if (!this.timeColumn) {\n            z[0].style.height = -1 + e + \"px\";\n          }\n        }\n\n        this.uielement = z;\n        this.element = z;\n\n        if (this.classname != \"\" && this.classname) {\n          z.addClass(this.classname);\n        }\n\n        var K = this.width;\n        var L = false;\n\n        if (this.width === null) {\n          this.width = \"auto\";\n        }\n\n        if (this.width.toString().indexOf(\"%\") != -1 || this._percentagewidth != undefined) {\n          if (this._percentagewidth != undefined) {\n            K = parseFloat(this._percentagewidth) * m / 100;\n          } else {\n            K = parseFloat(this.width) * m / 100;\n          }\n\n          K = Math.round(K);\n          L = true;\n        }\n\n        if (this.width != \"auto\" && !this._width && !L) {\n          if (K < this.minwidth && this.minwidth != \"auto\") {\n            K = this.minwidth;\n          }\n\n          if (K > this.maxwidth && this.maxwidth != \"auto\") {\n            K = this.maxwidth;\n          }\n\n          z[0].style.width = parseInt(K) + \"px\";\n        } else {\n          if (L) {\n            if (K < this.minwidth && this.minwidth != \"auto\") {\n              K = this.minwidth;\n            }\n\n            if (K > this.maxwidth && this.maxwidth != \"auto\") {\n              K = this.maxwidth;\n            }\n\n            if (this._percentagewidth == undefined || this.width.toString().indexOf(\"%\") != -1) {\n              this._percentagewidth = this.width;\n            }\n\n            z.width(K);\n            this.width = K;\n          } else {\n            var A = g.columns.records.length;\n            var C = g._views[g._view].type;\n\n            if (C === \"dayView\" || C === \"weekView\") {\n              var G = g._views[g._view];\n\n              if (G.timeRuler) {\n                if (G.timeRuler.timeZones) {\n                  A -= G.timeRuler.timeZones.length;\n                }\n\n                A--;\n              } else {\n                A--;\n              }\n            } else {\n              if (C === \"monthView\" && g._views[g._view].showWeekNumbers) {\n                A--;\n              }\n            }\n\n            var j = Math.floor(v * (1 / A));\n\n            if (g.resources && g.resources.resourceColumnWidth && g.resources.resourceColumnWidth != \"auto\") {\n              j = g.resources.resourceColumnWidth;\n            } else {\n              if (g.resources && g.resources.resourceColumnWidth && g.resources.resourceColumnWidth == \"auto\") {\n                if (g.resources.orientation == \"horizontal\") {\n                  j = Math.round((2 + v) * (1 / g._getColumnsLengthPerView()));\n                }\n              }\n            }\n\n            var H = v * (1 / A) - j;\n            o += H;\n\n            if (o >= 1) {\n              o -= 1;\n              j++;\n            }\n\n            if (o >= 0.5 && D == g.columns.records.length - 1) {\n              j++;\n            }\n\n            if (isNaN(j)) {\n              j = this.minwidth;\n            }\n\n            if (C == \"agendaView\") {\n              j = v / s.length;\n              j++;\n            }\n\n            if (j < 0) {\n              var J = a(\"<span>\" + this.text + \"</span>\");\n              a(document.body).append(J);\n              j = 10 + J.width();\n              J.remove();\n            }\n\n            if (j < this.minwidth) {\n              j = this.minwidth;\n            }\n\n            if (j > this.maxwidth) {\n              j = this.maxwidth;\n            }\n\n            this._width = \"auto\";\n            this.width = parseInt(j);\n            K = this.width;\n            z.width(this.width);\n          }\n        }\n\n        if (this.timeColumn) {\n          z.css(\"border-bottom-color\", \"transparent\");\n\n          if (l.timeRuler && l.timeRuler.timeZones) {\n            if (D < l.timeRuler.timeZones.length) {\n              z.css(\"border-right-color\", \"transparent\");\n            }\n          }\n\n          if (this.tableRows == 1) {\n            z.addClass(g.toTP(\"jqx-scheduler-time-column\"));\n          }\n        }\n\n        if (this.hidden) {\n          z.css(\"display\", \"none\");\n        }\n\n        var x = a(z.children()[0]);\n        h[0].cells[D] = z[0];\n\n        var B = g._rendercolumnheader(this.text, this.align, e, g);\n\n        z[0].innerHTML = B;\n        c.appendChild(z[0]);\n        var F = this;\n        z[0].style.left = d + \"px\";\n\n        if (!this.hidden) {\n          d += K;\n        }\n      });\n      h[0].appendChild(c);\n\n      if (d > 0) {\n        this.columnsheader[0].style.width = 2 + d + \"px\";\n      } else {\n        this.columnsheader[0].style.width = d + \"px\";\n      }\n\n      this._columnswidth = d;\n      this.columnsrow = h;\n      g.columnsheader.append(h);\n      h[0].style.width = d + \"px\";\n\n      if (this.columnGroups) {\n        this._rendercolumnGroups();\n      }\n    },\n    _rendercolumnGroups: function () {\n      if (!this.columnGroups) {\n        return;\n      }\n\n      var r = this.headerZIndex + this.columns.records.length;\n      var m = this;\n      var f = m.toTP(\"jqx-grid-column-header\") + \" \" + m.toTP(\"jqx-grid-columngroup-header\") + \" \" + m.toTP(\"jqx-widget-header\");\n\n      if (m.rtl) {\n        f += \" \" + m.toTP(\"jqx-grid-columngroup-header-rtl\");\n      }\n\n      var d = this.columnsheader.find(\"#columntable\" + this.element.id);\n      d.find(\"jqx-grid-columngroup-header\").remove();\n\n      for (var g = 0; g < this.columnGroupslevel - 1; g++) {\n        for (var k = 0; k < this.columnGroups.length; k++) {\n          var o = this.columnGroups[k];\n          var b = o.level;\n\n          if (b !== g) {\n            continue;\n          }\n\n          var n = b * this.columnsHeight;\n          var c = 99999;\n\n          if (o.groups) {\n            var q = function (u) {\n              var t = 0;\n\n              for (var s = 0; s < u.groups.length; s++) {\n                var i = u.groups[s];\n\n                if (!i.groups) {\n                  if (!i.hidden) {\n                    t += i.width;\n                    c = Math.min(parseInt(i.element[0].style.left), c);\n                  }\n                } else {\n                  t += q(i);\n                }\n              }\n\n              return t;\n            };\n\n            o.width = q(o);\n            o.left = c;\n            var p = this.columnsHeight;\n            var l = r--;\n            var e = a('<div role=\"columnheader\" style=\"z-index: ' + l + ';position: absolute;\" class=\"' + f + '\"></div>');\n            var h = a(this._rendercolumnheader(o.text, o.align, this.columnsHeight, this));\n\n            if (o.renderer) {\n              o.renderer(e, o.text);\n            }\n\n            e.append(h);\n            e[0].style.left = c + \"px\";\n\n            if (c === 0) {\n              e[0].style.borderLeftColor = \"transparent\";\n            }\n\n            e[0].style.top = n + \"px\";\n            e[0].style.height = p + \"px\";\n            e[0].style.width = -1 + o.width + \"px\";\n            d.append(e);\n            o.element = e;\n          }\n        }\n      }\n    },\n    _resizecolumnGroups: function () {\n      if (!this.columnGroups) {\n        return;\n      }\n\n      for (var c = 0; c < this.columnGroups.length; c++) {\n        var h = this.columnGroups[c];\n        var j = h.level;\n        var g = j * this.columnsHeight;\n        var f = 99999;\n\n        if (h.groups) {\n          var e = function (m) {\n            var l = 0;\n\n            for (var k = 0; k < m.groups.length; k++) {\n              var i = m.groups[k];\n\n              if (!i.groups) {\n                l += i.width;\n                f = Math.min(parseInt(i.element[0].style.left), f);\n              } else {\n                l += e(i);\n              }\n            }\n\n            return l;\n          };\n\n          h.width = e(h);\n          h.left = f;\n          var b = this.columnsHeight;\n          var d = h.element;\n          d[0].style.left = f + \"px\";\n          d[0].style.top = g + \"px\";\n          d[0].style.height = b + \"px\";\n          d[0].style.width = -1 + h.width + \"px\";\n        }\n      }\n    },\n    _removecolumnhandlers: function (e) {\n      var c = this;\n      var b = a(e.element);\n\n      if (b.length > 0) {\n        c.removeHandler(b, \"mouseenter\");\n        c.removeHandler(b, \"mouseleave\");\n        var d = a(e.filtericon);\n        c.removeHandler(d, \"mousedown\");\n        c.removeHandler(d, \"click\");\n        c.removeHandler(b, \"click\");\n      }\n    },\n    destroy: function () {\n      var b = this;\n\n      b._removeHandlers();\n\n      if (b._editDialog) {\n        b._editDialog.jqxWindow(\"destroy\");\n      }\n\n      if (b.menu) {\n        b.menu.jqxMenu(\"destroy\");\n      }\n\n      if (b.editRecurrenceDialog) {\n        b.editRecurrenceDialog.jqxWindow(\"destroy\");\n      }\n\n      b.vScrollBar.jqxScrollBar(\"destroy\");\n      b.hScrollBar.jqxScrollBar(\"destroy\");\n      delete b.vScrollBar;\n      delete b.hScrollBar;\n      delete b._mousewheelfunc;\n      a.jqx.utilities.resize(b.host, null, true);\n      b.host.remove();\n    },\n    propertiesChangedHandler: function (d, b, c) {\n      if (c && c.width && c.height && Object.keys(c).length == 2) {\n        d.host.height(d.height);\n        d.host.width(d.width);\n\n        d._updatesize(false, true);\n      }\n    },\n    propertyChangedHandler: function (b, d, f, e) {\n      if (this.isInitialized == undefined || this.isInitialized == false) {\n        return;\n      }\n\n      if (b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && Object.keys(b.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (e !== f) {\n        if (d == \"filterable\") {\n          b._render();\n        } else {\n          if (d == \"view\") {\n            b.setView(e);\n          } else {\n            if (d == \"views\") {\n              b._columns = null;\n              b._views = new Array();\n              b._view = b.view;\n\n              for (var c = 0; c < b.views.length; c++) {\n                if (a.type(b.views[c]) === \"string\") {\n                  b._views.push({\n                    type: b.views[c]\n                  });\n                } else {\n                  b._views.push(b.views[c]);\n                }\n              }\n\n              for (var c = 0; c < b._views.length; c++) {\n                if (b._views[c].type == b.view) {\n                  b._view = c;\n                  break;\n                }\n              }\n\n              b._render();\n            } else {\n              if (d === \"height\") {\n                b._hostWidth = null;\n                b._hostHeight = null;\n                b.host.height(b.height);\n                b.host.width(b.width);\n\n                b._updatesize(false, true);\n              } else {\n                if (d === \"width\") {\n                  b._hostWidth = null;\n                  b._hostHeight = null;\n                  b.host.height(b.height);\n                  b.host.width(b.width);\n\n                  b._updatesize(true, false);\n                } else {\n                  if (d === \"source\") {\n                    b.updateBoundData();\n                  } else {\n                    if (d == \"resources\") {\n                      b.updateBoundData();\n                    } else {\n                      if (d === \"columns\" || d === \"columnGroups\") {\n                        b._columns = null;\n\n                        b._render();\n                      } else {\n                        if (d === \"selectionMode\") {\n                          b.selectionMode = e.toLowerCase();\n                        } else {\n                          if (d == \"touchMode\") {\n                            b._removeHandlers();\n\n                            b.touchDevice = null;\n                            b.vScrollBar.jqxScrollBar({\n                              touchMode: e\n                            });\n                            b.hScrollBar.jqxScrollBar({\n                              touchMode: e\n                            });\n                            b.refresh();\n\n                            b._addHandlers();\n                          } else {\n                            if (d == \"enableHover\") {\n                              return;\n                            } else {\n                              if (d == \"showLegend\") {\n                                b.legendbartop.show();\n                                b.legendbarbottom.show();\n                                b.refresh();\n                              } else {\n                                if (d == \"disabled\") {\n                                  if (e) {\n                                    b.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n                                  } else {\n                                    b.host.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n                                  }\n\n                                  b.host.find(\".jqx-grid-group-collapse\").css(\"cursor\", e ? \"default\" : \"pointer\");\n                                  b.host.find(\".jqx-grid-group-expand\").css(\"cursor\", e ? \"default\" : \"pointer\");\n                                } else {\n                                  if (d == \"columnsHeight\") {\n                                    b._render();\n                                  } else {\n                                    if (d == \"localization\") {\n                                      b._render();\n\n                                      if (b.editRecurrenceDialog) {\n                                        b.editRecurrenceDialog.jqxWindow(\"destroy\");\n                                        b.createEditRecurrenceDialog();\n                                      }\n                                    } else {\n                                      if (d == \"theme\") {\n                                        a.jqx.utilities.setTheme(f, e, b.host);\n\n                                        if (b._editDialog) {\n                                          a.jqx.utilities.setTheme(f, e, b._editDialog);\n                                        }\n\n                                        if (b.editRecurrenceDialog) {\n                                          a.jqx.utilities.setTheme(f, e, b.editRecurrenceDialog);\n                                        }\n\n                                        if (b.menu) {\n                                          b.menu.jqxMenu({\n                                            theme: b.theme\n                                          });\n                                        }\n\n                                        b.vScrollBar.jqxScrollBar({\n                                          theme: b.theme\n                                        });\n                                        b.hScrollBar.jqxScrollBar({\n                                          theme: b.theme\n                                        });\n                                        b.refresh();\n                                      } else {\n                                        if (d === \"date\") {\n                                          b.navigateTo(e);\n                                        } else {\n                                          b.refresh();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    _rendercolumnheader: function (g, h, d, e) {\n      var f = \"4px\";\n\n      if (e.columnGroups) {\n        f = d / 2 - this._columnheight / 2;\n\n        if (f < 0) {\n          f = 4;\n        }\n\n        f += \"px\";\n      } else {\n        if (this.columnsHeight != 25) {\n          f = this.columnsHeight / 2 - this._columnheight / 2;\n\n          if (f < 0) {\n            f = 4;\n          }\n\n          f += \"px\";\n        }\n      }\n\n      var c = '<div style=\"overflow: hidden; text-overflow: ellipsis; text-align: ' + h + \"; margin-left: 4px; margin-right: 4px; margin-bottom: \" + f + \"; margin-top: \" + f + ';\"><span style=\"text-overflow: ellipsis; cursor: default;\">' + g + \"</span></div>\";\n\n      if (this.columnRenderer) {\n        var b = this.columnRenderer(g, h, d, c);\n\n        if (b != undefined) {\n          return b;\n        }\n      }\n\n      return c;\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}