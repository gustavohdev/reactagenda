{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxDateTimeInput\", \"\", {});\n  a.extend(a.jqx._jqxDateTimeInput.prototype, {\n    defineInstance: function () {\n      var b = {\n        value: a.jqx._jqxDateTimeInput.getDateTime(new Date()),\n        minDate: a.jqx._jqxDateTimeInput.getDateTime(new Date()),\n        maxDate: a.jqx._jqxDateTimeInput.getDateTime(new Date()),\n        min: new Date(1900, 0, 1),\n        max: new Date(2100, 0, 1),\n        rowHeaderWidth: 25,\n        enableViews: true,\n        views: [\"month\", \"year\", \"decade\"],\n        selectableDays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        change: null,\n        changing: null,\n        titleFormat: [\"MMMM yyyy\", \"yyyy\", \"yyyy\", \"yyyy\"],\n        template: \"default\",\n        columnHeaderHeight: 20,\n        titleHeight: 30,\n        firstDayOfWeek: 0,\n        showWeekNumbers: false,\n        showTimeButton: false,\n        cookies: false,\n        cookieoptions: null,\n        showFooter: false,\n        formatString: \"dd/MM/yyyy\",\n        width: 200,\n        height: 25,\n        dayNameFormat: \"firstTwoLetters\",\n        textAlign: \"left\",\n        readonly: false,\n        culture: \"default\",\n        activeEditor: null,\n        showCalendarButton: true,\n        openDelay: 250,\n        closeDelay: 300,\n        closeCalendarAfterSelection: true,\n        isEditing: false,\n        enableBrowserBoundsDetection: false,\n        dropDownHorizontalAlignment: \"left\",\n        dropDownVerticalAlignment: \"bottom\",\n        enableAbsoluteSelection: false,\n        disabled: false,\n        buttonSize: 21,\n        animationType: \"slide\",\n        dropDownWidth: \"200px\",\n        restrictedDates: new Array(),\n        dropDownHeight: \"205px\",\n        dropDownContainer: \"default\",\n        selectionMode: \"default\",\n        renderMode: \"full\",\n        rtl: false,\n        timeRange: null,\n        _editor: false,\n        todayString: \"Today\",\n        clearString: \"Clear\",\n        popupZIndex: 2000,\n        allowNullDate: true,\n        changeType: null,\n        placeHolder: \"\",\n        enableHover: true,\n        hint: true,\n        allowKeyboardDelete: true,\n        localization: {\n          backString: \"Back\",\n          forwardString: \"Forward\",\n          todayString: \"Today\",\n          clearString: \"Clear\",\n          calendar: {\n            name: \"Gregorian_USEnglish\",\n            \"/\": \"/\",\n            \":\": \":\",\n            firstDay: 0,\n            days: {\n              names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n              namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n              namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n            },\n            months: {\n              names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n              namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n            },\n            AM: [\"AM\", \"am\", \"AM\"],\n            PM: [\"PM\", \"pm\", \"PM\"],\n            eras: [{\n              name: \"A.D.\",\n              start: null,\n              offset: 0\n            }],\n            twoDigitYearMax: 2029,\n            patterns: {\n              d: \"M/d/yyyy\",\n              D: \"dddd, MMMM dd, yyyy\",\n              t: \"h:mm tt\",\n              T: \"h:mm:ss tt\",\n              f: \"dddd, MMMM dd, yyyy h:mm tt\",\n              F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n              M: \"MMMM dd\",\n              Y: \"yyyy MMMM\",\n              S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n              ISO: \"yyyy-MM-dd hh:mm:ss\"\n            }\n          }\n        },\n        events: [\"valueChanged\", \"textchanged\", \"mousedown\", \"mouseup\", \"keydown\", \"keyup\", \"keypress\", \"open\", \"close\", \"change\"],\n        aria: {\n          \"aria-valuenow\": {\n            name: \"getDate\",\n            type: \"date\"\n          },\n          \"aria-valuetext\": {\n            name: \"getText\",\n            type: \"string\"\n          },\n          \"aria-valuemin\": {\n            name: \"min\",\n            type: \"date\"\n          },\n          \"aria-valuemax\": {\n            name: \"max\",\n            type: \"date\"\n          },\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        }\n      };\n\n      if (this === a.jqx._jqxDateTimeInput.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n\n      this.value._setHours(0);\n\n      this.value._setMinutes(0);\n\n      this.value._setSeconds(0);\n\n      this.value._setMilliseconds(0);\n\n      this.minDate._setYear(1900);\n\n      this.minDate._setMonth(1);\n\n      this.minDate._setDay(1);\n\n      this.minDate._setHours(1);\n\n      this.minDate._setMinutes(1);\n\n      this.minDate._setSeconds(1);\n\n      this.minDate._setMilliseconds(1);\n\n      this.maxDate._setYear(2100);\n\n      this.maxDate._setMonth(1);\n\n      this.maxDate._setDay(1);\n\n      this.maxDate._setHours(1);\n\n      this.maxDate._setMinutes(1);\n\n      this.maxDate._setSeconds(1);\n\n      this.maxDate._setMilliseconds(1);\n\n      this.defaultMinDate = this.minDate;\n      this.defaultMaxDate = this.maxDate;\n      return b;\n    },\n    createInstance: function (d) {\n      var l = \"\";\n      var k = this;\n\n      if (!k.host.jqxCalendar) {\n        throw new Error(\"jqxDateTimeInput: Missing reference to jqxcalendar.js.\");\n      }\n\n      if (k.formatString != \"dd/MM/yyyy\") {\n        var g = k.formatString.split(\" \");\n\n        if (g && g.length > 1) {\n          var c = \"\";\n\n          for (var q = 0; q < g.length; q++) {\n            if (g[q].length == \"1\") {\n              c += k._getFormatValue(g[q]);\n            } else {\n              c += g[q];\n            }\n\n            if (q < g.length - 1) {\n              c += \" \";\n            }\n          }\n\n          k.formatString = c;\n        }\n      }\n\n      if (k.element.nodeName.toLowerCase() == \"input\") {\n        var m = k.element.getAttribute(\"type\");\n\n        if (m) {\n          if (k.formatString == \"dd/MM/yyyy\") {\n            if (m == \"date\") {\n              k.formatString = \"d\";\n            }\n\n            if (m == \"datetime\") {\n              var h = k._getFormatValue(\"d\") + \" \" + k._getFormatValue(\"t\");\n\n              k.formatString = h;\n              k.showTimeButton = true;\n            }\n\n            if (m == \"time\") {\n              k.formatString = \"t\";\n              k.showTimeButton = true;\n              k.showCalendarButton = false;\n            }\n          }\n        }\n\n        k.field = k.element;\n\n        if (k.field.getAttribute(\"min\")) {\n          var n = new Date(k.field.getAttribute(\"min\"));\n\n          if (k._isValidDate(n)) {\n            k.min = n;\n          }\n        }\n\n        if (k.field.getAttribute(\"max\")) {\n          var p = new Date(k.field.getAttribute(\"max\"));\n\n          if (k._isValidDate(p)) {\n            k.max = p;\n          }\n        }\n\n        if (k.field.className) {\n          k._className = k.field.className;\n        }\n\n        var j = {\n          title: k.field.title\n        };\n\n        if (k.field.value) {\n          j.value = k.field.value;\n        }\n\n        if (k.field.id.length) {\n          j.id = k.field.id.replace(/[^\\w]/g, \"_\") + \"_jqxDateTimeInput\";\n        } else {\n          j.id = a.jqx.utilities.createId() + \"_jqxDateTimeInput\";\n        }\n\n        var f = a(\"<div></div>\", j);\n        f[0].style.cssText = k.field.style.cssText;\n\n        if (!k.width) {\n          k.width = a(k.field).width();\n        }\n\n        if (!k.height) {\n          k.height = a(k.field).outerHeight();\n        }\n\n        a(k.field).hide().after(f);\n        var u = k.host.data();\n        k.host = f;\n        k.host.data(u);\n        k.element = f[0];\n        k.element.id = k.field.id;\n        k.field.id = j.id;\n\n        if (k._className) {\n          k.host.addClass(k._className);\n          a(k.field).removeClass(k._className);\n        }\n\n        if (k.field.tabIndex) {\n          var e = k.field.tabIndex;\n          k.field.tabIndex = -1;\n          k.element.tabIndex = e;\n        }\n      }\n\n      if (k.host.attr(\"value\")) {\n        l = true;\n        var v = k.host.attr(\"value\");\n\n        if (k.selectionMode != \"range\") {\n          var r = new Date(v);\n\n          if (r != undefined && !isNaN(r)) {\n            k.value = a.jqx._jqxDateTimeInput.getDateTime(r);\n          }\n        }\n      }\n\n      if (k.value != null && k.value instanceof Date) {\n        k.value = a.jqx._jqxDateTimeInput.getDateTime(k.value);\n      } else {\n        if (k.value != null && typeof k.value == \"string\") {\n          var r = new Date(k.value);\n\n          if (r != undefined && !isNaN(r)) {\n            k.value = a.jqx._jqxDateTimeInput.getDateTime(r);\n          } else {\n            if (k.value.indexOf(\",\") >= 0) {\n              k.value = k.value.replace(/\\,/g, \"/\");\n              var r = new Date(k.value);\n\n              if (r != undefined && !isNaN(r)) {\n                k.value = a.jqx._jqxDateTimeInput.getDateTime(r);\n              }\n            }\n          }\n        }\n      }\n\n      this._initTimeRange();\n\n      this._validateTimeRange();\n\n      k.host.attr(\"data-role\", \"input\");\n      k.render();\n      a.jqx.aria(this);\n\n      if (k.getDate() != null) {\n        a.jqx.aria(this, \"aria-label\", \"Current focused date is \" + k.getDate().toLocaleString());\n      } else {\n        a.jqx.aria(this, \"aria-label\", \"Current focused date is Null\");\n      }\n\n      if (k.minDate !== k.defaultMinDate) {\n        k.min = k.minDate;\n      }\n\n      if (k.maxDate !== k.defaultMaxDate) {\n        k.max = k.maxDate;\n      }\n\n      k.setMaxDate(k.max, false);\n      k.setMinDate(k.min, false);\n\n      if (k.selectionMode !== \"range\" && k.value && k.value.dateTime && k.min && k.max && (k.value.dateTime < k.min || k.value.dateTime > k.max)) {\n        if (k.value.dateTime < k.min) {\n          k.value.dateTime = k.min;\n        }\n\n        if (k.value.dateTime > k.max) {\n          k.value.dateTime = k.max;\n        }\n\n        k._updateText();\n      }\n\n      if (k.selectionMode == \"range\") {\n        if (l) {\n          var v = k.host.attr(\"value\");\n          var t = v.substring(0, v.indexOf(\"-\"));\n          var s = v.substring(v.indexOf(\"-\") + 1);\n          var o = new Date(t);\n          var b = new Date(s);\n\n          if (o != undefined && !isNaN(o)) {\n            if (b != undefined && !isNaN(b)) {\n              k.setRange(o, b);\n            }\n          }\n        } else {\n          if (k.getDate() != null) {\n            k.setRange(k.getDate(), k.getDate());\n          }\n        }\n      }\n    },\n    _validateTimeRange: function () {\n      if (this.timeRange) {\n        var b = this.value.dateTime.getHours();\n        var c = this.value.dateTime.getMinutes();\n\n        if (b <= this.timeRange.minHour) {\n          this.value._setHours(this.timeRange.minHour);\n\n          if (c < this.timeRange.minMinute) {\n            this.value._setMinutes(this.timeRange.minMinute);\n\n            this._updateEditorsValue();\n          } else {\n            this._updateEditorsValue();\n          }\n        }\n\n        if (b >= this.timeRange.maxHour) {\n          this.value._setHours(this.timeRange.maxHour);\n\n          if (c > this.timeRange.maxMinute) {\n            this.value._setMinutes(this.timeRange.maxMinute);\n\n            this._updateEditorsValue();\n          } else {\n            this._updateEditorsValue();\n          }\n        }\n      }\n    },\n    _initTimeRange: function () {\n      if (this.timeRange) {\n        if (this.timeRange.min) {\n          var c = null;\n\n          if (this.timeRange.min.indexOf(\"AM\") >= 0 || this.timeRange.min.indexOf(\"PM\") >= 0) {\n            c = this.timeRange.min.indexOf(\"AM\") >= 0 ? \"AM\" : \"PM\";\n          }\n\n          var d = this.timeRange.min.split(\":\");\n          var b = parseInt(d[0]);\n          var f = parseInt(d[1]);\n\n          if (c) {\n            this.timeRange.minDefaultHour = b;\n            this.timeRange.minMeridian = c;\n          }\n\n          if (c && c == \"PM\") {\n            b += 12;\n          }\n\n          this.timeRange.minHour = b;\n          this.timeRange.minMinute = f;\n        }\n\n        if (this.timeRange.max) {\n          var c = null;\n\n          if (this.timeRange.max.indexOf(\"AM\") >= 0 || this.timeRange.max.indexOf(\"PM\") >= 0) {\n            c = this.timeRange.max.indexOf(\"AM\") >= 0 ? \"AM\" : \"PM\";\n          }\n\n          var e = this.timeRange.max.split(\":\");\n          var b = parseInt(e[0]);\n          var f = parseInt(e[1]);\n\n          if (c) {\n            this.timeRange.maxDefaultHour = b;\n            this.timeRange.maxMeridian = c;\n          }\n\n          if (c && c == \"PM\") {\n            b += 12;\n          }\n\n          this.timeRange.maxHour = b;\n          this.timeRange.maxMinute = f;\n        }\n      }\n    },\n    _format: function (d, e, b) {\n      var f = false;\n\n      try {\n        if (window.Globalize != undefined) {\n          f = true;\n        }\n\n        if (document.Globalize) {\n          window.Globalize = document.Globalize;\n          f = true;\n        }\n      } catch (c) {\n        if (document.Globalize) {\n          window.Globalize = document.Globalize;\n          f = true;\n        }\n      }\n\n      if (document.Globalize) {\n        window.Globalize = document.Globalize;\n        f = true;\n      }\n\n      if (a.global) {\n        return a.global.format(d, e, this.culture);\n      } else {\n        if (f) {\n          try {\n            var e = window.Globalize.format(d, e, this.culture);\n            return e;\n          } catch (c) {\n            return window.Globalize.format(d, e);\n          }\n        } else {\n          if (a.jqx.dataFormat) {\n            if (d instanceof Date) {\n              return a.jqx.dataFormat.formatdate(d, e, this.localization.calendar);\n            } else {\n              if (typeof d === \"number\") {\n                return a.jqx.dataFormat.formatnumber(d, e, this.localization.calendar);\n              } else {\n                return a.jqx.dataFormat.formatdate(d, e, this.localization.calendar);\n              }\n            }\n          } else {\n            throw new Error(\"jqxDateTimeInput: Missing reference to globalize.js.\");\n          }\n        }\n      }\n    },\n    render: function () {\n      var k = this;\n\n      k._removeHandlers();\n\n      k.element.innerHTML = \"\";\n      k.host.attr({\n        role: \"textbox\"\n      });\n      k.id = a.jqx.utilities.createId();\n      var f = a.jqx.utilities.createId();\n      var j = a.jqx.utilities.createId();\n\n      k._setSize();\n\n      if (k.width == null) {\n        k.width = k.host.width();\n        k.host.width(k.width);\n      }\n\n      k.touch = a.jqx.mobile.isTouchDevice();\n      var c = a(\"<div class='jqx-max-size jqx-position-relative'></div>\").appendTo(k.host);\n      k.dateTimeInput = a(\"<input style='border: none; padding-left: 3px; padding-right: 3px;' class='jqx-position-absolute' id='input\" + k.element.id + \"' autocomplete='off' type='textarea'/>\").appendTo(c);\n      k.dateTimeInput.addClass(k.toThemeProperty(\"jqx-reset\"));\n      k.dateTimeInput.addClass(k.toThemeProperty(\"jqx-clear\"));\n      k.dateTimeInput.addClass(k.toThemeProperty(\"jqx-input-content\"));\n      k.dateTimeInput.addClass(k.toThemeProperty(\"jqx-widget-content\"));\n      k.dateTimeInput.addClass(k.toThemeProperty(\"jqx-rc-all\"));\n\n      if (!k.isMaterialized()) {\n        k.dateTimeInput.attr(\"placeHolder\", k.placeHolder);\n      }\n\n      if (k.renderMode != \"full\") {\n        k.dateTimeInput.remove();\n      }\n\n      var d = k.host.attr(\"name\");\n\n      if (d) {\n        k.dateTimeInput.attr(\"name\", d);\n      }\n\n      if (k.host.attr(\"tabindex\")) {\n        k.dateTimeInput.attr(\"tabindex\", k.host.attr(\"tabindex\"));\n        k.host.removeAttr(\"tabindex\");\n      }\n\n      if (k.rtl) {\n        k.dateTimeInput.css(\"direction\", \"rtl\");\n        k.dateTimeInput.addClass(\"jqx-rtl\");\n      }\n\n      k.calendarButton = a(\"<div style='height: 100%;' class='jqx-position-absolute'><div></div></div>\").appendTo(c);\n\n      if (!k.rtl) {\n        k.calendarButton.addClass(k.toThemeProperty(\"jqx-action-button\"));\n      } else {\n        k.calendarButton.addClass(k.toThemeProperty(\"jqx-action-button-rtl\"));\n      }\n\n      k.calendarButtonIcon = a(k.calendarButton.children()[0]);\n      k.calendarButtonIcon.addClass(k.toThemeProperty(\"jqx-icon\"));\n      k.calendarButtonIcon.addClass(k.toThemeProperty(\"jqx-icon-calendar\"));\n      k.calendarButton.addClass(k.toThemeProperty(\"jqx-fill-state-normal\"));\n\n      if (!k.rtl) {\n        if (!k.showTimeButton) {\n          k.calendarButton.addClass(k.toThemeProperty(\"jqx-rc-r\"));\n        }\n      } else {\n        k.calendarButton.addClass(k.toThemeProperty(\"jqx-rc-l\"));\n      }\n\n      k.timeButton = a(\"<div style='height: 100%;' class='jqx-position-absolute'><div></div></div>\").appendTo(c);\n\n      if (!k.rtl) {\n        k.timeButton.addClass(k.toThemeProperty(\"jqx-action-button\"));\n      } else {\n        k.timeButton.addClass(k.toThemeProperty(\"jqx-action-button-rtl\"));\n      }\n\n      k.timeButtonIcon = a(k.timeButton.children()[0]);\n      k.timeButtonIcon.addClass(k.toThemeProperty(\"jqx-icon\"));\n      k.timeButtonIcon.addClass(k.toThemeProperty(\"jqx-icon-time\"));\n      k.timeButton.addClass(k.toThemeProperty(\"jqx-fill-state-normal\"));\n\n      if (!k.rtl) {\n        k.timeButton.addClass(k.toThemeProperty(\"jqx-rc-r\"));\n      } else {\n        k.timeButton.addClass(k.toThemeProperty(\"jqx-rc-l\"));\n      }\n\n      var m = this;\n\n      k._arrange();\n\n      if (a.jqx._jqxCalendar != null && a.jqx._jqxCalendar != undefined) {\n        try {\n          var i = \"calendar\" + k.id;\n          var h = a(a.find(\"#\" + i));\n\n          if (h.length > 0) {\n            h.remove();\n          }\n\n          a.jqx.aria(this, \"aria-owns\", i);\n          a.jqx.aria(this, \"aria-haspopup\", true);\n          a.jqx.aria(this, \"aria-readonly\", k.selectionMode == \"range\" ? true : false);\n          var b = a(\"<div style='overflow: hidden; background: transparent; position: absolute;' id='calendar\" + k.id + \"'><div id='innerCalendar\" + k.id + \"'></div><div id='innerTime\" + k.id + \"'></div></div>\");\n\n          if (a.jqx.utilities.getBrowser().browser == \"opera\") {\n            b.hide();\n          }\n\n          if (k.dropDownContainer == \"element\") {\n            b.appendTo(k.host);\n          } else {\n            b.appendTo(document.body);\n          }\n\n          k.container = b;\n          k.calendarContainer = a(a.find(\"#innerCalendar\" + k.id)).jqxCalendar({\n            titleFormat: this.titleFormat,\n            restrictedDates: this.restrictedDates,\n            changing: k.changing,\n            change: k.change,\n            enableViews: k.enableViews,\n            selectableDays: k.selectableDays,\n            views: k.views,\n            rowHeaderWidth: k.rowHeaderWidth,\n            titleHeight: k.titleHeight,\n            columnHeaderHeight: k.columnHeaderHeight,\n            _checkForHiddenParent: false,\n            enableAutoNavigation: false,\n            canRender: false,\n            localization: k.localization,\n            todayString: k.todayString,\n            clearString: k.clearString,\n            dayNameFormat: k.dayNameFormat,\n            rtl: k.rtl,\n            culture: k.culture,\n            showFooter: k.showFooter,\n            selectionMode: k.selectionMode,\n            firstDayOfWeek: k.firstDayOfWeek,\n            showWeekNumbers: k.showWeekNumbers,\n            width: k.dropDownWidth,\n            height: k.dropDownHeight,\n            theme: k.theme\n          });\n\n          if (k.dropDownContainer == \"element\") {\n            k.calendarContainer.css({\n              position: \"absolute\",\n              top: 0,\n              left: 0\n            });\n          } else {\n            k.calendarContainer.css({\n              position: \"absolute\",\n              zIndex: k.popupZIndex,\n              top: 0,\n              left: 0\n            });\n          }\n\n          k.calendarContainer.addClass(k.toThemeProperty(\"jqx-popup\"));\n\n          if (a.jqx.browser.msie) {\n            k.calendarContainer.addClass(k.toThemeProperty(\"jqx-noshadow\"));\n          }\n\n          k.timeContainer = a(a.find(\"#innerTime\" + k.id));\n          k.timeContainer.css({\n            position: \"absolute\",\n            zIndex: k.popupZIndex,\n            top: 0,\n            left: 0\n          });\n          k.timeContainer.addClass(k.toThemeProperty(\"jqx-popup\"));\n\n          if (a.jqx.browser.msie) {\n            k.timeContainer.addClass(k.toThemeProperty(\"jqx-noshadow\"));\n          }\n\n          k._calendar = a.data(k.calendarContainer[0], \"jqxCalendar\").instance;\n          var m = this;\n\n          k._calendar.today = function () {\n            m.today();\n          };\n\n          k._calendar.clear = function () {\n            m.clear();\n          };\n\n          if (a.jqx.utilities.getBrowser().browser == \"opera\") {\n            b.show();\n          }\n\n          b.height(parseInt(k.calendarContainer.height()) + 25);\n          b.width(parseInt(k.calendarContainer.width()) + 25);\n\n          if (k.selectionMode == \"range\") {\n            k.readonly = true;\n          }\n\n          if (k.animationType == \"none\") {\n            k.container.css(\"display\", \"none\");\n          } else {\n            k.container.hide();\n          }\n        } catch (l) {}\n      }\n\n      if (a.global) {\n        a.global.preferCulture(k.culture);\n      }\n\n      k.selectedText = \"\";\n\n      k._addHandlers();\n\n      k.self = this;\n      k.oldValue = k.getDate();\n      k.items = new Array();\n      k.editors = new Array();\n\n      k._loadItems();\n\n      k.editorText = \"\";\n\n      if (k.readonly == true) {\n        k.dateTimeInput.css(\"readonly\", k.readonly);\n      }\n\n      k.dateTimeInput.css(\"text-align\", k.textAlign);\n      k.host.addClass(k.toThemeProperty(\"jqx-widget\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-datetimeinput\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-input\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-overflow-hidden\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-rc-all\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-reset\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-clear\"));\n      k.host.addClass(k.toThemeProperty(\"jqx-widget-content\"));\n\n      k.propertyChangeMap.disabled = function (e, p, o, q) {\n        if (q) {\n          e.host.addClass(m.toThemeProperty(\"jqx-input-disabled\"));\n          e.host.addClass(m.toThemeProperty(\"jqx-fill-state-disabled\"));\n        } else {\n          e.host.removeClass(m.toThemeProperty(\"jqx-fill-state-disabled\"));\n          e.host.removeClass(m.toThemeProperty(\"jqx-input-disabled\"));\n        }\n\n        a.jqx.aria(e, \"aria-disabled\", q);\n      };\n\n      if (k.disabled) {\n        k.host.addClass(k.toThemeProperty(\"jqx-input-disabled\"));\n        k.host.addClass(k.toThemeProperty(\"jqx-fill-state-disabled\"));\n        k.dateTimeInput.attr(\"disabled\", true);\n      }\n\n      if (k.host.parents(\"form\").length > 0) {\n        k.addHandler(k.host.parents(\"form\"), \"reset\", function () {\n          setTimeout(function () {\n            m.setDate(new Date());\n          }, 10);\n        });\n      }\n\n      if (k.cookies) {\n        var g = a.jqx.cookie.cookie(\"jqxDateTimeInput\" + k.element.id);\n\n        if (g != null) {\n          k.setDate(new Date(g));\n        }\n      }\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        if (k.host.parents(\".jqx-window\").length > 0) {\n          var n = k.host.parents(\".jqx-window\").css(\"z-index\");\n          k.container.css(\"z-index\", n + 10);\n          k.calendarContainer.css(\"z-index\", n + 10);\n        }\n      }\n\n      if (k.culture != \"default\") {\n        k._applyCulture();\n      }\n\n      if (k.value) {\n        if (k.calendarContainer.jqxCalendar(\"_isDisabled\", k.value.dateTime)) {\n          k.dateTimeInput.addClass(k.toThemeProperty(\"jqx-input-invalid\"));\n        } else {\n          k.dateTimeInput.removeClass(k.toThemeProperty(\"jqx-input-invalid\"));\n        }\n      }\n\n      this._addBarAndLabel(this.dateTimeInput);\n\n      this._updateHint(true);\n\n      if (k.template) {\n        k.bar.addClass(k.toThemeProperty(\"jqx-\" + k.template));\n        k.label.addClass(k.toThemeProperty(\"jqx-\" + k.template));\n        k.timeButton.addClass(k.toThemeProperty(\"jqx-\" + k.template));\n        k.calendarButton.addClass(k.toThemeProperty(\"jqx-\" + k.template));\n      }\n\n      this._setSize();\n\n      this._arrange();\n    },\n    val: function (c) {\n      var b = this;\n\n      if (arguments.length != 0) {\n        if (c == null) {\n          b.setDate(null);\n        }\n\n        if (b.selectionMode == \"range\") {\n          b.setRange(arguments[0], arguments[1]);\n          return b.getText();\n        }\n\n        if (c instanceof Date) {\n          b.setDate(c);\n        }\n\n        if (typeof c == \"string\") {\n          if (c == \"date\") {\n            return b.getDate();\n          }\n\n          b.setDate(c);\n        }\n\n        if (b._calendar.getDate() != b.getDate()) {\n          b._calendar.setDate(b.getDate());\n        }\n      }\n\n      return b.getText();\n    },\n    _setSize: function () {\n      var b = window.getComputedStyle(this.element);\n      var c = parseInt(b.borderLeftWidth) * 2;\n      var h = b.boxSizing;\n\n      if (this.element.offsetWidth === 0) {\n        c = 2;\n      }\n\n      if (h === \"border-box\" || isNaN(c)) {\n        c = 0;\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = parseInt(this.width) - c + \"px\";\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = parseInt(this.width) - c + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = parseInt(this.height) - c + \"px\";\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = parseInt(this.height) - c + \"px\";\n        }\n      }\n\n      var g = false;\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        g = true;\n        this.host.width(this.width);\n\n        if (c > 0) {\n          this.host.css(\"box-sizing\", \"border-box\");\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        g = true;\n        this.host.height(this.height);\n      }\n\n      var e = this;\n\n      var f = function () {\n        if (e.calendarContainer) {\n          e._arrange();\n        }\n      };\n\n      if (g) {\n        if (this.calendarContainer) {\n          this._arrange();\n\n          var d = this.host.width();\n\n          if (this.dropDownWidth != \"auto\") {\n            d = this.dropDownWidth;\n          }\n\n          this.calendarContainer.jqxCalendar({\n            width: d\n          });\n          this.container.width(parseInt(d) + 25);\n        }\n      }\n\n      a.jqx.utilities.resize(this.host, function () {\n        f();\n      });\n    },\n    _arrange: function () {\n      if (this.height == null) {\n        this.height = 27;\n        this.host.height(27);\n      }\n\n      var e = parseInt(this.host.width());\n      var m = parseInt(this.host.height());\n      var i = window.getComputedStyle(this.element);\n      var g = parseInt(i.borderLeftWidth) * 2;\n      var f = i.boxSizing;\n\n      if (f === \"border-box\" || isNaN(g)) {\n        g = 0;\n      }\n\n      var k = this.buttonSize;\n      var h = 2;\n\n      if (!this.showCalendarButton && !this.showTimeButton) {\n        k = 0;\n        var l = 0;\n        this.calendarButton.hide();\n        h = 0;\n      }\n\n      if (!this.showCalendarButton) {\n        this.calendarButton.hide();\n      } else {\n        this.calendarButton.show();\n      }\n\n      if (!this.showTimeButton) {\n        this.timeButton.hide();\n      } else {\n        this.timeButton.show();\n      }\n\n      var b = e - k - 1 * h;\n\n      if (this.showTimeButton && this.showCalendarButton) {\n        var b = e - 2 * k - 1 * h;\n      } else {\n        if (this.showTimeButton || this.showCalendarButton) {\n          var b = e - k - 1 * h;\n        }\n      }\n\n      if (b > 0) {\n        this.dateTimeInput[0].style.width = b + \"px\";\n      }\n\n      if (this.rtl) {\n        this.dateTimeInput[0].style.width = -1 + b + \"px\";\n      }\n\n      this.dateTimeInput[0].style.left = \"0px\";\n      this.dateTimeInput[0].style.top = \"0px\";\n      this.calendarButton[0].style.width = k + 1 + \"px\";\n      this.calendarButton[0].style.left = 1 + b + \"px\";\n      this.timeButton[0].style.width = k + 1 + \"px\";\n\n      if (this.showCalendarButton) {\n        this.timeButton[0].style.left = 1 + this.calendarButton.width() + b + \"px\";\n      } else {\n        this.timeButton[0].style.left = 1 + b + \"px\";\n      }\n\n      if (this.renderMode != \"full\") {\n        this.calendarButton[0].style.width = \"100%\";\n        this.calendarButton[0].style.left = \"0px\";\n        this.calendarButton.css(\"border\", \"none\");\n        this.timeButton[0].style.width = \"100%\";\n        this.timeButton[0].style.left = \"0px\";\n        this.timeButton.css(\"border\", \"none\");\n      }\n\n      var d = this.dateTimeInput.height();\n\n      if (d == 0 && this.renderMode != \"full\") {\n        d = parseInt(this.dateTimeInput.css(\"font-size\")) + 3;\n        this.calendarButton.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n        this.timeButton.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      } else {\n        d = 17;\n      }\n\n      if (this.dateTimeInput[0].className.indexOf(\"jqx-rc-all\") == -1) {\n        this.dateTimeInput.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      }\n\n      var j = parseInt(m) / 2 - parseInt(d) / 2;\n\n      if (j > 0) {\n        var n = this.dateTimeInput.css(\"font-size\");\n\n        if (\"\" == n) {\n          n = 13;\n        }\n\n        var j = m - 2 - parseInt(n) - 2;\n\n        if (isNaN(j)) {\n          j = 0;\n        }\n\n        if (j < 0) {\n          j = 0;\n        }\n\n        var c = j / 2;\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n          c = j / 4;\n        }\n\n        this.dateTimeInput[0].style.paddingTop = Math.round(c) + \"px\";\n        this.dateTimeInput[0].style.paddingBottom = Math.round(c) + \"px\";\n      }\n\n      if (this.rtl) {\n        this.calendarButton[0].style.width = k + \"px\";\n        this.timeButton[0].style.width = k + \"px\";\n        this.calendarButton.css(\"left\", \"0px\");\n\n        if (this.showCalendarButton) {\n          this.timeButton.css(\"left\", k + \"px\");\n        } else {\n          this.timeButton.css(\"left\", \"0px\");\n        }\n\n        this.dateTimeInput.css(\"left\", this.calendarButton.width());\n\n        if (this.showTimeButton && this.showCalendarButton) {\n          this.dateTimeInput.css(\"left\", this.timeButton.width() + this.calendarButton.width());\n        }\n\n        if (a.jqx.browser.msie && a.jqx.browser.version <= 8) {\n          this.dateTimeInput.css(\"left\", 1 + this.calendarButton.width());\n\n          if (this.showTimeButton && this.showCalendarButton) {\n            this.dateTimeInput.css(\"left\", 1 + this.timeButton.width() + this.calendarButton.width());\n          }\n        }\n      }\n    },\n    _removeHandlers: function () {\n      var b = this;\n      this.removeHandler(a(document), \"mousedown.\" + this.id);\n\n      if (this.dateTimeInput) {\n        this.removeHandler(this.dateTimeInput, \"keydown.\" + this.id);\n        this.removeHandler(this.dateTimeInput, \"blur\");\n        this.removeHandler(this.dateTimeInput, \"focus\");\n        this.removeHandler(this.host, \"focus\");\n        this.removeHandler(this.dateTimeInput, \"mousedown\");\n        this.removeHandler(this.dateTimeInput, \"mouseup\");\n        this.removeHandler(this.dateTimeInput, \"keydown\");\n        this.removeHandler(this.dateTimeInput, \"keyup\");\n        this.removeHandler(this.dateTimeInput, \"keypress\");\n      }\n\n      if (this.calendarButton != null) {\n        this.removeHandler(this.calendarButton, \"mousedown\");\n      }\n\n      if (this.timeButton != null) {\n        this.removeHandler(this.timeButton, \"mousedown\");\n      }\n\n      if (this.calendarContainer != null) {\n        this.removeHandler(this.calendarContainer, \"cellSelected\");\n        this.removeHandler(this.calendarContainer, \"cellMouseDown\");\n      }\n\n      this.removeHandler(a(window), \"resize.\" + this.id);\n    },\n    isOpened: function () {\n      var c = this;\n      var b = a.data(document.body, \"openedJQXCalendar\" + this.id);\n\n      if (b != null && b == c.calendarContainer) {\n        return true;\n      }\n\n      return false;\n    },\n    wheel: function (d, c) {\n      if (!c.isEditing) {\n        return;\n      }\n\n      c.changeType = \"mouse\";\n      var e = 0;\n\n      if (!d) {\n        d = window.event;\n      }\n\n      if (d.originalEvent && d.originalEvent.wheelDelta) {\n        d.wheelDelta = d.originalEvent.wheelDelta;\n      }\n\n      if (d.wheelDelta) {\n        e = d.wheelDelta / 120;\n      } else {\n        if (d.detail) {\n          e = -d.detail / 3;\n        }\n      }\n\n      if (e) {\n        var b = c._handleDelta(e);\n\n        if (!b) {\n          if (d.preventDefault) {\n            d.preventDefault();\n          }\n\n          d.returnValue = false;\n          return b;\n        } else {\n          return false;\n        }\n      }\n\n      if (d.preventDefault) {\n        d.preventDefault();\n      }\n\n      d.returnValue = false;\n    },\n    _handleDelta: function (b) {\n      if (b < 0) {\n        this.spinDown();\n      } else {\n        this.spinUp();\n      }\n\n      return false;\n    },\n    focus: function () {\n      try {\n        var c = this;\n        c._firstFocusDate = c.getDate();\n\n        this._setSelectionStart(0);\n\n        this._selectGroup(-1);\n\n        this.dateTimeInput.focus();\n        setTimeout(function () {\n          c._setSelectionStart(0);\n\n          c._selectGroup(-1);\n\n          c.dateTimeInput.focus();\n        }, 25);\n      } catch (b) {}\n    },\n    _addHandlers: function () {\n      var e = this.element.id;\n      var c = this.element;\n      var d = this;\n\n      if (this.host.parents()) {\n        this.addHandler(this.host.parents(), \"scroll.datetimeinput\" + this.element.id, function (f) {\n          var g = d.isOpened();\n\n          if (g) {\n            d.close();\n          }\n        });\n      }\n\n      this.addHandler(this.host, \"mouseenter\", function () {\n        if (!d.disabled && d.enableHover) {\n          var f = true;\n          d.calendarButtonIcon.addClass(d.toThemeProperty(\"jqx-icon-calendar-hover\"));\n          d.calendarButton.addClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n\n          if (d.showTimeButton) {\n            d.timeButtonIcon.addClass(d.toThemeProperty(\"jqx-icon-time-hover\"));\n            d.timeButton.addClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n          }\n        }\n      });\n      this.addHandler(this.host, \"mouseleave\", function () {\n        if (!d.disabled && d.enableHover) {\n          d.calendarButtonIcon.removeClass(d.toThemeProperty(\"jqx-icon-calendar-hover\"));\n          d.calendarButton.removeClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n\n          if (d.showTimeButton) {\n            d.timeButtonIcon.removeClass(d.toThemeProperty(\"jqx-icon-time-hover\"));\n            d.timeButton.removeClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n          }\n        }\n      });\n      this.addHandler(this.host, \"mousewheel\", function (f) {\n        d.wheel(f, d);\n      });\n      this.addHandler(a(document), \"mousedown.\" + this.id, this._closeOpenedCalendar, {\n        me: this\n      });\n\n      if (a.jqx.mobile.isTouchDevice()) {\n        this.addHandler(a(document), a.jqx.mobile.getTouchEventName(\"touchstart\") + \".\" + this.id, this._closeOpenedCalendar, {\n          me: this\n        });\n      }\n\n      this.addHandler(this.dateTimeInput, \"keydown.\" + this.id, function (h) {\n        var g = a.data(document.body, \"openedJQXCalendar\" + d.id);\n\n        if (g != null && g == d.calendarContainer) {\n          var f = d.handleCalendarKey(h, d);\n          return f;\n        }\n      });\n\n      if (this.calendarContainer != null) {\n        this.addHandler(this.calendarContainer, \"keydown\", function (f) {\n          if (f.keyCode == 13) {\n            if (d.isOpened()) {\n              if (!d._calendar._viewAnimating && d._calendar.view == \"month\") {\n                d.hideCalendar(\"selected\", \"keyboard\");\n                d.dateTimeInput.focus();\n                return false;\n              }\n            }\n\n            return true;\n          } else {\n            if (f.keyCode == 9) {\n              if (d.isOpened()) {\n                d.hideCalendar(\"selected\", \"keyboard\");\n                return true;\n              }\n            } else {\n              if (f.keyCode == 27) {\n                if (d.isOpened()) {\n                  d.hideCalendar(null, \"keyboard\");\n                  d.dateTimeInput.focus();\n                  return false;\n                }\n\n                return true;\n              }\n            }\n          }\n\n          d.timePopup = false;\n\n          if (f.keyCode == 84) {\n            d.timePopup = true;\n          }\n\n          if (f.keyCode == 115) {\n            if (d.isOpened()) {\n              d.hideCalendar(\"keyboard\", \"keyboard\");\n              d.dateTimeInput.focus();\n              return false;\n            } else {\n              if (!d.isOpened()) {\n                d.showCalendar(\"keyboard\", \"keyboard\");\n                d.dateTimeInput.focus();\n                return false;\n              }\n            }\n          }\n\n          if (f.altKey) {\n            if (f.keyCode == 38) {\n              if (d.isOpened()) {\n                d.hideCalendar(\"keyboard\", \"keyboard\");\n                d.dateTimeInput.focus();\n                return false;\n              }\n            } else {\n              if (f.keyCode == 40) {\n                if (!d.isOpened()) {\n                  d.showCalendar(\"keyboard\", \"keyboard\");\n                  d.dateTimeInput.focus();\n                  return false;\n                }\n              }\n            }\n          }\n        });\n        this.addHandler(this.calendarContainer, \"cellSelected\", function (g) {\n          if (d.closeCalendarAfterSelection) {\n            var f = a.data(document.body, \"openedJQXCalendarValue\");\n\n            if (g.args.selectionType == \"mouse\") {\n              if (d.selectionMode != \"range\") {\n                d.hideCalendar(\"selected\", \"mouse\");\n              } else {\n                if (d._calendar._clicks == 0) {\n                  d.hideCalendar(\"selected\", \"mouse\");\n                }\n              }\n            }\n          }\n        });\n        this.addHandler(this.calendarContainer, \"cellMouseDown\", function (f) {\n          if (d.closeCalendarAfterSelection) {\n            if (d._calendar.value) {\n              a.data(document.body, \"openedJQXCalendarValue\", new a.jqx._jqxDateTimeInput.getDateTime(d._calendar.value.dateTime));\n            }\n          }\n        });\n      }\n\n      this.addHandler(this.dateTimeInput, \"blur\", function (h) {\n        d.bar.removeClass(\"focused\");\n        d.label.removeClass(\"focused\");\n\n        if (d.value != null) {\n          d.isEditing = false;\n          var g = d.value.dateTime.getDay();\n          var f = d._oldDT;\n\n          d._validateValue(true);\n\n          if (h.stopPropagation) {\n            h.stopPropagation();\n          }\n\n          d._updateText();\n\n          d._raiseEvent(9, h);\n        }\n\n        if (!d.isOpened()) {\n          d.host.removeClass(d.toThemeProperty(\"jqx-fill-state-focus\"));\n        }\n      });\n      this.addHandler(this.host, \"focus\", function (f) {\n        d.focus();\n      });\n      this.addHandler(this.dateTimeInput, \"focus\", function (f) {\n        d._firstFocusDate = d.getDate();\n\n        if (d.value != null) {\n          if (d.selectionMode != \"range\") {\n            d._oldDT = new Date(d.value.dateTime);\n          } else {\n            d._oldDT = d.getRange();\n          }\n\n          setTimeout(function () {\n            var g = d._selection();\n\n            d.isEditing = true;\n\n            d._validateValue();\n\n            d._updateText();\n\n            d._setSelectionStart(0);\n\n            d._selectGroup(-1, g);\n\n            d.host.addClass(d.toThemeProperty(\"jqx-fill-state-focus\"));\n          });\n        } else {\n          d._setSelectionStart(0);\n\n          d._selectGroup(-1);\n\n          d.host.addClass(d.toThemeProperty(\"jqx-fill-state-focus\"));\n        }\n\n        if (f.stopPropagation) {\n          f.stopPropagation();\n        }\n\n        d.bar.addClass(\"focused\");\n        d.label.addClass(\"focused\");\n\n        if (f.preventDefault) {\n          f.preventDefault();\n          return false;\n        }\n      });\n      var b = \"mousedown\";\n\n      if (this.touch) {\n        b = a.jqx.mobile.getTouchEventName(\"touchstart\");\n      }\n\n      this.addHandler(this.calendarButton, b, function (g) {\n        var h = d.container;\n        var f = h.css(\"display\") == \"block\";\n        d.timePopup = false;\n        d.calendarPopup = true;\n\n        if (!d.disabled) {\n          if (!d.isanimating) {\n            if (f) {\n              d.hideCalendar();\n              return false;\n            } else {\n              d.showCalendar(\"mouse\");\n              g.preventDefault();\n            }\n          }\n        }\n      });\n      this.addHandler(this.timeButton, b, function (g) {\n        var h = d.container;\n        var f = h.css(\"display\") == \"block\";\n        d.timePopup = true;\n        d.calendarPopup = false;\n\n        if (!d.disabled) {\n          if (!d.isanimating) {\n            if (f) {\n              d.hideCalendar(\"mouse\", \"mouse\");\n              return false;\n            } else {\n              d.showCalendar(\"mouse\");\n              g.preventDefault();\n            }\n          }\n        }\n      });\n      this.addHandler(this.dateTimeInput, \"mousedown\", function (f) {\n        return d._raiseEvent(2, f);\n      });\n      this.addHandler(this.dateTimeInput, \"mouseup\", function (f) {\n        return d._raiseEvent(3, f);\n      });\n      this.addHandler(this.dateTimeInput, \"keydown\", function (f) {\n        return d._raiseEvent(4, f);\n      });\n      this.addHandler(this.dateTimeInput, \"keyup\", function (f) {\n        return d._raiseEvent(5, f);\n      });\n      this.addHandler(this.dateTimeInput, \"keypress\", function (f) {\n        return d._raiseEvent(6, f);\n      });\n    },\n    createID: function () {\n      var b = Math.random() + \"\";\n      b = b.replace(\".\", \"\");\n      b = \"99\" + b;\n      b = b / 1;\n      return \"dateTimeInput\" + b;\n    },\n    setMaxDate: function (b, c) {\n      if (b == null) {\n        return;\n      }\n\n      if (b != null && typeof b == \"string\") {\n        b = new Date(b);\n\n        if (!this._isValidDate(b)) {\n          return;\n        }\n      }\n\n      this.maxDate = a.jqx._jqxDateTimeInput.getDateTime(b);\n\n      if (this._calendar != null) {\n        this._calendar.setMaxDate(b);\n      }\n\n      if (c != false) {\n        if (this.getDate() != null && this.getDate() > b) {\n          this.setDate(b);\n        }\n\n        a.jqx.aria(this, \"aria-valuemax\", b);\n\n        this._refreshValue();\n\n        this._updateText();\n      }\n    },\n    getMaxDate: function () {\n      if (this.maxDate != null && this.maxDate != undefined) {\n        return this.maxDate.dateTime;\n      }\n\n      return null;\n    },\n    setMinDate: function (b, c) {\n      if (b == null) {\n        return;\n      }\n\n      if (b != null && typeof b == \"string\") {\n        b = new Date(b);\n\n        if (!this._isValidDate(b)) {\n          return;\n        }\n      }\n\n      this.minDate = a.jqx._jqxDateTimeInput.getDateTime(b);\n\n      if (this._calendar != null) {\n        this._calendar.setMinDate(b);\n      }\n\n      if (c != false) {\n        if (this.getDate() != null && this.getDate() < b) {\n          this.setDate(b);\n        }\n\n        a.jqx.aria(this, \"aria-valuemin\", b);\n\n        this._refreshValue();\n\n        this._updateText();\n      }\n    },\n    getMinDate: function () {\n      if (this.minDate != null && this.minDate != undefined) {\n        return this.minDate.dateTime;\n      }\n\n      return null;\n    },\n    _applyCulture: function () {\n      var d = false;\n\n      try {\n        if (window.Globalize != undefined) {\n          d = true;\n        }\n      } catch (c) {}\n\n      try {\n        if (a.global) {\n          a.global.preferCulture(this.culture);\n          this.localization.calendar = a.global.culture.calendar;\n        } else {\n          if (d) {\n            var b = Globalize.culture(this.culture);\n            this.localization.calendar = b.calendar;\n          }\n        }\n\n        this._loadItems();\n\n        if (this._calendar != null) {\n          this._calendar.culture = this.culture;\n          this._calendar.localization = this.localization;\n\n          this._calendar.render();\n        }\n      } catch (c) {}\n    },\n    propertyMap: function (b) {\n      if (b == \"value\") {\n        if (this.selectionMode != \"range\") {\n          return this.getDate();\n        } else {\n          return this.getRange();\n        }\n      }\n\n      return null;\n    },\n    propertiesChangedHandler: function (d, b, c) {\n      if (c && c.width && c.height && Object.keys(c).length == 2) {\n        d.refresh();\n        d.close();\n      }\n    },\n    propertyChangedHandler: function (c, d, f, e) {\n      if (c.isInitialized == undefined || c.isInitialized == false) {\n        return;\n      }\n\n      if (c.batchUpdate && c.batchUpdate.width && c.batchUpdate.height && Object.keys(c.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (d == \"dropDownVerticalAlignment\") {\n        c.close();\n      }\n\n      if (d == \"template\") {\n        c.bar.removeClass(c.toThemeProperty(\"jqx-\" + f));\n        c.label.removeClass(c.toThemeProperty(\"jqx-\" + f));\n        c.timeButton.removeClass(c.toThemeProperty(\"jqx-\" + f));\n        c.calendarButton.removeClass(c.toThemeProperty(\"jqx-\" + f));\n        c.bar.addClass(c.toThemeProperty(\"jqx-\" + c.template));\n        c.label.addClass(c.toThemeProperty(\"jqx-\" + c.template));\n        c.timeButton.addClass(c.toThemeProperty(\"jqx-\" + c.template));\n        c.calendarButton.addClass(c.toThemeProperty(\"jqx-\" + c.template));\n      }\n\n      if (d == \"restrictedDates\") {\n        c.calendarContainer.css({\n          restrictedDates: e\n        });\n      }\n\n      if (d == \"popupZIndex\") {\n        c.calendarContainer.css({\n          zIndex: e\n        });\n      }\n\n      if (d == \"showCalendarButton\") {\n        c._arrange();\n      }\n\n      if (d == \"showTimeButton\") {\n        c._arrange();\n\n        if (c.timePopupElement) {\n          c.timePopupElement.remove();\n          c.timePopupElement = null;\n        }\n      }\n\n      if (d == \"selectionMode\") {\n        c._calendar.selectionMode = e;\n        c.refreshValue();\n      }\n\n      if (d == \"min\") {\n        if (typeof e == \"string\") {\n          c.setMinDate(new Date(e));\n        } else {\n          c.setMinDate(e);\n        }\n      }\n\n      if (d == \"max\") {\n        if (typeof e == \"string\") {\n          c.setMaxDate(new Date(e));\n        } else {\n          c.setMaxDate(e);\n        }\n      }\n\n      if (d == \"value\") {\n        if (e != null && e instanceof Date) {\n          if (isNaN(e.getFullYear()) || isNaN(e.getMonth()) || isNaN(e.getDate())) {\n            this.value = f;\n            return;\n          }\n\n          e = a.jqx._jqxDateTimeInput.getDateTime(e);\n        } else {\n          if (e != null && typeof e == \"string\") {\n            var b = new Date(e);\n\n            if (b != undefined && !isNaN(b)) {\n              this.value = a.jqx._jqxDateTimeInput.getDateTime(b);\n            }\n          }\n        }\n      }\n\n      if (d == \"views\") {\n        c.calendarContainer.jqxCalendar({\n          views: e\n        });\n      }\n\n      if (d == \"enableViews\") {\n        c.calendarContainer.jqxCalendar({\n          enableViews: e\n        });\n      }\n\n      if (d == \"selectableDays\") {\n        c.calendarContainer.jqxCalendar({\n          selectableDays: e\n        });\n      }\n\n      if (d == \"showFooter\") {\n        c.calendarContainer.jqxCalendar({\n          showFooter: e\n        });\n      }\n\n      if (d == \"rtl\") {\n        c.calendarContainer.jqxCalendar({\n          rtl: e\n        });\n\n        if (e) {\n          c.dateTimeInput.css(\"direction\", \"rtl\");\n          c.dateTimeInput.addClass(\"jqx-rtl\");\n        } else {\n          c.dateTimeInput.css(\"direction\", \"ltr\");\n          c.dateTimeInput.removeClass(\"jqx-rtl\");\n        }\n      }\n\n      if (d == \"todayString\" || d == \"clearString\") {\n        c.calendarContainer.jqxCalendar({\n          clearString: c.clearString,\n          todayString: c.todayString\n        });\n      }\n\n      if (d == \"dayNameFormat\") {\n        c.calendarContainer.jqxCalendar({\n          dayNameFormat: e\n        });\n      }\n\n      if (d == \"firstDayOfWeek\") {\n        c.calendarContainer.jqxCalendar({\n          firstDayOfWeek: e\n        });\n      }\n\n      if (d == \"showWeekNumbers\") {\n        c.calendarContainer.jqxCalendar({\n          showWeekNumbers: e\n        });\n      }\n\n      if (d == \"culture\" || d == \"localization\") {\n        c._applyCulture();\n      } else {\n        if (d == \"formatString\") {\n          c.items = new Array();\n\n          c._loadItems();\n        }\n      }\n\n      if (d == \"theme\") {\n        a.jqx.utilities.setTheme(f, e, c.host);\n        c.calendarContainer.jqxCalendar({\n          theme: e\n        });\n      }\n\n      if (d == \"width\" || d == \"height\") {\n        c.close();\n        c.refresh();\n        return;\n      }\n\n      c._setOption(d, e, f);\n\n      if (d == \"dropDownWidth\" || d == \"dropDownHeight\") {\n        c.calendarContainer.jqxCalendar({\n          width: c.dropDownWidth,\n          height: c.dropDownHeight\n        });\n\n        c._calendar.render();\n\n        c.container.height(c.calendarContainer.height());\n        c.container.width(c.calendarContainer.width());\n      }\n    },\n    clear: function () {\n      if (this.allowNullDate) {\n        if (this.selectionMode != \"range\") {\n          this.setDate(null);\n        } else {\n          this._calendar._clicks = 1;\n          this.setRange(null, null);\n        }\n\n        this._calendar._clicks = 0;\n      } else {\n        if (this.selectionMode != \"range\") {\n          this.setDate(this.getMinDate());\n        } else {\n          this._calendar._clicks = 1;\n          this.setRange(this.getMinDate(), this.getMinDate());\n          this._calendar._clicks = 0;\n        }\n      }\n\n      this.hideCalendar();\n    },\n    today: function () {\n      var c = new Date();\n      c.setHours(0, 0, 0, 0);\n\n      if (this.selectionMode != \"range\") {\n        this.setDate(c);\n      } else {\n        this._calendar._clicks = 0;\n        var b = new Date();\n        b.setHours(23, 59, 59, 0);\n        this.setRange(c, b);\n        this._calendar._clicks = 0;\n      }\n\n      this.hideCalendar();\n    },\n    _isValidDate: function (b) {\n      if (b == null) {\n        return true;\n      }\n\n      if (typeof b !== \"object\") {\n        return false;\n      }\n\n      if (b !== null && b.getFullYear) {\n        return true;\n      }\n\n      if (b == \"Invalid Date\" || b.valueOf() < 0 || isNaN(b.valueOf())) {\n        return false;\n      }\n\n      return true;\n    },\n    setDate: function (d) {\n      var e = this.getDate();\n\n      if (d != null && typeof d == \"string\") {\n        var f = d;\n\n        if (d.toString().indexOf(\",\") >= 0) {\n          d = d.replace(/\\,/g, \"/\");\n          d = new Date(d);\n\n          if (!this._isValidDate(d)) {\n            d = f;\n          }\n        }\n\n        if (d.toString().indexOf(\"-\") >= 0) {\n          d = d.replace(/\\-/g, \"/\");\n          d = new Date(d);\n\n          if (!this._isValidDate(d)) {\n            d = f;\n          }\n\n          if (d.getFullYear && isNaN(d.getFullYear)) {\n            d = f;\n          }\n        }\n\n        if (d != \"\") {\n          var c = d;\n\n          if (window.Globalize != undefined) {\n            d = window.Globalize.parseDate(c, this.formatString, this.culture);\n          } else {\n            if (a.jqx.dataFormat) {\n              d = a.jqx.dataFormat.parsedate(c, this.formatString, this.localization.calendar);\n            } else {\n              d = new Date(d);\n            }\n          }\n\n          if (d === null && c !== null) {\n            if (this._isValidDate(c)) {\n              d = c;\n            }\n          }\n\n          if (!this._isValidDate(d)) {\n            return;\n          }\n        }\n      }\n\n      if (d == null || d == \"null\" || d == \"undefined\") {\n        if (!this.allowNullDate) {\n          d = this.min;\n        }\n      }\n\n      if (!this._isValidDate(d)) {\n        d = null;\n      }\n\n      if (d == null || d == \"null\" || d == \"undefined\" || d === \"\") {\n        if (this.value != null) {\n          this.value = null;\n\n          this._calendar.setDate(null);\n\n          this._refreshValue();\n\n          if (this.cookies) {\n            if (this.value != null) {\n              a.jqx.cookie.cookie(\"jqxDateTimeInput\" + this.element.id, this.value.dateTime.toString(), this.cookieoptions);\n            }\n          }\n\n          this._setSelectionStart(0);\n\n          this._selectGroup(-1);\n\n          this._raiseEvent(\"0\", d, e);\n\n          this._raiseEvent(\"9\", d, e);\n        }\n\n        return;\n      }\n\n      if (d < this.getMinDate() || d > this.getMaxDate()) {\n        return;\n      }\n\n      if (this.value == null) {\n        this.value = new a.jqx._jqxDateTimeInput.getDateTime(new Date());\n\n        this.value._setHours(0);\n\n        this.value._setMinutes(0);\n\n        this.value._setSeconds(0);\n\n        this.value._setMilliseconds(0);\n      }\n\n      if (d.getFullYear) {\n        this.value._setYear(d.getFullYear());\n\n        this.value._setDay(1);\n\n        this.value._setMonth(d.getMonth() + 1);\n\n        this.value._setHours(d.getHours());\n\n        this.value._setMinutes(d.getMinutes());\n\n        this.value._setSeconds(d.getSeconds());\n\n        this.value._setMilliseconds(d.getMilliseconds());\n\n        this.value._setDay(d.getDate());\n      }\n\n      this._validateTimeRange();\n\n      this._refreshValue();\n\n      if (this.cookies) {\n        if (this.value != null) {\n          a.jqx.cookie.cookie(\"jqxDateTimeInput\" + this.element.id, this.value.dateTime.toString(), this.cookieoptions);\n        }\n      }\n\n      var b = this.getDate();\n      var g = b - e;\n\n      if (g != 0) {\n        this._raiseEvent(\"0\", d, e);\n\n        this._raiseEvent(\"9\", d, e);\n\n        return true;\n      }\n    },\n    getDate: function () {\n      if (this.value == undefined) {\n        return null;\n      }\n\n      return new Date(this.value.dateTime);\n    },\n    getText: function () {\n      return this.dateTimeInput.val();\n    },\n    setRange: function (d, c) {\n      if (typeof d == \"object\" && !this._isValidDate(d)) {\n        d = null;\n      }\n\n      if (typeof c == \"object\" && !this._isValidDate(c)) {\n        c = null;\n      }\n\n      if (d != null && typeof d == \"string\") {\n        d = new Date(d);\n\n        if (!this._isValidDate(d)) {\n          return;\n        }\n      }\n\n      if (c != null && typeof c == \"string\") {\n        c = new Date(c);\n\n        if (!this._isValidDate(c)) {\n          return;\n        }\n      }\n\n      if (d && isNaN(d) && d.toString() == \"NaN\" && typeof d != \"string\") {\n        return;\n      }\n\n      if (c && isNaN(c) && c.toString() == \"NaN\" && typeof c != \"string\") {\n        return;\n      }\n\n      this._calendar.setRange(d, c);\n\n      if (c && d && c.valueOf() != d.valueOf()) {\n        this._range = {\n          from: d,\n          to: c\n        };\n      } else {\n        this._range = this._calendar.getRange();\n      }\n\n      var b = d;\n\n      if (b != null && b.getFullYear) {\n        if (this.value == null) {\n          this.value = new a.jqx._jqxDateTimeInput.getDateTime(new Date());\n\n          this.value._setHours(0);\n\n          this.value._setMinutes(0);\n\n          this.value._setSeconds(0);\n\n          this.value._setMilliseconds(0);\n        }\n\n        this.value._setYear(b.getFullYear());\n\n        this.value._setMonth(b.getMonth() + 1);\n\n        this.value._setHours(b.getHours());\n\n        this.value._setMinutes(b.getMinutes());\n\n        this.value._setSeconds(b.getSeconds());\n\n        this.value._setMilliseconds(b.getMilliseconds());\n\n        this.value._setDay(b.getDate());\n      }\n\n      this._refreshValue();\n\n      if (this.value) {\n        this._raiseEvent(\"0\", this.value.dateTime);\n      } else {\n        this._raiseEvent(\"0\", null);\n      }\n    },\n    getRange: function () {\n      var b = this._calendar.getRange();\n\n      if (this._range) {\n        var d = this._range.from;\n        var c = this._range.to;\n\n        if (c && d && c.valueOf() != d.valueOf()) {\n          if (b.from) {\n            b.from.setHours(d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds());\n          }\n\n          if (b.to) {\n            b.to.setHours(c.getHours(), c.getMinutes(), c.getSeconds(), c.getMilliseconds());\n          }\n        }\n      }\n\n      return b;\n    },\n    _validateValue: function (e) {\n      var b = false;\n\n      for (var d = 0; d < this.items.length; d++) {\n        var c = this.editors[d].value;\n\n        switch (this.items[d].type) {\n          case \"FORMAT_AMPM\":\n            if (c < 0) {\n              c = 0;\n            } else {\n              if (c > 1) {\n                c = 1;\n              }\n            }\n\n            break;\n\n          case \"Character\":\n            break;\n\n          case \"Day\":\n            if (c < 1) {\n              c = 1;\n            } else {\n              if (c > 31) {\n                c = 31;\n              }\n            }\n\n            break;\n\n          case \"FORMAT_hh\":\n            if (c < 1) {\n              c = 1;\n            } else {\n              if (c > 12) {\n                c = 12;\n              }\n            }\n\n            break;\n\n          case \"FORMAT_HH\":\n            if (c < 0) {\n              c = 0;\n            } else {\n              if (c > 23) {\n                c = 23;\n              }\n            }\n\n            break;\n\n          case \"Millisecond\":\n            if (c < 0) {\n              c = 0;\n            } else {\n              if (c > 999) {\n                c = 999;\n              }\n            }\n\n            break;\n\n          case \"Minute\":\n            if (c < 0) {\n              c = 0;\n            } else {\n              if (c > 59) {\n                c = 59;\n              }\n            }\n\n            break;\n\n          case \"Month\":\n            if (c < 1) {\n              c = 1;\n            } else {\n              if (c > 12) {\n                c = 12;\n              }\n            }\n\n            break;\n\n          case \"ReadOnly\":\n            break;\n\n          case \"Second\":\n            if (c < 0) {\n              c = 0;\n            } else {\n              if (c > 59) {\n                c = 59;\n              }\n            }\n\n            break;\n\n          case \"Year\":\n            if (c < this.minDate.year) {\n              c = this.minDate.year;\n            } else {\n              if (c > this.maxDate.year) {\n                c = this.maxDate.year;\n              }\n            }\n\n            break;\n        }\n\n        if (this.editors[d].value != c) {\n          this.editors[d].value = c;\n          b = true;\n        }\n      }\n\n      this.updateValue(e);\n\n      if (this.value != null && e === true) {\n        if (this.value.dateTime > this.maxDate.dateTime) {\n          this._internalSetValue(this.maxDate);\n\n          this._updateEditorsValue();\n        } else {\n          if (this.value.dateTime < this.minDate.dateTime) {\n            this._internalSetValue(this.minDate);\n\n            this._updateEditorsValue();\n          }\n        }\n\n        this._updateText();\n      }\n    },\n    spinUp: function () {\n      var d = this.value;\n\n      if (d == null) {\n        return;\n      }\n\n      if (this.activeEditor != null) {\n        var b = this.editors.indexOf(this.activeEditor);\n\n        if (b == -1) {\n          return;\n        }\n\n        if (this.items[b].type == \"Day\") {\n          if (this.value != null) {\n            this.activeEditor.maxValue = this.value._daysInMonth(this.value.year, this.value.month);\n          }\n        }\n\n        var c = this.activeEditor.positions;\n        this.activeEditor.increaseValue(this.enableAbsoluteSelection);\n        this.activeEditor.positions = c;\n      }\n\n      if (this.isEditing) {\n        this.isEditing = false;\n      }\n\n      this.updateValue();\n      this.isEditing = true;\n\n      this._updateText();\n\n      var e = this.editors.indexOf(this.activeEditor);\n\n      if (e >= 0) {\n        this._selectGroup(e);\n      }\n    },\n    spinDown: function () {\n      var d = this.value;\n\n      if (d == null) {\n        return;\n      }\n\n      if (this.activeEditor != null) {\n        var b = this.editors.indexOf(this.activeEditor);\n\n        if (b == -1) {\n          return;\n        }\n\n        if (this.items[b].type == \"Day\") {\n          if (this.value != null) {\n            this.activeEditor.maxValue = this.value._daysInMonth(this.value.year, this.value.month);\n          }\n        }\n\n        var c = this.activeEditor.positions;\n        this.activeEditor.decreaseValue(this.enableAbsoluteSelection);\n        this.activeEditor.positions = c;\n      }\n\n      if (this.isEditing) {\n        this.isEditing = false;\n      }\n\n      this.updateValue();\n      this.isEditing = true;\n\n      this._updateText();\n\n      var e = this.editors.indexOf(this.activeEditor);\n\n      if (e >= 0) {\n        this._selectGroup(e);\n      }\n    },\n    _passKeyToCalendar: function (c) {\n      if (c.keyCode == 13 || c.keyCode == 9) {\n        this.hideCalendar(\"selected\", \"keyboard\");\n        return true;\n      } else {\n        if (c.keyCode == 27) {\n          var e = this.calendarContainer;\n          var d = this._calendar;\n          var f = this.closeCalendarAfterSelection;\n          this.closeCalendarAfterSelection = false;\n          d.setDate(this.value.dateTime);\n          this.closeCalendarAfterSelection = f;\n          this.hideCalendar();\n        }\n      }\n\n      var f = this.closeCalendarAfterSelection;\n      this.closeCalendarAfterSelection = false;\n\n      var b = this._calendar._handleKey(c);\n\n      this.closeCalendarAfterSelection = f;\n      return b;\n    },\n    handleCalendarKey: function (f, e) {\n      var c = a(f.target);\n      var d = a.data(document.body, \"openedJQXCalendar\" + this.id);\n\n      if (d != null) {\n        if (d.length > 0) {\n          var b = e._passKeyToCalendar(f);\n\n          return b;\n        }\n      }\n\n      return true;\n    },\n    _findPos: function (c) {\n      if (c == null) {\n        return;\n      }\n\n      while (c && (c.type == \"hidden\" || c.nodeType != 1 || a.expr.filters.hidden(c))) {\n        c = c.nextSibling;\n      }\n\n      var b = a(c).coord(true);\n      return [b.left, b.top];\n    },\n    testOffset: function (h, f, c) {\n      var g = h.outerWidth();\n      var j = h.outerHeight();\n      var i = a(window).width() + a(window).scrollLeft();\n      var e = a(window).height() + a(window).scrollTop();\n\n      if (f.left + g > i) {\n        if (g > this.host.width()) {\n          var d = this.host.coord().left;\n          var b = g - this.host.width();\n          f.left = d - b + 2;\n        }\n      }\n\n      if (f.left < 0) {\n        f.left = parseInt(this.host.coord().left) + \"px\";\n      }\n\n      f.top -= Math.min(f.top, f.top + j > e && e > j ? Math.abs(j + c + 23) : 0);\n      return f;\n    },\n    open: function (b) {\n      if (b == \"time\") {\n        this.timePopup = true;\n      } else {\n        this.timePopup = false;\n      }\n\n      this.showCalendar();\n    },\n    close: function (b) {\n      this.hideCalendar();\n    },\n    _getBodyOffset: function () {\n      var c = 0;\n      var b = 0;\n\n      if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n        c = parseInt(a(\"body\").css(\"border-top-width\"));\n\n        if (isNaN(c)) {\n          c = 0;\n        }\n      }\n\n      if (a(\"body\").css(\"border-left-width\") != \"0px\") {\n        b = parseInt(a(\"body\").css(\"border-left-width\"));\n\n        if (isNaN(b)) {\n          b = 0;\n        }\n      }\n\n      return {\n        left: b,\n        top: c\n      };\n    },\n    initTimePopup: function () {\n      this.timePopupElement = a(\"<div style='border-style: solid; border-width: 0px;'></div>\").appendTo(this.timeContainer);\n      this.timePopupElement.addClass(this.toThemeProperty(\"jqx-widget-content jqx-widget jqx-date-time-input-popup\"));\n      var s = \"\";\n      s += \"<table><tbody><tr><td><a class='increment-hour-column' href='javascript:;' data-action='incrementHour'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-minute-column' href='javascript:;' data-action='incrementMinute'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-second-column' href='javascript:;' data-action='incrementSecond'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-millisecond-column' href='javascript:;' data-action='incrementMSSecond'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td class='increment-meridian-column'><a href='javascript:;' data-action='toggleMeridian'><div class='jqx-icon-up'></div></a></td></tr><tr><td><input type='text' class='jqx-timepicker-hour' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-minute' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-second' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-millisecond' maxlength='3'></td><td class='separator'>&nbsp;</td><td><input type='text' class='jqx-timepicker-meridian' maxlength='2'></td></tr><tr><td><a class='decrement-hour-column' href='javascript:;' data-action='decrementHour'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-minute-column' href='javascript:;' data-action='decrementMinute'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-second-column' href='javascript:;' data-action='decrementSecond'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-millisecond-column' href='javascript:;' data-action='decrementMillisecond'><div class='jqx-icon-down'></div></a></td><td class='separator'>&nbsp;</td><td><a class='decrement-meridian-column' href='javascript:;' data-action='toggleMeridian'><div class='jqx-icon-down'></div></a></td></tr></tbody></table>\";\n\n      var l = this._getFormatValue(this.formatString);\n\n      if (this.selectionMode != \"range\") {\n        this.timePopupElement[0].innerHTML = s;\n      } else {\n        this.timePopupElement[0].innerHTML = \"<table><tr><td>\" + s + \"</td><td>-</td><td>\" + s + \"</td></tr></table>\";\n      }\n\n      this.timePopupElement.find(\".jqx-icon-down\").addClass(this.toThemeProperty(\"jqx-icon jqx-icon-arrow-down\"));\n      this.timePopupElement.find(\".jqx-icon-up\").addClass(this.toThemeProperty(\"jqx-icon jqx-icon-arrow-up\"));\n      var g = this.timePopupElement.find(\"input\");\n      g.addClass(this.toThemeProperty(\"jqx-input\"));\n      g.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      this.addHandler(g, \"mousedown\", function (u) {\n        u.stopPropagation();\n      });\n\n      var e = function (u) {\n        if (u.target.className.indexOf(\"hour\") >= 0) {\n          m._decrementHour(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"minute\") >= 0) {\n          m._decrementMinuteSecond(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"second\") >= 0) {\n          m._decrementMinuteSecond(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"millisecond\") >= 0) {\n          m._decrementMillisecond(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"meridian\") >= 0) {\n          m._decrementMeridian(a(u.target));\n        }\n      };\n\n      var k = function (u) {\n        if (u.target.className.indexOf(\"hour\") >= 0) {\n          m._incrementHour(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"minute\") >= 0) {\n          m._incrementMinuteSecond(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"second\") >= 0) {\n          m._incrementMinuteSecond(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"millisecond\") >= 0) {\n          m._incrementMillisecond(a(u.target));\n        }\n\n        if (u.target.className.indexOf(\"meridian\") >= 0) {\n          m._incrementMeridian(a(u.target));\n        }\n      };\n\n      var r = function (v, u) {\n        if (!u.isEditing) {\n          return;\n        }\n\n        var w = 0;\n\n        if (!v) {\n          v = window.event;\n        }\n\n        if (v.originalEvent && v.originalEvent.wheelDelta) {\n          v.wheelDelta = v.originalEvent.wheelDelta;\n        }\n\n        if (v.originalEvent && v.originalEvent.deltaY != undefined) {\n          w = -v.originalEvent.deltaY;\n        }\n\n        if (v.wheelDelta) {\n          w = v.wheelDelta / 120;\n        } else {\n          if (v.detail) {\n            w = -v.detail / 3;\n          }\n        }\n\n        if (w) {\n          if (document.activeElement == v.target && v.target.nodeName.toLowerCase() == \"input\") {\n            if (w < 0) {\n              e(v);\n            } else {\n              k(v);\n            }\n          }\n\n          if (v.preventDefault) {\n            v.preventDefault();\n          }\n\n          v.returnValue = false;\n        }\n\n        if (v.preventDefault) {\n          v.preventDefault();\n        }\n\n        v.returnValue = false;\n      };\n\n      this.addHandler(g, \"wheel\", function (u) {\n        r(u, m);\n      });\n      this.addHandler(g, \"keydown\", function (v) {\n        var u = a(v.target);\n\n        if (v.ctrlKey) {\n          if (v.keyCode == 38) {\n            if (m.isOpened()) {\n              m.hideCalendar(\"keyboard\", \"keyboard\");\n              m.dateTimeInput.focus();\n              return false;\n            }\n          } else {\n            if (v.keyCode == 40) {\n              if (!m.isOpened()) {\n                m.showCalendar(\"keyboard\", \"keyboard\");\n                m.dateTimeInput.focus();\n                return false;\n              }\n            }\n          }\n        }\n\n        if (v.keyCode == 40) {\n          e(v);\n          v.preventDefault();\n        } else {\n          if (v.keyCode == 38) {\n            k(v);\n            v.preventDefault();\n          } else {\n            if (v.keyCode == 13) {\n              v.preventDefault();\n              m.hideCalendar(\"keyboard\", \"keyboard\");\n              m.dateTimeInput.focus();\n            } else {\n              if (v.keyCode == 27) {\n                v.preventDefault();\n                m.hideCalendar(\"cancel\");\n                m.dateTimeInput.focus();\n              }\n            }\n          }\n        }\n      });\n      this.hourInput = a(g[0]);\n      this.minuteInput = a(g[1]);\n      this.secondInput = a(g[2]);\n      this.mssecondInput = a(g[3]);\n      this.meridianInput = a(g[4]);\n      this.hourInput2 = a(g[5]);\n      this.minuteInput2 = a(g[6]);\n      this.secondInput2 = a(g[7]);\n      this.mssecondInput2 = a(g[8]);\n      this.meridianInput2 = a(g[9]);\n      var m = this;\n      var o = this.timePopupElement.find(\".increment-hour-column\");\n      this.hourIncrement = a(o[0]);\n      this.hourIncrement2 = a(o[1]);\n      this.addHandler(g, \"change\", function (v) {\n        var u = a(v.target);\n\n        if (u.val().length <= 1) {\n          u.val(\"0\" + a(v.target).val());\n        }\n\n        if (v.target.className.indexOf(\"hour\") >= 0) {\n          var w = parseInt(a(v.target).val());\n\n          if (l.indexOf(\"HH\") >= 0) {\n            while (w > 24) {\n              w = w - 24;\n            }\n          } else {\n            while (w > 12) {\n              w = w - 12;\n            }\n          }\n\n          if (w < 10) {\n            w = \"0\" + w;\n          }\n\n          if (u.val() != w) {\n            u.val(w);\n          }\n        }\n\n        if (v.target.className.indexOf(\"minute\") >= 0 || v.target.className.indexOf(\"second\") >= 0) {\n          var w = parseInt(a(v.target).val());\n\n          while (w > 59) {\n            w--;\n          }\n\n          if (w < 10) {\n            w = \"0\" + w;\n          }\n\n          if (u.val() != w) {\n            u.val(w);\n          }\n        }\n      });\n\n      this._incrementHour = function (u) {\n        var v = parseInt(u.val());\n        v++;\n\n        if (l.indexOf(\"HH\") >= 0) {\n          if (v > 23) {\n            v = 0;\n          }\n        } else {\n          if (v > 12) {\n            v = 1;\n          }\n        }\n\n        if (v < 10) {\n          v = \"0\" + v;\n        }\n\n        u.val(v);\n      };\n\n      this._incrementMinuteSecond = function (u) {\n        var v = parseInt(u.val());\n        v++;\n\n        if (v > 59) {\n          v = 0;\n        }\n\n        if (v < 10) {\n          v = \"0\" + v;\n        }\n\n        u.val(v);\n      };\n\n      this._incrementMillisecond = function (u) {\n        var v = parseInt(u.val());\n        v++;\n\n        if (v > 999) {\n          v = 0;\n        }\n\n        if (v < 10) {\n          v = \"0\" + v;\n        }\n\n        u.val(v);\n      };\n\n      this._incrementMeridian = function (u) {\n        var v = u.val();\n\n        if (v.toLowerCase().indexOf(\"a\") >= 0) {\n          v = \"PM\";\n        } else {\n          v = \"AM\";\n        }\n\n        u.val(v);\n      };\n\n      this._decrementHour = function (u) {\n        var v = parseInt(u.val());\n        v--;\n\n        if (l.indexOf(\"HH\") >= 0) {\n          if (v < 0) {\n            v = 23;\n          }\n        } else {\n          if (v < 1) {\n            v = 12;\n          }\n        }\n\n        if (v < 10) {\n          v = \"0\" + v;\n        }\n\n        u.val(v);\n      };\n\n      this._decrementMinuteSecond = function (u) {\n        var v = parseInt(u.val());\n        v--;\n\n        if (v < 0) {\n          v = 59;\n        }\n\n        if (v < 10) {\n          v = \"0\" + v;\n        }\n\n        u.val(v);\n      };\n\n      this._decrementMillisecond = function (u) {\n        var v = parseInt(u.val());\n        v--;\n\n        if (v < 0) {\n          v = 999;\n        }\n\n        if (v < 10) {\n          v = \"0\" + v;\n        }\n\n        u.val(v);\n      };\n\n      this._decrementMeridian = function (u) {\n        var v = u.val();\n\n        if (v.toLowerCase().indexOf(\"a\") >= 0) {\n          v = \"PM\";\n        } else {\n          v = \"AM\";\n        }\n\n        u.val(v);\n      };\n\n      this.addHandler(this.hourIncrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementHour(m.hourInput);\n      });\n      this.addHandler(this.hourIncrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementHour(m.hourInput2);\n      });\n      var p = this.timePopupElement.find(\".increment-minute-column\");\n      this.minuteIncrement = a(p[0]);\n      this.minuteIncrement2 = a(p[1]);\n      this.addHandler(this.minuteIncrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMinuteSecond(m.minuteInput);\n      });\n      this.addHandler(this.minuteIncrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMinuteSecond(m.minuteInput2);\n      });\n      var c = this.timePopupElement.find(\".increment-second-column\");\n      this.secondIncrement = a(c[0]);\n      this.secondIncrement2 = a(c[1]);\n      this.addHandler(this.secondIncrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMinuteSecond(m.secondInput);\n      });\n      this.addHandler(this.secondIncrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMinuteSecond(m.secondInput2);\n      });\n      var d = this.timePopupElement.find(\".increment-millisecond-column\");\n      this.millisecondsIncrement = a(d[0]);\n      this.millisecondsIncrement2 = a(d[1]);\n      this.addHandler(this.millisecondsIncrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMillisecond(m.mssecondInput);\n      });\n      this.addHandler(this.millisecondsIncrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMillisecond(m.mssecondInput2);\n      });\n      var i = this.timePopupElement.find(\".increment-meridian-column\");\n      this.meridianIncrement = a(i[0]);\n      this.meridianIncrement2 = a(i[1]);\n      this.addHandler(this.meridianIncrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMeridian(m.meridianInput);\n      });\n      this.addHandler(this.meridianIncrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._incrementMeridian(m.meridianInput2);\n      });\n      var n = this.timePopupElement.find(\".decrement-hour-column\");\n      this.hourDecrement = a(n[0]);\n      this.hourDecrement2 = a(n[1]);\n      this.addHandler(this.hourDecrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementHour(m.hourInput);\n      });\n      this.addHandler(this.hourDecrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementHour(m.hourInput2);\n      });\n      var j = this.timePopupElement.find(\".decrement-minute-column\");\n      this.minuteDecrement = a(j[0]);\n      this.minuteDecrement2 = a(j[1]);\n      this.addHandler(this.minuteDecrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMinuteSecond(m.minuteInput);\n      });\n      this.addHandler(this.minuteDecrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMinuteSecond(m.minuteInput2);\n      });\n      var t = this.timePopupElement.find(\".decrement-second-column\");\n      this.secondDecrement = a(t[0]);\n      this.secondDecrement2 = a(t[1]);\n      this.addHandler(this.secondDecrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMinuteSecond(m.secondInput);\n      });\n      this.addHandler(this.secondDecrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMinuteSecond(m.secondInput2);\n      });\n      var b = this.timePopupElement.find(\".decrement-millisecond-column\");\n      this.millisecondsDecrement = a(b[0]);\n      this.millisecondsDecrement2 = a(b[1]);\n      this.addHandler(this.millisecondsDecrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMillisecond(m.mssecondInput);\n      });\n      this.addHandler(this.millisecondsDecrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMillisecond(m.mssecondInput2);\n      });\n      var f = this.timePopupElement.find(\".decrement-meridian-column\");\n      this.meridianDecrement = a(f[0]);\n      this.meridianDecrement2 = a(f[1]);\n      this.addHandler(this.meridianDecrement, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMeridian(m.meridianInput);\n      });\n      this.addHandler(this.meridianDecrement2, \"mousedown\", function (u) {\n        u.stopPropagation();\n\n        m._decrementMeridian(m.meridianInput2);\n      });\n      var q = this.timePopupElement.find(\"table\");\n      this.addHandler(this.timePopupElement, \"mousedown\", function (u) {\n        u.stopPropagation();\n      });\n\n      var h = function (u) {\n        var v = u.find(\"tr\");\n\n        if (l.indexOf(\"mm\") == -1) {\n          m.minuteInput.hide();\n          m.minuteInput2.hide();\n          a(a(v[0]).children()[1]).hide();\n          a(a(v[0]).children()[2]).hide();\n          a(a(v[1]).children()[1]).hide();\n          a(a(v[1]).children()[2]).hide();\n          a(a(v[2]).children()[1]).hide();\n          a(a(v[2]).children()[2]).hide();\n        }\n\n        if (l.indexOf(\"ss\") == -1) {\n          m.secondInput.hide();\n          m.secondInput2.hide();\n          a(a(v[0]).children()[3]).hide();\n          a(a(v[0]).children()[4]).hide();\n          a(a(v[1]).children()[3]).hide();\n          a(a(v[1]).children()[4]).hide();\n          a(a(v[2]).children()[3]).hide();\n          a(a(v[2]).children()[4]).hide();\n        }\n\n        if (l.indexOf(\"tt\") == -1 && l.indexOf(\"hh\") == -1) {\n          m.meridianInput.hide();\n          m.meridianInput2.hide();\n          a(a(v[0]).children()[7]).hide();\n          a(a(v[0]).children()[8]).hide();\n          a(a(v[1]).children()[7]).hide();\n          a(a(v[1]).children()[8]).hide();\n          a(a(v[2]).children()[7]).hide();\n          a(a(v[2]).children()[8]).hide();\n        }\n\n        if (l.indexOf(\"zz\") == -1) {\n          m.mssecondInput.hide();\n          m.mssecondInput2.hide();\n          a(a(v[0]).children()[5]).hide();\n          a(a(v[0]).children()[6]).hide();\n          a(a(v[1]).children()[5]).hide();\n          a(a(v[1]).children()[6]).hide();\n          a(a(v[2]).children()[5]).hide();\n          a(a(v[2]).children()[6]).hide();\n        }\n      };\n\n      if (q.length == 1) {\n        h(q);\n      } else {\n        h(a(a(q)[1]));\n        h(a(a(q)[2]));\n      }\n    },\n    updateTimePopup: function () {\n      var b = this._getFormatValue(this.formatString);\n\n      if (this.selectionMode != \"range\") {\n        var f = this.getDate();\n\n        if (this.hourInput) {\n          if (f) {\n            var c = f.getHours();\n            var h = f.getMinutes();\n            var g = f.getHours();\n            var e = f.getSeconds();\n            var d = f.getMilliseconds();\n          } else {\n            var c = 0;\n            var h = 0;\n            var g = 0;\n            var e = 0;\n            var d = 0;\n          }\n\n          if (c >= 12) {\n            g = \"PM\";\n\n            if (b.indexOf(\"HH\") == -1) {\n              c -= 12;\n\n              if (c == 0) {\n                c = 12;\n              }\n            }\n          } else {\n            g = \"AM\";\n          }\n\n          if (this.meridianInput.css(\"display\") != \"none\") {\n            if (c == 0) {\n              c = 12;\n            }\n          }\n\n          if (c < 10) {\n            c = \"0\" + c;\n          }\n\n          if (h < 10) {\n            h = \"0\" + h;\n          }\n\n          if (e < 10) {\n            e = \"0\" + e;\n          }\n\n          if (d < 10) {\n            d = \"0\" + d;\n          }\n\n          this.hourInput.val(c);\n          this.minuteInput.val(h);\n          this.secondInput.val(e);\n          this.mssecondInput.val(d);\n          this.meridianInput.val(g);\n        }\n      } else {\n        var f = this.getRange().from;\n\n        if (this.hourInput) {\n          if (f) {\n            var c = f.getHours();\n            var h = f.getMinutes();\n            var g = f.getHours();\n            var e = f.getSeconds();\n            var d = f.getMilliseconds();\n          } else {\n            var c = 0;\n            var h = 0;\n            var g = 0;\n            var e = 0;\n            var d = 0;\n          }\n\n          if (c >= 12) {\n            g = \"PM\";\n\n            if (b.indexOf(\"HH\") == -1) {\n              c -= 12;\n\n              if (c == 0) {\n                c = 12;\n              }\n            }\n          } else {\n            g = \"AM\";\n          }\n\n          if (this.meridianInput.css(\"display\") != \"none\") {\n            if (c == 0) {\n              c = 12;\n            }\n          }\n\n          if (c < 10) {\n            c = \"0\" + c;\n          }\n\n          if (h < 10) {\n            h = \"0\" + h;\n          }\n\n          if (e < 10) {\n            e = \"0\" + e;\n          }\n\n          if (d < 10) {\n            d = \"0\" + d;\n          }\n\n          this.hourInput.val(c);\n          this.minuteInput.val(h);\n          this.secondInput.val(e);\n          this.mssecondInput.val(d);\n          this.meridianInput.val(g);\n        }\n\n        var f = this.getRange().to;\n\n        if (this.hourInput2) {\n          if (f) {\n            var c = f.getHours();\n            var h = f.getMinutes();\n            var g = f.getHours();\n            var e = f.getSeconds();\n            var d = f.getMilliseconds();\n          } else {\n            var c = 0;\n            var h = 0;\n            var g = 0;\n            var e = 0;\n            var d = 0;\n          }\n\n          if (c >= 12) {\n            g = \"PM\";\n\n            if (b.indexOf(\"HH\") == -1) {\n              c -= 12;\n\n              if (c == 0) {\n                c = 12;\n              }\n            }\n          } else {\n            g = \"AM\";\n          }\n\n          if (this.meridianInput.css(\"display\") != \"none\") {\n            if (c == 0) {\n              c = 12;\n            }\n          }\n\n          if (c < 10) {\n            c = \"0\" + c;\n          }\n\n          if (h < 10) {\n            h = \"0\" + h;\n          }\n\n          if (e < 10) {\n            e = \"0\" + e;\n          }\n\n          if (d < 10) {\n            d = \"0\" + d;\n          }\n\n          this.hourInput2.val(c);\n          this.minuteInput2.val(h);\n          this.secondInput2.val(e);\n          this.mssecondInput2.val(d);\n          this.meridianInput2.val(g);\n        }\n      }\n    },\n    showCalendar: function () {\n      var o = this.calendarContainer;\n      var s = this._calendar;\n      a.jqx.aria(this, \"aria-expanded\", true);\n\n      if (this.showTimeButton) {\n        if (this.timePopup) {\n          if (!this.timePopupElement) {\n            this.initTimePopup();\n          }\n\n          this.calendarContainer.css(\"visibility\", \"hidden\");\n          this.timeContainer.css(\"visibility\", \"visible\");\n          this.updateTimePopup();\n          var d = this.timeContainer.find(\"input\");\n          var v = 0;\n\n          for (var z = 0; z < d.length; z++) {\n            if (d[z].style.display != \"none\") {\n              v += 50;\n            }\n          }\n\n          this.container.width(parseInt(v));\n\n          if (!this.touch) {\n            setTimeout(function () {\n              d[0].focus();\n              a(d[0]).select();\n            }, 150 + this.openDelay);\n          }\n        } else {\n          this.container.width(parseInt(this.calendarContainer.width()) + 25);\n          this.timeContainer.css(\"visibility\", \"hidden\");\n          this.calendarContainer.css(\"visibility\", \"visible\");\n        }\n      }\n\n      if (this.value != null) {\n        if (this.selectionMode != \"range\") {\n          this._oldDT = new Date(this.value.dateTime);\n        } else {\n          this._oldDT = this.getRange();\n        }\n      } else {\n        this._oldDT = null;\n      }\n\n      if (!s.canRender) {\n        s.canRender = true;\n        s.render();\n      }\n\n      var l = this.container;\n      var r = this;\n      var g = a(window).scrollTop();\n      var h = a(window).scrollLeft();\n      var p = parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + \"px\";\n      var e,\n          u = parseInt(Math.round(this.host.coord(true).left));\n\n      if (this.dropDownContainer === \"element\") {\n        p = parseInt(this.host.outerHeight()) - 1 + \"px\";\n        e = 0;\n      }\n\n      e = u + \"px\";\n      var A = false;\n\n      if (A != null && A) {\n        e = a.jqx.mobile.getLeftPos(this.element);\n        p = a.jqx.mobile.getTopPos(this.element) + parseInt(this.host.outerHeight());\n\n        if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n          p = parseInt(p) - this._getBodyOffset().top + \"px\";\n        }\n\n        if (a(\"body\").css(\"border-left-width\") != \"0px\") {\n          e = parseInt(e) - this._getBodyOffset().left + \"px\";\n        }\n      }\n\n      this.container.css(\"left\", e);\n      this.container.css(\"top\", p);\n      var c = this.closeCalendarAfterSelection;\n      this.closeCalendarAfterSelection = false;\n      this.isEditing = false;\n\n      if (r.selectionMode == \"default\") {\n        this._validateValue();\n\n        this._updateText();\n\n        var w = this.value != null ? this.value.dateTime : new Date();\n        s.setDate(w);\n      }\n\n      this.closeCalendarAfterSelection = c;\n      var b = false;\n\n      if (this.dropDownHorizontalAlignment == \"right\" || this.rtl) {\n        var k = this.container.outerWidth();\n        var x = Math.abs(k - this.host.outerWidth() + 2);\n\n        if (!this.rtl) {\n          x -= 2;\n        }\n\n        if (k > this.host.width()) {\n          var f = 23;\n          this.container.css(\"left\", f + parseInt(Math.round(u)) - x + \"px\");\n        } else {\n          this.container.css(\"left\", 25 + parseInt(Math.round(u)) + x + \"px\");\n        }\n      }\n\n      if (this.dropDownVerticalAlignment == \"top\") {\n        var y = o.height();\n\n        if (this.timePopup) {\n          this.timeContainer.css(\"top\", this.container.height() - 75);\n        }\n\n        b = true;\n        o.css(\"top\", 23);\n        o.addClass(this.toThemeProperty(\"jqx-popup-up\"));\n        var n = parseInt(this.host.outerHeight());\n        var m = parseInt(p) - Math.abs(y + n + 23);\n        this.container.css(\"top\", m);\n      }\n\n      if (this.enableBrowserBoundsDetection) {\n        var j = this.testOffset(o, {\n          left: parseInt(this.container.css(\"left\")),\n          top: parseInt(p)\n        }, parseInt(this.host.outerHeight()));\n\n        if (parseInt(this.container.css(\"top\")) != j.top) {\n          b = true;\n          o.css(\"top\", 23);\n          o.addClass(this.toThemeProperty(\"jqx-popup-up\"));\n        } else {\n          o.css(\"top\", 0);\n        }\n\n        this.container.css(\"top\", j.top);\n\n        if (parseInt(this.container.css(\"left\")) != j.left) {\n          this.container.css(\"left\", j.left);\n        }\n      }\n\n      this._raiseEvent(7, o);\n\n      if (this.animationType != \"none\") {\n        this.container.css(\"display\", \"block\");\n        var q = parseInt(o.outerHeight());\n        o.stop();\n        this.isanimating = true;\n        this.opening = true;\n\n        if (this.animationType == \"fade\") {\n          o.css(\"margin-top\", 0);\n          o.css(\"opacity\", 0);\n          o.animate({\n            opacity: 1\n          }, this.openDelay, function () {\n            r.isanimating = false;\n            r.opening = false;\n            a.data(document.body, \"openedJQXCalendar\" + r.id, o);\n            r.calendarContainer.focus();\n          });\n\n          if (this.timePopup) {\n            this.timeContainer.css(\"margin-top\", 0);\n            this.timeContainer.css(\"opacity\", 0);\n            this.timeContainer.animate({\n              opacity: 1\n            }, this.openDelay, function () {\n              r.isanimating = false;\n              r.opening = false;\n              a.data(document.body, \"openedJQXCalendar\" + r.id, o);\n              r.timeContainer.focus();\n            });\n          }\n        } else {\n          o.css(\"opacity\", 1);\n\n          if (this.timePopup) {\n            this.timeContainer.css(\"opacity\", 1);\n          }\n\n          if (b) {\n            o.css(\"margin-top\", q);\n          } else {\n            o.css(\"margin-top\", -q);\n          }\n\n          if (this.timePopup) {\n            if (b) {\n              this.timeContainer.css(\"margin-top\", q);\n            } else {\n              this.timeContainer.css(\"margin-top\", -q);\n            }\n\n            this.timeContainer.animate({\n              \"margin-top\": 0\n            }, this.openDelay, function () {\n              r.isanimating = false;\n              r.opening = false;\n              a.data(document.body, \"openedJQXCalendar\" + r.id, o);\n              r.timeContainer.focus();\n            });\n          }\n\n          o.animate({\n            \"margin-top\": 0\n          }, this.openDelay, function () {\n            r.isanimating = false;\n            r.opening = false;\n            a.data(document.body, \"openedJQXCalendar\" + r.id, o);\n            r.calendarContainer.focus();\n          });\n        }\n      } else {\n        o.stop();\n        r.isanimating = false;\n        r.opening = false;\n        o.css(\"opacity\", 1);\n        o.css(\"margin-top\", 0);\n        this.container.css(\"display\", \"block\");\n        a.data(document.body, \"openedJQXCalendar\" + r.id, o);\n        this.calendarContainer.focus();\n\n        if (this.timePopup) {\n          this.timeContainer.stop();\n          this.timeContainer.css(\"opacity\", 1);\n          this.timeContainer.css(\"margin-top\", 0);\n          this.timeContainer.focus();\n        }\n      }\n\n      if (this.value == null) {\n        if (this._calendar && this._calendar._getSelectedCell()) {\n          this._calendar._getSelectedCell().isSelected = false;\n        }\n      }\n\n      if (this.timePopup) {\n        this.timeButtonIcon.addClass(this.toThemeProperty(\"jqx-icon-time-pressed\"));\n        this.timeButton.addClass(this.toThemeProperty(\"jqx-fill-state-hover\"));\n        this.timeButton.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n        this.timeContainer.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      } else {\n        this.calendarButtonIcon.addClass(this.toThemeProperty(\"jqx-icon-calendar-pressed\"));\n        this.calendarButton.addClass(this.toThemeProperty(\"jqx-fill-state-hover\"));\n        this.calendarButton.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n        this.calendarContainer.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      }\n\n      this.host.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n    },\n    hideCalendar: function (j, o) {\n      if (o) {\n        this.changeType = o;\n      }\n\n      var h = this.calendarContainer;\n      var b = this.container;\n      var p = this;\n      a.jqx.aria(this, \"aria-expanded\", false);\n\n      if (this.showTimeButton) {\n        if (this.timeContainer.css(\"visibility\") != \"hidden\" && j != \"cancel\") {\n          if (this.selectionMode != \"range\" && this.hourInput) {\n            var e = this.getDate();\n            var g = parseInt(this.hourInput.val());\n            var f = parseInt(this.minuteInput.val());\n            var c = parseInt(this.secondInput.val());\n            var q = parseInt(this.mssecondInput.val());\n            var d = this.meridianInput.val();\n\n            if (isNaN(g)) {\n              g = 0;\n            }\n\n            if (isNaN(f)) {\n              f = 0;\n            }\n\n            if (isNaN(c)) {\n              c = 0;\n            }\n\n            if (isNaN(q)) {\n              q = 0;\n            }\n\n            if (this.meridianInput.css(\"display\") != \"none\") {\n              if (d.toLowerCase().indexOf(\"p\") >= 0) {\n                if (g < 12) {\n                  g += 12;\n                }\n              }\n\n              if (d.toLowerCase().indexOf(\"a\") >= 0) {\n                if (g >= 12) {\n                  g -= 12;\n                }\n              }\n            }\n\n            if (!e) {\n              e = new Date();\n            }\n\n            e.setHours(g, f, c, q);\n            this.setDate(e);\n          } else {\n            if (this.hourInput && j != \"selected\") {\n              var i = this.getRange();\n              var g = parseInt(this.hourInput.val());\n              var f = parseInt(this.minuteInput.val());\n              var c = parseInt(this.secondInput.val());\n              var q = parseInt(this.mssecondInput.val());\n              var d = this.meridianInput.val();\n\n              if (isNaN(g)) {\n                g = 0;\n              }\n\n              if (isNaN(f)) {\n                f = 0;\n              }\n\n              if (isNaN(c)) {\n                c = 0;\n              }\n\n              if (isNaN(q)) {\n                q = 0;\n              }\n\n              if (this.meridianInput.css(\"display\") != \"none\") {\n                if (d.toLowerCase().indexOf(\"p\") >= 0) {\n                  if (g < 12) {\n                    g += 12;\n                  }\n                }\n\n                if (d.toLowerCase().indexOf(\"a\") >= 0) {\n                  if (g >= 12) {\n                    g -= 12;\n                  }\n                }\n              }\n\n              var l = i.from;\n\n              if (!l) {\n                l = new Date();\n              }\n\n              l.setHours(g, f, c, q);\n              var g = parseInt(this.hourInput2.val());\n              var f = parseInt(this.minuteInput2.val());\n              var c = parseInt(this.secondInput2.val());\n              var q = parseInt(this.mssecondInput2.val());\n              var d = this.meridianInput2.val();\n\n              if (f == \"\") {\n                f = 0;\n              }\n\n              if (c == \"\") {\n                c = 0;\n              }\n\n              if (q == \"\") {\n                q = 0;\n              }\n\n              if (this.meridianInput2.css(\"display\") != \"none\") {\n                if (d.toLowerCase().indexOf(\"p\") >= 0) {\n                  if (g < 12) {\n                    g += 12;\n                  }\n                }\n\n                if (d.toLowerCase().indexOf(\"a\") >= 0) {\n                  if (g >= 12) {\n                    g -= 12;\n                  }\n                }\n              }\n\n              var k = i.to;\n\n              if (!k) {\n                k = new Date();\n              }\n\n              k.setHours(g, f, c, q);\n\n              if (k.valueOf() < l.valueOf()) {\n                return false;\n              }\n\n              this.setRange(l, k);\n            } else {\n              if (j == \"selected\") {\n                return;\n              }\n            }\n          }\n        }\n      }\n\n      a.data(document.body, \"openedJQXCalendar\" + this.id, null);\n\n      if (this.animationType != \"none\") {\n        var n = h.outerHeight();\n        h.css(\"margin-top\", 0);\n\n        if (this.showTimeButton) {\n          this.timeContainer.css(\"margin-top\", 0);\n        }\n\n        this.isanimating = true;\n        var m = -n;\n\n        if (parseInt(this.container.coord().top) < parseInt(this.host.coord().top)) {\n          m = n;\n        }\n\n        if (this.animationType == \"fade\") {\n          h.animate({\n            opacity: 0\n          }, this.closeDelay, function () {\n            b.css(\"display\", \"none\");\n            p.isanimating = false;\n          });\n        } else {\n          h.animate({\n            \"margin-top\": m\n          }, this.closeDelay, function () {\n            b.css(\"display\", \"none\");\n            p.isanimating = false;\n          });\n        }\n\n        if (this.showTimeButton) {\n          if (this.animationType == \"fade\") {\n            this.timeContainer.animate({\n              opacity: 0\n            }, this.closeDelay, function () {\n              b.css(\"display\", \"none\");\n              p.isanimating = false;\n            });\n          } else {\n            this.timeContainer.animate({\n              \"margin-top\": m\n            }, this.closeDelay, function () {\n              b.css(\"display\", \"none\");\n              p.isanimating = false;\n            });\n          }\n        }\n      } else {\n        b.css(\"display\", \"none\");\n      }\n\n      if (j != undefined) {\n        this._updateSelectedDate(j);\n      }\n\n      this.timeButtonIcon.removeClass(this.toThemeProperty(\"jqx-icon-time-pressed\"));\n      this.timeButton.removeClass(this.toThemeProperty(\"jqx-fill-state-hover\"));\n      this.timeButton.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n      this.calendarButtonIcon.removeClass(this.toThemeProperty(\"jqx-icon-calendar-pressed\"));\n      this.calendarButton.removeClass(this.toThemeProperty(\"jqx-fill-state-hover\"));\n      this.calendarButton.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      this.timeContainer.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      this.calendarContainer.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n\n      this._raiseEvent(8, h);\n    },\n    _updateSelectedDate: function () {\n      var l = this.value;\n\n      if (l == null) {\n        l = new a.jqx._jqxDateTimeInput.getDateTime(new Date());\n\n        l._setHours(0);\n\n        l._setMinutes(0);\n\n        l._setSeconds(0);\n\n        l._setMilliseconds(0);\n      }\n\n      var g = l.hour;\n      var f = l.minute;\n      var c = l.second;\n      var b = l.millisecond;\n\n      if (this.selectionMode == \"range\" && this._calendar.getRange().from == null) {\n        this.setDate(null);\n        return;\n      }\n\n      var d = new a.jqx._jqxDateTimeInput.getDateTime(this._calendar.value.dateTime);\n\n      d._setHours(g);\n\n      d._setMinutes(f);\n\n      d._setSeconds(c);\n\n      d._setMilliseconds(b);\n\n      var m = this.setDate(d.dateTime);\n\n      if (this.selectionMode == \"range\" && !m && this._oldDT) {\n        var h = this.getRange();\n        var i = this._oldDT;\n        var k = false;\n        var j = false;\n        var e = this._oldDT.from;\n        var d = h.from;\n\n        if (d != null && e) {\n          if (!(d.getFullYear() != e.getFullYear() || d.getMonth() != e.getMonth() || d.getDate() != e.getDate() || d.getHours() != e.getHours() || d.getMinutes() != e.getMinutes() || d.getSeconds() != e.getSeconds())) {\n            k = true;\n          }\n        }\n\n        var d = h.to;\n\n        if (d != null) {\n          e = this._oldDT.to;\n\n          if (e) {\n            if (!(d.getFullYear() != e.getFullYear() || d.getMonth() != e.getMonth() || d.getDate() != e.getDate() || d.getHours() != e.getHours() || d.getMinutes() != e.getMinutes() || d.getSeconds() != e.getSeconds())) {\n              j = true;\n            }\n          }\n        }\n\n        if (k && j) {\n          return true;\n        }\n\n        this._raiseEvent(0, {});\n\n        this._raiseEvent(9, {});\n      }\n    },\n    _closeOpenedCalendar: function (b) {\n      var e = a(b.target);\n      var j = a.data(document.body, \"openedJQXCalendar\" + b.data.me.id);\n      var d = false;\n      a.each(e.parents(), function () {\n        if (this.className && this.className.indexOf) {\n          if (this.className.indexOf(\"jqx-calendar\") != -1) {\n            d = true;\n            return false;\n          }\n\n          if (this.className.indexOf(\"jqx-date-time-input-popup\") != -1) {\n            d = true;\n            return false;\n          }\n\n          if (this.className.indexOf(\"jqx-input\") != -1) {\n            return false;\n          }\n        }\n      });\n\n      if (a(b.target).ischildof(b.data.me.host)) {\n        return true;\n      }\n\n      if (b.target != null && (b.target.tagName == \"B\" || b.target.tagName == \"b\")) {\n        var k = b.data.me.host.coord();\n        var m = b.data.me.host.width();\n        var c = b.data.me.host.height();\n        var l = parseInt(k.top);\n        var g = parseInt(k.left);\n\n        if (l <= b.pageY && b.pageY <= l + c) {\n          if (g <= b.pageX && b.pageX <= g + m) {\n            return true;\n          }\n        }\n      }\n\n      if (j != null && !d) {\n        if (j.length > 0) {\n          var h = j[0].id.toString();\n          var f = h.toString().substring(13);\n          var i = a(document).find(\"#\" + f);\n          var n = b.data.me.hideCalendar();\n\n          if (n !== false) {\n            a.data(document.body, \"openedJQXCalendar\" + b.data.me.id, null);\n          }\n        }\n      }\n    },\n    _loadItems: function () {\n      if (this.value != null) {\n        this.items = new Array();\n\n        var d = this._getFormatValue(this.formatString);\n\n        this.items = this._parseFormatValue(d);\n        this.editors = new Array();\n\n        for (var b = 0; b < this.items.length; b++) {\n          var c = this.items[b].getDateTimeEditorByItemType(this.value, this);\n          this.editors[b] = c;\n        }\n      }\n\n      this._updateEditorsValue();\n\n      this._updateText();\n    },\n    _updateText: function () {\n      var d = this;\n      var f = \"\";\n\n      if (d.items.length == 0 && d.value != null) {\n        d._loadItems();\n      }\n\n      if (d.value != null) {\n        if (d.items.length >= 1) {\n          f = d.format(d.value, 0, d.items.length);\n        }\n\n        var b = d.dateTimeInput.val();\n\n        if (b != f) {\n          d._raiseEvent(1, d.value);\n        }\n      }\n\n      if (d.selectionMode == \"range\") {\n        var c = d.getRange();\n        var i = d.format(d.value, 0, d.items.length);\n\n        if (c.to) {\n          var h = a.jqx._jqxDateTimeInput.getDateTime(c.from);\n\n          i = d.format(h, 0, d.items.length);\n\n          var g = a.jqx._jqxDateTimeInput.getDateTime(c.to);\n\n          var e = d.format(g, 0, d.items.length);\n          var f = i + \" - \" + e;\n\n          if (f == \" - \") {\n            f = \"\";\n          }\n        } else {\n          f = \"\";\n        }\n      }\n\n      d.dateTimeInput.val(f);\n    },\n    format: function (g, h, f) {\n      var b = \"\";\n\n      for (var e = h; e < f; ++e) {\n        var c = this.items[e].dateParser(g, this);\n\n        if (this.isEditing && this.items[e].type != \"ReadOnly\") {\n          if (this.selectionMode != \"range\") {\n            var d = this.items[e].type == \"Day\" && this.items[e].format.length > 2;\n\n            if (this.items[e].type == \"FORMAT_AMPM\") {\n              d = true;\n\n              if (this.editors[e].value == 0) {\n                c = this.editors[e].amString;\n              } else {\n                c = this.editors[e].pmString;\n              }\n            }\n\n            if (!d) {\n              c = this.items[e].dateParserInEditMode(new Number(this.editors[e].value), \"d\" + this.editors[e].maxEditPositions, this);\n\n              while (c.length < this.editors[e].maxEditPositions) {\n                c = \"0\" + c;\n              }\n            }\n          }\n        }\n\n        b += c;\n      }\n\n      return b;\n    },\n    _getFormatValueGroupLength: function (c) {\n      for (var b = 1; b < c.toString().length; ++b) {\n        if (c.substring(b, b + 1) != c.substring(0, 1)) {\n          return b;\n        }\n      }\n\n      return c.length;\n    },\n    _parseFormatValue: function (h) {\n      var c = new Array();\n      var f = h.toString();\n      var e = 0;\n\n      while (f.length > 0) {\n        var d = this._getFormatValueGroupLength(f);\n\n        var g = null;\n\n        switch (f.substring(0, 1)) {\n          case \":\":\n          case \"/\":\n            d = 1;\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, 1), \"ReadOnly\", this.culture);\n            break;\n\n          case '\"':\n          case \"'\":\n            var b = f.indexOf(f[0], 1);\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(1, 1 + Math.max(1, b - 1)), \"ReadOnly\", this.culture);\n            d = Math.max(1, b + 1);\n            break;\n\n          case \"\\\\\":\n            if (f.length >= 2) {\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(1, 1), \"ReadOnly\", this.culture);\n              d = 2;\n            }\n\n            break;\n\n          case \"d\":\n          case \"D\":\n            if (d > 2) {\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Day\", this.culture);\n            } else {\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Day\", this.culture);\n            }\n\n            break;\n\n          case \"f\":\n          case \"F\":\n            if (d > 7) {\n              d = 7;\n            }\n\n            if (d > 3) {\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"ReadOnly\", this.culture);\n            } else {\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Millisecond\", this.culture);\n            }\n\n            break;\n\n          case \"g\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"ReadOnly\", this.culture);\n            break;\n\n          case \"h\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"FORMAT_hh\", this.culture);\n            break;\n\n          case \"H\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"FORMAT_HH\", this.culture);\n            break;\n\n          case \"m\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Minute\", this.culture);\n            break;\n\n          case \"M\":\n            if (d > 4) {\n              d = 4;\n            }\n\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Month\", this.culture);\n            break;\n\n          case \"s\":\n          case \"S\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Second\", this.culture);\n            break;\n\n          case \"t\":\n          case \"T\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"FORMAT_AMPM\", this.culture);\n            break;\n\n          case \"y\":\n          case \"Y\":\n            if (d > 1) {\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"Year\", this.culture);\n            } else {\n              d = 1;\n              g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, 1), null, \"ReadOnly\", this.culture);\n            }\n\n            break;\n\n          case \"z\":\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, d), \"ReadOnly\", this.culture);\n            break;\n\n          default:\n            d = 1;\n            g = a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0, 1), \"ReadOnly\", this.culture);\n            break;\n        }\n\n        c[e] = a.extend(true, {}, g);\n        f = f.substring(d);\n        e++;\n      }\n\n      return c;\n    },\n    _getFormatValue: function (b) {\n      if (b == null || b.length == 0) {\n        b = \"d\";\n      }\n\n      if (b.length == 1) {\n        switch (b.substring(0, 1)) {\n          case \"d\":\n            return this.localization.calendar.patterns.d;\n\n          case \"D\":\n            return this.localization.calendar.patterns.D;\n\n          case \"t\":\n            return this.localization.calendar.patterns.t;\n\n          case \"T\":\n            return this.localization.calendar.patterns.T;\n\n          case \"f\":\n            return this.localization.calendar.patterns.f;\n\n          case \"F\":\n            return this.localization.calendar.patterns.F;\n\n          case \"M\":\n            return this.localization.calendar.patterns.M;\n\n          case \"Y\":\n            return this.localization.calendar.patterns.Y;\n\n          case \"S\":\n            return this.localization.calendar.patterns.S;\n        }\n      }\n\n      if (b.length == 2 && b.substring(0, 1) == \"%\") {\n        b = b.substring(1);\n      }\n\n      return b;\n    },\n    _updateEditorsValue: function () {\n      var j = this.value;\n\n      if (j == null) {\n        return;\n      }\n\n      var g = j.year;\n      var h = j.day;\n      var d = j.hour;\n      var l = j.millisecond;\n      var b = j.second;\n      var c = j.minute;\n      var f = j.month;\n\n      if (this.items == null) {\n        return;\n      }\n\n      for (var e = 0; e < this.items.length; e++) {\n        switch (this.items[e].type) {\n          case \"FORMAT_AMPM\":\n            var k = d % 12;\n\n            if (k == 0) {\n              k = 12;\n            }\n\n            if (d >= 0 && d < 12) {\n              this.editors[e].value = 0;\n            } else {\n              this.editors[e].value = 1;\n            }\n\n            break;\n\n          case \"Day\":\n            this.editors[e].value = h;\n            break;\n\n          case \"FORMAT_hh\":\n            var k = d % 12;\n\n            if (k == 0) {\n              k = 12;\n            }\n\n            this.editors[e].value = k;\n            break;\n\n          case \"FORMAT_HH\":\n            this.editors[e].value = d;\n            break;\n\n          case \"Millisecond\":\n            this.editors[e].value = l;\n            break;\n\n          case \"Minute\":\n            this.editors[e].value = c;\n            break;\n\n          case \"Month\":\n            this.editors[e].value = f;\n            break;\n\n          case \"Second\":\n            this.editors[e].value = b;\n            break;\n\n          case \"Year\":\n            this.editors[e].value = g;\n            break;\n        }\n      }\n    },\n    updateValue: function (z) {\n      if (this.isEditing) {\n        return;\n      }\n\n      if (this.items && this.items.length == 0) {\n        return;\n      }\n\n      var o = 0;\n      var s = 1;\n      var C = 1;\n      var l = 0;\n      var d = 0;\n      var J = 0;\n      var u = 0;\n      var I = 1;\n      var h = 0;\n      var m = false;\n      var r = false;\n      var D = false;\n      var c = false;\n      var b = false;\n      var q = false;\n      var x = false;\n      var t = new Array();\n      var e = null;\n      var y = 0;\n\n      for (var B = 0; B < this.items.length; B++) {\n        switch (this.items[B].type) {\n          case \"FORMAT_AMPM\":\n            h = this.editors[B].value;\n            e = this.editors[B];\n            break;\n\n          case \"Character\":\n            break;\n\n          case \"Day\":\n            if (this.items[B].format.length < 3) {\n              C = this.editors[B].value;\n              t[y++] = this.editors[B];\n\n              if (C == 0) {\n                C = 1;\n              }\n\n              D = true;\n            }\n\n            break;\n\n          case \"FORMAT_hh\":\n            var F = this.editors[B];\n            l = F.value;\n            c = true;\n            break;\n\n          case \"FORMAT_HH\":\n            l = this.editors[B].value;\n            c = true;\n            break;\n\n          case \"Millisecond\":\n            d = this.editors[B].value;\n            x = true;\n            break;\n\n          case \"Minute\":\n            u = this.editors[B].value;\n            b = true;\n            break;\n\n          case \"Month\":\n            I = this.editors[B].value;\n            r = true;\n\n            if (I == 0) {\n              I = 1;\n            }\n\n            break;\n\n          case \"ReadOnly\":\n            break;\n\n          case \"Second\":\n            J = this.editors[B].value;\n            q = true;\n            break;\n\n          case \"Year\":\n            m = true;\n            s = this.editors[B].value;\n            var H = this.editors[B].getDateTimeItem().format;\n\n            if (H.length < 3) {\n              var w = \"1900\";\n\n              if (w.Length == 4) {\n                var v = \"\" + w[0] + w[1];\n                var E;\n                E = parseInt(v);\n                s = s + E * 100;\n              }\n            }\n\n            if (s == 0) {\n              s = 1;\n            }\n\n            break;\n        }\n      }\n\n      var G = this.value != null ? new Date(this.value.dateTime) : null;\n\n      if (s > 0 && I > 0 && C > 0 && u >= 0 && l >= 0 && J >= 0 && d >= 0) {\n        var K = this.value;\n\n        if (K != null) {\n          if (!m) {\n            s = K.year;\n          }\n\n          if (!r) {\n            I = K.month;\n          }\n\n          if (!D) {\n            C = K.day;\n          }\n        }\n\n        try {\n          if (I > 12) {\n            I = 12;\n          }\n\n          if (I < 1) {\n            I = 1;\n          }\n\n          if (z && K._daysInMonth(s, I) <= C) {\n            C = K._daysInMonth(s, I);\n\n            if (t != null && t.length > 0) {\n              for (B = 0; B < t.length; B++) {\n                t[B].value = C;\n              }\n            }\n          }\n\n          if (e != null) {\n            if (e.value == 0) {\n              if (l >= 12) {\n                l -= 12;\n              }\n            } else {\n              if (l + 12 < 24) {\n                l += 12;\n              }\n            }\n          }\n\n          var g = this.value.dateTime.getDate();\n\n          this.value._setYear(parseInt(s));\n\n          this.value._setDay(C);\n\n          this.value._setMonth(I);\n\n          if (c) {\n            this.value._setHours(l);\n          }\n\n          if (b) {\n            this.value._setMinutes(u);\n          }\n\n          if (q) {\n            this.value._setSeconds(J);\n          }\n\n          if (x) {\n            this.value._setMilliseconds(d);\n          }\n\n          this._validateTimeRange();\n        } catch (j) {\n          this.value = K;\n        }\n\n        if (G != null) {\n          var A = this.value.dateTime.getFullYear() == G.getFullYear() && this.value.dateTime.getDate() == G.getDate() && this.value.dateTime.getMonth() == G.getMonth() && this.value.dateTime.getHours() == G.getHours() && this.value.dateTime.getMinutes() == G.getMinutes() && this.value.dateTime.getSeconds() == G.getSeconds();\n\n          if (!A) {\n            if (this.changing) {\n              var n = this.changing(G, this.value.dateTime);\n\n              if (n) {\n                this.value = a.jqx._jqxDateTimeInput.getDateTime(n);\n              }\n            }\n\n            this._raiseEvent(\"0\", this.value.dateTime);\n\n            if (this.cookies) {\n              if (this.value != null) {\n                a.jqx.cookie.cookie(\"jqxDateTimeInput\" + this.element.id, this.value.dateTime.toString(), this.cookieoptions);\n              }\n            }\n\n            if (this.change) {\n              this.change(this.value.dateTime);\n            }\n          }\n        }\n      }\n\n      var f = this.editors.indexOf(this.activeEditor);\n      var p = this.items[f];\n\n      if (this.value) {\n        if (this.calendarContainer.jqxCalendar(\"_isDisabled\", this.value.dateTime)) {\n          this.dateTimeInput.addClass(this.toThemeProperty(\"jqx-input-invalid\"));\n        } else {\n          this.dateTimeInput.removeClass(this.toThemeProperty(\"jqx-input-invalid\"));\n        }\n      }\n    },\n    _internalSetValue: function (b) {\n      this.value._setYear(parseInt(b.year));\n\n      this.value._setDay(b.day);\n\n      this.value._setMonth(b.month);\n\n      this.value._setHours(b.hour);\n\n      this.value._setMinutes(b.minute);\n\n      this.value._setSeconds(b.second);\n\n      this.value._setMilliseconds(b.milisecond);\n    },\n    _raiseEvent: function (c, n, f) {\n      var m = this.events[c];\n      var g = {};\n      g.owner = this;\n\n      if (n == null) {\n        n = {};\n      }\n\n      if (f == null) {\n        f = n;\n      }\n\n      var l = n.charCode ? n.charCode : n.keyCode ? n.keyCode : 0;\n      var o = true;\n      var k = this.readonly;\n      var b = new a.Event(m);\n      b.owner = this;\n      b.args = g;\n      b.args.date = this.getDate();\n\n      if (c == 9) {\n        b.args.type = this.changeType;\n        this.changeType = null;\n      }\n\n      this.element.value = this.dateTimeInput.val();\n\n      if (c == 9 && this.selectionMode != \"range\") {\n        var d = b.args.date;\n\n        if (this._oldDT) {\n          if (d != null) {\n            if (!(d.getFullYear() != this._oldDT.getFullYear() || d.getMonth() != this._oldDT.getMonth() || d.getDate() != this._oldDT.getDate() || d.getHours() != this._oldDT.getHours() || d.getMinutes() != this._oldDT.getMinutes() || d.getSeconds() != this._oldDT.getSeconds())) {\n              return true;\n            }\n          }\n\n          a.jqx.aria(this, \"aria-valuenow\", this.getDate());\n          a.jqx.aria(this, \"aria-valuetext\", this.getText());\n\n          if (this.getDate() != null) {\n            a.jqx.aria(this, \"aria-label\", \"Current focused date is \" + this.getDate().toLocaleString());\n          } else {\n            a.jqx.aria(this, \"aria-label\", \"Current focused date is Null\");\n          }\n        }\n\n        b.args.oldValue = f;\n        b.args.newValue = b.args.date;\n\n        if (this._oldDT) {\n          b.args.oldValue = this._oldDT;\n        }\n      }\n\n      if (this.selectionMode == \"range\") {\n        b.args.date = this.getRange();\n\n        if (this._oldDT) {\n          var d = b.args.date.from;\n\n          if (c == 9) {\n            var j = false;\n            var i = false;\n            var e = this._oldDT.from;\n\n            if (d != null && e) {\n              if (!(d.getFullYear() != e.getFullYear() || d.getMonth() != e.getMonth() || d.getDate() != e.getDate() || d.getHours() != e.getHours() || d.getMinutes() != e.getMinutes() || d.getSeconds() != e.getSeconds())) {\n                j = true;\n              }\n            }\n\n            var d = b.args.date.to;\n\n            if (d != null) {\n              e = this._oldDT.to;\n\n              if (e) {\n                if (!(d.getFullYear() != e.getFullYear() || d.getMonth() != e.getMonth() || d.getDate() != e.getDate() || d.getHours() != e.getHours() || d.getMinutes() != e.getMinutes() || d.getSeconds() != e.getSeconds())) {\n                  i = true;\n                }\n              }\n            }\n\n            if (j && i) {\n              return true;\n            }\n\n            var j = b.args.date.from;\n\n            if (j == null) {\n              j = \"\";\n            } else {\n              j = j.toString();\n            }\n\n            var i = b.args.date.to;\n\n            if (i == null) {\n              i = \"\";\n            } else {\n              i = i.toString();\n            }\n\n            a.jqx.aria(this, \"aria-valuenow\", j + \"-\" + i);\n            a.jqx.aria(this, \"aria-valuetext\", this.getText());\n\n            if (j && i) {\n              a.jqx.aria(this, \"aria-label\", \"Current focused range is \" + j.toLocaleString() + \"-\" + i.toLocaleString());\n            }\n          }\n        }\n\n        b.args.oldValue = f;\n        b.args.newValue = b.args.date;\n\n        if (this._oldDT) {\n          b.args.oldValue = this._oldDT;\n        }\n      }\n\n      if (this.host.css(\"display\") == \"none\") {\n        return true;\n      }\n\n      if (c != 2 && c != 3 && c != 4 && c != 5 && c != 6) {\n        o = this.host.trigger(b);\n\n        if (b.stopPropagation) {\n          b.stopPropagation();\n        }\n      }\n\n      var h = this;\n\n      if (!k) {\n        if (c == 2 && !this.disabled) {\n          setTimeout(function () {\n            h.isEditing = true;\n\n            if (this.selectionMode == \"range\") {\n              h._selectGroup(-1);\n            } else {\n              h._selectGroup(-1);\n            }\n          }, 25);\n        }\n      }\n\n      if (c == 4) {\n        if (k || this.disabled) {\n          if (l == 8 || l == 46) {\n            this.isEditing = false;\n\n            if (this.allowKeyboardDelete) {\n              if (this.allowNullDate) {\n                this.setDate(null);\n              } else {\n                if (this.selectionMode != \"range\") {\n                  this.setDate(this.getMinDate());\n                } else {\n                  this.setRange(this.getMinDate(), this.getMinDate());\n                }\n              }\n            }\n          }\n\n          if (l == 9) {\n            return true;\n          }\n\n          if (!n.altKey) {\n            return false;\n          }\n        }\n\n        o = this._handleKeyDown(n, l);\n      } else {\n        if (c == 5) {\n          if (l == 9) {\n            return true;\n          }\n\n          if (k || this.disabled) {\n            return false;\n          }\n        } else {\n          if (c == 6) {\n            if (l == 9) {\n              return true;\n            }\n\n            if (k || this.disabled) {\n              return false;\n            }\n\n            o = this._handleKeyPress(n, l);\n          }\n        }\n      }\n\n      return o;\n    },\n    _doLeftKey: function () {\n      if (this.activeEditor != null) {\n        if (!this.isEditing) {\n          this.isEditing = true;\n        }\n\n        var b = this.activeEditor;\n        var d = false;\n        var e = this.editors.indexOf(this.activeEditor);\n        var c = e;\n\n        if (this.enableAbsoluteSelection) {\n          if (e >= 0 && this.activeEditor.positions > 0) {\n            this.activeEditor.positions--;\n\n            this._selectGroup(e);\n\n            return;\n          }\n        }\n\n        while (e > 0) {\n          this.activeEditor = this.editors[--e];\n\n          this._selectGroup(e);\n\n          if (this.items[e].type != \"ReadOnly\") {\n            d = true;\n            break;\n          }\n        }\n\n        if (!d) {\n          if (c >= 0) {\n            this.activeEditor = this.editors[c];\n          }\n        }\n\n        if (this.activeEditor != null && b != this.activeEditor) {\n          if (this.items[e].type != \"ReadOnly\") {\n            if (this.enableAbsoluteSelection) {\n              this.activeEditor.positions = this.activeEditor.maxEditPositions - 1;\n            } else {\n              this.activeEditor.positions = 0;\n            }\n          }\n        }\n\n        if (this.activeEditor != b) {\n          this._validateValue();\n\n          this._updateText();\n\n          this._selectGroup(this.editors.indexOf(this.activeEditor));\n\n          return true;\n        } else {\n          return false;\n        }\n      }\n    },\n    _doRightKey: function () {\n      if (this.activeEditor != null) {\n        if (!this.isEditing) {\n          this.isEditing = true;\n        }\n\n        var b = this.activeEditor;\n        var d = false;\n        var e = this.editors.indexOf(this.activeEditor);\n        var c = e;\n\n        if (this.enableAbsoluteSelection) {\n          if (e >= 0 && this.activeEditor.positions < this.activeEditor.maxEditPositions - 1) {\n            this.activeEditor.positions++;\n\n            this._selectGroup(e);\n\n            return;\n          }\n        }\n\n        while (e <= this.editors.length - 2) {\n          this.activeEditor = this.editors[++e];\n\n          this._selectGroup(e);\n\n          if (this.items[e].type != \"ReadOnly\") {\n            if (this.items[e].type == \"Day\" && this.items[e].format.length > 2) {\n              break;\n            }\n\n            d = true;\n            break;\n          }\n        }\n\n        if (!d) {\n          if (c >= 0) {\n            this.activeEditor = this.editors[c];\n          }\n        }\n\n        if (this.activeEditor != null && this.activeEditor != b) {\n          if (this.items[e].type != \"ReadOnly\") {\n            this.activeEditor.positions = 0;\n          }\n        }\n\n        if (this.activeEditor != b) {\n          this._validateValue();\n\n          this._updateText();\n\n          this._selectGroup(this.editors.indexOf(this.activeEditor));\n\n          return true;\n        } else {\n          return false;\n        }\n      }\n    },\n    _saveSelectedText: function () {\n      var c = this._selection();\n\n      var e = \"\";\n      var d = this.dateTimeInput.val();\n\n      if (c.start > 0 || c.length > 0) {\n        for (var b = c.start; b < c.end; b++) {\n          e += d[b];\n        }\n      }\n\n      if (window.clipboardData) {\n        window.clipboardData.setData(\"Text\", e);\n      }\n\n      return e;\n    },\n    _selectWithAdvancePattern: function () {\n      var f = this.editors.indexOf(this.activeEditor);\n      var g = false;\n\n      if (this.items[f].type != \"ReadOnly\") {\n        g = true;\n      }\n\n      if (!g) {\n        return;\n      }\n\n      var d = this.activeEditor;\n\n      if (d != null) {\n        var e = d.positions == d.maxEditPositions;\n\n        if (e) {\n          this.editorText = \"\";\n          var c = d.value;\n          var b = false;\n\n          switch (this.items[f].type) {\n            case \"FORMAT_AMPM\":\n              if (c < 0) {\n                c = 0;\n              } else {\n                if (c > 1) {\n                  c = 1;\n                }\n              }\n\n              break;\n\n            case \"Character\":\n              break;\n\n            case \"Day\":\n              if (c < 1) {\n                c = 1;\n              } else {\n                if (c > 31) {\n                  c = 31;\n                }\n              }\n\n              break;\n\n            case \"FORMAT_hh\":\n              if (c < 1) {\n                c = 1;\n              } else {\n                if (c > 12) {\n                  c = 12;\n                }\n              }\n\n              break;\n\n            case \"FORMAT_HH\":\n              if (c < 0) {\n                c = 0;\n              } else {\n                if (c > 23) {\n                  c = 23;\n                }\n              }\n\n              break;\n\n            case \"Millisecond\":\n              if (c < 0) {\n                c = 0;\n              } else {\n                if (c > 99) {\n                  c = 99;\n                }\n              }\n\n              break;\n\n            case \"Minute\":\n              if (c < 0) {\n                c = 0;\n              } else {\n                if (c > 59) {\n                  c = 59;\n                }\n              }\n\n              break;\n\n            case \"Month\":\n              if (c < 1) {\n                c = 1;\n              } else {\n                if (c > 12) {\n                  c = 12;\n                }\n              }\n\n              break;\n\n            case \"ReadOnly\":\n              break;\n\n            case \"Second\":\n              if (c < 0) {\n                c = 0;\n              } else {\n                if (c > 59) {\n                  c = 59;\n                }\n              }\n\n              break;\n\n            case \"Year\":\n              if (c < this.minDate.year) {\n                c = this.minDate.year;\n              } else {\n                if (c > this.maxDate.year) {\n                  c = this.maxDate.year;\n                }\n              }\n\n              break;\n          }\n\n          if (d.value != c) {\n            b = true;\n          }\n\n          if (!b) {\n            this.isEditing = false;\n\n            this._validateValue();\n\n            this._updateText();\n\n            this.isEditing = true;\n\n            this._doRightKey();\n\n            return true;\n          }\n\n          return false;\n        }\n      }\n    },\n    _handleKeyPress: function (j, n) {\n      var m = this._selection();\n\n      var b = this;\n      var d = j.ctrlKey || j.metaKey;\n\n      if (d && n == 97 || d && n == 65) {\n        return true;\n      }\n\n      if (n == 8) {\n        if (m.start > 0) {\n          b._setSelectionStart(m.start);\n        }\n\n        return false;\n      }\n\n      if (n == 46) {\n        if (m.start < this.items.length) {\n          b._setSelectionStart(m.start);\n        }\n\n        return false;\n      }\n\n      if (n === 27) {\n        if (this._firstFocusDate) {\n          this.setDate(this._firstFocusDate);\n\n          this._setSelectionStart(0);\n\n          this._selectGroup(-1);\n        }\n\n        return false;\n      }\n\n      if (m.start >= 0) {\n        this.changeType = \"keyboard\";\n        var f = String.fromCharCode(n);\n        var k = parseInt(f);\n\n        if (f == \"p\" || f == \"a\" || f == \"A\" || f == \"P\") {\n          if (this.activeEditor && this.activeEditor.item.type == \"FORMAT_AMPM\") {\n            if (this.activeEditor.value == 0 && (f == \"p\" || f == \"P\")) {\n              this.spinUp();\n            } else {\n              if (this.activeEditor.value == 1 && (f == \"a\" || f == \"A\")) {\n                this.spinDown();\n              }\n            }\n          }\n        }\n\n        if (!isNaN(k)) {\n          if (this.container.css(\"display\") == \"block\") {\n            this.hideCalendar();\n          }\n\n          this.updateValue();\n\n          this._updateText();\n\n          var h = false;\n          var i = this.editors.indexOf(this.activeEditor);\n          var c = null;\n          this.isEditing = true;\n\n          if (i.type != \"ReadOnly\") {\n            c = this.activeEditor;\n          }\n\n          if (c != null && c.positions == 0) {\n            this.editorText = \"\";\n          }\n\n          if (this.activeEditor == null) {\n            this.activeEditor = this.editors[0];\n          }\n\n          if (this.activeEditor == null) {\n            return false;\n          }\n\n          this.activeEditor.insert(f);\n\n          if (c != null && this.editorText.length >= c.maxEditPositions) {\n            this.editorText = \"\";\n          }\n\n          this.editorText += f;\n\n          var o = this._selectWithAdvancePattern();\n\n          if (this.activeEditor.positions == this.activeEditor.maxEditPositions) {\n            var g = this._getLastEditableEditorIndex();\n\n            if (this.editors.indexOf(this.activeEditor) == g && o && this.enableAbsoluteSelection) {\n              this.activeEditor.positions = this.activeEditor.maxEditPositions - 1;\n            } else {\n              this.activeEditor.positions = 0;\n            }\n          }\n\n          h = true;\n          this.updateValue();\n\n          this._updateText();\n\n          this._selectGroup(this.editors.indexOf(this.activeEditor));\n\n          return false;\n        }\n      }\n\n      var l = this._isSpecialKey(n);\n\n      return l;\n    },\n    _getLastEditableEditorIndex: function () {\n      var b = 0;\n      var d = this;\n\n      for (var c = this.items.length - 1; c >= 0; c--) {\n        if (this.items[c].type != \"ReadOnly\") {\n          return c;\n        }\n      }\n\n      return -1;\n    },\n    _handleKeyDown: function (i, o) {\n      var h = this;\n      this.timePopup = false;\n\n      if (o == 84) {\n        this.timePopup = true;\n      }\n\n      if (i.keyCode == 115) {\n        if (h.isOpened()) {\n          h.hideCalendar(\"keyboard\", \"keyboard\");\n          return false;\n        } else {\n          if (!h.isOpened()) {\n            h.showCalendar(\"keyboard\", \"keyboard\");\n            return false;\n          }\n        }\n      }\n\n      if (i.altKey) {\n        if (i.keyCode == 38) {\n          if (h.isOpened()) {\n            if (h.showTimeButton && !h.showCalendarButton) {\n              h.timePopup = true;\n            }\n\n            h.hideCalendar(\"keyboard\", \"keyboard\");\n            return false;\n          }\n        } else {\n          if (i.keyCode == 40) {\n            if (!h.isOpened()) {\n              if (h.showTimeButton && !h.showCalendarButton) {\n                h.timePopup = true;\n              }\n\n              h.showCalendar(\"keyboard\", \"keyboard\");\n              return false;\n            }\n          }\n        }\n      } else {\n        if (i.ctrlKey) {\n          this.timePopup = true;\n\n          if (i.keyCode == 38) {\n            if (h.isOpened()) {\n              h.hideCalendar(\"keyboard\", \"keyboard\");\n              return false;\n            }\n          } else {\n            if (i.keyCode == 40) {\n              if (!h.isOpened()) {\n                h.showCalendar(\"keyboard\", \"keyboard\");\n                return false;\n              }\n            }\n          }\n        }\n      }\n\n      if (h.isOpened()) {\n        if (i.keyCode == 9) {\n          h.hideCalendar(\"selected\", \"keyboard\");\n          return true;\n        }\n\n        return;\n      }\n\n      var m = h._selection();\n\n      var b = i.ctrlKey || i.metaKey;\n\n      if (b && o == 99 || b && o == 67) {\n        h._saveSelectedText(i);\n\n        return true;\n      }\n\n      if (b && o == 122 || b && o == 90) {\n        return false;\n      }\n\n      if (b && o == 118 || b && o == 86 || i.shiftKey && o == 45) {\n        var l = h.val();\n        var j = this;\n        var c = a('<textarea style=\"position: absolute; left: -1000px; top: -1000px;\"/>');\n        a(\"body\").append(c);\n        c.select();\n        setTimeout(function () {\n          var e = c.val();\n          j.setDate(e);\n          c.remove();\n        }, 100);\n        return true;\n      }\n\n      if (o == 8 || o == 46) {\n        if (!i.altKey && !b && o == 46) {\n          h.isEditing = false;\n\n          if (h.allowKeyboardDelete) {\n            h.changeType = \"keyboard\";\n\n            if (h.allowNullDate) {\n              h.setDate(null);\n            } else {\n              if (h.selectionMode != \"range\") {\n                h.setDate(h.getMinDate());\n              } else {\n                h.setRange(h.getMinDate(), h.getMinDate());\n              }\n            }\n          }\n        } else {\n          if (h.activeEditor != null) {\n            var g = h.editors.indexOf(h.activeEditor);\n\n            if (h.activeEditor.positions >= 0) {\n              var f = h._format(Number(h.activeEditor.value), \"d\" + h.activeEditor.maxEditPositions, h.culture);\n\n              var d = f;\n              d = d.substring(0, h.activeEditor.positions) + \"0\" + d.substring(h.activeEditor.positions + 1);\n\n              if (parseInt(d) < h.activeEditor.minValue) {\n                d = h._format(Number(h.activeEditor.minValue), \"d\" + h.activeEditor.maxEditPositions, h.culture);\n              }\n\n              if (h.enableAbsoluteSelection) {\n                h.activeEditor.value = d;\n              } else {\n                h.activeEditor.value = h.activeEditor.minValue;\n              }\n\n              h._validateValue();\n\n              h._updateText();\n\n              h.changeType = \"keyboard\";\n\n              if (o == 8) {\n                var n = this;\n\n                if (h.enableAbsoluteSelection && h.activeEditor.positions > 0) {\n                  setTimeout(function () {\n                    n.activeEditor.positions = n.activeEditor.positions - 1;\n\n                    n._selectGroup(g);\n                  }, 10);\n                } else {\n                  setTimeout(function () {\n                    n._doLeftKey();\n                  }, 10);\n                }\n              } else {\n                h._selectGroup(g);\n              }\n            } else {\n              h._doLeftKey();\n            }\n          }\n        }\n\n        return false;\n      }\n\n      if (o == 38) {\n        this.spinUp();\n        h.changeType = \"keyboard\";\n        return false;\n      } else {\n        if (o == 40) {\n          this.spinDown();\n          h.changeType = \"keyboard\";\n          return false;\n        }\n      }\n\n      if (o == 9) {\n        if (h.value == null) {\n          return true;\n        }\n\n        if (i.shiftKey) {\n          var p = this._doLeftKey();\n        } else {\n          var p = this._doRightKey();\n        }\n\n        if (!p) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      if (o == 37) {\n        if (this._editor) {\n          var p = this._doLeftKey();\n\n          if (!p) {\n            this.isEditing = false;\n\n            this._validateValue();\n          }\n\n          return !p;\n        } else {\n          var p = this._doLeftKey();\n\n          return false;\n        }\n      } else {\n        if (o == 39 || o == 191) {\n          if (this._editor) {\n            var p = this._doRightKey();\n\n            if (!p) {\n              this.isEditing = false;\n\n              this._validateValue();\n            }\n\n            return !p;\n          } else {\n            var p = this._doRightKey();\n\n            return false;\n          }\n        }\n      }\n\n      var k = this._isSpecialKey(o);\n\n      if (this.value == null && (o >= 48 && o <= 57 || o >= 96 && o <= 105)) {\n        h.changeType = \"keyboard\";\n\n        if (new Date() >= this.getMinDate() && new Date() <= this.getMaxDate()) {\n          this.setDate(new Date());\n        } else {\n          this.setDate(this.getMaxDate());\n        }\n      }\n\n      if (!a.jqx.browser.mozilla) {\n        return true;\n      }\n\n      if (a.jqx.browser.mozilla && a.jqx.browser.version > 24) {\n        return true;\n      }\n\n      return k;\n    },\n    _isSpecialKey: function (b) {\n      if (b != 8 && b != 9 && b != 13 && b != 35 && b != 36 && b != 37 && b != 39 && b != 27 && b != 46) {\n        return false;\n      }\n\n      return true;\n    },\n    _selection: function () {\n      if (\"selectionStart\" in this.dateTimeInput[0]) {\n        var f = this.dateTimeInput[0];\n        var g = f.selectionEnd - f.selectionStart;\n        return {\n          start: f.selectionStart,\n          end: f.selectionEnd,\n          length: g,\n          text: f.value\n        };\n      } else {\n        var c = document.selection.createRange();\n\n        if (c == null) {\n          return {\n            start: 0,\n            end: f.value.length,\n            length: 0\n          };\n        }\n\n        var b = this.dateTimeInput[0].createTextRange();\n        var d = b.duplicate();\n        b.moveToBookmark(c.getBookmark());\n        d.setEndPoint(\"EndToStart\", b);\n        var g = c.text.length;\n        return {\n          start: d.text.length,\n          end: d.text.length + c.text.length,\n          length: g,\n          text: c.text\n        };\n      }\n    },\n    _selectGroup: function (k, m) {\n      if (this.host.css(\"display\") == \"none\") {\n        return;\n      }\n\n      if (this.readonly) {\n        return;\n      }\n\n      if (!m) {\n        var m = this._selection();\n      }\n\n      var f = \"\";\n      var b = \"\";\n      var c = null;\n\n      for (var d = 0; d < this.items.length; d++) {\n        b = this.items[d].dateParser(this.value, this);\n\n        if (this.isEditing && this.items[d].type != \"ReadOnly\") {\n          var j = this.items[d].type == \"Day\" && this.items[d].format.length > 2;\n\n          if (!j && this.items[d].type != \"FORMAT_AMPM\") {\n            b = this.items[d].dateParserInEditMode(new Number(this.editors[d].value), \"d\" + this.editors[d].maxEditPositions, this);\n\n            while (b.length < this.editors[d].maxEditPositions) {\n              b = \"0\" + b;\n            }\n          }\n        }\n\n        f += b;\n\n        if (this.items[d].type == \"ReadOnly\") {\n          continue;\n        }\n\n        if (this.items[d].type == \"Day\" && this.items[d].format.length > 2) {\n          continue;\n        }\n\n        if (k != undefined && k != -1) {\n          if (d >= k) {\n            var l = f.length - b.length;\n            var e = b.length;\n\n            if (this.enableAbsoluteSelection) {\n              if (!isNaN(parseInt(b)) && this.isEditing && k != -1) {\n                e = 1;\n                l += this.editors[d].positions;\n              }\n            }\n\n            if (l == this.dateTimeInput.val().length) {\n              l--;\n            }\n\n            this._setSelection(l, l + e);\n\n            c = this.editors[d];\n            this.activeEditor = c;\n            break;\n          }\n        } else {\n          if (f.length >= m.start) {\n            c = this.editors[d];\n            this.activeEditor = c;\n            var l = f.length - b.length;\n            var e = 1;\n\n            if (this.enableAbsoluteSelection) {\n              if (!isNaN(parseInt(b)) && this.isEditing && k != -1) {\n                e = 1;\n                l += this.editors[d].positions;\n              }\n            } else {\n              e = b.length;\n            }\n\n            this._setSelection(l, l + e);\n\n            break;\n          }\n        }\n      }\n\n      if (d < this.items.length && k == -1) {\n        if (this.items[d].type != \"ReadOnly\") {\n          this.activeEditor.positions = 0;\n        }\n      }\n\n      var h = this._selection();\n\n      if (h.length == 0) {\n        if (h.start > 0) {\n          var g = this._getLastEditableEditorIndex();\n\n          if (g >= 0) {}\n        }\n      }\n    },\n    _getLastEditableEditorIndex: function () {\n      var c = -1;\n\n      for (var b = 0; b < this.editors.length; b++) {\n        if (this.items[b].type == \"ReadOnly\") {\n          continue;\n        }\n\n        if (this.items[b].type == \"Day\" && this.items[b].format.length > 2) {\n          continue;\n        }\n\n        c = b;\n      }\n\n      return c;\n    },\n    _setSelection: function (e, b) {\n      try {\n        if (\"selectionStart\" in this.dateTimeInput[0]) {\n          this.dateTimeInput[0].setSelectionRange(e, b);\n        } else {\n          var c = this.dateTimeInput[0].createTextRange();\n          c.collapse(true);\n          c.moveEnd(\"character\", b);\n          c.moveStart(\"character\", e);\n          c.select();\n        }\n      } catch (d) {}\n    },\n    _setSelectionStart: function (b) {\n      this._setSelection(b, b);\n    },\n    destroy: function () {\n      a.jqx.utilities.resize(this.host, null, true);\n      this.host.removeClass(\"jqx-rc-all\");\n\n      if (this.timePopupElement) {\n        this.timePopupElement.remove();\n      }\n\n      this._calendar.destroy();\n\n      this.container.remove();\n\n      this._removeHandlers();\n\n      this.dateTimeInput.remove();\n      this.host.remove();\n    },\n    refreshValue: function () {\n      this._refreshValue();\n    },\n    refresh: function (b) {\n      if (b != true) {\n        this._setSize();\n\n        this._arrange();\n      }\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n      this.refresh();\n    },\n    _setOption: function (b, c, d) {\n      if (b === \"value\") {\n        if (this.selectionMode != \"range\") {\n          this._oldDT = null;\n        } else {\n          this._oldDT = null;\n        }\n\n        this.value = c;\n\n        this._refreshValue();\n\n        this._raiseEvent(9, {\n          type: null\n        });\n      }\n\n      if (b == \"maxDate\") {\n        this._calendar.maxDate = c;\n\n        this._raiseEvent(9, {\n          type: null\n        });\n      }\n\n      if (b == \"minDate\") {\n        this._calendar.minDate = c;\n\n        this._raiseEvent(9, {\n          type: null\n        });\n      }\n\n      if (b == \"showCalendarButton\") {\n        if (c) {\n          this.calendarButton.css(\"display\", \"block\");\n        } else {\n          this.calendarButton.css(\"display\", \"none\");\n        }\n      }\n\n      if (b == \"disabled\") {\n        this.dateTimeInput.attr(\"disabled\", c);\n      }\n\n      if (b == \"readonly\") {\n        this.readonly = c;\n        this.dateTimeInput.css(\"readonly\", c);\n      }\n\n      if (b == \"textAlign\") {\n        this.dateTimeInput.css(\"text-align\", c);\n        this.textAlign = c;\n      }\n\n      if (b == \"width\") {\n        this.width = c;\n        this.width = parseInt(this.width);\n\n        this._arrange();\n      } else {\n        if (b == \"height\") {\n          this.height = c;\n          this.height = parseInt(this.height);\n\n          this._arrange();\n        }\n      }\n    },\n    _updateHint: function () {\n      var b = this;\n\n      if (!b.hint) {\n        return;\n      }\n\n      if (b.isMaterialized()) {\n        setTimeout(function () {\n          if (b.dateTimeInput[0].value.length === 0) {\n            b.element.removeAttribute(\"hint\");\n            b.label[0].innerHTML = b.placeHolder;\n          } else {\n            b.label[0].innerHTML = \"\";\n\n            if (b.hint) {\n              b.element.setAttribute(\"hint\", true);\n            }\n          }\n        });\n      }\n    },\n    _refreshValue: function () {\n      this._updateEditorsValue();\n\n      this.updateValue();\n\n      this._validateValue();\n\n      this._updateText();\n\n      this._updateHint();\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxDateTimeInput.DateTimeFormatItem = {};\n  a.extend(a.jqx._jqxDateTimeInput.DateTimeFormatItem, {\n    _create: function (d, c, b) {\n      this.format = d;\n      this.type = c;\n      this.culture = b;\n      return this;\n    },\n    _itemValue: function () {\n      switch (this.format.length) {\n        case 1:\n          return 9;\n\n        case 2:\n          return 99;\n\n        case 3:\n        default:\n          return 999;\n      }\n    },\n    _maximumValue: function () {\n      switch (this.format.length) {\n        case 1:\n          return 9;\n\n        case 2:\n          return 99;\n\n        case 3:\n        default:\n          return 999;\n      }\n    },\n    dateParser: function (b, c) {\n      if (b == null) {\n        return \"\";\n      }\n\n      var d = c._format(b.dateTime, this.format.length == 1 ? \"%\" + this.format : this.format, this.culture);\n\n      return d;\n    },\n    dateParserInEditMode: function (e, d, b) {\n      if (e == null) {\n        return \"\";\n      }\n\n      var c = b._format(e.toString(), d.length == 1 ? \"%\" + d : d, this.culture);\n\n      return c;\n    },\n    getDateTimeEditorByItemType: function (m, e) {\n      switch (this.type) {\n        case \"FORMAT_AMPM\":\n          var f = a.jqx._jqxDateTimeInput.AmPmEditor._createAmPmEditor(this.format, m.hour / 12, e.localization.calendar.AM[0], e.localization.calendar.PM[0], this, e);\n\n          var d = a.extend({}, f);\n          return d;\n\n        case \"Character\":\n          return null;\n\n        case \"Day\":\n          var j = m.year;\n          var r = m.month;\n          var q;\n\n          if (this.format.length == 3) {\n            q = e.localization.calendar.days.namesAbbr;\n          } else {\n            if (this.format.length > 3) {\n              q = e.localization.calendar.days.names;\n            } else {\n              q = null;\n            }\n          }\n\n          var s = m.day;\n\n          if (q != null) {\n            s = m.dayOfWeek + 1;\n          }\n\n          var g = a.jqx._jqxDateTimeInput.DateEditor._createDayEditor(m, m.day, 1, m._daysInMonth(j, r), this.format.length == 1 ? 1 : 2, 2, q, this, e);\n\n          var d = a.extend({}, g);\n          return d;\n\n        case \"FORMAT_hh\":\n          var c = m.hour % 12;\n\n          if (c == 0) {\n            c = 12;\n          }\n\n          var p = a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(c, 1, 12, this.format.length == 1 ? 1 : 2, 2, this, e);\n\n          var d = a.extend({}, p);\n          return d;\n\n        case \"FORMAT_HH\":\n          var h = a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(m.hour, 0, 23, this.format.length == 1 ? 1 : 2, 2, this, e);\n\n          var d = a.extend({}, h);\n          return d;\n\n        case \"Millisecond\":\n          var k = a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(m.millisecond / this._itemValue(), 0, this._maximumValue(), this.format.length, this.format.length, this, e);\n\n          var d = a.extend({}, k);\n          return d;\n\n        case \"Minute\":\n          var n = a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(m.minute, 0, 59, this.format.length == 1 ? 1 : 2, 2, this, e);\n\n          var d = a.extend({}, n);\n          return d;\n\n        case \"Month\":\n          var i;\n\n          if (this.format.length == 3) {\n            i = e.localization.calendar.months.namesAbbr;\n          } else {\n            if (this.format.length > 3) {\n              i = e.localization.calendar.months.names;\n            } else {\n              i = null;\n            }\n          }\n\n          var l = a.jqx._jqxDateTimeInput.DateEditor._createMonthEditor(m.month, this.format.length == 2 ? 2 : 1, i, this, e);\n\n          var d = a.extend({}, l);\n          return d;\n\n        case \"ReadOnly\":\n          return a.jqx._jqxDateTimeInput.DisabledEditor._create(this.format.length, m.day, this, e);\n\n        case \"Second\":\n          var b = a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(m.second, 0, 59, this.format.length == 1 ? 1 : 2, 2, this, e);\n\n          var d = a.extend({}, b);\n          return d;\n\n        case \"Year\":\n          var o = a.jqx._jqxDateTimeInput.DateEditor._createYearEditor(m.year, 4, this, e);\n\n          var d = a.extend({}, o);\n          return d;\n      }\n\n      return null;\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxDateTimeInput.DateEditor = a.extend(a.jqx._jqxDateTimeInput.DateEditor, {\n    formatValueLength: 0,\n    handleYears: false,\n    handleDays: false,\n    handleMonths: false,\n    positions: 0,\n    value: 0,\n    minEditPositions: 0,\n    maxEditPositions: 0,\n    minValue: 0,\n    maxValue: 0,\n    item: null,\n    dateTimeFormatInfo: null,\n    days: null,\n    dateTimeMonths: null,\n    lastDayInput: null,\n    minPositions: function () {\n      if (this.handleYears) {\n        if (this.formatValueLength == 4) {\n          if (this.positions <= 1) {\n            return 1;\n          } else {\n            if (this.positions >= 4) {\n              return 4;\n            }\n          }\n\n          return this.positions;\n        } else {\n          return this.minEditPositions;\n        }\n      }\n\n      return this.minEditPositions;\n    },\n    initializeFields: function (e, f, b, d, c) {\n      this.minValue = e;\n      this.maxValue = f;\n      this.minEditPositions = b;\n      this.maxEditPositions = d;\n      this.updateActiveEditor(e);\n      this.item = c;\n    },\n    _createYearEditor: function (e, d, c, b) {\n      a.jqx._jqxDateTimeInput.DateEditor = a.extend(true, {}, this);\n      this.initializeFields(d <= 4 ? 0 : 0, d < 4 ? 99 : 9999, d == 2 ? 2 : 1, d > 3 ? 4 : 2, c);\n      this.initializeYearEditor(e, d, c.culture);\n      this.handleYears = true;\n      this.that = b;\n      return this;\n    },\n    initializeYearEditor: function (d, c, e) {\n      this.formatValueLength = c;\n      this.dateTimeFormatInfo = e;\n      var b = d;\n      b = Math.min(b, 9999);\n      b = Math.max(b, 1);\n      b = this.formatValueLength < 4 ? b % 100 : b;\n      this.updateActiveEditor(b);\n      this.value = b;\n    },\n    updateActiveEditor: function (b) {\n      this.value = b;\n      this.positions = 0;\n    },\n    _createDayEditor: function (b, i, h, e, c, f, g, j, d) {\n      a.jqx._jqxDateTimeInput.DateEditor = a.extend(true, {}, this);\n      this.initializeFields(h, e, 1, f, j);\n      this.currentValue = b;\n      this.value = i;\n      this.days = g;\n      this.handleDays = true;\n      this.that = d;\n      return this;\n    },\n    getDayOfWeek: function (b) {\n      if (typeof this.currentValue == a.jqx._jqxDateTimeInput.DateTime) {\n        this.currentValue.dayOfWeek();\n      }\n\n      return b;\n    },\n    defaultTextValue: function () {\n      var d = this.value;\n      var e = this.minEditPositions;\n      var b = e;\n\n      var c = this.that._format(this.value, \"d\" + b, \"\");\n\n      return c;\n    },\n    textValue: function () {\n      if (this.handleDays) {\n        if (this.days == null) {\n          return this.defaultTextValue();\n        } else {\n          var b = this.value % 7 + 1;\n          b = this.getDayOfWeek(b);\n          return this.days[b];\n        }\n      } else {\n        if (this.handleMonths) {\n          if (this.dateTimeMonths == null || this.value < 1 || this.value > 12) {\n            return this.defaultTextValue();\n          } else {\n            return this.dateTimeMonths[this.value - 1];\n          }\n        }\n      }\n\n      return this.defaultTextValue();\n    },\n    defaultInsertString: function (c) {\n      if (c == null) {\n        return this.deleteValue();\n      }\n\n      if (c.length == 0) {\n        return this.deleteValue();\n      }\n\n      var g = c.substring(0, 1);\n\n      if (isNaN(g)) {\n        return;\n      }\n\n      var e = true;\n      var d;\n      var b = 1;\n\n      var f = this.that._format(Number(this.value), \"d\" + this.maxEditPositions, this.culture);\n\n      d = f;\n\n      if (this.positions >= this.maxEditPositions) {\n        this.positions = 0;\n      }\n\n      d = d.substring(0, this.positions) + g + d.substring(this.positions + 1);\n      d = this.setValueByString(d, b);\n      return true;\n    },\n    setValueByString: function (d, b) {\n      d = this.fixValueString(d);\n      var c = new Number(d);\n      this.value = c;\n      this.positions += b;\n      return d;\n    },\n    fixValueString: function (b) {\n      if (b.length > this.maxEditPositions) {\n        b = b.substring(b.length - this.maxEditPositions);\n      }\n\n      return b;\n    },\n    initializeValueString: function (c) {\n      var b;\n      b = \"\";\n\n      if (this.hasDigits()) {\n        b = c;\n      }\n\n      return b;\n    },\n    deleteValue: function () {\n      if (this.value == this.minValue && this.hasDigits() == false) {\n        return false;\n      }\n\n      this.updateActiveEditor(this.minValue);\n      return true;\n    },\n    hasDigits: function () {\n      return this.positions > 0;\n    },\n    insert: function (b) {\n      if (this.handleDays) {\n        if (this.days != null) {\n          var c = false;\n          c = this.insertLongString(b, c);\n\n          if (c) {\n            return c;\n          }\n\n          c = this.insertShortString(b, c);\n\n          if (c) {\n            return c;\n          }\n        }\n\n        if (this.value == 1 && this.lastDayInput != null && this.lastDayInput.toString().length > 0 && this.lastDayInput.toString() == \"0\") {\n          this.value = 0;\n        }\n\n        this.lastDayInput = b;\n        return this.defaultInsertString(b);\n      } else {\n        if (this.handleMonths) {\n          if (this.dateTimeMonths != null) {\n            var c = false;\n            c = this.insertLongString2(b, c);\n\n            if (c) {\n              return c;\n            }\n\n            c = this.insertShortString2(b, c);\n\n            if (c) {\n              return c;\n            }\n          }\n        }\n      }\n\n      return this.defaultInsertString(b);\n    },\n    insertShortString: function (d, f) {\n      if (d.length == 1) {\n        for (var e = 0; e < 6; ++e) {\n          var c = (this.value + e) % 7 + 1;\n          var b = this.days[c - 1];\n\n          if (b.substring(0, 1) == d) {\n            this.updateActiveEditor(c);\n            f = true;\n            return f;\n          }\n        }\n      }\n\n      return f;\n    },\n    insertLongString: function (c, e) {\n      if (c.length > 0) {\n        for (var d = 0; d < 6; ++d) {\n          var b = (this.value + d) % 7 + 1;\n\n          if (this.days[b - 1] == c) {\n            this.updateActiveEditor(b);\n            e = true;\n            return e;\n          }\n        }\n      }\n\n      return e;\n    },\n    _createMonthEditor: function (d, c, b, f, e) {\n      a.jqx._jqxDateTimeInput.DateEditor = a.extend(true, {}, this);\n      this.initializeFields(1, 12, c, 2, f);\n      this.dateTimeMonths = b;\n      this.value = d;\n\n      if (this.dateTimeMonths != null && this.dateTimeMonths[12] != null && this.dateTimeMonths[12].length > 0) {\n        this.dateTimeMonths = null;\n      }\n\n      this.handleMonths = true;\n      this.that = e;\n      return this;\n    },\n    insertLongString2: function (b, d) {\n      if (b.length > 0) {\n        for (var c = 0; c < 11; ++c) {\n          var e = (this.value + c) % 12 + 1;\n\n          if (this.dateTimeMonths[e - 1] == b) {\n            this.updateActiveEditor(e);\n            d = true;\n            return d;\n          }\n        }\n      }\n\n      return d;\n    },\n    insertShortString2: function (c, e) {\n      if (c.length == 1) {\n        for (var d = 0; d < 11; ++d) {\n          var f = (this.value + d) % 12 + 1;\n          var b = this.dateTimeMonths[f - 1];\n\n          if (b.substring(0, 1) == c) {\n            this.updateActiveEditor(f);\n            e = true;\n            return e;\n          }\n        }\n      }\n\n      return e;\n    },\n    correctMaximumValue: function (b) {\n      if (b > this.maxValue) {\n        b = this.minValue;\n      }\n\n      return b;\n    },\n    correctMinimumValue: function (b) {\n      if (b < this.minValue) {\n        b = this.maxValue;\n      }\n\n      return b;\n    },\n    increaseValue: function (e) {\n      var c = this.that._format(Number(this.value), \"d\" + this.maxEditPositions, this.culture);\n\n      var f = c.toString()[this.positions];\n      f = parseInt(f) + 1;\n\n      if (f > 9) {\n        f = 0;\n      }\n\n      if (!e) {\n        var b = this.value + 1;\n        b = this.correctMaximumValue(b);\n        this.updateActiveEditor(b);\n        return true;\n      }\n\n      var d = c.substring(0, this.positions) + f + c.substring(this.positions + 1);\n\n      if (d != this.value || this.hasDigits()) {\n        this.updateActiveEditor(d);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    decreaseValue: function (e) {\n      var c = this.that._format(Number(this.value), \"d\" + this.maxEditPositions, this.culture);\n\n      var f = c.toString()[this.positions];\n      f = parseInt(f) - 1;\n\n      if (f < 0) {\n        f = 9;\n      }\n\n      if (!e) {\n        var b = this.value - 1;\n        b = this.correctMinimumValue(b);\n        this.updateActiveEditor(b);\n        return true;\n      }\n\n      var d = c.substring(0, this.positions) + f + c.substring(this.positions + 1);\n\n      if (d != this.value || this.hasDigits()) {\n        this.updateActiveEditor(d);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getDateTimeItem: function () {\n      return this.item;\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxDateTimeInput.NumberEditor = {};\n  a.extend(a.jqx._jqxDateTimeInput.NumberEditor, {\n    formatValueLength: 0,\n    positions: 0,\n    value: 0,\n    minEditPositions: 0,\n    maxEditPositions: 0,\n    minValue: 0,\n    maxValue: 0,\n    item: null,\n    minPositions: function () {\n      if (this.handleYears) {\n        if (this.formatValueLength == 4) {\n          if (this.positions <= 1) {\n            return 1;\n          } else {\n            if (this.positions >= 4) {\n              return 4;\n            }\n          }\n\n          return this.positions;\n        } else {\n          return this.minEditPositions;\n        }\n      }\n\n      return this.minEditPositions;\n    },\n    _createNumberEditor: function (g, f, h, b, e, d, c) {\n      a.jqx._jqxDateTimeInput.NumberEditor = a.extend(true, {}, this);\n      this.initializeFields(f, h, b, e, d);\n      this.that = c;\n      return this;\n    },\n    initializeFields: function (e, f, b, d, c) {\n      this.minValue = e;\n      this.maxValue = f;\n      this.minEditPositions = b;\n      this.maxEditPositions = d;\n      this.updateActiveEditor(e);\n      this.item = c;\n    },\n    updateActiveEditor: function (b) {\n      this.value = b;\n      this.positions = 0;\n    },\n    getDayOfWeek: function (b) {\n      if (typeof this.currentValue == a.jqx._jqxDateTimeInput.DateTime) {\n        this.currentValue.dayOfWeek();\n      }\n\n      return b;\n    },\n    textValue: function () {\n      var d = this.value;\n      var e = this.minEditPositions;\n      var b = e;\n\n      var c = this.that._format(this.value, \"d\" + b, \"\");\n\n      return c;\n    },\n    insert: function (c) {\n      if (c == null) {\n        return this.deleteValue();\n      }\n\n      if (c.length == 0) {\n        return this.deleteValue();\n      }\n\n      var g = c.substring(0, 1);\n\n      if (isNaN(g)) {\n        return;\n      }\n\n      var e = true;\n      var d;\n      var b = 1;\n\n      var f = this.that._format(Number(this.value), \"d\" + this.maxEditPositions, this.culture);\n\n      d = f;\n\n      if (this.positions >= this.maxEditPositions) {\n        this.positions = 0;\n      }\n\n      d = d.substring(0, this.positions) + g + d.substring(this.positions + 1);\n      d = this.setValueByString(d, b);\n      return true;\n    },\n    setValueByString: function (d, b) {\n      d = this.fixValueString(d);\n      var c = new Number(d);\n      this.value = c;\n      this.positions += b;\n      return d;\n    },\n    fixValueString: function (b) {\n      if (b.length > this.maxEditPositions) {\n        b = b.substring(b.length - this.maxEditPositions);\n      }\n\n      return b;\n    },\n    initializeValueString: function (c) {\n      var b;\n      b = \"\";\n\n      if (this.hasDigits()) {\n        b = c;\n      }\n\n      return b;\n    },\n    deleteValue: function () {\n      if (this.value == this.minValue && this.hasDigits() == false) {\n        return false;\n      }\n\n      this.updateActiveEditor(this.minValue);\n      return true;\n    },\n    hasDigits: function () {\n      return this.positions > 0;\n    },\n    correctMaximumValue: function (b) {\n      if (b > this.maxValue) {\n        b = this.minValue;\n      }\n\n      return b;\n    },\n    correctMinimumValue: function (b) {\n      if (b < this.minValue) {\n        b = this.maxValue;\n      }\n\n      return b;\n    },\n    increaseValue: function (e) {\n      var c = this.that._format(Number(this.value), \"d\" + this.maxEditPositions, this.culture);\n\n      var f = c.toString()[this.positions];\n      f = parseInt(f) + 1;\n\n      if (f > 9) {\n        f = 0;\n      }\n\n      if (!e) {\n        var b = this.value + 1;\n        b = this.correctMaximumValue(b);\n        this.updateActiveEditor(b);\n        return true;\n      }\n\n      var d = c.substring(0, this.positions) + f + c.substring(this.positions + 1);\n\n      if (d != this.value || this.hasDigits()) {\n        this.updateActiveEditor(d);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    decreaseValue: function (e) {\n      var c = this.that._format(Number(this.value), \"d\" + this.maxEditPositions, this.culture);\n\n      var f = c.toString()[this.positions];\n      f = parseInt(f) - 1;\n\n      if (f < 0) {\n        f = 9;\n      }\n\n      if (!e) {\n        var b = this.value - 1;\n        b = this.correctMinimumValue(b);\n        this.updateActiveEditor(b);\n        return true;\n      }\n\n      var d = c.substring(0, this.positions) + f + c.substring(this.positions + 1);\n\n      if (d != this.value || this.hasDigits()) {\n        this.updateActiveEditor(d);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getDateTimeItem: function () {\n      return this.item;\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxDateTimeInput.DisabledEditor = {};\n  a.extend(a.jqx._jqxDateTimeInput.DisabledEditor, {\n    _create: function (g, c, f, b, e, d) {\n      this.format = g;\n      this.value = -1;\n      this.item = e;\n      this.that = d;\n      return this;\n    },\n    textValue: function () {\n      return \"\";\n    },\n    insert: function (b) {\n      return false;\n    },\n    deleteValue: function () {\n      return false;\n    },\n    increaseValue: function () {\n      return false;\n    },\n    decreaseValue: function () {\n      return false;\n    },\n    getDateTimeItem: function () {\n      return this.item;\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxDateTimeInput.AmPmEditor = {};\n  a.extend(a.jqx._jqxDateTimeInput.AmPmEditor, {\n    _createAmPmEditor: function (g, c, f, b, e, d) {\n      this.format = g;\n      this.value = c;\n      this.minValue = 0;\n      this.amString = f;\n      this.pmString = b;\n      this.item = e;\n      this.that = d;\n\n      if (f == b) {\n        this.amString = \"<\" + f;\n        this.pmString = \">\" + b;\n      }\n\n      return this;\n    },\n    textValue: function () {\n      var b = this.amString;\n\n      if (this.value != 0) {\n        b = this.pmString;\n      }\n\n      if (this.format.length == 1 && b.length > 1) {\n        b = b.substring(0, 1);\n      }\n\n      return b;\n    },\n    insert: function (f) {\n      var d = f.toString();\n\n      if (d.Length == 0) {\n        return this.deleteValue();\n      }\n\n      var c = false;\n\n      if (this.amString.Length > 0 && this.pmString.Length > 0) {\n        var g = this.amString[0];\n        var b = d[0];\n        var e = this.pmString[0];\n\n        if (g.toString() == b.toString()) {\n          this.value = 0;\n          c = true;\n        } else {\n          if (e.toString() == b.toString()) {\n            this.value = 1;\n            c = true;\n          }\n        }\n      } else {\n        if (this.pmString.Length > 0) {\n          this.value = 1;\n          c = true;\n        } else {\n          if (this.amString.Length > 0) {\n            this.value = 0;\n            c = true;\n          }\n        }\n      }\n\n      return c;\n    },\n    deleteValue: function () {\n      var b = true;\n\n      if (this.amString.Length == 0 && this.pmString.Length != 0) {\n        if (this.value == 0) {\n          return false;\n        }\n\n        this.value = 0;\n      } else {\n        if (this.value == 1) {\n          return false;\n        }\n\n        this.value = 1;\n      }\n\n      return b;\n    },\n    increaseValue: function () {\n      this.value = 1 - this.value;\n      return true;\n    },\n    decreaseValue: function () {\n      this.increaseValue();\n      return true;\n    },\n    getDateTimeItem: function () {\n      return this.item;\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxDateTimeInput.getDateTime = function (c) {\n    var b = {\n      dateTime: new Date(c),\n      daysPer4Years: 1461,\n      daysPerYear: 365,\n      daysToMonth365: {\n        0: 0,\n        1: 31,\n        2: 59,\n        3: 90,\n        4: 120,\n        5: 151,\n        6: 181,\n        7: 212,\n        8: 243,\n        9: 273,\n        10: 304,\n        11: 334,\n        12: 365\n      },\n      daysToMonth366: {\n        0: 0,\n        1: 31,\n        2: 60,\n        3: 91,\n        4: 121,\n        5: 152,\n        6: 182,\n        7: 213,\n        8: 244,\n        9: 274,\n        10: 305,\n        11: 335,\n        12: 366\n      },\n      maxValue: 3155378976000000000,\n      millisPerDay: 86400000,\n      millisPerHour: 3600000,\n      millisPerMinute: 60000,\n      millisPerSecond: 1000,\n      minTicks: 0,\n      minValue: 0,\n      ticksPerDay: 864000000000,\n      ticksPerHour: 36000000000,\n      ticksPerMillisecond: 10000,\n      ticksPerMinute: 600000000,\n      ticksPerSecond: 10000000,\n      hour: c.getHours(),\n      minute: c.getMinutes(),\n      day: c.getDate(),\n      second: c.getSeconds(),\n      month: 1 + c.getMonth(),\n      year: c.getFullYear(),\n      millisecond: c.getMilliseconds(),\n      dayOfWeek: c.getDay(),\n      isWeekend: function (d) {\n        if (d == undefined || d == null) {\n          d = this.dateTime;\n        }\n\n        var e = d.getDay() % 6 == 0;\n        return e;\n      },\n      dayOfYear: function (e) {\n        if (e == undefined || e == null) {\n          e = this.dateTime;\n        }\n\n        var d = new Date(e.getFullYear(), 0, 1);\n        return Math.ceil((e - d) / 86400000);\n      },\n      _setDay: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setDate(d);\n        this.day = this.dateTime.getDate();\n      },\n      _setMonth: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setMonth(d - 1);\n        this.month = 1 + this.dateTime.getMonth();\n      },\n      _setYear: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setFullYear(d);\n        this.year = this.dateTime.getFullYear();\n      },\n      _setHours: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setHours(d);\n        this.hour = this.dateTime.getHours();\n      },\n      _setMinutes: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setMinutes(d);\n        this.minute = this.dateTime.getMinutes();\n      },\n      _setSeconds: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setSeconds(d);\n        this.second = this.dateTime.getSeconds();\n      },\n      _setMilliseconds: function (d) {\n        if (d == undefined || d == null) {\n          d = 0;\n        }\n\n        this.dateTime.setMilliseconds(d);\n        this.millisecond = this.dateTime.getMilliseconds();\n      },\n      _addDays: function (f) {\n        var d = this.dateTime;\n        var e = d.getDate();\n        d.setDate(d.getDate() + f);\n\n        if (e === d.getDate()) {\n          d.setHours(d.getHours() + d.getTimezoneOffset() / 60);\n        }\n\n        return d;\n      },\n      _addWeeks: function (e) {\n        var d = this.dateTime;\n        d.setDate(d.getDate() + 7 * e);\n        return d;\n      },\n      _addMonths: function (e) {\n        var d = this.dateTime;\n        d.setMonth(d.getMonth() + e);\n        return d;\n      },\n      _addYears: function (e) {\n        var d = this.dateTime;\n        d.setFullYear(d.getFullYear() + e);\n        return d;\n      },\n      _addHours: function (e) {\n        var d = this.dateTime;\n        d.setHours(d.getHours() + e);\n        return d;\n      },\n      _addMinutes: function (e) {\n        var d = this.dateTime;\n        d.setMinutes(d.getMinutes() + e);\n        return d;\n      },\n      _addSeconds: function (e) {\n        var d = this.dateTime;\n        d.setSeconds(d.getSeconds() + e);\n        return d;\n      },\n      _addMilliseconds: function (e) {\n        var d = this.dateTime;\n        d.setMilliseconds(d.getMilliseconds() + e);\n        return d;\n      },\n      _isLeapYear: function (d) {\n        if (d < 1 || d > 9999) {\n          throw \"invalid year\";\n        }\n\n        if (d % 4 != 0) {\n          return false;\n        }\n\n        if (d % 100 == 0) {\n          return d % 400 == 0;\n        }\n\n        return true;\n      },\n      _dateToTicks: function (f, h, e) {\n        if (f >= 1 && f <= 9999 && h >= 1 && h <= 12) {\n          var d = this._isLeapYear(f) ? this.daysToMonth366 : this.daysToMonth365;\n\n          if (e >= 1 && e <= d[h] - d[h - 1]) {\n            var f = f - 1;\n            var g = f * 365 + f / 4 - f / 100 + f / 400 + d[h - 1] + e - 1;\n            return g * 864000000000;\n          }\n        }\n      },\n      _daysInMonth: function (e, f) {\n        if (f < 1 || f > 12) {\n          throw \"Invalid month.\";\n        }\n\n        var d = this._isLeapYear(e) ? this.daysToMonth366 : this.daysToMonth365;\n        return d[f] - d[f - 1];\n      },\n      _timeToTicks: function (d, g, e) {\n        var f = d * 3600 + g * 60 + e;\n        return f * 10000000;\n      },\n      _equalDate: function (d) {\n        if (this.year == d.getFullYear() && this.day == d.getDate() && this.month == d.getMonth() + 1) {\n          return true;\n        }\n\n        return false;\n      }\n    };\n    return b;\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}