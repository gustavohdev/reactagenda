{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.extend(a.jqx._jqxGrid.prototype, {\n    autoresizecolumns: function (z, g) {\n      if (z != \"cells\" && z != \"all\" && z != \"column\") {\n        z = \"all\";\n      }\n\n      var A = this.that;\n      var n = this.getrows();\n\n      if (this.pageable) {\n        n = this.dataview.rows;\n\n        if (this.groupable) {\n          n = this.dataview.records;\n        }\n      }\n\n      if (g == undefined) {\n        g = 0;\n      } else {\n        g = parseInt(g);\n      }\n\n      var e = n.length;\n\n      if (e == undefined && n != undefined) {\n        var t = new Array();\n        a.each(n, function (i) {\n          t.push(this);\n        });\n        n = t;\n        e = n.length;\n      }\n\n      var w = a(\"<span></span>\");\n      w.addClass(this.toThemeProperty(\"jqx-widget\"));\n      w.addClass(this.toThemeProperty(\"jqx-grid-cell\"));\n      a(document.body).append(w);\n      var c = [];\n      var f = [];\n      var b = [];\n      var q = [];\n      var o = A.host.width();\n\n      if (A.vScrollBar[0].style.visibility != \"hidden\") {\n        o -= this.scrollbarsize + 5;\n      }\n\n      if (o < 0) {\n        o = 0;\n      }\n\n      for (var x = 0; x < e; x++) {\n        var k = n[x];\n\n        for (var v = 0; v < this.columns.records.length; v++) {\n          var d = this.columns.records[v];\n\n          if (d.hidden) {\n            continue;\n          }\n\n          if (this.groups.length > 0 && v <= this.groups.length - 1) {\n            continue;\n          }\n\n          if (f[d.displayfield] == undefined) {\n            f[d.displayfield] = 0;\n          }\n\n          if (b[d.displayfield] == undefined) {\n            b[d.displayfield] = \"\";\n          }\n\n          var r = k[d.displayfield];\n\n          if (d.cellsformat != \"\") {\n            if (a.jqx.dataFormat) {\n              if (a.jqx.dataFormat.isDate(r)) {\n                r = a.jqx.dataFormat.formatdate(r, d.cellsformat, this.gridlocalization);\n              } else {\n                if (a.jqx.dataFormat.isNumber(r)) {\n                  r = a.jqx.dataFormat.formatnumber(r, d.cellsformat, this.gridlocalization);\n                }\n              }\n            }\n          } else {\n            if (d.cellsrenderer) {\n              var s = A._defaultcellsrenderer(r, d);\n\n              var p = d.cellsrenderer(x, d.datafield, r, s, d.getcolumnproperties(), k);\n\n              if (p != undefined) {\n                r = a(p).text();\n              }\n            }\n          }\n\n          if (z == undefined || z == \"cells\" || z == \"all\") {\n            if (r != null) {\n              var c = r.toString().length;\n              var u = r.toString();\n              var B = u.replace(/[^A-Z]/g, \"\").length;\n\n              if (c > f[d.displayfield]) {\n                f[d.displayfield] = c;\n                b[d.displayfield] = r;\n                q[d.displayfield] = B;\n              }\n\n              if (c > 0 && c >= B) {\n                var m = B * 20 + (c - B) * 15;\n                var l = q[d.displayfield] * 20 + (f[d.displayfield] - q[d.displayfield]) * 15;\n\n                if (m > l && m > 0 && l > 0) {\n                  f[d.displayfield] = c;\n                  b[d.displayfield] = r;\n                  q[d.displayfield] = B;\n                }\n              }\n            }\n          }\n\n          if (z == \"column\" || z == \"all\") {\n            if (d.text.toString().length > f[d.displayfield]) {\n              b[d.displayfield] = d.text;\n              f[d.displayfield] = d.text.length;\n              var u = d.text.toString();\n              var B = u.replace(/[^A-Z]/g, \"\").length;\n              q[d.displayfield] = B;\n            }\n\n            var r = d.text;\n            var c = r.toString().length;\n            var u = r.toString();\n            var B = u.replace(/[^A-Z]/g, \"\").length;\n\n            if (c > 0 && c >= B) {\n              var m = B * 20 + (c - B) * 15;\n              var l = q[d.displayfield] * 20 + (f[d.displayfield] - q[d.displayfield]) * 15;\n\n              if (m > l && m > 0 && l > 0) {\n                f[d.displayfield] = c;\n                b[d.displayfield] = r;\n                q[d.displayfield] = B;\n              }\n            }\n          }\n        }\n      }\n\n      if (!this.columns.records) {\n        return;\n      }\n\n      for (var v = 0; v < this.columns.records.length; v++) {\n        var d = this.columns.records[v];\n\n        if (!d.displayfield) {\n          continue;\n        }\n\n        if (b[d.displayfield] == undefined) {\n          b[d.displayfield] = d.text;\n        }\n\n        if (w[0].className.indexOf(\"jqx-grid-column-header\") >= 0) {\n          w.removeClass(this.toThemeProperty(\"jqx-grid-column-header\"));\n        }\n\n        if (b[d.displayfield] == d.text) {\n          w.addClass(this.toThemeProperty(\"jqx-grid-column-header\"));\n        }\n\n        w[0].innerHTML = b[d.displayfield].toString();\n        var y = w.outerWidth() + 10;\n\n        if (w.children().length > 0) {\n          y = w.children().outerWidth() + 10;\n        }\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n          y += 10;\n        }\n\n        if (this.filterable && this.showfilterrow) {\n          y += 5;\n        }\n\n        y += g;\n\n        if (y > d.maxwidth) {\n          y = d.maxwidth;\n        }\n\n        if (d._width != undefined) {\n          d.__width = d._width;\n        }\n\n        d._width = null;\n\n        if (d.maxwidth == \"auto\" || y <= d.maxwidth) {\n          var h = d.width;\n\n          if (y < d.minwidth) {\n            y = d.minwidth;\n          }\n\n          d.width = y;\n\n          if (d._percentagewidth != undefined) {\n            d._percentagewidth = null;\n          }\n\n          this._raiseEvent(14, {\n            columntext: d.text,\n            column: d.getcolumnproperties(),\n            datafield: d.datafield,\n            displayfield: d.displayfield,\n            oldwidth: h,\n            newwidth: y\n          });\n        }\n      }\n\n      w.remove();\n\n      this._updatecolumnwidths();\n\n      this._updatecellwidths();\n\n      this._renderrows(this.virtualsizeinfo);\n\n      for (var v = 0; v < this.columns.records.length; v++) {\n        var d = this.columns.records[v];\n\n        if (d.__width != undefined) {\n          d._width = d.__width;\n        }\n      }\n    },\n    autoresizecolumn: function (p, v, g) {\n      if (v != \"cells\" && v != \"all\" && v != \"column\") {\n        v = \"all\";\n      }\n\n      if (p == undefined) {\n        return false;\n      }\n\n      var l = this.getrows();\n\n      if (this.pageable) {\n        l = this.dataview.rows;\n\n        if (this.groupable) {\n          l = this.dataview.records;\n        }\n      }\n\n      var d = this.getcolumn(p);\n\n      if (d == undefined) {\n        return false;\n      }\n\n      if (g == undefined) {\n        g = 0;\n      } else {\n        g = parseInt(g);\n      }\n\n      var e = l.length;\n      var s = a(\"<span></span>\");\n      s.addClass(this.toThemeProperty(\"jqx-widget\"));\n      s.addClass(this.toThemeProperty(\"jqx-grid-cell\"));\n      a(document.body).append(s);\n      var f = 0;\n      var b = \"\";\n      var o = 0;\n      var w = this.that;\n      var m = w.host.width();\n\n      if (w.vScrollBar[0].style.visibility != \"hidden\") {\n        m -= this.scrollbarsize + 5;\n      }\n\n      if (m < 0) {\n        m = 0;\n      }\n\n      if (v == undefined || v == \"cells\" || v == \"all\") {\n        for (var t = 0; t < e; t++) {\n          var q = l[t][d.displayfield];\n\n          if (d.cellsformat != \"\") {\n            if (a.jqx.dataFormat) {\n              if (a.jqx.dataFormat.isDate(q)) {\n                q = a.jqx.dataFormat.formatdate(q, d.cellsformat, this.gridlocalization);\n              } else {\n                if (a.jqx.dataFormat.isNumber(q)) {\n                  q = a.jqx.dataFormat.formatnumber(q, d.cellsformat, this.gridlocalization);\n                }\n              }\n            }\n          } else {\n            if (d.cellsrenderer) {\n              var n = d.cellsrenderer(t, d, q);\n\n              if (n != undefined) {\n                q = a(n).text();\n              }\n            }\n          }\n\n          if (q != null) {\n            var c = q.toString().length;\n            var r = q.toString();\n            var x = r.replace(/[^A-Z]/g, \"\").length;\n\n            if (c > f) {\n              f = c;\n              b = q;\n              o = x;\n            }\n\n            if (c > 0 && c >= x) {\n              var k = x * 20 + (c - x) * 15;\n              var j = o * 20 + (f - o) * 15;\n\n              if (k > j && k > 0 && j > 0) {\n                f = c;\n                b = q;\n                o = x;\n              }\n            }\n          }\n        }\n      }\n\n      if (v == \"column\" || v == \"all\") {\n        if (d.text.toString().length > f) {\n          b = d.text;\n        }\n\n        var q = d.text.toString();\n        var c = q.toString().length;\n        var r = q.toString();\n        var x = r.replace(/[^A-Z]/g, \"\").length;\n\n        if (c > 0 && c >= x) {\n          var k = x * 20 + (c - x) * 15;\n          var j = o * 20 + (f - o) * 15;\n\n          if (k > j && k > 0 && j > 0) {\n            f = c;\n            b = q;\n            o = x;\n          }\n        }\n      }\n\n      if (b == undefined) {\n        b = d.text;\n      }\n\n      s[0].innerHTML = b;\n\n      if (b == d.text) {\n        s.addClass(this.toThemeProperty(\"jqx-grid-column-header\"));\n      }\n\n      var u = s.outerWidth() + 10;\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        u += 5;\n      }\n\n      if (this.filterable && this.showfilterrow) {\n        u += 5;\n      }\n\n      u += g;\n      s.remove();\n\n      if (u > d.maxwidth) {\n        u = d.maxwidth;\n      }\n\n      if (d.maxwidth == \"auto\" || u <= d.maxwidth) {\n        var h = d.width;\n\n        if (u < d.minwidth) {\n          u = d.minwidth;\n        }\n\n        d.width = u;\n\n        if (d._width != undefined) {\n          d.__width = d._width;\n        }\n\n        d._width = null;\n\n        if (d._percentagewidth != undefined) {\n          d._percentagewidth = null;\n        }\n\n        this._updatecolumnwidths();\n\n        this._updatecellwidths();\n\n        this._raiseEvent(14, {\n          columntext: d.text,\n          column: d.getcolumnproperties(),\n          datafield: p,\n          displayfield: d.displayfield,\n          oldwidth: h,\n          newwidth: u\n        });\n\n        this._renderrows(this.virtualsizeinfo);\n\n        if (d._width != undefined) {\n          d._width = d.__width;\n        }\n      }\n    },\n    _handlecolumnsresize: function () {\n      var j = this.that;\n\n      if (this.columnsresize) {\n        var i = false;\n\n        if (j.isTouchDevice() && j.touchmode !== true) {\n          i = true;\n        }\n\n        var f = \"mousemove.resize\" + this.element.id;\n        var c = \"mousedown.resize\" + this.element.id;\n        var d = \"mouseup.resize\" + this.element.id;\n\n        if (i) {\n          var f = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".resize\" + this.element.id;\n          var c = a.jqx.mobile.getTouchEventName(\"touchstart\") + \".resize\" + this.element.id;\n          var d = a.jqx.mobile.getTouchEventName(\"touchend\") + \".resize\" + this.element.id;\n        }\n\n        this.removeHandler(a(document), f);\n        this.addHandler(a(document), f, function (m) {\n          var n = a.data(document.body, \"contextmenu\" + j.element.id);\n\n          if (n != null && j.autoshowcolumnsmenubutton) {\n            return true;\n          }\n\n          if (j.resizablecolumn != null && !j.disabled && j.resizing) {\n            if (j.resizeline != null) {\n              var s = j.resizablecolumn.columnelement;\n              var p = j.host.coord();\n              var v = parseInt(j.resizestartline.coord().left);\n              var k = v - j._startcolumnwidth;\n              var w = j.resizablecolumn.column.minwidth;\n\n              if (w == \"auto\") {\n                w = 0;\n              } else {\n                w = parseInt(w);\n              }\n\n              var l = j.resizablecolumn.column.maxwidth;\n\n              if (l == \"auto\") {\n                l = 0;\n              } else {\n                l = parseInt(l);\n              }\n\n              var q = m.pageX;\n\n              if (i) {\n                var t = j.getTouches(m);\n                var r = t[0];\n                q = r.pageX;\n              }\n\n              k += w;\n              var u = l > 0 ? v + l : 0;\n              var o = l == 0 ? true : j._startcolumnwidth + q - v < l ? true : false;\n\n              if (j.rtl) {\n                var o = true;\n              }\n\n              if (o) {\n                if (!j.rtl) {\n                  if (q >= p.left && q >= k) {\n                    if (u != 0 && m.pageX < u) {\n                      j.resizeline.css(\"left\", q);\n                    } else {\n                      if (u == 0) {\n                        j.resizeline.css(\"left\", q);\n                      }\n                    }\n\n                    if (i) {\n                      return false;\n                    }\n                  }\n                } else {\n                  if (q >= p.left && q <= p.left + j.host.width()) {\n                    j.resizeline.css(\"left\", q);\n\n                    if (i) {\n                      return false;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (!i && j.resizablecolumn != null) {\n            return false;\n          }\n        });\n        this.removeHandler(a(document), c);\n        this.addHandler(a(document), c, function (p) {\n          var o = a.data(document.body, \"contextmenu\" + j.element.id);\n\n          if (o != null && j.autoshowcolumnsmenubutton) {\n            return true;\n          }\n\n          if (j.resizablecolumn != null && !j.disabled) {\n            var k = j.resizablecolumn.columnelement;\n\n            if (k.coord().top + k.height() + 5 < p.pageY) {\n              j.resizablecolumn = null;\n              return;\n            }\n\n            if (k.coord().top - 5 > p.pageY) {\n              j.resizablecolumn = null;\n              return;\n            }\n\n            j._startcolumnwidth = j.resizablecolumn.column.width;\n            j.resizablecolumn.column._width = null;\n            a(document.body).addClass(\"jqx-disableselect\");\n            a(document.body).addClass(\"jqx-position-reset\");\n            j.host.addClass(\"jqx-disableselect\");\n            j.content.addClass(\"jqx-disableselect\");\n            j._mouseDownResize = new Date();\n            j.resizing = true;\n\n            if (j._lastmouseDownResize && j.columnsautoresize) {\n              if (j._lastmouseDownResize - j._mouseDownResize < 300 && j._lastmouseDownResize - j._mouseDownResize > -500) {\n                var n = j.resizablecolumn.column;\n\n                if (n.resizable) {\n                  var m = j.resizablecolumn.column.width;\n                  var l = j.hScrollBar[0].style.visibility;\n                  j._resizecolumn = null;\n                  j.resizeline.hide();\n                  j.resizestartline.hide();\n                  j.resizebackground.remove();\n                  j.resizablecolumn = null;\n                  j.columndragstarted = false;\n                  j.dragmousedown = null;\n                  j.__drag = false;\n                  j.autoresizecolumn(n.displayfield, \"all\");\n\n                  if (l != j.hScrollBar[0].style.visibility) {\n                    j.hScrollInstance.setPosition(0);\n                  }\n\n                  if (j.rtl) {\n                    j._arrange();\n                  }\n\n                  if (j.autosavestate) {\n                    if (j.savestate) {\n                      j.savestate();\n                    }\n                  }\n\n                  p.stopPropagation();\n                  j.suspendClick = true;\n                  setTimeout(function () {\n                    j.suspendClick = false;\n                  }, 100);\n                  return false;\n                }\n              }\n            }\n\n            j._lastmouseDownResize = new Date();\n            j._resizecolumn = j.resizablecolumn.column;\n            j.resizeline = j.resizeline || a('<div style=\"position: absolute;\"></div>');\n            j.resizestartline = j.resizestartline || a('<div style=\"position: absolute;\"></div>');\n            j.resizebackground = j.resizebackground || a('<div style=\"position: absolute; left: 0; top: 0; background: #000;\"></div>');\n            j.resizebackground.css(\"opacity\", 0.01);\n            j.resizebackground.css(\"cursor\", \"col-resize\");\n            j.resizeline.css(\"cursor\", \"col-resize\");\n            j.resizestartline.css(\"cursor\", \"col-resize\");\n            j.resizeline.addClass(j.toThemeProperty(\"jqx-grid-column-resizeline\"));\n            j.resizestartline.addClass(j.toThemeProperty(\"jqx-grid-column-resizestartline\"));\n            a(document.body).append(j.resizeline);\n            a(document.body).append(j.resizestartline);\n            a(document.body).append(j.resizebackground);\n            var q = j.resizablecolumn.columnelement.coord();\n            j.resizebackground.css(\"left\", j.host.coord().left);\n            j.resizebackground.css(\"top\", j.host.coord().top);\n            j.resizebackground.width(j.host.width());\n            j.resizebackground.height(j.host.height());\n            j.resizebackground.css(\"z-index\", 9999);\n\n            var r = function (t) {\n              if (!j.rtl) {\n                t.css(\"left\", parseInt(q.left) + j._startcolumnwidth);\n              } else {\n                t.css(\"left\", parseInt(q.left));\n              }\n\n              var w = j._groupsheader();\n\n              var v = w ? j.groupsheader.height() : 0;\n              var y = j.showtoolbar ? j.toolbarheight : 0;\n              v += y;\n              var s = j.showstatusbar ? j.statusbarheight : 0;\n              v += s;\n              var u = 0;\n\n              if (j.pageable) {\n                u = j.pagerheight;\n              }\n\n              var x = j.hScrollBar.css(\"visibility\") == \"visible\" ? 17 : 0;\n              t.css(\"top\", parseInt(q.top));\n              t.css(\"z-index\", 99999);\n\n              if (j.columngroups) {\n                t.height(j.host.height() + j.resizablecolumn.columnelement.height() - u - v - x - j.columngroupslevel * j.columnsheight);\n              } else {\n                t.height(j.host.height() - u - v - x);\n              }\n\n              if (j.enableanimations) {\n                t.show(\"fast\");\n              } else {\n                t.show();\n              }\n            };\n\n            r(j.resizeline);\n            r(j.resizestartline);\n            j.dragmousedown = null;\n          }\n        });\n\n        var e = function () {\n          a(document.body).removeClass(\"jqx-disableselect\");\n          a(document.body).removeClass(\"jqx-position-reset\");\n\n          if (j.showfilterrow || j.showstatusbar || j.showtoolbar || j.enablebrowserselection) {\n            j.host.removeClass(\"jqx-disableselect\");\n            j.content.removeClass(\"jqx-disableselect\");\n          }\n\n          if (!j.resizing) {\n            return;\n          }\n\n          j._mouseUpResize = new Date();\n          var r = j._mouseUpResize - j._mouseDownResize;\n\n          if (r < 200) {\n            j.resizing = false;\n\n            if (j._resizecolumn != null && j.resizeline != null && j.resizeline.css(\"display\") == \"block\") {\n              j._resizecolumn = null;\n              j.resizeline.hide();\n              j.resizestartline.hide();\n              j.resizebackground.remove();\n            }\n\n            return;\n          }\n\n          j.resizing = false;\n\n          if (j.disabled) {\n            return;\n          }\n\n          var p = j.host.width();\n\n          if (j.vScrollBar[0].style.visibility != \"hidden\") {\n            p -= 20;\n          }\n\n          if (p < 0) {\n            p = 0;\n          }\n\n          if (j._resizecolumn != null && j.resizeline != null && j.resizeline.css(\"display\") == \"block\") {\n            var s = parseInt(j.resizeline.css(\"left\"));\n            var o = parseInt(j.resizestartline.css(\"left\"));\n            var l = j._startcolumnwidth + s - o;\n\n            if (j.rtl) {\n              var l = j._startcolumnwidth - s + o;\n            }\n\n            var q = j._resizecolumn.width;\n\n            j._closemenu();\n\n            if (l < j._resizecolumn.minwidth) {\n              l = j._resizecolumn.minwidth;\n            }\n\n            j._resizecolumn.width = l;\n\n            if (j._resizecolumn._percentagewidth != undefined) {\n              j._resizecolumn._percentagewidth = l / p * 100;\n            }\n\n            for (var k = 0; k < j._columns.length; k++) {\n              if (j._columns[k].datafield === j._resizecolumn.datafield) {\n                j._columns[k].width = j._resizecolumn.width;\n\n                if (j._columns[k].width < j._resizecolumn.minwidth) {\n                  j._columns[k].width = j._resizecolumn.minwidth;\n                }\n\n                break;\n              }\n            }\n\n            var n = j.hScrollBar[0].style.visibility;\n\n            j._updatecolumnwidths();\n\n            j._updatecellwidths();\n\n            j._raiseEvent(14, {\n              columntext: j._resizecolumn.text,\n              column: j._resizecolumn.getcolumnproperties(),\n              datafield: j._resizecolumn.datafield,\n              oldwidth: q,\n              newwidth: l\n            });\n\n            j._renderrows(j.virtualsizeinfo);\n\n            if (j.autosavestate) {\n              if (j.savestate) {\n                j.savestate();\n              }\n            }\n\n            if (n != j.hScrollBar[0].style.visibility) {\n              j.hScrollInstance.setPosition(0);\n            }\n\n            if (j.rtl) {\n              j._arrange();\n            }\n\n            j._resizecolumn = null;\n            j.resizeline.hide();\n            j.resizestartline.hide();\n            j.resizebackground.remove();\n            j.resizablecolumn = null;\n          } else {\n            j.resizablecolumn = null;\n          }\n        };\n\n        try {\n          if (document.referrer != \"\" || window.frameElement) {\n            var b = null;\n\n            if (window.top != null && window.top != window.self) {\n              if (window.parent && document.referrer) {\n                b = document.referrer;\n              }\n            }\n\n            if (b && b.indexOf(document.location.host) != -1) {\n              var g = function (k) {\n                e();\n              };\n\n              if (window.top.document.addEventListener) {\n                window.top.document.addEventListener(\"mouseup\", g, false);\n              } else {\n                if (window.top.document.attachEvent) {\n                  window.top.document.attachEvent(\"onmouseup\", g);\n                }\n              }\n            }\n          }\n        } catch (h) {}\n\n        this.removeHandler(a(document), d);\n        this.addHandler(a(document), d, function (l) {\n          var k = a.data(document.body, \"contextmenu\" + j.element.id);\n\n          if (k != null && j.autoshowcolumnsmenubutton) {\n            return true;\n          }\n\n          e();\n        });\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}