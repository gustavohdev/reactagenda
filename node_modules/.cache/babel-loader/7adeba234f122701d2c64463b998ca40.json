{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxColorPicker\", \"\", {});\n  a.extend(a.jqx._jqxColorPicker.prototype, {\n    defineInstance: function () {\n      var b = {\n        disabled: false,\n        height: null,\n        width: null,\n        color: new a.jqx.color({\n          hex: \"ff0000\"\n        }),\n        redString: \"R:\",\n        greenString: \"G:\",\n        blueString: \"B:\",\n        showTransparent: false,\n        colorMode: \"saturation\",\n        _delayLoading: false,\n        events: [\"colorchange\"]\n      };\n\n      if (this === a.jqx._jqxColorPicker.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    _createFromInput: function (c) {\n      var e = this;\n\n      if (e.element.nodeName.toLowerCase() == \"input\") {\n        e.field = e.element;\n\n        if (e.field.className) {\n          e._className = e.field.className;\n        }\n\n        var d = {\n          title: e.field.title\n        };\n\n        if (e.field.getAttribute(\"value\")) {\n          var g = e.field.getAttribute(\"value\");\n          e.color = new a.jqx.color({\n            hex: g\n          });\n        }\n\n        if (e.field.id.length) {\n          d.id = e.field.id.replace(/[^\\w]/g, \"_\") + \"_\" + c;\n        } else {\n          d.id = a.jqx.utilities.createId() + \"_\" + c;\n        }\n\n        var h = a(\"<div></div>\", d);\n        h[0].style.cssText = e.field.style.cssText;\n\n        if (!e.width) {\n          e.width = a(e.field).width();\n        }\n\n        if (!e.height) {\n          e.height = a(e.field).outerHeight();\n        }\n\n        a(e.field).hide().after(h);\n        var f = e.host.data();\n        e.host = h;\n        e.host.data(f);\n        e.element = h[0];\n        e.element.id = e.field.id;\n        e.field.id = d.id;\n\n        if (e._className) {\n          e.host.addClass(e._className);\n          a(e.field).removeClass(e._className);\n        }\n\n        if (e.field.tabIndex) {\n          var b = e.field.tabIndex;\n          e.field.tabIndex = -1;\n          e.element.tabIndex = b;\n        }\n      }\n    },\n    createInstance: function (c) {\n      this._createFromInput(\"jqxColorPicker\");\n\n      this.render();\n      var b = this;\n      a.jqx.utilities.resize(this.host, function () {\n        b._setSize();\n\n        b.refresh();\n      }, false, !this._delayLoading);\n    },\n    render: function () {\n      this.element.innerHTML = \"\";\n      var b = this;\n      this._isTouchDevice = a.jqx.mobile.isTouchDevice();\n\n      if (typeof this.color == \"string\") {\n        this.color = new a.jqx.color({\n          hex: this.color\n        });\n      }\n\n      this._setSize();\n\n      this.host.addClass(this.toThemeProperty(\"jqx-widget\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-reset\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-color-picker\"));\n      this.container = a(\"<div style='width: 100%; height: 100%; position: relative;'></div>\");\n      this.container.appendTo(this.host);\n      this.colorMap = a(\"<div style='left: 0; top: 0; position: absolute;'></div>\");\n      this.colorMap.appendTo(this.container);\n      this.colorBar = a(\"<div style='left: 0; top: 0; position: absolute;'></div>\");\n      this.colorBar.appendTo(this.container);\n      this.colorPanel = a(\"<div style='left: 0; top: 0; position: absolute;'></div>\");\n      this.colorPanel.appendTo(this.container);\n      this.hexPanel = a(\"<div style='float: left;'></div>\");\n      this.hexPanel.appendTo(this.colorPanel);\n      this.hexPanel.append('<span style=\"text-align: left;\" >#</span>');\n      this.hex = a(\"<input maxlength='6' style='height: 18px;'/>\");\n      this.hex.addClass(this.toThemeProperty(\"jqx-input\"));\n      this.hex.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.hex.appendTo(this.hexPanel);\n      this.colorPanel.append('<div style=\"font-size: 1px; clear: both;\"></div>');\n      this.rgb = a(\"<div style='margin-top: 2px;'></div>\");\n      this.rgb.appendTo(this.colorPanel);\n      this.red = a(\"<input style='width: 25px; height: 18px;' maxlength='3'/>\");\n      this.red.addClass(this.toThemeProperty(\"jqx-input\"));\n      this.red.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.rgb.append('<span style=\"text-align: left;\">' + this.redString + \"</span>\");\n      this.red.appendTo(this.rgb);\n      this.green = a(\"<input style='margin-right: 2px; height: 18px; width: 25px;' maxlength='3'/>\");\n      this.green.addClass(this.toThemeProperty(\"jqx-input\"));\n      this.green.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.rgb.append('<span style=\"text-align: left;\">' + this.greenString + \"</span>\");\n      this.green.appendTo(this.rgb);\n      this.colorPanel.addClass(this.toThemeProperty(\"jqx-color-picker-map-overlay\"));\n      this._mapImageOverlayURL = this._getImageUrl(this.colorPanel);\n      this.colorPanel.removeClass(this.toThemeProperty(\"jqx-color-picker-map-overlay\"));\n      this.blue = a(\"<input style='height: 18px; width: 25px;' maxlength='3'/>\");\n      this.blue.addClass(this.toThemeProperty(\"jqx-input\"));\n      this.blue.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.rgb.append('<span style=\"text-align: left;\">' + this.blueString + \"</span>\");\n      this.blue.appendTo(this.rgb);\n      this.preview = a(\"<div style='background: red; position: absolute;'></div>\");\n      this.preview.addClass(this.toThemeProperty(\"jqx-widget-content\"));\n      this.preview.appendTo(this.colorPanel);\n      this.colorBarPointer = a(\"<div style='top: 0; left: 0; position: absolute; width: 100%;'></div>\");\n      this.colorBarPointer.addClass(this.toThemeProperty(\"jqx-color-picker-bar-pointer\"));\n      this.colorMapPointer = a(\"<div style='top: 0; left: 0; position: absolute; width: 100%;'></div>\");\n      this.colorMapPointer.addClass(this.toThemeProperty(\"jqx-color-picker-pointer\"));\n      this.transparent = a(\"<div style='text-align: center; clear: both;'><a style='text-align: center;' href='#'>transparent</a></div>\");\n\n      if (this.disabled) {\n        this.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n        this.element.disabled = true;\n      }\n\n      this._addHandlers();\n    },\n    val: function (b) {\n      if (arguments.length == 0) {\n        return \"#\" + this.color.hex;\n      }\n\n      this.setColor(b);\n      return this.color.hex;\n    },\n    _setPositionFromValue: function () {\n      var d = this;\n      var c = d.color.h;\n      var i = 100 - d.color.v;\n      var b = d.colorMap.height();\n      var e = d.colorMap.width();\n      var h = c * e / 360;\n      var g = i * b / 100;\n\n      if (this.colorMode == \"saturation\") {\n        var f = 100 - d.color.s;\n        f = f * b / 100;\n        d._saturation = 100 - d.color.s;\n        d.colorMapPointer.css(\"margin-left\", h - 8);\n        d.colorMapPointer.css(\"margin-top\", g - 8);\n        d.colorBarPointer.css(\"margin-top\", f - 8);\n        d.colorMapImageOverlay.css(\"opacity\", (100 - d.color.s) / 100);\n      } else {\n        var c = d.color.s;\n        var h = c * e / 100;\n        var g = i * b / 100;\n        var f = 360 - d.color.h;\n        f = f * b / 360;\n        d._hue = d.color.h;\n        d.colorMapPointer.css(\"margin-left\", h - 8);\n        d.colorMapPointer.css(\"margin-top\", g - 8);\n        d.colorBarPointer.css(\"margin-top\", f - 8);\n      }\n    },\n    updateRGB: function () {\n      var b = this;\n      b.color.setRgb(b.red.val(), b.green.val(), b.blue.val());\n\n      b._updateUI();\n\n      b._raiseEvent(\"0\", {\n        color: b.color\n      });\n\n      b.color.transparent = false;\n    },\n    _setPosition: function (f, c, h) {\n      var e = parseInt(f.pageX);\n      var g = parseInt(c.offset().left);\n      var b = parseInt(f.pageY);\n      var d = parseInt(c.offset().top);\n\n      if (this._isTouchDevice) {\n        var i = a.jqx.position(f);\n        e = i.left;\n        b = i.top;\n      }\n\n      if (h[0].className.indexOf(\"jqx-color-picker-bar\") == -1) {\n        h.css(\"margin-left\", e - 8 - g);\n      }\n\n      if (b >= d && b <= d + c.height()) {\n        h.css(\"margin-top\", b - 8 - d);\n      }\n    },\n    _handleKeyInput: function (c, d, b) {\n      if (c.disabled) {\n        return;\n      }\n\n      if (!c._validateKey(d)) {\n        return d;\n      }\n\n      b.val(c._setValueInRange(b.val(), 0, 255));\n      this.updateRGB();\n\n      this._setPositionFromValue();\n    },\n    _addHandlers: function () {\n      var d = this;\n      this.addHandler(this.colorMapPointer, \"dragStart\", function (j) {\n        j.preventDefault();\n        return false;\n      });\n      this.addHandler(this.colorBarPointer, \"dragStart\", function (j) {\n        j.preventDefault();\n        return false;\n      });\n      this.addHandler(this.transparent, \"click\", function (j) {\n        d._raiseEvent(\"0\", {\n          color: \"transparent\"\n        });\n\n        j.preventDefault();\n        d.color.transparent = true;\n      });\n      this.addHandler(this.host, \"selectionstart\", function (j) {\n        j.preventDefault();\n        return false;\n      });\n      this.addHandler(this.blue, \"keyup blur\", function (j) {\n        d._handleKeyInput(d, j, d.blue);\n      });\n      this.addHandler(this.green, \"keyup blur\", function (j) {\n        d._handleKeyInput(d, j, d.green);\n      });\n      this.addHandler(this.red, \"keyup blur\", function (j) {\n        d._handleKeyInput(d, j, d.red);\n      });\n      this.addHandler(this.hex, \"keyup blur\", function (j) {\n        if (d.disabled) {\n          return;\n        }\n\n        if (!d._validateKey(j)) {\n          return j;\n        }\n\n        if (d.hex.val().toString().length == 6) {\n          d.hex.val(d.color.validateHex(d.hex.val()));\n          d.color.setHex(d.hex.val());\n\n          d._updateUI();\n\n          d._setPositionFromValue();\n\n          d._raiseEvent(\"0\", {\n            color: d.color\n          });\n        }\n      });\n      this.addHandler(this.colorMap, \"dragstart\", function (j) {\n        j.preventDefault();\n        return false;\n      });\n\n      var f = function (k) {\n        d._setPosition(k, d.colorMap, d.colorMapPointer);\n\n        if (d.colorMode == \"saturation\") {\n          var j = d._valuesFromMouse(k, d.colorMap, 360, 100);\n\n          if (j.x > 360) {\n            j.x = 360;\n          }\n\n          d.color.setHsv(j.x, d._saturation != null ? 100 - d._saturation : 100, 100 - j.y);\n        } else {\n          var j = d._valuesFromMouse(k, d.colorMap, 100, 100);\n\n          if (j.x > 100) {\n            j.x = 100;\n          }\n\n          d.color.setHsv(d._hue != null ? d._hue : 360, j.x, 100 - j.y);\n        }\n\n        d._updateUI();\n\n        d._raiseEvent(\"0\", {\n          color: d.color\n        });\n\n        d.color.transparent = false;\n      };\n\n      var c = \"mousedown.picker\" + this.element.id;\n\n      if (this._isTouchDevice) {\n        c = a.jqx.mobile.getTouchEventName(\"touchstart\") + \".picker\" + this.element.id;\n      }\n\n      this.addHandler(this.colorMap, c, function (j) {\n        if (d.disabled) {\n          return;\n        }\n\n        d.beginDrag = true;\n        f(j);\n      });\n      var b = \"mousemove.picker\" + this.element.id;\n\n      if (this._isTouchDevice) {\n        b = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".picker\" + this.element.id;\n      }\n\n      this.addHandler(a(document), b, function (j) {\n        if (d.disabled) {\n          return;\n        }\n\n        if (d.beginDrag == true) {\n          f(j);\n\n          if (d._isTouchDevice) {\n            j.preventDefault();\n          }\n        }\n      });\n\n      if (!this._isTouchDevice) {\n        this.addHandler(this.colorBar, \"dragstart\", function (j) {\n          j.preventDefault();\n          return false;\n        });\n      }\n\n      var e = function (k) {\n        d._setPosition(k, d.colorBar, d.colorBarPointer);\n\n        if (d.colorMode == \"saturation\") {\n          var j = d._valuesFromMouse(k, d.colorBar, 100, 100);\n\n          d.color.s = j.y;\n          d._saturation = j.y;\n          d.colorMapImageOverlay.css(\"opacity\", d.color.s / 100);\n          d.color.setHsv(d.color.h, 100 - d.color.s, d.color.v);\n        } else {\n          var j = d._valuesFromMouse(k, d.colorBar, 100, 360);\n\n          d.color.h = 360 - j.y;\n          d._hue = d.color.h;\n          d.color.setHsv(d.color.h, d.color.s, d.color.v);\n        }\n\n        d._updateUI();\n\n        d._raiseEvent(\"0\", {\n          color: d.color\n        });\n\n        d.color.transparent = false;\n      };\n\n      var h = \"mousemove.colorBar\" + this.element.id;\n      var g = \"mousedown.colorBar\" + this.element.id;\n      var i = \"mouseup.colorBar\" + this.element.id;\n\n      if (this._isTouchDevice) {\n        h = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".colorBar\" + this.element.id;\n        g = a.jqx.mobile.getTouchEventName(\"touchstart\") + \".colorBar\" + this.element.id;\n        i = a.jqx.mobile.getTouchEventName(\"touchend\") + \".colorBar\" + this.element.id;\n      }\n\n      this.addHandler(this.colorBar, g, function (j) {\n        if (d.disabled) {\n          return;\n        }\n\n        d.beginDragBar = true;\n        e(j);\n      });\n      this.addHandler(a(document), h, function (j) {\n        if (d.disabled) {\n          return;\n        }\n\n        if (d.beginDragBar == true) {\n          e(j);\n\n          if (d._isTouchDevice) {\n            j.preventDefault();\n          }\n        }\n      });\n      this.addHandler(a(document), i, function (j) {\n        if (d.disabled) {\n          return;\n        }\n\n        d.beginDrag = false;\n        d.beginDragBar = false;\n      });\n    },\n    _removeHandlers: function () {\n      this.removeHandler(this.transparent, \"click\");\n      this.removeHandler(this.host, \"selectionstart\");\n      this.removeHandler(this.blue, \"keyup blur\");\n      this.removeHandler(this.green, \"keyup blur\");\n      this.removeHandler(this.red, \"keyup blur\");\n      this.removeHandler(this.hex, \"keyup blur\");\n      this.removeHandler(this.colorMap, \"dragstart\");\n      this.removeHandler(this.colorBar, \"dragstart\");\n      this.removeHandler(this.colorMapPointer, \"dragStart\");\n      this.removeHandler(this.colorBarPointer, \"dragStart\");\n      var g = this.element.id;\n      var e = \"mousemove.colorBar\" + g;\n      var d = \"mousedown.colorBar\" + g;\n      var f = \"mouseup.colorBar\" + g;\n      var c = \"mousedown.picker\" + g;\n      var b = \"mousemove.picker\" + g;\n\n      if (this._isTouchDevice) {\n        e = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".colorBar\" + g;\n        d = a.jqx.mobile.getTouchEventName(\"touchstart\") + \".colorBar\" + g;\n        f = a.jqx.mobile.getTouchEventName(\"touchend\") + \".colorBar\" + g;\n        c = a.jqx.mobile.getTouchEventName(\"touchstart\") + \".picker\" + g;\n        b = a.jqx.mobile.getTouchEventName(\"touchmove\") + \".picker\" + g;\n      }\n\n      this.removeHandler(this.colorMap, c);\n      this.removeHandler(this.colorMap, b);\n      this.removeHandler(this.colorBar, d);\n      this.removeHandler(this.colorBar, e);\n      this.removeHandler(a(document), b);\n      this.removeHandler(a(document), e);\n      this.removeHandler(a(document), f);\n    },\n    _raiseEvent: function (g, c) {\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[g];\n      var e = c ? c : {};\n      e.owner = this;\n      var f = new a.Event(d);\n      f.owner = this;\n      f.args = e;\n      var b = this.host.trigger(f);\n      return b;\n    },\n    setColor: function (b) {\n      if (!b) {\n        return;\n      }\n\n      if (b == \"transparent\") {\n        this.color.transparent = true;\n        this.color.hex = \"000\";\n        this.color.r = 0;\n        this.color.g = 0;\n        this.color.b = 0;\n      } else {\n        if (b.r) {\n          this.color = new a.jqx.color({\n            rgb: b\n          });\n        } else {\n          if (b.substring(0, 1) == \"#\") {\n            this.color = new a.jqx.color({\n              hex: b.substring(1)\n            });\n          } else {\n            this.color = new a.jqx.color({\n              hex: b\n            });\n          }\n        }\n      }\n\n      this._updateUI();\n\n      this._setPositionFromValue();\n\n      this._raiseEvent(\"0\", {\n        color: this.color\n      });\n    },\n    getColor: function () {\n      return this.color;\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n\n      this._setSize();\n\n      this.refresh();\n    },\n    propertyChangedHandler: function (b, c, e, d) {\n      if (b.isInitialized == undefined || b.isInitialized == false) {\n        return;\n      }\n\n      if (c == \"colorMode\") {\n        b.refresh();\n      }\n\n      if (c == \"color\") {\n        b._updateUI();\n\n        b._setPositionFromValue();\n\n        b._raiseEvent(\"0\", {\n          color: d\n        });\n      }\n\n      if (c == \"width\" || c == \"height\") {\n        b._setSize();\n\n        b.refresh();\n      }\n\n      if (c == \"showTransparent\") {\n        b.refresh();\n      }\n\n      if (c == \"disabled\") {\n        this.element.disabled = d;\n\n        if (d) {\n          b.host.addClass(b.toThemeProperty(\"jqx-fill-state-disabled\"));\n        } else {\n          b.host.removeClass(b.toThemeProperty(\"jqx-fill-state-disabled\"));\n        }\n      }\n    },\n    _valuesFromMouse: function (j, g, c, b) {\n      var k = 0;\n      var i = 0;\n      var f = g.offset();\n      var p = g.height();\n      var d = g.width();\n      var n = j.pageX;\n      var m = j.pageY;\n\n      if (this._isTouchDevice) {\n        var l = a.jqx.position(j);\n        n = l.left;\n        m = l.top;\n      }\n\n      if (n < f.left) {\n        k = 0;\n      } else {\n        if (n > f.left + d) {\n          k = d;\n        } else {\n          k = n - f.left + 1;\n        }\n      }\n\n      if (m < f.top) {\n        i = 0;\n      } else {\n        if (m > f.top + p) {\n          i = p;\n        } else {\n          i = m - f.top + 1;\n        }\n      }\n\n      var h = parseInt(k / d * c);\n      var o = parseInt(i / p * b);\n      return {\n        x: h,\n        y: o\n      };\n    },\n    _validateKey: function (b) {\n      if (b.keyCode == 9 || b.keyCode == 16 || b.keyCode == 38 || b.keyCode == 29 || b.keyCode == 40 || b.keyCode == 17 || b.keyCode == 37 || b.ctrlKey && (b.keyCode == \"c\".charCodeAt() || b.keyCode == \"v\".charCodeAt()) || b.ctrlKey && (b.keyCode == \"C\".charCodeAt() || b.keyCode == \"V\".charCodeAt())) {\n        return false;\n      }\n\n      if (b.ctrlKey || b.shiftKey) {\n        return false;\n      }\n\n      return true;\n    },\n    _setValueInRange: function (d, c, b) {\n      if (d == \"\" || isNaN(d)) {\n        return c;\n      }\n\n      d = parseInt(d);\n\n      if (d > b) {\n        return b;\n      }\n\n      if (d < c) {\n        return c;\n      }\n\n      return d;\n    },\n    destroy: function () {\n      a.jqx.utilities.resize(this.host, null, true);\n      this.host.removeClass();\n\n      this._removeHandlers();\n\n      this.host.remove();\n    },\n    setPointerStyle: function (c) {\n      this.colorMapPointer.removeClass();\n\n      if (c == \"transparent\" || c.hex == \"\") {\n        this.colorMapPointer.addClass(this.toThemeProperty(\"jqx-color-picker-pointer\"));\n      }\n\n      var b = 105;\n      var d = c.r * 0.299 + c.g * 0.587 + c.b * 0.114;\n      var e = 255 - d < b ? \"Black\" : \"White\";\n\n      if (e == \"Black\") {\n        this.colorMapPointer.addClass(this.toThemeProperty(\"jqx-color-picker-pointer\"));\n      } else {\n        this.colorMapPointer.addClass(this.toThemeProperty(\"jqx-color-picker-pointer-alt\"));\n      }\n    },\n    _updateUI: function () {\n      var c = this;\n      c.red.val(c.color.r);\n      c.green.val(c.color.g);\n      c.blue.val(c.color.b);\n      c.hex.val(c.color.hex);\n      var b = new a.jqx.color({\n        hex: \"fff\"\n      });\n\n      if (this.colorMode == \"saturation\") {\n        b.setHsv(this.color.h, 100, this.color.v);\n        c.colorBar.css(\"background\", \"#\" + b.hex);\n      } else {\n        b.setHsv(this.color.h, 100, 100);\n        c.colorMap.css(\"background-color\", \"#\" + b.hex);\n      }\n\n      c.preview.css(\"background\", \"#\" + this.color.hex);\n      c.setPointerStyle(this.color);\n    },\n    _setSize: function () {\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.host.width(this.width);\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.host.width(this.width);\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.host.height(this.height);\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.host.height(this.height);\n        }\n      }\n\n      if (this.host.width() < 130) {\n        this.host.width(150);\n      }\n\n      if (this.host.height() < 70) {\n        this.host.height(70);\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        this.host.width(this.width);\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        this.host.height(this.height);\n      }\n    },\n    _arrange: function () {\n      var d = this.host.height();\n      var g = this.host.width();\n      var b = d - 44;\n\n      if (this.showTransparent) {\n        b = d - 64;\n      }\n\n      if (b <= 0) {\n        return;\n      }\n\n      this.colorMap.width(85 * g / 100);\n      this.colorMap.height(b);\n      this.colorBar.height(b);\n      this.colorBar.css(\"left\", this.colorMap.width() + 4);\n      this.colorBar.width(8 * g / 100);\n      this.colorBarPointer.width(this.colorBar.width());\n      this.colorPanel.width(g);\n      this.colorPanel.height(40);\n\n      if (this.showTransparent) {\n        this.colorPanel.height(60);\n      }\n\n      this.colorPanel.css(\"top\", b + 4);\n      this.colorPanel.css(\"text-align\", \"left\");\n      this.hex.width(this.colorMap.width() - this.colorBar.width() - 4);\n      var c = this.red.prev().outerWidth() - this.hex.prev().outerWidth();\n\n      if (c < 4) {\n        c = 4;\n      }\n\n      this.hex.css(\"margin-left\", c + \"px\");\n      this.preview.width(this.colorBar.width() + 7);\n      this.preview.height(25);\n      this.preview.addClass(this.toThemeProperty(\"jqx-rc-all\"));\n      this.preview.addClass(this.toThemeProperty(\"jqx-color-picker-preview\"));\n      this.preview.css(\"left\", this.colorMap.width() - 2);\n      this.preview.css(\"top\", \"5px\");\n      var e = this.hex.width();\n      var f = e - this.blue.prev().outerWidth() - this.green.prev().outerWidth() - 6;\n\n      if (f > 0) {\n        this.blue.width(f / 3);\n        this.green.width(f / 3);\n        this.red.width(f / 3);\n        return;\n      }\n    },\n    _getColorPointer: function () {\n      var b = a(\"<div></div>\");\n      b.addClass(this.toThemeProperty(\"jqx-color-picker-pointer\"));\n      return b;\n    },\n    _getImageUrl: function (c) {\n      var b = c.css(\"backgroundImage\");\n      b = b.replace('url(\"', \"\");\n      b = b.replace('\")', \"\");\n      b = b.replace(\"url(\", \"\");\n      b = b.replace(\")\", \"\");\n      return b;\n    },\n    refresh: function () {\n      if (this._delayLoading) {\n        return;\n      }\n\n      this._saturation = null;\n      this._hue = null;\n      this.colorMap.removeClass();\n      this.colorBar.removeClass();\n      this.colorMap.addClass(this.toThemeProperty(\"jqx-disableselect\"));\n      this.colorBar.addClass(this.toThemeProperty(\"jqx-disableselect\"));\n      this.colorPanel.addClass(this.toThemeProperty(\"jqx-color-picker-panel\"));\n      this.colorBar.css(\"background-image\", \"\");\n      this.colorMap.css(\"background-image\", \"\");\n\n      if (this.colorMode == \"saturation\") {\n        this.colorMap.addClass(this.toThemeProperty(\"jqx-color-picker-map\"));\n        this.colorBar.addClass(this.toThemeProperty(\"jqx-color-picker-bar\"));\n      } else {\n        this.colorMap.addClass(this.toThemeProperty(\"jqx-color-picker-map-hue\"));\n        this.colorBar.addClass(this.toThemeProperty(\"jqx-color-picker-bar-hue\"));\n      }\n\n      this._barImageURL = this._getImageUrl(this.colorBar);\n      this._mapImageURL = this._getImageUrl(this.colorMap);\n\n      this._arrange();\n\n      this.colorBar.children().remove();\n      this.colorBarImageContainer = a(\"<div style='overflow: hidden;'></div>\");\n      this.colorBarImageContainer.width(this.colorBar.width());\n      this.colorBarImageContainer.height(this.colorBar.height());\n      this.colorBarImageContainer.appendTo(this.colorBar);\n      this.colorBarImage = a(\"<img/>\");\n      this.colorBarImage.appendTo(this.colorBarImageContainer);\n      this.colorBarImage.attr(\"src\", this._barImageURL);\n      this.colorBar.css(\"background-image\", \"none\");\n      this.colorBarImage.attr(\"width\", this.colorBar.width());\n      this.colorBarImage.attr(\"height\", this.colorBar.height());\n      this.colorBarPointer.appendTo(this.colorBar);\n      this.colorMap.children().remove();\n      this.colorMapImage = a(\"<img/>\");\n      this.colorMapImage.appendTo(this.colorMap);\n      this.colorMapImage.attr(\"src\", this._mapImageURL);\n      this.colorMap.css(\"background-image\", \"none\");\n      this.colorMapImage.attr(\"width\", this.colorMap.width());\n      this.colorMapImage.attr(\"height\", this.colorMap.height());\n      this.colorMapImageOverlay = a(\"<img style='position: absolute; left: 0; top: 0;'/>\");\n      this.colorMapImageOverlay.prependTo(this.colorMap);\n      this.colorMapImageOverlay.attr(\"src\", this._mapImageOverlayURL);\n      this.colorMapImageOverlay.attr(\"width\", this.colorMap.width());\n      this.colorMapImageOverlay.attr(\"height\", this.colorMap.height());\n      this.colorMapImageOverlay.css(\"opacity\", 0);\n      this.colorMapPointer.appendTo(this.colorMap);\n\n      if (this.showTransparent) {\n        this.transparent.appendTo(this.colorPanel);\n      }\n\n      this._updateUI();\n\n      this._setPositionFromValue();\n    }\n  });\n\n  a.jqx.color = function (d) {\n    var b = {\n      r: 0,\n      g: 0,\n      b: 0,\n      h: 0,\n      s: 0,\n      v: 0,\n      hex: \"\",\n      hexToRgb: function (i) {\n        i = this.validateHex(i);\n        var h = \"00\",\n            f = \"00\",\n            e = \"00\";\n\n        if (i.length == 6) {\n          h = i.substring(0, 2);\n          f = i.substring(2, 4);\n          e = i.substring(4, 6);\n        } else {\n          if (i.length > 4) {\n            h = i.substring(4, i.length);\n            i = i.substring(0, 4);\n          }\n\n          if (i.length > 2) {\n            f = i.substring(2, i.length);\n            i = i.substring(0, 2);\n          }\n\n          if (i.length > 0) {\n            e = i.substring(0, i.length);\n          }\n        }\n\n        return {\n          r: this.hexToInt(h),\n          g: this.hexToInt(f),\n          b: this.hexToInt(e)\n        };\n      },\n      validateHex: function (e) {\n        e = new String(e).toUpperCase();\n        e = e.replace(/[^A-F0-9]/g, \"0\");\n\n        if (e.length > 6) {\n          e = e.substring(0, 6);\n        }\n\n        return e;\n      },\n      webSafeDec: function (e) {\n        e = Math.round(e / 51);\n        e *= 51;\n        return e;\n      },\n      hexToWebSafe: function (i) {\n        var h, f, e;\n\n        if (i.length == 3) {\n          h = i.substring(0, 1);\n          f = i.substring(1, 1);\n          e = i.substring(2, 1);\n        } else {\n          h = i.substring(0, 2);\n          f = i.substring(2, 4);\n          e = i.substring(4, 6);\n        }\n\n        return this.intToHex(this.webSafeDec(this.hexToInt(h))) + this.intToHex(this.webSafeDec(this.hexToInt(f))) + this.intToHex(this.webSafeDec(this.hexToInt(e)));\n      },\n      rgbToWebSafe: function (e) {\n        return {\n          r: this.webSafeDec(e.r),\n          g: this.webSafeDec(e.g),\n          b: this.webSafeDec(e.b)\n        };\n      },\n      rgbToHex: function (e) {\n        return this.intToHex(e.r) + this.intToHex(e.g) + this.intToHex(e.b);\n      },\n      intToHex: function (f) {\n        var e = parseInt(f).toString(16);\n\n        if (e.length == 1) {\n          e = \"0\" + e;\n        }\n\n        return e.toUpperCase();\n      },\n      hexToInt: function (e) {\n        return parseInt(e, 16);\n      },\n      hslToRgb: function (v) {\n        var n = parseInt(v.h) / 360;\n        var w = parseInt(v.s) / 100;\n        var k = parseInt(v.l) / 100;\n\n        if (k <= 0.5) {\n          var f = k * (1 + w);\n        } else {\n          var f = k + w - k * w;\n        }\n\n        var i = 2 * k - f;\n        var t = n + 1 / 3;\n        var j = n;\n        var m = n - 1 / 3;\n        var e = Math.round(this.hueToRgb(i, f, t) * 255);\n        var o = Math.round(this.hueToRgb(i, f, j) * 255);\n        var u = Math.round(this.hueToRgb(i, f, m) * 255);\n        return {\n          r: e,\n          g: o,\n          b: u\n        };\n      },\n      hueToRgb: function (g, f, e) {\n        if (e < 0) {\n          e += 1;\n        } else {\n          if (e > 1) {\n            e -= 1;\n          }\n        }\n\n        if (e * 6 < 1) {\n          return g + (f - g) * e * 6;\n        } else {\n          if (e * 2 < 1) {\n            return f;\n          } else {\n            if (e * 3 < 2) {\n              return g + (f - g) * (2 / 3 - e) * 6;\n            } else {\n              return g;\n            }\n          }\n        }\n      },\n      rgbToHsv: function (i) {\n        var l = i.r / 255;\n        var k = i.g / 255;\n        var f = i.b / 255;\n        var h = {\n          h: 0,\n          s: 0,\n          v: 0\n        };\n        var j = 0;\n        var e = 0;\n\n        if (l >= k && l >= f) {\n          e = l;\n          j = k > f ? f : k;\n        } else {\n          if (k >= f && k >= l) {\n            e = k;\n            j = l > f ? f : l;\n          } else {\n            e = f;\n            j = k > l ? l : k;\n          }\n        }\n\n        h.v = e;\n        h.s = e ? (e - j) / e : 0;\n\n        if (!h.s) {\n          h.h = 0;\n        } else {\n          var m = e - j;\n\n          if (l == e) {\n            h.h = (k - f) / m;\n          } else {\n            if (k == e) {\n              h.h = 2 + (f - l) / m;\n            } else {\n              h.h = 4 + (l - k) / m;\n            }\n          }\n\n          h.h = parseInt(h.h * 60);\n\n          if (h.h < 0) {\n            h.h += 360;\n          }\n        }\n\n        h.s = parseInt(h.s * 100);\n        h.v = parseInt(h.v * 100);\n        return h;\n      },\n      hsvToRgb: function (l) {\n        var n = {\n          r: 0,\n          g: 0,\n          b: 0\n        };\n        var k = l.h;\n        var u = l.s;\n        var o = l.v;\n\n        if (u == 0) {\n          if (o == 0) {\n            n.r = n.g = n.b = 0;\n          } else {\n            n.r = n.g = n.b = parseInt(o * 255 / 100);\n          }\n        } else {\n          if (k == 360) {\n            k = 0;\n          }\n\n          k /= 60;\n          u = u / 100;\n          o = o / 100;\n          var j = parseInt(k);\n          var m = k - j;\n          var g = o * (1 - u);\n          var e = o * (1 - u * m);\n          var r = o * (1 - u * (1 - m));\n\n          switch (j) {\n            case 0:\n              n.r = o;\n              n.g = r;\n              n.b = g;\n              break;\n\n            case 1:\n              n.r = e;\n              n.g = o;\n              n.b = g;\n              break;\n\n            case 2:\n              n.r = g;\n              n.g = o;\n              n.b = r;\n              break;\n\n            case 3:\n              n.r = g;\n              n.g = e;\n              n.b = o;\n              break;\n\n            case 4:\n              n.r = r;\n              n.g = g;\n              n.b = o;\n              break;\n\n            case 5:\n              n.r = o;\n              n.g = g;\n              n.b = e;\n              break;\n          }\n\n          n.r = parseInt(n.r * 255);\n          n.g = parseInt(n.g * 255);\n          n.b = parseInt(n.b * 255);\n        }\n\n        return n;\n      },\n      setRgb: function (h, f, e) {\n        var j = function (g) {\n          if (g < 0 || g > 255) {\n            return 0;\n          }\n\n          if (isNaN(parseInt(g))) {\n            return 0;\n          }\n\n          return g;\n        };\n\n        this.r = j(h);\n        this.g = j(f);\n        this.b = j(e);\n        var i = this.rgbToHsv(this);\n        this.h = i.h;\n        this.s = i.s;\n        this.v = i.v;\n        this.hex = this.rgbToHex(this);\n      },\n      setHsl: function (g, f, e) {\n        this.h = g;\n        this.s = f;\n        this.l = e;\n        var i = this.hslToRgb(this);\n        this.r = i.r;\n        this.g = i.g;\n        this.b = i.b;\n        this.hex = this.rgbToHex(i);\n      },\n      setHsv: function (g, f, e) {\n        this.h = g;\n        this.s = f;\n        this.v = e;\n        var i = this.hsvToRgb(this);\n        this.r = i.r;\n        this.g = i.g;\n        this.b = i.b;\n        this.hex = this.rgbToHex(i);\n      },\n      setHex: function (e) {\n        this.hex = e;\n        var g = this.hexToRgb(this.hex);\n        this.r = g.r;\n        this.g = g.g;\n        this.b = g.b;\n        var f = this.rgbToHsv(g);\n        this.h = f.h;\n        this.s = f.s;\n        this.v = f.v;\n      }\n    };\n\n    if (d) {\n      if (d.hex) {\n        var c = b.validateHex(d.hex);\n        b.setHex(c);\n      } else {\n        if (d.r) {\n          b.setRgb(d.r, d.g, d.b);\n        } else {\n          if (d.h) {\n            b.setHsv(d.h, d.s, d.v);\n          } else {\n            if (d.rgb) {\n              b.setRgb(d.rgb.r, d.rgb.g, d.rgb.b);\n            }\n          }\n        }\n      }\n    }\n\n    return b;\n  };\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx.jqxWidget(\"jqxMaterialColorPicker\", \"\", {});\n  a.extend(a.jqx._jqxMaterialColorPicker.prototype, {\n    defineInstance: function () {\n      var b = {\n        events: [\"colorchange\"]\n      };\n\n      if (this === a.jqx._jqxMaterialColorPicker.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function () {\n      var b = this;\n\n      b._renderGrid();\n\n      b._addHandlers();\n    },\n    _renderGrid: function () {\n      var c = this;\n      var b = document.createElement(\"div\");\n\n      c._renderShades();\n\n      c._renderColorPalette();\n\n      c._renderColorLabels();\n\n      b.classList = \"jqx-labels-and-palette\";\n      b.appendChild(c._colorLabelsContainer);\n      b.appendChild(c._paletteContainer);\n      c.element.appendChild(b);\n    },\n    _renderColorPalette: function () {\n      var h = this;\n      var b = [[\"#ffebee\", \"#ffcdd2\", \"#ef9a9a\", \"#e57373\", \"#ef5350\", \"#f44336\", \"#e53935\", \"#d32f2f\", \"#c62828\", \"#b71c1c\", \"#ff8a80\", \"#ff5252\", \"#ff1744\", \"#d50000\"], [\"#fce4ec\", \"#f8bbd0\", \"#f48fb1\", \"#f06292\", \"#ec407a\", \"#e91e63\", \"#d81b60\", \"#c2185b\", \"#ad1457\", \"#880e4f\", \"#ff80ab\", \"#ff4081\", \"#f50057\", \"#c51162\"], [\"#f3e5f5\", \"#e1bee7\", \"#ce93d8\", \"#ba68c8\", \"#ab47bc\", \"#9c27b0\", \"#8e24aa\", \"#7b1fa2\", \"#6a1b9a\", \"#4a148c\", \"#ea80fc\", \"#e040fb\", \"#d500f9\", \"#aa00ff\"], [\"#ede7f6\", \"#d1c4e9\", \"#b39ddb\", \"#9575cd\", \"#7e57c2\", \"#673ab7\", \"#5e35b1\", \"#512da8\", \"#4527a0\", \"#311b92\", \"#b388ff\", \"#7c4dff\", \"#651fff\", \"#6200ea\"], [\"#e8eaf6\", \"#c5cae9\", \"#9fa8da\", \"#7986cb\", \"#5c6bc0\", \"#3f51b5\", \"#3949ab\", \"#303f9f\", \"#283593\", \"#1a237e\", \"#8c9eff\", \"#536dfe\", \"#3d5afe\", \"#304ffe\"], [\"#e3f2fd\", \"#bbdefb\", \"#90caf9\", \"#64b5f6\", \"#42a5f5\", \"#2196f3\", \"#1e88e5\", \"#1976d2\", \"#1565c0\", \"#0d47a1\", \"#82b1ff\", \"#448aff\", \"#2979ff\", \"#2962ff\"], [\"#e1f5fe\", \"#b3e5fc\", \"#81d4fa\", \"#4fc3f7\", \"#29b6f6\", \"#03a9f4\", \"#039be5\", \"#0288d1\", \"#0277bd\", \"#01579b\", \"#80d8ff\", \"#40c4ff\", \"#00b0ff\", \"#0091ea\"], [\"#e0f7fa\", \"#b2ebf2\", \"#80deea\", \"#4dd0e1\", \"#26c6da\", \"#00bcd4\", \"#00acc1\", \"#0097a7\", \"#00838f\", \"#006064\", \"#84ffff\", \"#18ffff\", \"#00e5ff\", \"#00b8d4\"], [\"#e0f2f1\", \"#b2dfdb\", \"#80cbc4\", \"#4db6ac\", \"#26a69a\", \"#009688\", \"#00897b\", \"#00796b\", \"#00695c\", \"#004d40\", \"#a7ffeb\", \"#64ffda\", \"#1de9b6\", \"#00bfa5\"], [\"#e8f5e9\", \"#c8e6c9\", \"#a5d6a7\", \"#81c784\", \"#66bb6a\", \"#4caf50\", \"#43a047\", \"#388e3c\", \"#2e7d32\", \"#1b5e20\", \"#b9f6ca\", \"#69f0ae\", \"#00e676\", \"#00c853\"], [\"#f1f8e9\", \"#dcedc8\", \"#c5e1a5\", \"#aed581\", \"#9ccc65\", \"#8bc34a\", \"#7cb342\", \"#689f38\", \"#558b2f\", \"#33691e\", \"#ccff90\", \"#b2ff59\", \"#76ff03\", \"#64dd17\"], [\"#f9fbe7\", \"#f0f4c3\", \"#e6ee9c\", \"#dce775\", \"#d4e157\", \"#cddc39\", \"#c0ca33\", \"#afb42b\", \"#9e9d24\", \"#827717\", \"#f4ff81\", \"#eeff41\", \"#c6ff00\", \"#aeea00\"], [\"#fffde7\", \"#fff9c4\", \"#fff59d\", \"#fff176\", \"#ffee58\", \"#ffeb3b\", \"#fdd835\", \"#fbc02d\", \"#f9a825\", \"#f57f17\", \"#ffff8d\", \"#ffff00\", \"#ffea00\", \"#ffd600\"], [\"#fff8e1\", \"#ffecb3\", \"#ffe082\", \"#ffd54f\", \"#ffca28\", \"#ffc107\", \"#ffb300\", \"#ffa000\", \"#ff8f00\", \"#ff6f00\", \"#ffe57f\", \"#ffd740\", \"#ffc400\", \"#ffab00\"], [\"#fff3e0\", \"#ffe0b2\", \"#ffcc80\", \"#ffb74d\", \"#ffa726\", \"#ff9800\", \"#fb8c00\", \"#f57c00\", \"#ef6c00\", \"#e65100\", \"#ffd180\", \"#ffab40\", \"#ff9100\", \"#ff6d00\"], [\"#fbe9e7\", \"#ffccbc\", \"#ffab91\", \"#ff8a65\", \"#ff7043\", \"#ff5722\", \"#f4511e\", \"#e64a19\", \"#d84315\", \"#bf360c\", \"#ff9e80\", \"#ff6e40\", \"#ff3d00\", \"#dd2c00\"], [\"#efebe9\", \"#d7ccc8\", \"#bcaaa4\", \"#a1887f\", \"#8d6e63\", \"#795548\", \"#6d4c41\", \"#5d4037\", \"#4e342e\", \"#3e2723\"], [\"#fafafa\", \"#f5f5f5\", \"#eeeeee\", \"#e0e0e0\", \"#bdbdbd\", \"#9e9e9e\", \"#757575\", \"#616161\", \"#424242\", \"#212121\"], [\"#eceff1\", \"#cfd8dc\", \"#b0bec5\", \"#90a4ae\", \"#78909c\", \"#607d8b\", \"#546e7a\", \"#455a64\", \"#37474f\", \"#263238\"]];\n      var g = document.createElement(\"div\");\n\n      for (var d = 0, f = b.length; d < f; d++) {\n        var c = b[d];\n\n        var e = h._renderRow(c, \"jqx-color-cell\", false);\n\n        g.appendChild(e);\n      }\n\n      g.className = \"jqx-palette\";\n      h._paletteContainer = g;\n    },\n    _renderShades: function () {\n      var d = this;\n      var e = document.createElement(\"div\");\n      var b = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, \"A 100\", \"A 200\", \"A 400\", \"A 700\"];\n\n      var c = d._renderRow(b, \"jqx-shade-cell\", true);\n\n      e.className = \"jqx-shades\";\n      e.appendChild(c);\n      d.element.appendChild(e);\n    },\n    _renderColorLabels: function () {\n      var d = this;\n      var c = document.createElement(\"div\");\n      var e = [\"Red\", \"Pink\", \"Purple\", \"Deep Purple\", \"Indigo\", \"Blue\", \"Light Blue\", \"Cyan\", \"Teal\", \"Green\", \"Light Green\", \"Lime\", \"Yellow\", \"Amber\", \"Orange\", \"Deep Orange\", \"Brown\", \"Grey\", \"Blue Grey\"];\n\n      var b = d._renderRow(e, \"jqx-color-label\", true);\n\n      c.className = \"jqx-color-labels\";\n      c.appendChild(b);\n      d._colorLabelsContainer = c;\n    },\n    _renderRow: function (i, h, c) {\n      var f = document.createElement(\"ul\");\n\n      for (var e = 0, g = i.length; e < g; e++) {\n        var d = i[e];\n        var b = document.createElement(\"li\");\n\n        if (c) {\n          b.innerHTML = d;\n        } else {\n          b.style.background = d;\n          b.setAttribute(\"data-color\", d);\n        }\n\n        b.className = h;\n        f.appendChild(b);\n      }\n\n      return f;\n    },\n    _addHandlers: function () {\n      var b = this;\n      this.host.find(\".jqx-color-cell\").on(\"click\", function () {\n        b._currentColorHex = event.target.getAttribute(\"data-color\");\n        b._currentColorRgb = event.target.style.background;\n\n        b._raiseEvent(0, {\n          color: b.getColor()\n        });\n      });\n    },\n    _raiseEvent: function (g, c) {\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[g];\n      var e = c ? c : {};\n      e.owner = this;\n      var f = new a.Event(d);\n      f.owner = this;\n      f.args = e;\n      var b = this.host.trigger(f);\n      return b;\n    },\n    getColor: function () {\n      var c = this;\n\n      var b = c._currentColorRgb.match(/\\d+/g);\n\n      return {\n        hex: c._currentColorHex.substring(1),\n        r: parseInt(b[0]),\n        g: parseInt(b[1]),\n        b: parseInt(b[2])\n      };\n    },\n    destroy: function () {\n      var b = this;\n      b.host.remove();\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}