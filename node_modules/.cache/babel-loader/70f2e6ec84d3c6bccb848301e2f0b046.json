{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxTooltip\", \"\", {});\n  a.extend(a.jqx._jqxTooltip.prototype, {\n    defineInstance: function () {\n      var b = {\n        width: \"auto\",\n        height: \"auto\",\n        position: \"default\",\n        enableBrowserBoundsDetection: true,\n        content: \"\",\n        left: 0,\n        top: 0,\n        absolutePositionX: 0,\n        absolutePositionY: 0,\n        trigger: \"hover\",\n        showDelay: 100,\n        autoHide: true,\n        autoHideDelay: 3000,\n        closeOnClick: true,\n        disabled: false,\n        animationShowDelay: 200,\n        animationHideDelay: \"fast\",\n        showArrow: true,\n        name: \"\",\n        opacity: 0.9,\n        rtl: false,\n        _isOpen: false,\n        selector: null,\n        opening: null,\n        value: null,\n        _eventsMap: {\n          mousedown: a.jqx.mobile.getTouchEventName(\"touchstart\"),\n          mouseup: a.jqx.mobile.getTouchEventName(\"touchend\")\n        },\n        events: [\"open\", \"close\", \"opening\", \"closing\"]\n      };\n\n      if (this === a.jqx._jqxTooltip.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function () {\n      this._isTouchDevice = a.jqx.mobile.isTouchDevice();\n      var d = a.data(document.body, \"_tooltipIDArray\" + this.name);\n\n      if (!d) {\n        this.IDArray = [];\n        a.data(document.body, \"_tooltipIDArray\" + this.name, this.IDArray);\n      } else {\n        this.IDArray = d;\n      }\n\n      var c = this._generatekey();\n\n      var b = \"jqxtooltip\" + c;\n      this.IDArray.push({\n        tooltipID: b,\n        tooltipHost: this.host\n      });\n      var f = document.createElement(\"div\");\n      f.setAttribute(\"id\", b);\n      f.innerHTML = '<div id=\"' + b + 'Main\"><div id=\"' + b + 'Text\"></div></div><div id=\"' + b + 'Arrow\"></div>';\n\n      if (a.jqx.browser.msie) {\n        f.className = this.toThemeProperty(\"jqx-noshadow\");\n      }\n\n      document.body.appendChild(f);\n      this._tooltip = f;\n      this._tooltipHelper = a(f);\n\n      if (this._tooltipHelper.initAnimate) {\n        this._tooltipHelper.initAnimate();\n      }\n\n      f.style.visibility = \"hidden\";\n      f.style.display = \"none\";\n      f.style.opacity = 0;\n      f.style.zIndex = 99999;\n      var e = document.getElementById(b + \"Arrow\");\n      this._arrow = e;\n\n      if (this.showArrow === false) {\n        e.style.visibility = \"hidden\";\n        e.style.display = \"none\";\n      }\n\n      this._main = document.getElementById(b + \"Main\");\n      this._text = document.getElementById(b + \"Text\");\n\n      this._setTheme();\n\n      this._setSize();\n\n      this._setContent();\n\n      if (this.disabled === false) {\n        this._trigger();\n\n        if (this.closeOnClick === true) {\n          this._clickHide();\n        }\n      }\n    },\n    open: function () {\n      if (arguments) {\n        if (arguments.length) {\n          if (arguments.length === 2) {\n            this.position = \"absolute\";\n            this.left = arguments[0];\n            this.top = arguments[1];\n            this.absolutePositionX = arguments[0];\n            this.absolutePositionY = arguments[1];\n          }\n        }\n      }\n\n      if (this.disabled === false && this._id() !== \"removed\") {\n        if (this.position === \"mouse\" || this.position === \"mouseenter\") {\n          var b = this.position;\n          this.position = \"default\";\n\n          this._raiseEvent(\"2\");\n\n          this._setPosition();\n\n          this._animateShow();\n\n          this.position = b;\n        } else {\n          this._raiseEvent(\"2\");\n\n          this._setPosition();\n\n          this._animateShow();\n        }\n      }\n    },\n    close: function (c) {\n      var e = this,\n          f = a.jqx.browser.msie && a.jqx.browser.version < 9;\n\n      if (typeof c === \"object\" && a.isEmptyObject(c)) {\n        c = this.animationHideDelay;\n      }\n\n      var b = parseFloat(e._tooltip.style.opacity);\n\n      var d = function () {\n        clearTimeout(e.autoHideTimeout);\n\n        e._raiseEvent(\"3\");\n\n        e._tooltipHelper.animate({\n          opacity: 0\n        }, c, function () {\n          e._tooltip.style.visibility = \"hidden\";\n          e._tooltip.style.display = \"none\";\n\n          e._raiseEvent(\"1\");\n\n          e._isOpen = false;\n        });\n      };\n\n      if (this._isOpen === false && b !== 0) {\n        d();\n        return;\n      }\n\n      if (this._isOpen === true && (!f && b === this.opacity || f)) {\n        d();\n      }\n    },\n    destroy: function () {\n      var c = this.IDArray.length;\n\n      this._removeHandlers();\n\n      this._tooltipHelper.remove();\n\n      for (var b = 0; b < c; b++) {\n        if (this.IDArray[b].tooltipHost === this.host) {\n          this.IDArray.splice(b, 1);\n          break;\n        }\n      }\n\n      this.host.removeData(\"jqxTooltip\");\n    },\n    refresh: function (d) {\n      if (d === true) {\n        return;\n      }\n\n      var c = this;\n\n      if (this.rtl) {\n        c._text.className += \" \" + c.toThemeProperty(\"jqx-rtl\");\n        c._text.style.direction = \"rtl\";\n      }\n\n      var b = parseFloat(c._tooltip.style.opacity);\n\n      if (this._id() !== \"removed\") {\n        if (this.disabled === true && this._isOpen === true && b === this.opacity) {\n          clearTimeout(this.autoHideTimeout);\n\n          this._tooltipHelper.animate({\n            opacity: 0\n          }, this.animationHideDelay, function () {\n            c._tooltip.style.visibility = \"hidden\";\n            c._tooltip.style.display = \"none\";\n            c._isOpen = false;\n          });\n        }\n\n        this._setTheme();\n\n        this._setContent();\n\n        this._setSize();\n\n        if (this.position !== \"mouse\" && this.position !== \"mouseenter\") {\n          this._setPosition();\n        }\n\n        this._removeHandlers();\n\n        if (this.disabled === false) {\n          this._trigger();\n\n          if (this.closeOnClick === true) {\n            this._clickHide();\n          }\n        }\n      }\n    },\n    propertyChangedHandler: function (b, c, e, d) {\n      if (c === \"content\") {\n        this.changeContentFlag = true;\n      }\n\n      b.refresh();\n    },\n    _raiseEvent: function (g, e) {\n      var c = this.events[g];\n      var f = new a.Event(c);\n      f.owner = this;\n      f.args = e;\n      var b;\n\n      try {\n        b = this.host.trigger(f);\n      } catch (d) {}\n\n      return b;\n    },\n    _generatekey: function () {\n      var b = function () {\n        return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n      };\n\n      return b() + b();\n    },\n    _id: function () {\n      var d, b;\n      var e = this.IDArray.length;\n\n      for (var c = 0; c < e; c++) {\n        if (this.IDArray[c].tooltipHost === this.host) {\n          d = this.IDArray[c].tooltipID;\n          b = \"#\" + d;\n          break;\n        }\n      }\n\n      if (b === undefined) {\n        b = \"removed\";\n      }\n\n      return b;\n    },\n    _setPosition: function (d) {\n      var j = this,\n          o = j._tooltip;\n\n      if (this._isOpen === false && parseFloat(o.style.opacity) === 0 || this.changeContentFlag === true) {\n        if (!d && (this.position === \"mouse\" || this.position === \"mouseenter\")) {\n          return;\n        }\n\n        o.style.display = \"block\";\n        this.changeContentFlag = false;\n        this.documentTop = document.documentElement.scrollTop;\n        this.documentLeft = document.documentElement.scrollLeft;\n        this.windowWidth = window.innerWidth;\n        this.windowHeight = window.innerHeight;\n        this.hostWidth = j.element.offsetWidth;\n        this.hostHeight = j.element.offsetHeight;\n        this.tooltipWidth = o.offsetWidth;\n        this.tooltipHeight = o.offsetHeight;\n        this.hostOffset = this.host.offset();\n        this.tooltipOffset = j._tooltipHelper.offset();\n        this.defaultOffset = 30;\n        this.offsetHorizontal = parseInt(this.left, 10);\n        this.offsetVertical = parseInt(this.top, 10);\n        var n = j._arrow,\n            i = a(n),\n            e = j._main,\n            b = a(e),\n            f = e.offsetWidth,\n            l = e.offsetHeight,\n            c;\n        this.arrowSize = 5;\n        this.tooltipMainOffset = b.offset();\n        this.tooltipArrowOffset = {};\n\n        switch (this.position) {\n          case \"top\":\n            this.tooltipOffset.left = this.hostOffset.left + this.hostWidth / 2 - this.tooltipWidth / 2 + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = this.arrowSize + \"px \" + this.arrowSize + \"px 0px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (f / 2 - this.arrowSize);\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"bottom\":\n            this.tooltipOffset.left = this.hostOffset.left + this.hostWidth / 2 - this.tooltipWidth / 2 + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = \"0 \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (f / 2 - this.arrowSize);\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"left\":\n            if (window.getComputedStyle) {\n              c = window.getComputedStyle(e);\n            } else {\n              c = e.currentStyle;\n            }\n\n            this.tooltipOffset.left = this.hostOffset.left - this.tooltipWidth - this.arrowSize + this.offsetHorizontal - (parseInt(c.borderLeftWidth, 10) + parseInt(c.borderRightWidth, 10));\n            this.tooltipOffset.top = this.hostOffset.top + this.hostHeight / 2 - this.tooltipHeight / 2 + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-t-b\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-l-r\");\n            n.style.borderWidth = this.arrowSize + \"px 0px \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n            this.tooltipMainOffset = b.offset();\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + f;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l / 2 - this.arrowSize;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"right\":\n            this.tooltipOffset.left = this.hostOffset.left + this.hostWidth + this.arrowSize + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top + this.hostHeight / 2 - this.tooltipHeight / 2 + this.offsetVertical;\n            this.tooltipOffset.top = parseInt(this.tooltipOffset.top, 10);\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-t-b\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-l-r\");\n            n.style.borderWidth = this.arrowSize + \"px \" + this.arrowSize + \"px \" + this.arrowSize + \"px 0px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left - this.arrowSize;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top + e.offsetHeight / 2 - this.arrowSize;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"top-left\":\n            this.tooltipOffset.left = this.hostOffset.left + this.defaultOffset - this.tooltipWidth + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = this.arrowSize + \"px \" + this.arrowSize + \"px  0px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + f - 6 * this.arrowSize;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"bottom-left\":\n            this.tooltipOffset.left = this.hostOffset.left + this.defaultOffset - this.tooltipWidth + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = \"0 \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + f - 6 * this.arrowSize;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"top-right\":\n            this.tooltipOffset.left = this.hostOffset.left + this.hostWidth - this.defaultOffset + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = this.arrowSize + \"px \" + this.arrowSize + \"px  0px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + 4 * this.arrowSize;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"bottom-right\":\n            this.tooltipOffset.left = this.hostOffset.left + this.hostWidth - this.defaultOffset + this.offsetHorizontal;\n            this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize + this.offsetVertical;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = \"0 \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + 4 * this.arrowSize;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n\n          case \"absolute\":\n            j._tooltipHelper.offset({\n              top: this.absolutePositionY,\n              left: this.absolutePositionX\n            });\n\n            n.style.borderWidth = \"0px\";\n            break;\n\n          case \"mouse\":\n            if (this._isTouchDevice === false) {\n              switch (this.trigger) {\n                case \"hover\":\n                  if (this.mouseHoverTimeout) {\n                    clearTimeout(this.mouseHoverTimeout);\n                  }\n\n                  this.mouseHoverTimeout = setTimeout(function () {\n                    j.tooltipOffset.left = d.pageX + 10;\n                    j.tooltipOffset.top = d.pageY + 10;\n\n                    j._detectBrowserBounds();\n                  }, this.showDelay);\n                  break;\n\n                case \"click\":\n                  this.tooltipOffset.left = d.pageX + 10;\n                  this.tooltipOffset.top = d.pageY + 10;\n\n                  this._detectBrowserBounds();\n\n                  break;\n              }\n            } else {\n              var m = d.pageX;\n              var k = d.pageY;\n\n              if (d.originalEvent) {\n                var g;\n\n                if (d.originalEvent.touches && d.originalEvent.touches.length) {\n                  g = d.originalEvent.touches[0];\n                } else {\n                  if (d.originalEvent.changedTouches && d.originalEvent.changedTouches.length) {\n                    g = d.originalEvent.changedTouches[0];\n                  }\n                }\n\n                if (g !== undefined) {\n                  m = g.pageX;\n                  k = g.pageY;\n                }\n              }\n\n              this.tooltipOffset.left = m + 10;\n              this.tooltipOffset.top = k + 10;\n\n              this._detectBrowserBounds();\n            }\n\n            n.style.borderWidth = \"0px\";\n            break;\n\n          case \"mouseenter\":\n            var h = {\n              top: d.pageY,\n              left: d.pageX\n            };\n\n            if (h.top < this.hostOffset.top + 10 && h.top > this.hostOffset.top - 10) {\n              this.tooltipOffset.left = h.left - this.tooltipWidth / 2;\n              this.tooltipOffset.top = this.hostOffset.top - this.tooltipHeight - this.arrowSize;\n\n              this._detectBrowserBounds();\n\n              this.tooltipMainOffset = b.offset();\n\n              j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n              n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n              n.style.borderWidth = this.arrowSize + \"px \" + this.arrowSize + \"px  0px\";\n              this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (f / 2 - this.arrowSize);\n              this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l;\n              i.offset({\n                top: this.tooltipArrowOffset.top,\n                left: this.tooltipArrowOffset.left\n              });\n            } else {\n              if (h.top < this.hostOffset.top + this.hostHeight + 10 && h.top > this.hostOffset.top + this.hostHeight - 10) {\n                this.tooltipOffset.left = h.left - this.tooltipWidth / 2;\n                this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize;\n\n                this._detectBrowserBounds();\n\n                this.tooltipMainOffset = b.offset();\n\n                j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n                n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n                n.style.borderWidth = \"0 \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n                this.tooltipArrowOffset.left = this.tooltipMainOffset.left + (f / 2 - this.arrowSize);\n                this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;\n                i.offset({\n                  top: this.tooltipArrowOffset.top,\n                  left: this.tooltipArrowOffset.left\n                });\n              } else {\n                if (h.left < this.hostOffset.left + 10 && h.left > this.hostOffset.left - 10) {\n                  if (window.getComputedStyle) {\n                    c = window.getComputedStyle(e);\n                  } else {\n                    c = e.currentStyle;\n                  }\n\n                  this.tooltipOffset.left = this.hostOffset.left - this.tooltipWidth - this.arrowSize - (parseInt(c.borderLeftWidth, 10) + parseInt(c.borderRightWidth, 10));\n                  this.tooltipOffset.top = h.top - this.tooltipHeight / 2;\n\n                  this._detectBrowserBounds();\n\n                  this.tooltipMainOffset = b.offset();\n\n                  j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-t-b\"));\n\n                  n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-l-r\");\n                  n.style.borderWidth = this.arrowSize + \"px 0px \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n                  this.tooltipMainOffset = b.offset();\n                  this.tooltipArrowOffset.left = this.tooltipMainOffset.left + f;\n                  this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l / 2 - this.arrowSize;\n                  i.offset({\n                    top: this.tooltipArrowOffset.top,\n                    left: this.tooltipArrowOffset.left\n                  });\n                } else {\n                  if (h.left < this.hostOffset.left + this.hostWidth + 10 && h.left > this.hostOffset.left + this.hostWidth - 10) {\n                    this.tooltipOffset.left = this.hostOffset.left + this.hostWidth + this.arrowSize;\n                    this.tooltipOffset.top = h.top - this.tooltipHeight / 2;\n\n                    this._detectBrowserBounds();\n\n                    this.tooltipMainOffset = b.offset();\n\n                    j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-t-b\"));\n\n                    n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-l-r\");\n                    n.style.borderWidth = this.arrowSize + \"px \" + this.arrowSize + \"px \" + this.arrowSize + \"px 0px\";\n                    this.tooltipMainOffset = b.offset();\n                    this.tooltipArrowOffset.left = this.tooltipMainOffset.left - this.arrowSize;\n                    this.tooltipArrowOffset.top = this.tooltipMainOffset.top + l / 2 - this.arrowSize;\n                    i.offset({\n                      top: this.tooltipArrowOffset.top,\n                      left: this.tooltipArrowOffset.left\n                    });\n                  }\n                }\n              }\n            }\n\n            break;\n\n          case \"default\":\n            this.tooltipOffset.left = this.hostOffset.left + this.hostWidth - this.defaultOffset;\n            this.tooltipOffset.top = this.hostOffset.top + this.hostHeight + this.arrowSize;\n\n            this._detectBrowserBounds();\n\n            this.tooltipMainOffset = b.offset();\n\n            j._removeClass(n, j.toThemeProperty(\"jqx-tooltip-arrow-l-r\"));\n\n            n.className += \" \" + j.toThemeProperty(\"jqx-tooltip-arrow-t-b\");\n            n.style.borderWidth = \"0 \" + this.arrowSize + \"px \" + this.arrowSize + \"px\";\n            this.tooltipArrowOffset.left = this.tooltipMainOffset.left + 4 * this.arrowSize;\n            this.tooltipArrowOffset.top = this.tooltipMainOffset.top - this.arrowSize;\n            i.offset({\n              top: this.tooltipArrowOffset.top,\n              left: this.tooltipArrowOffset.left\n            });\n            break;\n        }\n      }\n    },\n    _setContent: function () {\n      this._text.innerHTML = this.content;\n    },\n    opened: function () {\n      return this._isOpen && this.host.css(\"display\") == \"block\" && this.host.css(\"visibility\") == \"visible\";\n    },\n    _animateShow: function () {\n      this._closeAll();\n\n      clearTimeout(this.autoHideTimeout);\n      var b = parseFloat(this._tooltip.style.opacity);\n\n      if (this._isOpen === false && b === 0) {\n        var c = this;\n        c._tooltip.style.visibility = \"visible\";\n        c._tooltip.style.display = \"block\";\n        c._tooltip.style.opacity = 0;\n\n        if (this.opening) {\n          var d = this.opening(this);\n\n          if (d === false) {\n            return;\n          }\n        }\n\n        c._tooltipHelper.animate({\n          opacity: this.opacity\n        }, this.animationShowDelay, function () {\n          c._raiseEvent(\"0\");\n\n          c._isOpen = true;\n          c.openedTooltip = c;\n          a.data(document.body, \"_openedTooltip\" + c.name, c);\n\n          if (c.autoHideTimeout) {\n            clearTimeout(c.autoHideTimeout);\n          }\n\n          if (c.autoHideDelay > 0 && c.autoHide === true) {\n            c.autoHideTimeout = setTimeout(function () {\n              c._autoHide();\n            }, c.autoHideDelay);\n          }\n        });\n      }\n    },\n    _trigger: function () {\n      if (this._id() !== \"removed\") {\n        var c = this;\n        var b = this.host;\n\n        if (this.selector) {\n          b = a(\"#\" + this.selector);\n        }\n\n        if (this._isTouchDevice === false) {\n          switch (this.trigger) {\n            case \"hover\":\n              if (this.position === \"mouse\") {\n                this.addHandler(b, \"mousemove.tooltip\", function (d) {\n                  if (c._enterFlag === 1) {\n                    c._raiseEvent(\"2\");\n\n                    c._setPosition(d);\n\n                    clearTimeout(c.hoverShowTimeout);\n                    c.hoverShowTimeout = setTimeout(function () {\n                      c._animateShow();\n\n                      c._enterFlag = 0;\n                    }, c.showDelay);\n                  }\n                });\n                this.addHandler(b, \"mouseenter.tooltip\", function () {\n                  if (c._leaveFlag !== 0) {\n                    c._enterFlag = 1;\n                  }\n                });\n                this.addHandler(b, \"mouseleave.tooltip\", function (f) {\n                  c._leaveFlag = 1;\n                  clearTimeout(c.hoverShowTimeout);\n\n                  var g = c._tooltipHelper.offset();\n\n                  var e = c._tooltip.offsetWidth;\n                  var d = c._tooltip.offsetHeight;\n\n                  if (parseInt(f.pageX, 10) < parseInt(g.left, 10) || parseInt(f.pageX, 10) > parseInt(g.left, 10) + e) {\n                    c.close();\n                  }\n\n                  if (parseInt(f.pageY, 10) < parseInt(g.top, 10) || parseInt(f.pageY, 10) > parseInt(g.top, 10) + d) {\n                    c.close();\n                  }\n                });\n                this.addHandler(c._tooltipHelper, \"mouseleave.tooltip\", function (d) {\n                  c._checkBoundariesAuto(d);\n\n                  if (c._clickFlag !== 0 && c._autoFlag !== 0) {\n                    c._leaveFlag = 0;\n                  } else {\n                    c._leaveFlag = 1;\n                    c.close();\n                  }\n                });\n              } else {\n                this.addHandler(b, \"mouseenter.tooltip\", function (d) {\n                  clearTimeout(c.hoverShowTimeout);\n                  c.hoverShowTimeout = setTimeout(function () {\n                    c._raiseEvent(\"2\");\n\n                    c._setPosition(d);\n\n                    c._animateShow();\n                  }, c.showDelay);\n                });\n                this.addHandler(b, \"mouseleave.tooltip\", function (g) {\n                  c._leaveFlag = 1;\n                  clearTimeout(c.hoverShowTimeout);\n\n                  if (c.autoHide) {\n                    var e = g.pageX;\n                    var k = g.pageY;\n\n                    var h = c._tooltipHelper.offset();\n\n                    var j = h.left;\n                    var i = h.top;\n                    var f = c._tooltip.offsetWidth;\n                    var d = c._tooltip.offsetHeight;\n\n                    if (parseInt(e, 10) < parseInt(j, 10) || parseInt(e, 10) > parseInt(j, 10) + f || parseInt(k, 10) < parseInt(i, 10) || parseInt(k, 10) > parseInt(i, 10) + d) {\n                      c.close();\n                    }\n                  }\n                });\n                this.addHandler(c._tooltipHelper, \"mouseleave.tooltip\", function (d) {\n                  c._checkBoundariesAuto(d);\n\n                  if (c._clickFlag !== 0 && c._autoFlag !== 0) {\n                    c._leaveFlag = 0;\n                  } else {\n                    c._leaveFlag = 1;\n\n                    if (c.autoHide) {\n                      c.close();\n                    }\n                  }\n                });\n              }\n\n              break;\n\n            case \"click\":\n              this.addHandler(b, \"click.tooltip\", function (d) {\n                if (c.position === \"mouseenter\") {\n                  c.position = \"mouse\";\n                }\n\n                c._raiseEvent(\"2\");\n\n                c._setPosition(d);\n\n                c._animateShow();\n              });\n              break;\n\n            case \"none\":\n              break;\n          }\n        } else {\n          if (this.trigger !== \"none\") {\n            this.addHandler(b, \"touchstart.tooltip\", function (d) {\n              if (c.position === \"mouseenter\") {\n                c.position = \"mouse\";\n              }\n\n              c._raiseEvent(\"2\");\n\n              c._setPosition(d);\n\n              c._animateShow();\n            });\n          }\n        }\n      }\n    },\n    _autoHide: function () {\n      var c = this;\n      var b = parseFloat(c._tooltip.style.opacity);\n\n      if (this.autoHide === true && this._isOpen === true && b >= this.opacity) {\n        c._raiseEvent(\"3\");\n\n        c._tooltipHelper.animate({\n          opacity: 0\n        }, c.animationHideDelay, function () {\n          c._tooltip.style.visibility = \"hidden\";\n          c._tooltip.style.display = \"none\";\n\n          c._raiseEvent(\"1\");\n\n          c._isOpen = false;\n        });\n      }\n    },\n    _clickHide: function () {\n      var b = this;\n      this.addHandler(b._tooltipHelper, \"click.tooltip\", function (c) {\n        b._checkBoundariesClick(c);\n\n        b.close();\n      });\n    },\n    _setSize: function () {\n      var b = this;\n      b._tooltip.style.width = b._toPx(b.width);\n      b._tooltip.style.height = b._toPx(b.height);\n    },\n    resize: function () {\n      this._setSize();\n    },\n    _setTheme: function () {\n      var b = this;\n\n      if (b._tooltip.className.indexOf(\"jqx-tooltip\") === -1) {\n        b._tooltip.className += \" \" + b.toThemeProperty(\"jqx-tooltip jqx-popup\");\n        b._main.className += \" \" + b.toThemeProperty(\"jqx-widget jqx-fill-state-normal jqx-tooltip-main\");\n        b._text.className += \" \" + b.toThemeProperty(\"jqx-widget jqx-fill-state-normal jqx-tooltip-text\");\n\n        if (b._arrow) {\n          b._arrow.className += \" \" + b.toThemeProperty(\"jqx-widget jqx-fill-state-normal jqx-tooltip-arrow\");\n        }\n      }\n    },\n    _initialPosition: function () {\n      var b = this.position;\n      this.position = \"default\";\n\n      this._setPosition();\n\n      this.position = b;\n    },\n    _detectBrowserBounds: function () {\n      var b = this,\n          c = b._tooltipHelper;\n\n      if (this.enableBrowserBoundsDetection) {\n        if (this.tooltipOffset.top < this.documentTop && this.tooltipOffset.left < 0) {\n          c.offset({\n            top: this.documentTop,\n            left: this.documentLeft\n          });\n        } else {\n          if (this.tooltipOffset.top < this.documentTop && this.tooltipOffset.left + this.tooltipWidth > this.windowWidth + this.documentLeft) {\n            c.offset({\n              top: this.documentTop,\n              left: this.windowWidth + this.documentLeft - this.tooltipWidth\n            });\n          } else {\n            if (this.tooltipOffset.top < this.documentTop) {\n              c.offset({\n                top: this.documentTop,\n                left: this.tooltipOffset.left\n              });\n            } else {\n              if (this.tooltipOffset.top + this.tooltipHeight > this.windowHeight + this.documentTop && this.tooltipOffset.left < 0) {\n                c.offset({\n                  top: this.windowHeight + this.documentTop - this.tooltipHeight,\n                  left: this.documentLeft\n                });\n              } else {\n                if (this.tooltipOffset.top + this.tooltipHeight > this.windowHeight + this.documentTop && this.tooltipOffset.left + this.tooltipWidth > this.windowWidth + this.documentLeft) {\n                  c.offset({\n                    top: this.windowHeight + this.documentTop - this.tooltipHeight,\n                    left: this.windowWidth + this.documentLeft - this.tooltipWidth\n                  });\n                } else {\n                  if (this.tooltipOffset.top + this.tooltipHeight > this.windowHeight + this.documentTop) {\n                    c.offset({\n                      top: this.windowHeight + this.documentTop - this.tooltipHeight,\n                      left: this.tooltipOffset.left\n                    });\n                  } else {\n                    if (this.tooltipOffset.left < 0) {\n                      c.offset({\n                        top: this.tooltipOffset.top,\n                        left: this.documentLeft\n                      });\n                    } else {\n                      if (this.tooltipOffset.left + this.tooltipWidth > this.windowWidth + this.documentLeft) {\n                        c.offset({\n                          top: this.tooltipOffset.top,\n                          left: this.windowWidth + this.documentLeft - this.tooltipWidth\n                        });\n                      } else {\n                        c.offset({\n                          top: this.tooltipOffset.top,\n                          left: this.tooltipOffset.left\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        c.offset({\n          top: this.tooltipOffset.top,\n          left: this.tooltipOffset.left\n        });\n      }\n    },\n    _checkBoundaries: function (b) {\n      if (b.pageX >= this.hostOffset.left && b.pageX <= this.hostOffset.left + this.hostWidth && b.pageY >= this.hostOffset.top && b.pageY <= this.hostOffset.top + this.hostHeight) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    _checkBoundariesClick: function (b) {\n      if (this._checkBoundaries(b)) {\n        this._clickFlag = 1;\n      } else {\n        this._clickFlag = 0;\n      }\n    },\n    _checkBoundariesAuto: function (b) {\n      if (this._checkBoundaries(b)) {\n        this._autoFlag = 1;\n      } else {\n        this._autoFlag = 0;\n      }\n    },\n    _removeHandlers: function () {\n      this.removeHandler(this.host, \"mouseenter.tooltip\");\n      this.removeHandler(this.host, \"mousemove.tooltip\");\n      this.removeHandler(this.host, \"mouseleave.tooltip\");\n      this.removeHandler(this.host, \"click.tooltip\");\n      this.removeHandler(this.host, \"touchstart.tooltip\");\n      this.removeHandler(this._tooltipHelper, \"click.tooltip\");\n      this.removeHandler(this._tooltipHelper, \"mouseleave.tooltip\");\n    },\n    _closeAll: function () {\n      for (var c = 0; c < this.IDArray.length; c++) {\n        var d = this.IDArray[c].tooltipID,\n            b = document.getElementById(d);\n\n        if (b !== this._tooltip) {\n          b.style.opacity = 0;\n          b.style.visibility = \"hidden\";\n          b.style.display = \"none\";\n          this._isOpen = false;\n        }\n      }\n    },\n    _toPx: function (b) {\n      if (typeof b === \"number\") {\n        return b + \"px\";\n      } else {\n        return b;\n      }\n    },\n    _removeClass: function (c, b) {\n      a(c).removeClass(b);\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}