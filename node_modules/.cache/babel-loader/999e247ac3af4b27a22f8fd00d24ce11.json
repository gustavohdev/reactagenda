{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxInput\", \"\", {});\n  a.extend(a.jqx._jqxInput.prototype, {\n    defineInstance: function () {\n      var c = this;\n      var b = {\n        disabled: false,\n        filter: c._filter,\n        sort: c._sort,\n        highlight: c._highlight,\n        dropDownWidth: null,\n        renderer: c._renderer,\n        opened: false,\n        $popup: document.createElement(\"ul\"),\n        source: [],\n        roundedCorners: true,\n        searchMode: \"default\",\n        placeHolder: \"\",\n        width: null,\n        height: null,\n        value: \"\",\n        rtl: false,\n        hint: true,\n        displayMember: \"\",\n        valueMember: \"\",\n        events: [\"select\", \"open\", \"close\", \"change\"],\n        popupZIndex: 1000,\n        items: 8,\n        minLength: 1,\n        maxLength: null\n      };\n\n      if (this === a.jqx._jqxInput.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function () {\n      var b = this;\n\n      if (b.host.css(\"display\") === \"none\" || document.body.contains(b.element) === false) {\n        b._initiallyHidden = true;\n      }\n\n      b._popupHelper = a(b.$popup);\n      b.render();\n    },\n    render: function () {\n      var g = this;\n      this.input = this.element;\n\n      if (g.isMaterialized() && this.input instanceof HTMLInputElement) {\n        var d = this.host.children();\n        a.each(d, function (j) {\n          var k = \"jqx-input-group-addon\";\n          a(this).removeClass(g.toThemeProperty(\"jqx-rc-all\"));\n\n          if (j === 0) {\n            k += \" jqx-rc-l\";\n          }\n\n          if (j === d.length - 1) {\n            k += \" jqx-rc-r\";\n          }\n\n          if (this !== g.element) {\n            k += \" jqx-fill-state-normal\";\n          }\n\n          this.className += \" \" + g.toThemeProperty(k);\n        });\n        var i = a(\"<div></div>\");\n        i.addClass(g.toThemeProperty(\"jqx-input-group\"));\n        this.host.after(i);\n        var b = this.element;\n        var h = this.host.data();\n        i.append(b);\n        var c = a(\"<label></label\");\n\n        if (this.hint) {\n          c[0].innerHTML = this.placeHolder;\n        }\n\n        c.addClass(g.toThemeProperty(\"jqx-input-label\"));\n        i.append(c);\n        var f = a(\"<span></span>\");\n        i.append(f);\n        f.addClass(g.toThemeProperty(\"jqx-input-bar\"));\n        i[0].id = this.element.id;\n        this.element.removeAttribute(\"id\");\n        i[0].style.cssText = this.element.style.cssText;\n        g.input = g.element;\n\n        if (!(this.input instanceof HTMLInputElement)) {\n          this.input = this.host.find(\"input\");\n\n          if (this.input.length > 0) {\n            this.input = this.input[0];\n          }\n\n          a(this.input).addClass(this.toThemeProperty(\"jqx-input-widget\"));\n        }\n\n        this.label = c;\n        this.bar = f;\n        this.element.style.cssText = \"\";\n        this.host = i;\n        this.element = i[0];\n        this.host.data(h);\n        var g = this;\n\n        if (g.template) {\n          g.bar.addClass(g.toThemeProperty(\"jqx-\" + g.template));\n          g.label.addClass(g.toThemeProperty(\"jqx-\" + g.template));\n        }\n\n        if (d.length > 0) {\n          g._hasAddons = true;\n        }\n      } else {\n        if (this.element.nodeName.toLowerCase() === \"textarea\") {\n          this.element.style.overflow = \"auto\";\n        } else {\n          if (this.element.nodeName.toLowerCase() === \"div\") {\n            this.baseHost = this.element;\n            var b = g.element.getElementsByTagName(\"input\");\n            var e = false;\n            a.each(b, function () {\n              var j = this.type;\n\n              if (j == null || j === \"text\" || j === \"textarea\") {\n                b = a(this);\n                e = true;\n                return false;\n              }\n            });\n\n            if (!e) {\n              throw new Error(\"jqxInput: Missing Text Input in the Input Group\");\n            }\n\n            if (b.length > 0) {\n              this.baseHost = a(this.element);\n              g.baseElement = g.element;\n              var h = this.host.data();\n              this.host = b;\n              this.element = b[0];\n              g.input = b[0];\n              this.host.data(h);\n              g.baseElement.className += \" \" + g.toThemeProperty(\"jqx-widget jqx-rc-all jqx-input-group\");\n              var d = this.baseHost.children();\n              a.each(d, function (j) {\n                var k = \"jqx-input-group-addon\";\n                a(this).removeClass(g.toThemeProperty(\"jqx-rc-all\"));\n\n                if (j === 0) {\n                  k += \" jqx-rc-l\";\n                }\n\n                if (j === d.length - 1) {\n                  k += \" jqx-rc-r\";\n                }\n\n                if (this !== g.element) {\n                  k += \" jqx-fill-state-normal\";\n                }\n\n                this.className += \" \" + g.toThemeProperty(k);\n              });\n            }\n          }\n        }\n      }\n\n      this.addHandlers();\n\n      if (this.rtl) {\n        g.element.className += \" \" + g.toThemeProperty(\"jqx-rtl\");\n      }\n\n      g.element.setAttribute(\"role\", \"textbox\");\n      a.jqx.aria(this, \"aria-autocomplete\", \"both\");\n      a.jqx.aria(this, \"aria-disabled\", this.disabled);\n      a.jqx.aria(this, \"aria-readonly\", false);\n      a.jqx.aria(this, \"aria-multiline\", false);\n\n      if (this.source && this.source.length) {\n        a.jqx.aria(this, \"aria-haspopup\", true);\n      }\n\n      if (this.value !== \"\") {\n        this.input.value = this.value;\n      }\n\n      this._oldsource = this.source;\n\n      this._updateSource();\n    },\n    _updateSource: function () {\n      var d = this;\n\n      var e = function (g) {\n        if (g === undefined) {\n          return null;\n        }\n\n        if (typeof g === \"string\" || g instanceof String) {\n          return {\n            label: g,\n            value: g\n          };\n        }\n\n        if (typeof g !== \"string\" && g instanceof String === false) {\n          var f = \"\";\n          var h = \"\";\n\n          if (d.displayMember !== \"\" && d.displayMember !== undefined) {\n            if (g[d.displayMember]) {\n              f = g[d.displayMember];\n            }\n          }\n\n          if (d.valueMember !== \"\" && d.valueMember !== undefined) {\n            h = g[d.valueMember];\n          }\n\n          if (f === \"\") {\n            f = g.label;\n          }\n\n          if (h === \"\") {\n            h = g.value;\n          }\n\n          return {\n            label: f,\n            value: h\n          };\n        }\n\n        return g;\n      };\n\n      var b = function (h) {\n        var f = [];\n\n        for (var g = 0; g < h.length; g++) {\n          f[g] = e(h[g]);\n        }\n\n        return f;\n      };\n\n      if (this.source && this.source._source) {\n        this.adapter = this.source;\n\n        if (this.adapter._source.localdata != null) {\n          this.adapter.unbindBindingUpdate(this.element.id);\n          this.adapter.bindBindingUpdate(this.element.id, function () {\n            d.source = b(d.adapter.records);\n          });\n        } else {\n          var c = {};\n\n          if (this.adapter._options.data) {\n            a.extend(d.adapter._options.data, c);\n          } else {\n            if (this.source._source.data) {\n              a.extend(c, this.source._source.data);\n            }\n\n            this.adapter._options.data = c;\n          }\n\n          this.adapter.unbindDownloadComplete(this.element.id);\n          this.adapter.bindDownloadComplete(this.element.id, function () {\n            d.source = b(d.adapter.records);\n          });\n        }\n\n        this.source.dataBind();\n        return;\n      }\n\n      if (!a.isFunction(this.source)) {\n        this.source = b(this.source);\n      }\n    },\n    _refreshClasses: function (d) {\n      var c = d ? \"addClass\" : \"removeClass\",\n          b = \"jqx-widget-content jqx-input-widget jqx-input jqx-widget\",\n          e = \"jqx-popup jqx-input-popup jqx-menu jqx-menu-vertical jqx-menu-dropdown jqx-widget jqx-widget-content\";\n\n      if (a.jqx.browser.msie) {\n        e += \" jqx-noshadow\";\n      }\n\n      if (this.roundedCorners) {\n        b += \" jqx-rc-all\";\n        e += \" jqx-rc-all\";\n      }\n\n      if (this.disabled) {\n        b += \" jqx-fill-state-disabled\";\n      } else {\n        this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n      }\n\n      this.host[c](this.toThemeProperty(b));\n\n      this._popupHelper[c](this.toThemeProperty(e));\n    },\n    selectAll: function () {\n      var c = this;\n      var b = this.host;\n\n      if (b[0] instanceof HTMLInputElement === false) {\n        b = a(c.input);\n      }\n\n      setTimeout(function () {\n        if (\"selectionStart\" in b[0]) {\n          b[0].focus();\n          b[0].setSelectionRange(0, b[0].value.length);\n        } else {\n          var d = b[0].createTextRange();\n          d.collapse(true);\n          d.moveEnd(\"character\", b[0].value.length);\n          d.moveStart(\"character\", 0);\n          d.select();\n        }\n      }, 10);\n    },\n    selectLast: function () {\n      var c = this;\n      var b = this.host;\n\n      if (b[0] instanceof HTMLInputElement === false) {\n        b = a(c.input);\n      }\n\n      this.selectStart(b[0].value.length);\n    },\n    selectFirst: function () {\n      this.selectStart(0);\n    },\n    selectStart: function (c) {\n      var d = this;\n      var b = this.host;\n\n      if (b[0] instanceof HTMLInputElement === false) {\n        b = a(d.input);\n      }\n\n      setTimeout(function () {\n        if (\"selectionStart\" in b[0]) {\n          b[0].focus();\n          b[0].setSelectionRange(c, c);\n        } else {\n          var e = b[0].createTextRange();\n          e.collapse(true);\n          e.moveEnd(\"character\", c);\n          e.moveStart(\"character\", c);\n          e.select();\n        }\n      }, 10);\n    },\n    focus: function () {\n      try {\n        var c = this;\n        c.element.focus();\n        setTimeout(function () {\n          c.element.focus();\n        }, 25);\n      } catch (b) {}\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n      this.refresh();\n    },\n    refresh: function () {\n      this._refreshClasses(false);\n\n      this._refreshClasses(true);\n\n      if (!this.baseHost) {\n        if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n          this.element.style.width = parseInt(this.width) + \"px\";\n        } else {\n          if (this.width != undefined && !isNaN(this.width)) {\n            this.element.style.width = this.width + \"px\";\n          } else {\n            this.element.style.width = this.width;\n          }\n        }\n\n        if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n          this.element.style.height = parseInt(this.height) + \"px\";\n        } else {\n          if (this.height != undefined && !isNaN(this.height)) {\n            this.element.style.height = this.height + \"px\";\n          } else {\n            this.element.style.height = this.height;\n          }\n        }\n\n        if (this._hasAddons) {\n          this._addonsWidth = 35;\n          this.input.style.width = \"calc(100% - \" + this._addonsWidth + \"px)\";\n        }\n      } else {\n        if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n          this.baseElement.style.width = parseInt(this.width) + \"px\";\n        } else {\n          if (this.width != undefined && !isNaN(this.width)) {\n            this.baseElement.style.width = this.width + \"px\";\n          }\n        }\n\n        if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n          this.baseElement.style.height = parseInt(this.height) + \"px\";\n        } else {\n          if (this.height != undefined && !isNaN(this.height)) {\n            this.baseElement.style.height = this.height + \"px\";\n          }\n        }\n\n        var d = this,\n            e = a.jqx.browser.msie && a.jqx.browser.version < 9,\n            c = 0;\n        a.each(this.baseHost.children(), function () {\n          this.style.height = \"100%\";\n\n          if (this !== d.element) {\n            c += a(this).outerWidth();\n          }\n        });\n        d._addonsWidth = c;\n\n        if (e) {\n          var b = Math.max(0, d.baseElement.offsetHeight - 2);\n          d.element.style.width = Math.max(0, d.baseElement.offsetWidth - c - 1) + \"px\";\n          d.element.style.minHeight = b + \"px\";\n          d.element.style.lineHeight = b + \"px\";\n        } else {\n          d.element.style.width = \"calc(100% - \" + c + \"px)\";\n        }\n\n        a.jqx.utilities.resize(d.baseHost, function () {\n          if (e && typeof d.width === \"string\" && d.width.indexOf(\"%\") !== -1 && !d._initiallyHidden) {\n            d.element.style.width = d.baseElement.offsetWidth - d._addonsWidth - 1 + \"px\";\n          } else {\n            if (d._initiallyHidden) {\n              d._addonsWidth = d._getAddonsWidth();\n\n              if (!e) {\n                d.element.style.width = \"calc(100% - \" + d._addonsWidth + \"px)\";\n              } else {\n                d.element.style.width = d.baseElement.offsetWidth - d._addonsWidth - 1 + \"px\";\n                var f = d.baseElement.offsetHeight - 2;\n                d.element.style.minHeight = f + \"px\";\n                d.element.style.lineHeight = f + \"px\";\n              }\n\n              d._initiallyHidden = false;\n            }\n          }\n        });\n      }\n\n      if (this.disabled) {\n        this.element.setAttribute(\"disabled\", true);\n      } else {\n        this.element.removeAttribute(\"disabled\");\n      }\n\n      if (this.maxLength) {\n        this.element.setAttribute(\"maxlength\", this.maxLength);\n\n        if (this.input) {\n          this.input.setAttribute(\"maxlength\", this.maxLength);\n        }\n      }\n\n      if (!this.element.getAttribute(\"placeholder\")) {\n        this._refreshPlaceHolder();\n      }\n    },\n    _refreshPlaceHolder: function () {\n      var b = this;\n\n      if (!b.isMaterialized() || !b.hint) {\n        if (\"placeholder\" in this.input && !(a.jqx.browser.msie && a.jqx.browser.version < 9)) {\n          b.input.setAttribute(\"placeHolder\", b.placeHolder);\n        } else {\n          if (b.input.value === \"\") {\n            b.input.value = b.placeHolder;\n          }\n        }\n      }\n\n      if (!b.hint) {\n        return;\n      }\n\n      if (b.input.value !== \"\") {\n        b.element.setAttribute(\"hint\", true);\n      } else {\n        b.element.removeAttribute(\"hint\");\n      }\n\n      if (b.label) {\n        b.label.innerHTML = b.placeHolder;\n      }\n    },\n    destroy: function () {\n      this.removeHandlers();\n\n      if (this.baseHost) {\n        this.baseHost.remove();\n      } else {\n        this.host.remove();\n      }\n\n      if (this.$popup) {\n        this._popupHelper.remove();\n      }\n    },\n    propertiesChangedHandler: function (b, c, d) {\n      if (d.width && d.height && Object.keys(d).length === 2) {\n        b.refresh();\n      }\n    },\n    propertyChangedHandler: function (b, c, e, d) {\n      if (c === \"width\" && d !== e) {\n        if (b.baseHost) {\n          b.baseElement.style.width = b._toPx(d);\n\n          if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n            b.element.style.width = b.baseElement.offsetWidth - b._addonsWidth - 1 + \"px\";\n          }\n        } else {\n          b.element.style.width = b._toPx(d);\n        }\n\n        return;\n      }\n\n      if (c === \"placeHolder\") {\n        if ((!(\"placeholder\" in b.element) || a.jqx.browser.msie && a.jqx.browser.version < 9) && b.input.value === e) {\n          b.input.value = \"\";\n        }\n\n        b._refreshPlaceHolder();\n\n        return;\n      }\n\n      if (b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && Object.keys(b.batchUpdate).length === 2) {\n        return;\n      }\n\n      if (c === \"theme\") {\n        a.jqx.utilities.setTheme(e, d, b.host);\n      }\n\n      if (c === \"opened\") {\n        if (d) {\n          b.open();\n        } else {\n          b.close();\n        }\n\n        return;\n      }\n\n      if (c === \"source\") {\n        b._oldsource = d;\n\n        b._updateSource();\n      }\n\n      if (c === \"displayMember\" || c === \"valueMember\") {\n        b.source = b._oldsource;\n\n        b._updateSource();\n      }\n\n      if (c === \"disabled\") {\n        a.jqx.aria(b, \"aria-disabled\", b.disabled);\n      }\n\n      if (c === \"value\") {\n        b.input.value = d;\n\n        b._refreshPlaceHolder();\n      }\n\n      b.refresh();\n    },\n    select: function (d, f, b) {\n      var e = this._find(\"jqx-fill-state-pressed\", this._popupHelper);\n\n      var g = e.getAttribute(\"data-value\");\n      var c = e.getAttribute(\"data-name\");\n      this.input.value = this.renderer(c, this.input.value);\n      this.selectedItem = {\n        label: c,\n        value: g\n      };\n      this.element.setAttribute(\"data-value\", g);\n      this.element.setAttribute(\"data-label\", c);\n\n      this._raiseEvent(\"0\", {\n        item: {\n          label: c,\n          value: g\n        },\n        label: c,\n        value: g\n      });\n\n      this._raiseEvent(\"3\", {\n        type: b,\n        item: {\n          label: c,\n          value: g\n        },\n        label: c,\n        value: g\n      });\n\n      this.value = c;\n      return this.close();\n    },\n    val: function (b) {\n      if (arguments.length === 0 || b != null && typeof b === \"object\" && !b.label && !b.value) {\n        if (this.displayMember !== \"\" && this.valueMember !== \"\" && this.selectedItem) {\n          if (this.input.value === \"\") {\n            return \"\";\n          }\n\n          return this.selectedItem;\n        }\n\n        return this.input.value;\n      }\n\n      if (b && b.label) {\n        this.selectedItem = {\n          label: b.label,\n          value: b.value\n        };\n        this.element.setAttribute(\"data-value\", b.value);\n        this.element.setAttribute(\"data-label\", b.label);\n        this.value = b;\n        this.input.value = b.label;\n\n        if (this.input) {\n          this.input.value = b.label;\n        }\n\n        return this.input.value;\n      }\n\n      this.value = b;\n      this.input.value = b;\n      this.element.setAttribute(\"data-value\", b);\n      this.element.setAttribute(\"data-label\", b);\n\n      if (b && b.label) {\n        this._raiseEvent(\"3\", {\n          type: null,\n          item: {\n            label: b.label,\n            value: b.value\n          },\n          label: b.label,\n          value: b.value\n        });\n      } else {\n        this._raiseEvent(\"3\", {\n          type: null,\n          item: {\n            label: b,\n            value: b\n          },\n          label: b,\n          value: b\n        });\n      }\n\n      this._refreshPlaceHolder();\n\n      return this.input.value;\n    },\n    _raiseEvent: function (f, c) {\n      if (c === undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[f];\n      c.owner = this;\n      var e = new a.Event(d);\n      e.owner = this;\n      e.args = c;\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n\n      var b = this.host.trigger(e);\n      return b;\n    },\n    _renderer: function (b) {\n      return b;\n    },\n    open: function () {\n      if (a.jqx.isHidden(this.host)) {\n        return;\n      }\n\n      var c = a.extend({}, this.host.coord(true), {\n        height: this.element.offsetHeight\n      });\n\n      if (this.$popup.parentNode !== document.body) {\n        var e = this.element.id + \"_popup\";\n        this.$popup.id = e;\n        a.jqx.aria(this, \"aria-owns\", e);\n        document.body.appendChild(this.$popup);\n      }\n\n      this.$popup.style.position = \"absolute\";\n      this.$popup.style.zIndex = this.popupZIndex;\n      this.$popup.style.top = this._toPx(c.top + c.height);\n      this.$popup.style.left = this._toPx(c.left);\n      this.$popup.style.display = \"block\";\n      var b = 0;\n\n      var d = this._popupHelper.children();\n\n      a.each(d, function () {\n        b += a(this).outerHeight() + 1;\n      });\n      this.$popup.style.height = this._toPx(b);\n      this.opened = true;\n\n      this._raiseEvent(\"1\", {\n        popup: this.$popup\n      });\n\n      a.jqx.aria(this, \"aria-expanded\", true);\n      return this;\n    },\n    close: function () {\n      if (!this.opened) {\n        return;\n      }\n\n      this.$popup.style.display = \"none\";\n      this.opened = false;\n\n      this._raiseEvent(\"2\", {\n        popup: this.$popup\n      });\n\n      a.jqx.aria(this, \"aria-expanded\", false);\n\n      this._refreshPlaceHolder();\n\n      return this;\n    },\n    suggest: function () {\n      var b;\n      this.query = this.input.value;\n\n      if (!this.query || this.query.length < this.minLength) {\n        return this.opened ? this.close() : this;\n      }\n\n      if (a.isFunction(this.source)) {\n        b = this.source(this.query, a.proxy(this.load, this));\n      } else {\n        b = this.source;\n      }\n\n      if (b) {\n        return this.load(b);\n      }\n\n      return this;\n    },\n    load: function (f) {\n      var e = this,\n          b = [];\n\n      for (var c = 0; c < f.length; c++) {\n        var d = f[c];\n\n        if (e.filter(d)) {\n          b.push(d);\n        }\n      }\n\n      b = this.sort(b);\n\n      if (!b.length) {\n        if (this.opened) {\n          return this.close();\n        } else {\n          return this;\n        }\n      }\n\n      return this._render(b.slice(0, this.items)).open();\n    },\n    _filter: function (b) {\n      var c = this.query;\n      var d = b;\n\n      if (b.label != null) {\n        d = b.label;\n      } else {\n        if (this.displayMember) {\n          d = b[this.displayMember];\n        }\n      }\n\n      switch (this.searchMode) {\n        case \"none\":\n          break;\n\n        default:\n          return a.jqx.string.containsIgnoreCase(d, c);\n\n        case \"contains\":\n          return a.jqx.string.contains(d, c);\n\n        case \"equals\":\n          return a.jqx.string.equals(d, c);\n\n        case \"equalsignorecase\":\n          return a.jqx.string.equalsIgnoreCase(d, c);\n\n        case \"startswith\":\n          return a.jqx.string.startsWith(d, c);\n\n        case \"startswithignorecase\":\n          return a.jqx.string.startsWithIgnoreCase(d, c);\n\n        case \"endswith\":\n          return a.jqx.string.endsWith(d, c);\n\n        case \"endswithignorecase\":\n          return a.jqx.string.endsWithIgnoreCase(d, c);\n      }\n    },\n    _sort: function (b) {\n      var h = [],\n          d = [],\n          f = [];\n\n      for (var c = 0; c < b.length; c++) {\n        var e = b[c];\n        var g = e;\n\n        if (e.label) {\n          g = e.label;\n        } else {\n          if (this.displayMember) {\n            g = e[this.displayMember];\n          }\n        }\n\n        if (g.toString().toLowerCase().indexOf(this.query.toString().toLowerCase()) === 0) {\n          h.push(e);\n        } else {\n          if (g.toString().indexOf(this.query) >= 0) {\n            d.push(e);\n          } else {\n            if (g.toString().toLowerCase().indexOf(this.query.toString().toLowerCase()) >= 0) {\n              f.push(e);\n            }\n          }\n        }\n      }\n\n      return h.concat(d, f);\n    },\n    _highlight: function (c) {\n      var d = this.query;\n      d = d.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n      var b = new RegExp(\"(\" + d + \")\", \"ig\");\n      return c.replace(b, function (e, f) {\n        return \"<b>\" + f + \"</b>\";\n      });\n    },\n    _render: function (f) {\n      var e = this,\n          c = e._popupHelper.children();\n\n      if (c.length > 0) {\n        for (var d = 0; d < c.length; d++) {\n          a(c[d]).remove();\n        }\n      }\n\n      var g = function (n, k) {\n        var p = n,\n            m = document.createElement(\"li\"),\n            j = document.createElement(\"a\"),\n            h,\n            o;\n        j.setAttribute(\"href\", \"#\");\n        m.appendChild(j);\n\n        if (n.value !== undefined && n.value !== null) {\n          if (n.label !== undefined && n.label !== null) {\n            h = n.label;\n            o = n.value;\n          } else {\n            h = n.value;\n            o = n.value;\n          }\n        } else {\n          if (n.label !== undefined && n.label !== null) {\n            h = n.label;\n            o = n.label;\n          } else {\n            if (e.displayMember !== undefined && e.displayMember !== \"\") {\n              h = n[e.displayMember];\n              o = n[e.valueMember];\n            } else {\n              h = n;\n              o = n;\n            }\n          }\n        }\n\n        m.setAttribute(\"data-value\", o);\n        m.setAttribute(\"data-name\", h);\n\n        if (n.label) {\n          p = n.label;\n        } else {\n          if (e.displayMember) {\n            p = n[e.displayMember];\n          }\n        }\n\n        j.innerHTML = e.highlight(p);\n        var l = \"\";\n\n        if (e.rtl) {\n          l = \" jqx-rtl\";\n        }\n\n        if (k === 0) {\n          l += \" jqx-fill-state-pressed\";\n        }\n\n        m.className = e.toThemeProperty(\"jqx-item jqx-menu-item jqx-rc-all\" + l);\n        e.$popup.appendChild(m);\n        e.addHandler(m, \"mouseenter\", function (i) {\n          e.mouseenter(i);\n        });\n      };\n\n      var b = function (j) {\n        for (var h = 0; h < j.length; h++) {\n          g(j[h], h);\n        }\n      };\n\n      b(f);\n\n      if (!this.dropDownWidth) {\n        this.$popup.style.width = e._toPx(e.element.offsetWidth - 6);\n      } else {\n        this.$popup.style.width = e._toPx(e.dropDownWidth);\n      }\n\n      return this;\n    },\n    next: function () {\n      var c = this._find(\"jqx-fill-state-pressed\", this._popupHelper),\n          b = c.nextSibling;\n\n      a(c).removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n      if (!b) {\n        b = this.$popup.firstChild;\n      }\n\n      b.className += \" \" + this.toThemeProperty(\"jqx-fill-state-pressed\");\n    },\n    prev: function () {\n      var c = this._find(\"jqx-fill-state-pressed\", this._popupHelper),\n          b = c.previousSibling;\n\n      a(c).removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n      if (!b) {\n        b = this.$popup.lastChild;\n      }\n\n      b.className += \" \" + this.toThemeProperty(\"jqx-fill-state-pressed\");\n    },\n    addHandlers: function () {\n      var c = this,\n          b = \".jqxInput\" + c.element.id;\n      c.addHandler(c.host, \"focus\" + b, function () {\n        c.onFocus();\n      });\n      c.addHandler(c.host, \"blur\" + b, function () {\n        c.onBlur();\n      });\n      c.addHandler(c.host, \"change\" + b, function (f) {\n        if (!f.args) {\n          f.stopPropagation();\n          f.preventDefault();\n          var e = c.val(),\n              d,\n              g;\n\n          if (e && e.label) {\n            d = e.label;\n            g = e.val;\n          } else {\n            d = e;\n            g = e;\n          }\n\n          c._raiseEvent(\"3\", {\n            type: \"keyboard\",\n            item: {\n              label: d,\n              value: g\n            },\n            label: d,\n            value: g\n          });\n\n          c.value = d;\n\n          c._refreshPlaceHolder();\n        }\n      });\n      c.addHandler(c.host, \"keypress\" + b, function (d) {\n        c.keypress(d);\n      });\n      c.addHandler(c.host, \"keyup\" + b, function (d) {\n        c.keyup(d);\n      });\n      c.addHandler(c.host, \"keydown\" + b, function (d) {\n        c.keydown(d);\n      });\n      c.addHandler(c.$popup, \"mousedown\" + b, function (d) {\n        c.click(d);\n      });\n    },\n    removeHandlers: function () {\n      var c = this,\n          b = \".jqxInput\" + c.element.id;\n      c.removeHandler(c.host, \"change\" + b);\n      c.removeHandler(c.host, \"focus\" + b);\n      c.removeHandler(c.host, \"blur\" + b);\n      c.removeHandler(c.host, \"keypress\" + b);\n      c.removeHandler(c.host, \"keyup\" + b);\n      c.removeHandler(c.host, \"keydown\" + b);\n      c.removeHandler(c.$popup, \"mousedown\" + b);\n    },\n    move: function (b) {\n      if (!this.opened) {\n        return;\n      }\n\n      switch (b.keyCode) {\n        case 9:\n        case 13:\n        case 27:\n          b.preventDefault();\n          break;\n\n        case 38:\n          if (!b.shiftKey) {\n            b.preventDefault();\n            this.prev();\n          }\n\n          break;\n\n        case 40:\n          if (!b.shiftKey) {\n            b.preventDefault();\n            this.next();\n          }\n\n          break;\n      }\n\n      b.stopPropagation();\n    },\n    keydown: function (c) {\n      var b = [40, 38, 9, 13, 27];\n      this.suppressKeyPressRepeat = b.indexOf(c.keyCode) !== -1;\n      this.move(c);\n    },\n    keypress: function (b) {\n      if (this.suppressKeyPressRepeat) {\n        return;\n      }\n\n      this.move(b);\n    },\n    keyup: function (c) {\n      switch (c.keyCode) {\n        case 40:\n        case 38:\n        case 16:\n        case 17:\n        case 18:\n          break;\n\n        case 9:\n        case 13:\n          if (!this.opened) {\n            return;\n          }\n\n          this.select(c, this, \"keyboard\");\n          break;\n\n        case 27:\n          if (!this.opened) {\n            return;\n          }\n\n          this.close();\n          break;\n\n        default:\n          var b = this;\n\n          if (this.timer) {\n            clearTimeout(this.timer);\n          }\n\n          this.timer = setTimeout(function () {\n            b.suggest();\n          }, 300);\n      }\n\n      c.stopPropagation();\n      c.preventDefault();\n    },\n    clear: function () {\n      this.val(\"\");\n    },\n    onBlur: function () {\n      var b = this;\n      setTimeout(function () {\n        b.close();\n      }, 150);\n      b.host.removeClass(b.toThemeProperty(\"jqx-fill-state-focus\"));\n\n      b._refreshPlaceHolder();\n    },\n    onFocus: function () {\n      var b = this;\n      b.element.className += \" \" + b.toThemeProperty(\"jqx-fill-state-focus\");\n\n      b._refreshPlaceHolder();\n    },\n    click: function (b) {\n      b.stopPropagation();\n      b.preventDefault();\n      this.select(b, this, \"mouse\");\n    },\n    mouseenter: function (b) {\n      a(this._find(\"jqx-fill-state-pressed\", this._popupHelper)).removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n      b.currentTarget.className += \" \" + this.toThemeProperty(\"jqx-fill-state-pressed\");\n    },\n    _toPx: function (b) {\n      if (typeof b === \"number\") {\n        return b + \"px\";\n      } else {\n        return b;\n      }\n    },\n    _find: function (e, b) {\n      var d = b.children();\n\n      for (var c = 0; c < d.length; c++) {\n        var f = d[c];\n\n        if (f.className.indexOf(e) !== -1) {\n          return f;\n        }\n      }\n    },\n    _getAddonsWidth: function () {\n      var e = this,\n          d = e.baseHost.children(),\n          b = 0;\n\n      for (var c = 0; c < d.length; c++) {\n        if (d[c] !== e.element) {\n          b += a(d[c]).outerWidth();\n        }\n      }\n\n      return b;\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}