{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  if (!a.jqx.scheduler) {\n    a.jqx.scheduler = {};\n  }\n\n  a.jqx.scheduler.utilities = {\n    weekDays: {\n      Sunday: 0,\n      Monday: 1,\n      Tuesday: 2,\n      Wednesday: 3,\n      Thursday: 4,\n      Friday: 5,\n      Saturday: 6\n    },\n    guid: function () {\n      function b() {\n        return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n      }\n\n      return b() + b();\n    },\n    areWeekDaysIncluded: function (d, c) {\n      var b = false;\n      a.each(d, function (e, f) {\n        if (f === c) {\n          b = true;\n          return false;\n        }\n      });\n      return b;\n    },\n    getStartOfDay: function (c) {\n      var b = new a.jqx.date(c.year(), c.month(), c.day(), 0, 0, 0);\n      b.timeZone = c.timeZone;\n      return b;\n    },\n    getEndOfDay: function (c) {\n      var b = new a.jqx.date(c.year(), c.month(), c.day(), 23, 59, 59);\n      b.timeZone = c.timeZone;\n      return b;\n    },\n    getDaysCount: function (d, c) {\n      var b = 1;\n\n      while (d < c) {\n        if (d.day() != c.day()) {\n          b++;\n        }\n\n        d = d.addDays(1);\n      }\n\n      return b;\n    },\n    getStartOfWeek: function (e, g) {\n      var c = e.dayOfWeek();\n      var b = g.firstDay;\n\n      if (c < b) {\n        c += 7;\n      }\n\n      var d = c - b;\n      var f = e.addDays(-d);\n      return f.date();\n    },\n    getEndOfWeek: function (d, f, c) {\n      var e = this;\n      var g = 7;\n      var b = e.getStartOfWeek(d, f, c);\n      return b.addDays(g);\n    },\n    getEndOfMonth: function (d, e) {\n      var c = d.daysInMonth();\n      var b = new a.jqx.date(d.year(), d.month(), c, 23, 59, 59);\n      b.timeZone = d.timeZone;\n      return b;\n    },\n    rangeIntersection: function (i, h, f, e) {\n      var g = i.valueOf();\n      var d = f.valueOf();\n      var c = h.valueOf();\n      var b = e.valueOf();\n\n      if (d >= g && d < c) {\n        return true;\n      }\n\n      if (d < g && b > g) {\n        return true;\n      }\n\n      if (g == d || c == b) {\n        return true;\n      }\n\n      if (g < d) {\n        if (c > d && c < b) {\n          return true;\n        }\n\n        if (c > b) {\n          return true;\n        }\n      } else {\n        if (b > g && b < c) {\n          return true;\n        }\n\n        if (b > c) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    rangeContains: function (e, d, c, b) {\n      return e <= c && b <= d;\n    },\n    monthDays: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    msPerDay: 1000 * 60 * 60 * 24,\n    maxYear: 9999,\n    ORDINAL_BASE: new Date(1970, 0, 1),\n    getYearDay: function (b) {\n      var c = new Date(b.getFullYear(), b.getMonth(), b.getDate());\n      return Math.ceil((c - new Date(b.getFullYear(), 0, 1)) / a.jqx.scheduler.utilities.msPerDay) + 1;\n    },\n    isLeapYear: function (b) {\n      if (b instanceof Date) {\n        b = b.getFullYear();\n      }\n\n      return b % 4 === 0 && b % 100 !== 0 || b % 400 === 0;\n    },\n    tzOffset: function (b) {\n      return b.getTimezoneOffset() * 60 * 1000;\n    },\n    monthRange: function (c, d) {\n      var b = new Date(c, d, 1);\n      return [a.jqx.scheduler.utilities.getWeekday(b), a.jqx.scheduler.utilities.getMonthDays(b)];\n    },\n    getMonthDays: function (b) {\n      var c = b.getMonth();\n      return c == 1 && a.jqx.scheduler.utilities.isLeapYear(b) ? 29 : a.jqx.scheduler.utilities.monthDays[c];\n    },\n    getWeekday: function (b) {\n      var c = [6, 0, 1, 2, 3, 4, 5];\n      return c[b.getDay()];\n    },\n    combine: function (b, c) {\n      c = c || b;\n      return new Date(b.getFullYear(), b.getMonth(), b.getDate(), c.getHours(), c.getMinutes(), c.getSeconds());\n    },\n    sort: function (b) {\n      b.sort(function (d, c) {\n        return d.getTime() - c.getTime();\n      });\n    },\n    timeToUntilString: function (e) {\n      var c = new Date(e);\n      var b,\n          f = [c.getUTCFullYear(), c.getUTCMonth() + 1, c.getUTCDate(), \"T\", c.getUTCHours(), c.getUTCMinutes(), c.getUTCSeconds(), \"Z\"];\n\n      for (var d = 0; d < f.length; d++) {\n        b = f[d];\n\n        if (!/[TZ]/.test(b) && b < 10) {\n          f[d] = \"0\" + String(b);\n        }\n      }\n\n      return f.join(\"\");\n    },\n    untilStringToDate: function (d) {\n      var b = /^(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2})Z)?$/;\n      var c = b.exec(d);\n\n      if (!c) {\n        throw new Error(\"Invalid UNTIL value: \" + d);\n      }\n\n      return new Date(Date.UTC(c[1], c[2] - 1, c[3], c[5] || 0, c[6] || 0, c[7] || 0));\n    },\n    Time: function (b, e, c) {\n      this.hour = b;\n      this.minute = e;\n      this.second = c;\n      this.that = this;\n      var d = this;\n\n      this.getHours = function () {\n        return d.hour;\n      };\n\n      this.getMinutes = function () {\n        return d.minute;\n      }, this.getSeconds = function () {\n        return d.second;\n      }, this.getTime = function () {\n        return (d.hour * 60 * 60 + d.minute * 60 + d.second) * 1000;\n      };\n    }\n  };\n\n  a.jqx.scheduler.appointment = function () {\n    var c = this;\n    c.from = new a.jqx.date();\n    c.to = new a.jqx.date().addHours(1);\n    c.subject = \"\";\n    c.description = \"\";\n    c.location = \"\";\n    c.tooltip = \"\";\n    c.hidden = false;\n    c.resourceId = null;\n    c.id = \"\";\n    c.background = null;\n    c.color = null;\n    c.borderColor = null;\n    c.status = \"busy\";\n    c.style = null;\n    c.exceptions = new Array();\n    c.exceptionDates = new Array();\n    c.recurrencePattern = null;\n    c.recurrenceException = new Array();\n    c.occurrenceEnumerator = null;\n    c.rootAppointment = null;\n    c.hiddenByResourceId = false;\n    c.draggable = true;\n    c.resizable = true;\n    c.recurrentAppointment = false;\n    c.allDay = false;\n    c.readOnly = false;\n    c.showStatus = true;\n    c.timeZone = null;\n    c.scheduler = null;\n    c.elements = new Array();\n    c.appointmentObject = true;\n\n    c.duration = function () {\n      var e = c.to - c.from;\n      var f = e * 10000;\n      return new a.jqx.timeSpan(f);\n    };\n\n    c.toJSON = function (h) {\n      var e = function (l) {\n        var k = \"\";\n\n        while (l.length > 75) {\n          k += l.substr(0, 75) + \"\\n\";\n          l = \" \" + l.substr(75);\n        }\n\n        k += l;\n        return k;\n      };\n\n      var g = function (k) {\n        return (k < 10 ? \"0\" : \"\") + k;\n      };\n\n      var j = function (l, k) {\n        return !l ? \"\" : !k ? \"\" + l.getFullYear() + \"-\" + g(l.getMonth() + 1) + \"-\" + g(l.getDate()) + \"T\" + g(l.getHours()) + \":\" + g(l.getMinutes()) + \":\" + g(l.getSeconds()) + \"Z\" : \"\" + l.getUTCFullYear() + \"-\" + g(l.getUTCMonth() + 1) + \"-\" + g(l.getUTCDate()) + \"T\" + g(l.getUTCHours()) + \":\" + g(l.getUTCMinutes()) + \":\" + g(l.getUTCSeconds()) + \"Z\";\n      };\n\n      var f = function () {\n        var k = \"\";\n\n        for (var l = 0; l < c.recurrenceException.length; l++) {\n          k += c.recurrenceException[l].toString();\n\n          if (l < c.recurrenceException.length - 1) {\n            k += \",\";\n          }\n        }\n\n        return k;\n      };\n\n      var i = {};\n      i.id = c.id;\n      i.from = j(c.from.toDate(), h);\n      i.to = j(c.to.toDate(), h);\n      i.subject = c.subject;\n      i.status = c.status;\n      i.location = c.location;\n      i.description = c.description;\n      i.title = c.title;\n      i.resourceId = c.resourceId;\n\n      if (c.recurrencePattern) {\n        i.recurrencePattern = c.recurrencePattern.toString();\n      } else {\n        i.recurrencePattern = \"\";\n      }\n\n      if (c.recurrenceException && c.recurrenceException.length > 0) {\n        i.recurrenceException = f();\n      } else {\n        i.recurrenceException = \"\";\n      }\n\n      i.dtstamp = j(new Date(), h);\n      return JSON.stringify(i);\n    };\n\n    c.toString = function (i) {\n      var f = function (l) {\n        var k = \"\";\n\n        while (l.length > 75) {\n          k += l.substr(0, 75) + \"\\n\";\n          l = \" \" + l.substr(75);\n        }\n\n        k += l;\n        return k;\n      };\n\n      var h = function (k) {\n        return (k < 10 ? \"0\" : \"\") + k;\n      };\n\n      var j = function (l, k) {\n        return !l ? \"\" : k ? \"\" + l.getFullYear() + h(l.getMonth() + 1) + h(l.getDate()) + \"T\" + h(l.getHours()) + h(l.getMinutes()) + h(l.getSeconds()) : \"\" + l.getUTCFullYear() + h(l.getUTCMonth() + 1) + h(l.getUTCDate()) + \"T\" + h(l.getUTCHours()) + h(l.getUTCMinutes()) + h(l.getUTCSeconds()) + \"Z\";\n      };\n\n      var g = function () {\n        var k = \"\";\n\n        for (var l = 0; l < c.recurrenceException.length; l++) {\n          k += j(c.recurrenceException[l].toDate(), i);\n\n          if (l < c.recurrenceException.length - 1) {\n            k += \",\";\n          }\n        }\n\n        return k;\n      };\n\n      var e = c.status;\n\n      if (!e) {\n        e = \"CONFIRMED\";\n      }\n\n      if (e.toLowerCase() == \"busy\") {\n        e = \"CONFIRMED\";\n      }\n\n      if (e.toLowerCase() == \"tentative\") {\n        e = \"TENTATIVE\";\n      }\n\n      if (e.toLowerCase() == \"free\") {\n        e = \"CANCELLED\";\n      }\n\n      if (e.toLowerCase() == \"outOfOffice\") {\n        e = \"CANCELLED\";\n      }\n\n      return \"BEGIN:VEVENT\\nUID:\" + c.id + \"\\nDTSTAMP:\" + j(new Date(), i) + \"\\n\" + f(\"TITLE:\" + c.subject) + \"\\nDTSTART:\" + j(c.from.toDate(), i) + \"\\nDTEND:\" + j(c.to.toDate(), i) + \"\\n\" + (c.recurrencePattern ? \"RRULE:\" + c.recurrencePattern.toString() + \"\\n\" : \"\") + (c.recurrenceException && c.recurrenceException.length > 0 ? \"EXDATE:\" + g() + \"\\n\" : \"\") + (c.subject ? f(\"SUMMARY:\" + c.subject) + \"\\n\" : \"\") + \"TRANSP:OPAQUE\\n\" + (c.status ? f(\"STATUS:\" + e) + \"\\n\" : \"\") + (c.description ? f(\"DESCRIPTION:\" + c.description) + \"\\n\" : \"\") + (c.location ? f(\"LOCATION:\" + c.location) + \"\\n\" : \"\") + \"END:VEVENT\";\n    };\n\n    c.range = function () {\n      if (!c.allDay) {\n        return {\n          from: c.from,\n          to: c.to\n        };\n      } else {\n        return {\n          from: a.jqx.scheduler.utilities.getStartOfDay(c.from),\n          to: a.jqx.scheduler.utilities.getEndOfDay(c.to)\n        };\n      }\n    };\n\n    c.clearRecurrence = function () {\n      if (c.recurrencePattern) {\n        c.exceptions = new Array();\n        c.exceptionDates = new Array();\n        c.recurrencePattern = null;\n        c.recurrenceException = new Array();\n        c.hidden = false;\n      }\n    };\n\n    c.isAllDayAppointment = function () {\n      return this.duration().days() >= 1 || this.allDay;\n    };\n\n    c.cloneAppointmentAttributes = function (e) {\n      e.subject = c.subject;\n      e.description = c.description;\n      e.location = c.location;\n      e.tooltip = c.tooltip;\n      e.resourceId = c.resourceId;\n      e.category = c.category;\n      e.status = c.status;\n      e.rootAppointment = c;\n      e.color = c.color;\n      e.borderColor = c.borderColor;\n      e.background = c.background;\n      e.hidden = c.hidden;\n      e.timezone = c.timeZone;\n      e.style = c.style;\n      e.hiddenByResourceId = c.hiddenByResourceId;\n    };\n\n    c.createOccurrence = function (g) {\n      if (g == null) {\n        return null;\n      }\n\n      var f = new a.jqx.scheduler.appointment();\n      f.allDay = c.allDay;\n      var e = c.duration();\n\n      if (c.allDay) {\n        e = new a.jqx.timeSpan(10000 * (c.to - c.from));\n      }\n\n      f.from = g;\n      f.to = g.add(e);\n      f.occurrenceFrom = g.clone();\n      f.subject = c.subject;\n      f.description = c.description;\n      f.location = c.location;\n      f.tooltip = c.tooltip;\n      f.resourceId = c.resourceId;\n      f.category = c.category;\n      f.status = c.status;\n      f.rootAppointment = c;\n      f.color = c.color;\n      f.draggable = c.draggable;\n      f.resizable = c.resizable;\n      f.borderColor = c.borderColor;\n      f.background = c.background;\n      f.recurrentAppointment = true;\n      f.timeZone = c.timeZone;\n      f.style = c.style;\n      f.hiddenByResourceId = c.hiddenByResourceId;\n      f.boundAppointment = c.boundAppointment;\n\n      if (c.hiddenByResourceId) {\n        f.hidden = true;\n      }\n\n      f.id = c.id + \".\" + a.jqx.scheduler.utilities.guid();\n      c.hidden = true;\n      c.occurrenceIndex++;\n      return f;\n    };\n\n    c.clone = function () {\n      var e = new a.jqx.scheduler.appointment();\n      e.allDay = c.allDay;\n      e.from = c.from.clone();\n      e.to = c.to.clone();\n      e.subject = c.subject;\n      e.description = c.description;\n      e.location = c.location;\n      e.tooltip = c.tooltip;\n      e.resourceId = c.resourceId;\n      e.category = c.category;\n      e.status = c.status;\n      e.color = c.color;\n      e.borderColor = c.borderColor;\n      e.background = c.background;\n      e.style = c.style;\n      e.timeZone = c.timeZone;\n      e.hiddenByResourceId = c.hiddenByResourceId;\n\n      if (c.hiddenByResourceId) {\n        e.hidden = true;\n      }\n\n      e.id = c.id + \".\" + a.jqx.scheduler.utilities.guid();\n      return e;\n    };\n\n    c.isRecurrentAppointment = function () {\n      return c.recurrentAppointment || c.recurrencePattern != null;\n    };\n\n    c.anyExceptions = function () {\n      return c.exceptions != null && c.exceptions.length > 0;\n    };\n\n    c.anyOccurrences = function () {\n      return c.occurrenceEnumerator != null && c.occurrenceEnumerator.getNextAppointment();\n    };\n\n    c.isException = function () {\n      var g = c.rootAppointment || this;\n\n      if (!g.recurrenceException) {\n        return false;\n      }\n\n      for (var f = 0; f < g.recurrenceException.length; f++) {\n        var e = g.recurrenceException[f];\n\n        if (c.occurrenceFrom && e.equals(c.occurrenceFrom)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    c.getOccurrences = function (h, g) {\n      c.occurrenceIndex = 0;\n      var f = h !== null ? h : c.from;\n      var e = new a.jqx.scheduler.recurrentAppointmentsList(c, c.calendar, f, g, c.scheduler);\n      c.occurrences = e.list;\n      return e.list;\n    };\n\n    if (arguments.length === 1) {\n      if (a.type(arguments[0]) == \"object\") {\n        for (var b in arguments[0]) {\n          var d = arguments[0][b];\n\n          if (this[b] !== undefined) {\n            this[b] = d;\n          }\n        }\n      } else {\n        c.from = arguments[0];\n        c.to = new a.jqx.date(c.from).addHours(1);\n      }\n    } else {\n      if (arguments.length === 2) {\n        c.from = arguments[0];\n        c.to = arguments[1];\n      } else {\n        if (arguments.length === 3) {\n          c.from = arguments[0];\n          c.to = arguments[1];\n          c.subject = arguments[2];\n        } else {\n          if (arguments.length === 3) {\n            c.from = arguments[0];\n            c.to = arguments[1];\n            c.subject = arguments[2];\n            c.description = arguments[3];\n          }\n        }\n      }\n    }\n\n    if (c.recurrencePattern != null) {\n      c.recurrencePattern.setFrom(c.from);\n    }\n  };\n\n  a.jqx.scheduler.recurrentAppointmentsList = function () {\n    var b = this;\n    b.recurrentAppointment = null;\n    b.currentTime = null;\n    b.calendar = a.jqx.scheduler.calendar;\n    b.from = new a.jqx.date(0);\n    b.to = new a.jqx.date(9999, 12, 31);\n    b.foundItems = 0;\n    b.list = new Array();\n    b.scheduler = null;\n\n    b.getOccurrences = function (c, e, d) {\n      if (c == undefined) {\n        return b.list;\n      }\n\n      return new a.jqx.scheduler.recurrentAppointmentsList(c, b.calendar, e, d).list;\n    };\n\n    b.current = function () {\n      return b.recurrentAppointment.createOccurrence(b.currentTime);\n    };\n\n    b.fillList = function () {\n      b.currentTime = null;\n      b.foundItems = 0;\n      b.list = new Array();\n      var c = b.recurrentAppointment.recurrencePattern;\n      c.step = 0;\n      c.current = 0;\n      c.currentYearDay = 0;\n\n      if (c == null) {\n        return false;\n      }\n\n      while (b.getNextAppointment(c)) {\n        var d = b.current();\n\n        if (d) {\n          b.list.push(d);\n        }\n      }\n    };\n\n    b.getNextAppointment = function (h) {\n      if (b.recurrentAppointment == null) {\n        return false;\n      }\n\n      var d = 4294967295;\n      var j = this.scheduler._views[this.scheduler._view].type;\n      var l = this.scheduler._views[this.scheduler._view];\n      var f = 0;\n\n      switch (h.freq) {\n        case \"weekly\":\n          f = 7;\n          break;\n\n        case \"monthly\":\n          f = 31;\n          break;\n\n        case \"yearly\":\n          f = 365;\n          break;\n      }\n\n      for (var e = 0; e < d; e++) {\n        var k = h.getNewOccurenceDate();\n\n        if (!k) {\n          continue;\n        }\n\n        h.currentTime = k;\n\n        if (h.to < k && h.to.addDays(f) >= k || b.to < k && b.to.addDays(f) >= k) {\n          b.currentTime = null;\n          return true;\n        }\n\n        if (a.jqx.scheduler.utilities.getEndOfDay(h.to).addDays(f) < k || a.jqx.scheduler.utilities.getEndOfDay(b.to).addDays(f) < k) {\n          b.currentTime = null;\n          return false;\n        }\n\n        var g = true;\n        g = b.getCanSetTime(h, k, g);\n\n        if (h.canCreateNewOccurence(k, b.calendar)) {\n          var c = true;\n\n          if (false === l.showWeekends) {\n            if (k.dayOfWeek() == 6 || k.dayOfWeek() == 0) {\n              c = false;\n            }\n          }\n\n          if (c) {\n            b.foundItems++;\n          }\n        }\n\n        if (!g) {\n          continue;\n        }\n\n        b.currentTime = k;\n\n        if (b.foundItems > h.count) {\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    b.getCanSetTime = function (c, e, d) {\n      if (!c.canCreateNewOccurence(e, b.calendar)) {\n        d = false;\n      }\n\n      if (e < b.from && e.add(b.recurrentAppointment.duration()) <= b.from) {\n        d = false;\n      }\n\n      if (b.to <= e) {\n        d = false;\n      }\n\n      return d;\n    };\n\n    b.isException = function (f, c, g) {\n      var e = b.recurrentAppointment.exceptions;\n\n      for (var d = 0; d < e.length; d++) {\n        if (g.isDateInExceptionAppointment(f, c, e[d])) {\n          if (-1 === g.newExceptions.indexOf(e[d])) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    if (arguments && arguments.length > 0) {\n      b.recurrentAppointment = arguments[0];\n\n      if (arguments[1]) {\n        b.calendar = arguments[1];\n      }\n\n      if (arguments[2]) {\n        b.from = arguments[2];\n      }\n\n      if (arguments[3]) {\n        b.to = arguments[3];\n      }\n\n      if (arguments[4]) {\n        b.scheduler = arguments[4];\n      }\n\n      if (arguments[2] === undefined) {\n        b.from = new a.jqx.date(0);\n        b.to = new a.jqx.date(9999, 12, 31);\n      }\n\n      if (b.scheduler && b.scheduler.localization) {\n        b.calendar.firstDay = b.scheduler.localization.firstDay;\n      }\n\n      b.fillList();\n    }\n\n    return b;\n  };\n\n  a.jqx.scheduler.recurrencePattern = function () {\n    var c = this;\n    var b = {\n      from: new a.jqx.date(0),\n      to: new a.jqx.date(9999, 12, 31),\n      count: 1000,\n      interval: 1,\n      exceptions: new Array(),\n      newExceptions: new Array(),\n      month: 1,\n      day: 1,\n      current: 0,\n      currentYearDay: 0,\n      step: 0,\n      days: [],\n      bynweekday: [],\n      isEveryWeekDay: true,\n      timeZone: null,\n      weekDays: {\n        Sunday: 0,\n        Monday: 1,\n        Tuesday: 2,\n        Wednesday: 3,\n        Thursday: 4,\n        Friday: 5,\n        Saturday: 6\n      },\n      freq: \"daily\",\n      bymonth: null,\n      bymonthday: null,\n      byyearday: null,\n      byweekno: null,\n      byweekday: null\n    };\n    a.extend(true, c, b);\n\n    c.getNewOccurenceDate = function () {\n      var o = function (n, C) {\n        var k = 0,\n            D = [];\n\n        if (n instanceof Array) {\n          for (; k < C; k++) {\n            D[k] = [].concat(n);\n          }\n        } else {\n          for (; k < C; k++) {\n            D[k] = n;\n          }\n        }\n\n        return D;\n      };\n\n      var d = function (k, i) {\n        var n = k % i;\n        return n * i < 0 ? n + i : n;\n      };\n\n      var v = function (D, k) {\n        if (arguments.length === 1) {\n          k = D;\n          D = 0;\n        }\n\n        var n = [];\n\n        for (var C = D; C < k; C++) {\n          n.push(C);\n        }\n\n        return n;\n      };\n\n      var u = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n      var l = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n      var r = c.from.year();\n      var j = [6, 0, 1, 2, 3, 4, 5];\n\n      var q = function (i) {\n        c.yearlen = i % 4 == 0 && (i % 100 != 0 || i % 400 == 0) ? 366 : 365;\n        c.nextyearlen = (1 + i) % 4 == 0 && ((1 + i) % 100 != 0 || (1 + i) % 400 == 0) ? 366 : 365;\n        var k = new Date(i, 0, 1);\n        var C = j[new Date(i, 0, 1).getDay()];\n\n        var n = function () {\n          for (var D = [], E = 0; E < 55; E++) {\n            D = D.concat(v(7));\n          }\n\n          return D;\n        }();\n\n        if (c.yearlen == 365) {\n          c.wdaymask = n.slice(C);\n          c.mrange = [].concat(l);\n        } else {\n          c.wdaymask = n.slice(C);\n          c.mrange = [].concat(u);\n        }\n      };\n\n      q(r);\n\n      switch (c.freq) {\n        case \"daily\":\n        default:\n          var g = c.from.add(new a.jqx.timeSpan(c.step * c.interval, 0, 0, 0));\n          c.step++;\n          return g;\n\n        case \"weekly\":\n          if (c.byweekday) {\n            var g = new a.jqx.date(c.from, c.timeZone);\n            var t = j[c.from.dayOfWeek()];\n            g = g.addDays(7 * c.step);\n            g = g.addDays(c.byweekday[c.current]);\n            g = g.addDays(-t);\n\n            if (g < c.from) {\n              g = null;\n            }\n\n            c.current++;\n\n            if (undefined == c.byweekday[c.current]) {\n              c.current = 0;\n              c.step++;\n            }\n          }\n\n          return g;\n\n        case \"monthly\":\n          if (c.bynweekday.length > 0) {\n            var g = new a.jqx.date(c.from.year(), c.from.month(), 1, c.from.hour(), c.from.minute(), c.from.second());\n            g.timeZone = c.timeZone;\n            g = g.addMonths(c.step * c.interval);\n            q(g.year());\n            var B = g.month();\n            var f = [c.mrange.slice(B - 1, B + 1)][0];\n            var h = f[0];\n            var m = f[1];\n            m -= 1;\n            c.nwdaymask = o(0, c.yearlen);\n            c.step++;\n\n            for (var y = 0; y < c.bynweekday.length; y++) {\n              var s = c.bynweekday[y][0],\n                  x = c.bynweekday[y][1];\n\n              if (x < 0) {\n                z = m + (x + 1) * 7;\n                z -= d(c.wdaymask[z] - s, 7);\n              } else {\n                z = h + (x - 1) * 7;\n                z += d(7 - c.wdaymask[z] + s, 7);\n              }\n\n              if (h <= z && z <= m) {\n                c.nwdaymask[z] = 1;\n              }\n            }\n\n            var w = z + 1;\n            var A = w - h;\n            var g = new a.jqx.date(c.from.year(), c.from.month(), A, c.from.hour(), c.from.minute(), c.from.second());\n            g.timeZone = c.timeZone;\n            g = g.addMonths((c.step - 1) * c.interval);\n          } else {\n            if (c.bymonthday.length > 0) {\n              var g = new a.jqx.date(c.from.year(), c.from.month(), c.bymonthday[c.current], c.from.hour(), c.from.minute(), c.from.second());\n              g.timeZone = c.timeZone;\n              g = g.addMonths(c.step * c.interval);\n              c.current++;\n\n              if (!c.bymonthday[c.current]) {\n                c.current = 0;\n                c.step++;\n              }\n            } else {\n              var g = new a.jqx.date(c.from.year(), c.from.month(), c.day, c.from.hour(), c.from.minute(), c.from.second());\n              g.timeZone = c.timeZone;\n              g = g.addMonths(c.step * c.interval);\n              c.step++;\n            }\n          }\n\n          return g;\n\n        case \"yearly\":\n          if (c.bymonth && c.bymonth.length > 0) {\n            if (c.bynweekday.length > 0) {\n              var g = new a.jqx.date(c.from.year(), c.bymonth[c.current], 1, c.from.hour(), c.from.minute(), c.from.second());\n              g.timeZone = c.timeZone;\n              g = g.addYears(c.step * c.interval);\n              q(g.year());\n              var B = g.month();\n              var f = [c.mrange.slice(B - 1, B + 1)][0];\n              var h = f[0];\n              var m = f[1];\n              m -= 1;\n              c.nwdaymask = o(0, c.yearlen);\n\n              for (var y = 0; y < c.bynweekday.length; y++) {\n                var s = c.bynweekday[y][0],\n                    x = c.bynweekday[y][1];\n\n                if (x < 0) {\n                  z = m + (x + 1) * 7;\n                  z -= d(c.wdaymask[z] - s, 7);\n                } else {\n                  z = h + (x - 1) * 7;\n                  z += d(7 - c.wdaymask[z] + s, 7);\n                }\n\n                if (h <= z && z <= m) {\n                  c.nwdaymask[z] = 1;\n                }\n              }\n\n              var w = z + 1;\n              var A = w - h;\n              g = new a.jqx.date(g.year(), c.bymonth[c.current], A, c.from.hour(), c.from.minute(), c.from.second());\n              g.timeZone = c.timeZone;\n              c.step++;\n            } else {\n              if (c.byyearday && c.byyearday.length > 0) {\n                var g = new a.jqx.date(c.from.year(), c.bymonth[c.current], c.byyearday[c.currentYearDay], c.from.hour(), c.from.minute(), c.from.second());\n                g.timeZone = c.timeZone;\n                g = g.addYears(c.step * c.interval);\n                c.currentYearDay++;\n\n                if (!c.byyearday[c.currentYearDay]) {\n                  c.currentYearDay = 0;\n                  c.current++;\n\n                  if (!c.bymonth[c.current]) {\n                    c.current = 0;\n                    c.step++;\n                  }\n                }\n              } else {\n                var g = new a.jqx.date(c.from.year(), c.bymonth[c.current], c.from.day(), c.from.hour(), c.from.minute(), c.from.second());\n                g.timeZone = c.timeZone;\n                g = g.addYears(c.step * c.interval);\n                c.current++;\n\n                if (!c.bymonth[c.current]) {\n                  c.current = 0;\n                  c.step++;\n                }\n              }\n            }\n          } else {\n            if (c.byyearday && c.byyearday.length > 0) {\n              var g = new a.jqx.date(c.from.year(), c.from.month(), c.byyearday[c.current], c.from.hour(), c.from.minute(), c.from.second());\n              g.timeZone = c.timeZone;\n              g = g.addYears(c.step * c.interval);\n              c.current++;\n\n              if (!c.byyearday[c.current]) {\n                c.current = 0;\n                c.step++;\n              }\n            } else {\n              if (c.byweekno != null) {\n                var p = function (n, k) {\n                  var i = 1;\n                  var C = new a.jqx.date(k.year(), 1, 1, k.hour(), k.minute(), k.second());\n                  C.timeZone = c.timeZone;\n\n                  while (i != n) {\n                    C = C.addDays(7);\n                    i++;\n\n                    if (i > 53) {\n                      break;\n                    }\n                  }\n\n                  while (a.jqx.scheduler.utilities.getWeekday(C.toDate()) != c.wkst) {\n                    C = C.addDays(1);\n                  }\n\n                  return C;\n                };\n\n                var g = c.from.addYears(c.step * c.interval);\n                g = p(c.byweekno[c.current], g);\n\n                if (c.byweekday) {\n                  var e = g;\n\n                  for (var z = 0; z < 7; z++) {\n                    if (j[e.dayOfWeek()] === c.byweekday[c.currentYearDay]) {\n                      break;\n                    }\n\n                    e = e.addDays(1);\n                  }\n\n                  g = e;\n                  c.currentYearDay++;\n\n                  if (!c.byweekday[c.currentYearDay]) {\n                    c.currentYearDay = 0;\n                    c.current++;\n\n                    if (!c.byweekno[c.current]) {\n                      c.current = 0;\n                      c.step++;\n                    }\n                  }\n                } else {\n                  c.current++;\n\n                  if (!c.byweekno[c.current]) {\n                    c.current = 0;\n                    c.step++;\n                  }\n                }\n              } else {\n                var g = new a.jqx.date(c.from.year(), c.month, c.day, c.from.hour(), c.from.minute(), c.from.second());\n                g.timeZone = c.timeZone;\n                g = g.addYears(c.step * c.interval);\n                c.step++;\n              }\n            }\n          }\n\n          return g;\n      }\n    };\n\n    c.isDateInExceptionAppointment = function (d, e, f) {\n      switch (c.freq) {\n        case \"daily\":\n        case \"weekly\":\n        default:\n          return d.year() == f.from.year() && d.dayOfYear() == f.from.dayOfYear();\n      }\n    };\n\n    c.createNewPattern = function () {\n      if (c.ical) {\n        var d = new a.jqx.scheduler.recurrencePattern(c.ical);\n        return d;\n      } else {\n        var d = new a.jqx.scheduler.recurrencePattern();\n        d.from = c.from;\n        d.to = c.to;\n        d.count = c.count;\n        d.interval = c.interval;\n        d.exceptions = c.exceptions;\n        d.newExceptions = c.newExceptions;\n        d.weekDays = c.weekDays;\n        d.isEveryWeekDay = c.isEveryWeekDay;\n        d.month = c.month;\n        d.day = c.day;\n        d.current = c.current;\n        d.currentYearDay = c.currentYearDay;\n        d.step = c.step;\n        d.days = c.days;\n        d.bynweekday = c.bynweekday;\n        d.bymonth = c.bymonth;\n        d.bymonthday = c.bymonthday;\n        d.byyearday = c.byyearday;\n        d.byweekno = c.byweekno;\n        d.byweekday = c.byweekday;\n        d.freq = d.freq;\n        d.timeZone = d.timeZone;\n        return d;\n      }\n    };\n\n    c.equals = function (e) {\n      var d = c.from == e.from && c.to == e.to && c.count === e.count && c.interval === e.interval && c.day === e.day && c.month === e.month;\n      return d;\n    };\n\n    c.isDayOfWeekIncluded = function (e) {\n      var d = e.dayOfWeek();\n      return a.jqx.scheduler.utilities.areWeekDaysIncluded(c.weekDays, d);\n    };\n\n    c.getWeekIndexFromDate = function (g, f) {\n      var e = f.firstDay;\n      var h = a.jqx.scheduler.utilities.getStartOfWeek(c.from, f, e);\n      var d = new a.jqx.timeSpan(g.subtract(h));\n      return parseInt(d.days() / 7);\n    };\n\n    c.canCreateNewOccurence = function (e, g) {\n      var d = e.toDate();\n\n      switch (c.freq) {\n        case \"daily\":\n        default:\n          if (c.bymonth) {\n            if (c.bymonth.indexOf(e.month()) == -1) {\n              return false;\n            }\n          }\n\n          if (c.isEveryWeekDay) {\n            if (!c.isDayOfWeekIncluded(e, g)) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            return true;\n          }\n\n          break;\n\n        case \"weekly\":\n          var f = c.getWeekIndexFromDate(e, g);\n\n          if (c.bymonth) {\n            if (c.bymonth.indexOf(e.month()) == -1) {\n              return false;\n            }\n          }\n\n          if (f % c.interval != 0) {\n            return false;\n          }\n\n          if (c.weekDays == {}) {\n            var h = e;\n\n            if (c.from.dayOfWeek() != h.dayOfWeek()) {\n              return false;\n            }\n          } else {\n            if (!c.isDayOfWeekIncluded(e, g)) {\n              return false;\n            }\n          }\n\n          break;\n\n        case \"monthly\":\n        case \"yearly\":\n          if (c.bymonth) {\n            if (c.bymonth.indexOf(e.month()) == -1) {\n              return false;\n            }\n          }\n\n          if (e < c.from) {\n            return false;\n          }\n\n          break;\n      }\n\n      return true;\n    };\n\n    c.toString = function () {\n      var d = {};\n      d.dtstart = this.from.toDate();\n      d.until = this.to ? this.to.toDate() : null;\n      d.count = this.count;\n      var e = {};\n      e.YEARLY = 0;\n      e.MONTHLY = 1;\n      e.WEEKLY = 2;\n      e.DAILY = 3;\n      e.HOURLY = 4;\n      e.MINUTELY = 5;\n      e.SECONDLY = 6;\n      d.freq = e[this.freq.toUpperCase()];\n\n      if (d.freq == \"YEARLY\") {\n        d.bymonth = this.bymonth ? this.bymonth : new Array().push(this.month);\n      }\n\n      d.byweekday = new Array();\n      var g = [\"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\", \"SU\"];\n      a.each(this.weekDays, function () {\n        var h = this;\n        h--;\n\n        if (h < 0) {\n          h = 6;\n        }\n\n        d.byweekday.push(h);\n      });\n\n      if (this.byyearday != undefined) {\n        d.byyearday = this.byyearday;\n      }\n\n      if (this.byweekno != undefined) {\n        d.byweekno = this.byweekno;\n      }\n\n      d.bymonthday = this.bymonthday;\n      d.wkst = g[this.wkst];\n      d.interval = this.interval;\n      var f = new a.jqx.ICalRule(d);\n      return f.toString();\n    };\n\n    c.init = function (j) {\n      var d = new a.jqx.ICalRule(c.ical, j);\n      var f = d.options;\n      c.from = f.dtstart ? new a.jqx.date(f.dtstart, c.timeZone) : c.from;\n      c.count = f.count != undefined ? f.count : c.count;\n      c.freq = d.FREQUENCIES[f.freq].toLowerCase();\n      c.interval = f.interval != undefined ? f.interval : c.interval;\n      c.to = f.until ? new a.jqx.date(f.until, c.timeZone) : c.to;\n      c.wkst = f.wkst;\n      c.bymonth = f.bymonth;\n\n      if (c.bymonth && c.bymonth.length > 0) {\n        c.month = c.bymonth[0];\n      } else {\n        c.month = c.from.month();\n      }\n\n      c.day = c.from.day();\n\n      if (f.byweekday != undefined) {\n        var h = {\n          Sunday: 0,\n          Monday: 1,\n          Tuesday: 2,\n          Wednesday: 3,\n          Thursday: 4,\n          Friday: 5,\n          Saturday: 6\n        };\n        c.weekDays = {};\n\n        for (var g = 0; g < f.byweekday.length; g++) {\n          var e = f.byweekday[g];\n\n          switch (e) {\n            case 0:\n              c.weekDays.Monday = 1;\n              break;\n\n            case 1:\n              c.weekDays.Tuesday = 2;\n              break;\n\n            case 2:\n              c.weekDays.Wednesday = 3;\n              break;\n\n            case 3:\n              c.weekDays.Thursday = 4;\n              break;\n\n            case 4:\n              c.weekDays.Friday = 5;\n              break;\n\n            case 5:\n              c.weekDays.Saturday = 6;\n              break;\n\n            case 6:\n              c.weekDays.Sunday = 0;\n              break;\n          }\n        }\n\n        c.byweekday = f.byweekday;\n      }\n\n      c.byweekno = f.byweekno;\n\n      if (f.bynweekday) {\n        c.bynweekday = f.bynweekday;\n      }\n\n      if (f.bymonthday != undefined) {\n        c.bymonthday = f.bymonthday.sort();\n\n        if (c.bymonthday[0]) {\n          c.day = c.bymonthday[0];\n        }\n      }\n\n      if (f.byyearday != undefined) {\n        c.day = f.byyearday[0];\n        c.byyearday = f.byyearday.sort();\n      }\n\n      return f;\n    };\n\n    c.setFrom = function (d) {\n      c.from = d.clone();\n\n      if (c.ical) {\n        c.init(d);\n      }\n    };\n\n    if (arguments.length == 1) {\n      c.ical = arguments[0];\n      c.init();\n    }\n\n    return c;\n  };\n\n  a.jqx.scheduler.calendar = {\n    \"/\": \"/\",\n    \":\": \":\",\n    firstDay: 0,\n    days: {\n      names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n    },\n    months: {\n      names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n      namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n    },\n    AM: [\"AM\", \"am\", \"AM\"],\n    PM: [\"PM\", \"pm\", \"PM\"],\n    eras: [{\n      name: \"A.D.\",\n      start: null,\n      offset: 0\n    }],\n    twoDigitYearMax: 2029,\n    patterns: {\n      d: \"M/d/yyyy\",\n      D: \"dddd, MMMM dd, yyyy\",\n      t: \"h:mm tt\",\n      T: \"h:mm:ss tt\",\n      f: \"dddd, MMMM dd, yyyy h:mm tt\",\n      F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n      M: \"MMMM dd\",\n      Y: \"yyyy MMMM\",\n      S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n      ISO: \"yyyy-MM-dd hh:mm:ss\",\n      ISO2: \"yyyy-MM-dd HH:mm:ss\",\n      d1: \"dd.MM.yyyy\",\n      d2: \"dd-MM-yyyy\",\n      zone1: \"yyyy-MM-ddTHH:mm:ss-HH:mm\",\n      zone2: \"yyyy-MM-ddTHH:mm:ss+HH:mm\",\n      custom: \"yyyy-MM-ddTHH:mm:ss.fff\",\n      custom2: \"yyyy-MM-dd HH:mm:ss.fff\"\n    },\n    percentsymbol: \"%\",\n    currencysymbol: \"$\",\n    currencysymbolposition: \"before\",\n    decimalseparator: \".\",\n    thousandsseparator: \",\"\n  };\n\n  a.jqx.ICalRule = function (u, n) {\n    var D = this;\n\n    var m = function (R, j) {\n      if (arguments.length === 1) {\n        j = R;\n        R = 0;\n      }\n\n      var k = [];\n\n      for (var v = R; v < j; v++) {\n        k.push(v);\n      }\n\n      return k;\n    };\n\n    var A = function (k, v) {\n      var j = 0,\n          R = [];\n\n      if (k instanceof Array) {\n        for (; j < v; j++) {\n          R[j] = [].concat(k);\n        }\n      } else {\n        for (; j < v; j++) {\n          R[j] = k;\n        }\n      }\n\n      return R;\n    };\n\n    var C = function (i) {\n      return i instanceof Array && i.length == 0 ? false : Boolean(i);\n    };\n\n    var B = function (i, j) {\n      return i.indexOf(j) != -1;\n    };\n\n    var G = [].concat(A(1, 31), A(2, 28), A(3, 31), A(4, 30), A(5, 31), A(6, 30), A(7, 31), A(8, 31), A(9, 30), A(10, 31), A(11, 30), A(12, 31), A(1, 7));\n    var s = [].concat(A(1, 31), A(2, 29), A(3, 31), A(4, 30), A(5, 31), A(6, 30), A(7, 31), A(8, 31), A(9, 30), A(10, 31), A(11, 30), A(12, 31), A(1, 7));\n    var h = m(1, 29),\n        g = m(1, 30),\n        P = m(1, 31),\n        O = m(1, 32);\n    var J = [].concat(O, g, O, P, O, P, O, O, P, O, P, O, O.slice(0, 7));\n    var b = [].concat(O, h, O, P, O, P, O, O, P, O, P, O, O.slice(0, 7));\n    h = m(-28, 0);\n    g = m(-29, 0);\n    P = m(-30, 0);\n    O = m(-31, 0);\n    var K = [].concat(O, g, O, P, O, P, O, O, P, O, P, O, O.slice(0, 7));\n    var e = [].concat(O, h, O, P, O, P, O, O, P, O, P, O, O.slice(0, 7));\n    var c = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n    var z = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n\n    var q = function () {\n      for (var j = [], k = 0; k < 55; k++) {\n        j = j.concat(m(7));\n      }\n\n      return j;\n    }();\n\n    var f = function (j, k) {\n      var i = this;\n\n      if (k === 0) {\n        throw new Error(\"Can't create weekday with n == 0\");\n      }\n\n      this.weekday = j;\n      this.n = k;\n\n      this.nth = function (v) {\n        return i.n == v ? i : new f(i.weekday, v);\n      };\n\n      this.equals = function (v) {\n        return i.weekday == v.weekday && i.n == v.n;\n      };\n\n      this.toString = function () {\n        var v = [\"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\", \"SU\"][i.weekday];\n\n        if (this.n) {\n          v = (i.n > 0 ? \"+\" : \"\") + String(i.n) + v;\n        }\n\n        return v;\n      };\n\n      this.getJsWeekday = function () {\n        return i.weekday == 6 ? 0 : i.weekday + 1;\n      };\n    };\n\n    this.FREQUENCIES = [\"YEARLY\", \"MONTHLY\", \"WEEKLY\", \"DAILY\", \"HOURLY\", \"MINUTELY\", \"SECONDLY\"];\n    this.YEARLY = 0;\n    this.MONTHLY = 1;\n    this.WEEKLY = 2;\n    this.DAILY = 3;\n    this.HOURLY = 4;\n    this.MINUTELY = 5;\n    this.SECONDLY = 6;\n    this.MO = new f(0);\n    this.TU = new f(1);\n    this.WE = new f(2);\n    this.TH = new f(3);\n    this.FR = new f(4);\n    this.SA = new f(5);\n    this.SU = new f(6);\n    var d = {\n      freq: null,\n      dtstart: null,\n      interval: 1,\n      wkst: D.MO,\n      count: null,\n      until: null,\n      bysetpos: null,\n      bymonth: null,\n      bymonthday: null,\n      byyearday: null,\n      byweekno: null,\n      byweekday: null,\n      byhour: null,\n      byminute: null,\n      bysecond: null,\n      byeaster: null\n    };\n    this._string = null;\n\n    this.toString = function () {\n      var aa = this.origOptions;\n      var Y,\n          Z,\n          V,\n          W,\n          U,\n          k = [];\n      Z = Object.keys(aa);\n      V = Object.keys(d);\n\n      for (var R = 0; R < Z.length; R++) {\n        if (!B(V, Z[R])) {\n          continue;\n        }\n\n        Y = Z[R].toUpperCase();\n        W = aa[Z[R]];\n        U = [];\n\n        if (W === null || W instanceof Array && !W.length) {\n          continue;\n        }\n\n        switch (Y) {\n          case \"FREQ\":\n            W = D.FREQUENCIES[aa.freq];\n            break;\n\n          case \"WKST\":\n            if (!W) {\n              W = 0;\n            }\n\n            W = W.toString();\n            break;\n\n          case \"BYWEEKDAY\":\n            Y = \"BYDAY\";\n\n            if (!(W instanceof Array)) {\n              W = [W];\n            }\n\n            for (var T, v = 0; v < W.length; v++) {\n              T = W[v];\n\n              if (T instanceof f) {} else {\n                if (T instanceof Array) {\n                  T = new f(T[0], T[1]);\n                } else {\n                  T = new f(T);\n                }\n              }\n\n              U[v] = T.toString();\n            }\n\n            W = U;\n            break;\n\n          case \"DTSTART\":\n          case \"UNTIL\":\n            W = a.jqx.scheduler.utilities.timeToUntilString(W);\n            break;\n\n          default:\n            if (W instanceof Array) {\n              for (var v = 0; v < W.length; v++) {\n                U[v] = String(W[v]);\n              }\n\n              W = U;\n            } else {\n              W = String(W);\n            }\n\n        }\n\n        k.push([Y, W]);\n      }\n\n      var X = [];\n\n      for (var R = 0; R < k.length; R++) {\n        var S = k[R];\n        X.push(S[0] + \"=\" + S[1].toString());\n      }\n\n      return X.join(\";\");\n    };\n\n    this.parseString = function (v) {\n      v = v.replace(/^\\s+|\\s+$/, \"\");\n\n      if (!v.length) {\n        return null;\n      }\n\n      var S,\n          R,\n          X,\n          W,\n          T,\n          Y = v.split(\";\"),\n          aa = {};\n\n      for (S = 0; S < Y.length; S++) {\n        T = Y[S].split(\"=\");\n        X = T[0];\n        W = T[1];\n\n        if (X == \"\") {\n          continue;\n        }\n\n        switch (X) {\n          case \"COUNT\":\n          case \"INTERVAL\":\n          case \"BYSETPOS\":\n          case \"BYMONTH\":\n          case \"BYMONTHDAY\":\n          case \"BYYEARDAY\":\n          case \"BYWEEKNO\":\n          case \"BYHOUR\":\n          case \"BYMINUTE\":\n          case \"BYSECOND\":\n            if (W.indexOf(\",\") != -1) {\n              W = W.split(\",\");\n\n              for (R = 0; R < W.length; R++) {\n                if (/^[+-]?\\d+$/.test(W[R])) {\n                  W[R] = Number(W[R]);\n                }\n              }\n            } else {\n              if (/^[+-]?\\d+$/.test(W)) {\n                W = Number(W);\n              }\n            }\n\n            X = X.toLowerCase();\n            aa[X] = W;\n            break;\n\n          case \"BYDAY\":\n            var k,\n                U,\n                V,\n                Z = W.split(\",\");\n            aa.byweekday = [];\n\n            for (R = 0; R < Z.length; R++) {\n              V = Z[R];\n\n              if (V.length == 2) {\n                U = D[V];\n                aa.byweekday.push(U);\n              } else {\n                V = V.match(/^([+-]?\\d)([A-Z]{2})$/);\n                k = Number(V[1]);\n                U = V[2];\n                U = D[U].weekday;\n                aa.byweekday.push(new f(U, k));\n              }\n            }\n\n            break;\n\n          case \"FREQ\":\n            aa.freq = D[W];\n            break;\n\n          case \"WKST\":\n            aa.wkst = D[W];\n            break;\n\n          case \"DTSTART\":\n            aa.dtstart = a.jqx.scheduler.utilities.untilStringToDate(W);\n            break;\n\n          case \"UNTIL\":\n            aa.until = a.jqx.scheduler.utilities.untilStringToDate(W);\n            break;\n\n          case \"BYEASTER\":\n            aa.byeaster = Number(W);\n            break;\n\n          default:\n            throw new Error(\"Unknown ICalRule property '\" + X + \"'\");\n        }\n      }\n\n      D.options = aa;\n      return aa;\n    };\n\n    if (a.type(u) === \"string\") {\n      this.options = this.parseString(u);\n    } else {\n      this.options = u || {};\n    }\n\n    var u = this.options;\n\n    if (!Array.prototype.forEach) {\n      Array.prototype.forEach = function (V, j) {\n        var R, v;\n\n        if (this == null) {\n          throw new TypeError(\" this is null or not defined\");\n        }\n\n        var U = Object(this);\n        var i = U.length >>> 0;\n\n        if (typeof V !== \"function\") {\n          throw new TypeError(V + \" is not a function\");\n        }\n\n        if (arguments.length > 1) {\n          R = j;\n        }\n\n        v = 0;\n\n        while (v < i) {\n          var S;\n\n          if (v in U) {\n            S = U[v];\n            V.call(R, S, v, U);\n          }\n\n          v++;\n        }\n      };\n    }\n\n    if (!Object.keys) {\n      Object.keys = function () {\n        var k = Object.prototype.hasOwnProperty,\n            v = !{\n          toString: null\n        }.propertyIsEnumerable(\"toString\"),\n            j = [\"toString\", \"toLocaleString\", \"valueOf\", \"hasOwnProperty\", \"isPrototypeOf\", \"propertyIsEnumerable\", \"constructor\"],\n            i = j.length;\n        return function (T) {\n          if (typeof T !== \"object\" && (typeof T !== \"function\" || T === null)) {\n            throw new TypeError(\"Object.keys called on non-object\");\n          }\n\n          var R = [],\n              U,\n              S;\n\n          for (U in T) {\n            if (k.call(T, U)) {\n              R.push(U);\n            }\n          }\n\n          if (v) {\n            for (S = 0; S < i; S++) {\n              if (k.call(T, j[S])) {\n                R.push(j[S]);\n              }\n            }\n          }\n\n          return R;\n        };\n      }();\n    }\n\n    this.origOptions = {};\n    var E = [],\n        w = Object.keys(this.options),\n        p = Object.keys(d);\n    w.forEach(function (i) {\n      this.origOptions[i] = this.options[i];\n\n      if (!B(p, i)) {\n        E.push(i);\n      }\n    }, this);\n\n    if (E.length) {\n      throw new Error(\"Invalid options: \" + E.join(\", \"));\n    }\n\n    if (!D.FREQUENCIES[this.options.freq] && u.byeaster === null) {\n      throw new Error(\"Invalid Frequency: \" + String(u.freq));\n    }\n\n    p.forEach(function (i) {\n      if (!B(w, i)) {\n        u[i] = d[i];\n      }\n    });\n    var x = this.options;\n\n    if (x.byeaster !== null) {\n      x.freq = this.YEARLY;\n    }\n\n    if (!x.dtstart) {\n      x.dtstart = new Date();\n      x.dtstart.setMilliseconds(0);\n    }\n\n    if (n) {\n      x.dtstart = n.toDate();\n    }\n\n    if (x.wkst === null) {\n      x.wkst = this.MO.weekday;\n    } else {\n      if (typeof x.wkst == \"number\") {} else {\n        if (x.wkst == null) {\n          x.wkst = this.MO.weekday;\n        } else {\n          x.wkst = x.wkst.weekday;\n        }\n      }\n    }\n\n    if (x.bysetpos !== null) {\n      if (typeof x.bysetpos == \"number\") {\n        x.bysetpos = [x.bysetpos];\n      }\n\n      for (var N = 0; N < x.bysetpos.length; N++) {\n        var H = x.bysetpos[N];\n\n        if (H == 0 || !(-366 <= H && H <= 366)) {\n          throw new Error(\"bysetpos must be between 1 and 366, or between -366 and -1\");\n        }\n      }\n    }\n\n    if (!(C(x.byweekno) || C(x.byyearday) || C(x.bymonthday) || x.byweekday !== null || x.byeaster !== null)) {\n      switch (x.freq) {\n        case this.YEARLY:\n          if (!x.bymonth) {\n            x.bymonth = x.dtstart.getMonth() + 1;\n          }\n\n          x.bymonthday = x.dtstart.getDate();\n          break;\n\n        case this.MONTHLY:\n          x.bymonthday = x.dtstart.getDate();\n          break;\n\n        case this.WEEKLY:\n          x.byweekday = a.jqx.scheduler.utilities.getWeekday(x.dtstart);\n          break;\n      }\n    }\n\n    if (x.bymonth !== null && !(x.bymonth instanceof Array)) {\n      x.bymonth = [x.bymonth];\n    }\n\n    if (x.byyearday !== null && !(x.byyearday instanceof Array)) {\n      x.byyearday = [x.byyearday];\n    }\n\n    if (x.bymonthday === null) {\n      x.bymonthday = [];\n      x.bynmonthday = [];\n    } else {\n      if (x.bymonthday instanceof Array) {\n        var Q = [],\n            I = [];\n\n        for (N = 0; N < x.bymonthday.length; N++) {\n          var H = x.bymonthday[N];\n\n          if (H > 0) {\n            Q.push(H);\n          } else {\n            if (H < 0) {\n              I.push(H);\n            }\n          }\n        }\n\n        x.bymonthday = Q;\n        x.bynmonthday = I;\n      } else {\n        if (x.bymonthday < 0) {\n          x.bynmonthday = [x.bymonthday];\n          x.bymonthday = [];\n        } else {\n          x.bynmonthday = [];\n          x.bymonthday = [x.bymonthday];\n        }\n      }\n    }\n\n    if (x.byweekno !== null && !(x.byweekno instanceof Array)) {\n      x.byweekno = [x.byweekno];\n    }\n\n    if (x.byweekday === null) {\n      x.bynweekday = null;\n    } else {\n      if (typeof x.byweekday == \"number\") {\n        x.byweekday = [x.byweekday];\n        x.bynweekday = null;\n      } else {\n        if (x.byweekday instanceof f) {\n          if (!x.byweekday.n || x.freq > this.MONTHLY) {\n            x.byweekday = [x.byweekday.weekday];\n            x.bynweekday = null;\n          } else {\n            x.bynweekday = [[x.byweekday.weekday, x.byweekday.n]];\n            x.byweekday = null;\n          }\n        } else {\n          var r = [],\n              F = [];\n\n          for (N = 0; N < x.byweekday.length; N++) {\n            var o = x.byweekday[N];\n\n            if (typeof o == \"number\") {\n              r.push(o);\n            } else {\n              if (!o.n || x.freq > this.MONTHLY) {\n                r.push(o.weekday);\n              } else {\n                F.push([o.weekday, o.n]);\n              }\n            }\n          }\n\n          x.byweekday = C(r) ? r : null;\n          x.bynweekday = C(F) ? F : null;\n        }\n      }\n    }\n\n    if (x.byhour === null) {\n      x.byhour = x.freq < this.HOURLY ? [x.dtstart.getHours()] : null;\n    } else {\n      if (typeof x.byhour == \"number\") {\n        x.byhour = [x.byhour];\n      }\n    }\n\n    if (x.byminute === null) {\n      x.byminute = x.freq < this.MINUTELY ? [x.dtstart.getMinutes()] : null;\n    } else {\n      if (typeof x.byminute == \"number\") {\n        x.byminute = [x.byminute];\n      }\n    }\n\n    if (x.bysecond === null) {\n      x.bysecond = x.freq < this.SECONDLY ? [x.dtstart.getSeconds()] : null;\n    } else {\n      if (typeof x.bysecond == \"number\") {\n        x.bysecond = [x.bysecond];\n      }\n    }\n\n    if (x.freq >= this.HOURLY) {\n      this.timeset = null;\n    } else {\n      this.timeset = [];\n\n      if (x.byhour) {\n        for (N = 0; N < x.byhour.length; N++) {\n          var t = x.byhour[N];\n\n          for (var M = 0; M < x.byminute.length; M++) {\n            var l = x.byminute[M];\n\n            for (var L = 0; L < x.bysecond.length; L++) {\n              var y = x.bysecond[L];\n              this.timeset.push(new a.jqx.scheduler.utilities.Time(t, l, y));\n            }\n          }\n        }\n      }\n\n      a.jqx.scheduler.utilities.sort(this.timeset);\n    }\n\n    return this;\n  };\n})(jqxBaseFramework);\n\n(function (a) {\n  a.extend(a.jqx._jqxScheduler.prototype, {\n    _getexportcolor: function (l) {\n      var f = l;\n\n      if (l == \"transparent\") {\n        f = \"#FFFFFF\";\n      }\n\n      if (!f || !f.toString()) {\n        f = \"#FFFFFF\";\n      }\n\n      if (f.toString().indexOf(\"rgb\") != -1) {\n        var i = f.split(\",\");\n\n        if (f.toString().indexOf(\"rgba\") != -1) {\n          var d = parseInt(i[0].substring(5));\n          var h = parseInt(i[1]);\n          var j = parseInt(i[2]);\n          var k = parseInt(i[3].substring(1, 4));\n          var m = {\n            r: d,\n            g: h,\n            b: j\n          };\n\n          var e = this._rgbToHex(m);\n\n          if (d == 0 && h == 0 && j == 0 && k == 0) {\n            return \"#ffffff\";\n          }\n\n          return \"#\" + e;\n        }\n\n        var d = parseInt(i[0].substring(4));\n        var h = parseInt(i[1]);\n        var j = parseInt(i[2].substring(1, 4));\n        var m = {\n          r: d,\n          g: h,\n          b: j\n        };\n\n        var e = this._rgbToHex(m);\n\n        return \"#\" + e;\n      } else {\n        if (f.toString().indexOf(\"#\") != -1) {\n          if (f.toString().length == 4) {\n            var c = f.toString().substring(1, 4);\n            f += c;\n          }\n        }\n      }\n\n      return f;\n    },\n    _rgbToHex: function (b) {\n      return this._intToHex(b.r) + this._intToHex(b.g) + this._intToHex(b.b);\n    },\n    _intToHex: function (c) {\n      var b = parseInt(c).toString(16);\n\n      if (b.length == 1) {\n        b = \"0\" + b;\n      }\n\n      return b.toUpperCase();\n    },\n    exportData: function (w) {\n      var q = this;\n\n      if (!a.jqx.dataAdapter.ArrayExporter) {\n        throw \"jqxScheduler: Missing reference to jqxdata.export.js!\";\n      }\n\n      var y = this.exportSettings.serverURL;\n      var g = this.exportSettings.characterSet;\n      var C = this.exportSettings.fileName;\n      var H = this.exportSettings.ICSXWRCALNAME;\n      var s = this.exportSettings.ICSXWRCALDESC;\n\n      if (C === undefined) {\n        C = \"jqxScheduler\";\n      }\n\n      var q = this;\n\n      if (w == \"ical\" || w == \"ics\") {\n        if (q._resources.length > 1 && C && q.resourcesInMultipleICSFiles) {\n          var t = this.getAppointments();\n\n          for (var E = 0; E < q._resources.length; E++) {\n            var c = q._resources[E];\n            var v = new Array();\n\n            for (var D = 0; D < t.length; D++) {\n              var k = t[D];\n\n              if (k.resourceId == c) {\n                v.push(k);\n              }\n            }\n\n            var I = \"BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:jqxScheduler\\nMETHOD:PUBLISH\\n\";\n\n            if (H) {\n              I += \"X-WR-CALNAME:\" + H + \"\\n\";\n            }\n\n            if (s) {\n              I += \"X-WR-CALDESC:\" + s + \"\\n\";\n            }\n\n            for (var B = 0; B < v.length; B++) {\n              I += v[B].jqxAppointment.toString();\n\n              if (B < v.length - 1) {\n                I += \"\\n\";\n              }\n            }\n\n            I += \"\\nEND:VCALENDAR\";\n            var h = I.length;\n            var p = new Uint8Array(new ArrayBuffer(h));\n\n            for (var B = 0; B < h; B++) {\n              p[B] = I.charCodeAt(B);\n            }\n\n            var b = new Blob([p], {\n              type: \"application/calendar\"\n            });\n            var d;\n\n            if (d) {\n              d(b, C + \"_\" + c + \".ics\");\n            } else {\n              if (window.jqxSaveAs) {\n                window.jqxSaveAs(b, C + \"_\" + c + \".ics\");\n              }\n            }\n          }\n        } else {\n          var t = this.getAppointments();\n          var I = \"BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:jqxScheduler\\nMETHOD:PUBLISH\\n\";\n\n          for (var E = 0; E < t.length; E++) {\n            I += t[E].jqxAppointment.toString();\n\n            if (E < t.length - 1) {\n              I += \"\\n\";\n            }\n          }\n\n          I += \"\\nEND:VCALENDAR\";\n          var h = I.length;\n          var p = new Uint8Array(new ArrayBuffer(h));\n\n          for (E = 0; E < h; E++) {\n            p[E] = I.charCodeAt(E);\n          }\n\n          var b = new Blob([p], {\n            type: \"application/calendar\"\n          });\n\n          if (!C) {\n            return I;\n          }\n\n          if (d) {\n            d(b, C + \".ics\");\n          } else {\n            if (window.jqxSaveAs) {\n              window.jqxSaveAs(b, C + \".ics\");\n            }\n          }\n        }\n\n        return;\n      }\n\n      var t = this.getDataAppointments();\n      var A = new Array();\n      var F = {};\n      var r = {};\n      var n = this.host.find(\".jqx-grid-cell:first\");\n      n.removeClass(this.toThemeProperty(\"jqx-grid-cell-selected\"));\n      n.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n      n.removeClass(this.toThemeProperty(\"jqx-grid-cell-hover\"));\n      n.removeClass(this.toThemeProperty(\"jqx-fill-state-hover\"));\n      var l = \"cell\";\n      var f = 1;\n      var G = \"column\";\n      var e = 1;\n      var z = a(this.columns.records[0].element);\n      var o = 0;\n      a.each(this.appointmentDataFields, function (j, m) {\n        F[m] = {};\n        F[m].text = m;\n        F[m].width = 100;\n        F[m].formatString = \"\";\n        F[m].localization = q.schedulerLocalization;\n\n        if (j == \"from\" || j == \"to\") {\n          F[m].type = \"date\";\n          F[m].formatString = q.exportSettings.dateTimeFormatString;\n        } else {\n          F[m].type = \"string\";\n        }\n\n        F[m].cellsAlign = \"left\";\n        A.push(F[m]);\n        l = \"cell\" + f;\n        G = \"column\" + e;\n\n        if (w == \"html\" || w == \"xls\" || w == \"pdf\") {\n          var i = function (J, R, Q, K, P, M, L, N, O) {\n            r[J] = {};\n\n            if (R == undefined) {\n              return;\n            }\n\n            r[J][\"font-size\"] = R.css(\"font-size\");\n            r[J][\"font-weight\"] = R.css(\"font-weight\");\n            r[J][\"font-style\"] = R.css(\"font-style\");\n            r[J][\"background-color\"] = q._getexportcolor(R.css(\"background-color\"));\n            r[J][\"color\"] = q._getexportcolor(R.css(\"color\"));\n            r[J][\"border-color\"] = q._getexportcolor(R.css(\"border-top-color\"));\n\n            if (Q) {\n              r[J][\"text-align\"] = \"left\";\n            } else {\n              r[J][\"text-align\"] = \"left\";\n              r[J][\"formatString\"] = \"\";\n              r[J][\"dataType\"] = \"string\";\n\n              if (L == \"from\" || L == \"to\") {\n                r[J][\"dataType\"] = \"date\";\n                r[J][\"formatString\"] = q.exportSettings.dateTimeFormatString;\n              }\n            }\n\n            if (w == \"html\" || w == \"pdf\") {\n              r[J][\"border-top-width\"] = R.css(\"border-top-width\");\n              r[J][\"border-left-width\"] = R.css(\"border-left-width\");\n              r[J][\"border-right-width\"] = R.css(\"border-right-width\");\n              r[J][\"border-bottom-width\"] = R.css(\"border-bottom-width\");\n              r[J][\"border-top-style\"] = R.css(\"border-top-style\");\n              r[J][\"border-left-style\"] = R.css(\"border-left-style\");\n              r[J][\"border-right-style\"] = R.css(\"border-right-style\");\n              r[J][\"border-bottom-style\"] = R.css(\"border-bottom-style\");\n\n              if (Q) {\n                if (o == 0) {\n                  r[J][\"border-left-width\"] = R.css(\"border-right-width\");\n                }\n\n                r[J][\"border-top-width\"] = R.css(\"border-right-width\");\n                r[J][\"border-bottom-width\"] = R.css(\"border-bottom-width\");\n              } else {\n                if (o == 0) {\n                  r[J][\"border-left-width\"] = \"1px\";\n                }\n\n                r[J][\"border-right-width\"] = \"1px\";\n              }\n            }\n\n            if (Q) {\n              F[m].style = J;\n            }\n\n            F[m].cellStyle = J;\n          };\n\n          i(G, z, true, false, this, q, j);\n          e++;\n          i(l, n, false, false, this, q, j);\n          f++;\n        }\n\n        o++;\n      });\n      var x = a.jqx.dataAdapter.ArrayExporter(t, F, r, y);\n\n      if (C == null) {\n        this._renderrows();\n\n        var u = x.exportTo(w);\n        setTimeout(function () {\n          q.exporting = false;\n        }, 50);\n        return u;\n      } else {\n        x.exportToFile(w, C, y, g);\n      }\n\n      this._renderrows();\n\n      setTimeout(function () {\n        q.exporting = false;\n      }, 50);\n    },\n    shadeColor: function (b, g) {\n      var h = parseInt(b.slice(1), 16),\n          c = g < 0 ? 0 : 255,\n          i = g < 0 ? g * -1 : g,\n          e = h >> 16,\n          d = h >> 8 & 255,\n          j = h & 255;\n      return \"#\" + (16777216 + (Math.round((c - e) * i) + e) * 65536 + (Math.round((c - d) * i) + d) * 256 + (Math.round((c - j) * i) + j)).toString(16).slice(1);\n    },\n    hexToRgba: function (c, e) {\n      var b = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(c);\n\n      var d = function () {\n        var f = a.jqx.browser.msie && a.jqx.browser.version < 10;\n\n        if (this.alpha == undefined || f) {\n          return \"rgb(\" + this.r + \", \" + this.g + \", \" + this.b + \")\";\n        }\n\n        if (this.alpha > 1) {\n          this.alpha = 1;\n        } else {\n          if (this.alpha < 0) {\n            this.alpha = 0;\n          }\n        }\n\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.alpha + \")\";\n      };\n\n      if (e == undefined) {\n        return b ? {\n          r: parseInt(b[1], 16),\n          g: parseInt(b[2], 16),\n          b: parseInt(b[3], 16),\n          toString: d\n        } : null;\n      }\n\n      if (e > 1) {\n        e = 1;\n      } else {\n        if (e < 0) {\n          e = 0;\n        }\n      }\n\n      return b ? {\n        r: parseInt(b[1], 16),\n        g: parseInt(b[2], 16),\n        b: parseInt(b[3], 16),\n        alpha: e,\n        toString: d\n      } : null;\n    },\n    getAppointmentColors: function (f) {\n      var e = \"\";\n      var d = \"\";\n      var c = \"\";\n      e = this.hexToRgba(f, this.appointmentOpacity).toString();\n      d = f;\n\n      var b = function (h) {\n        var g = 105;\n        var i = h.r * 0.299 + h.g * 0.587 + h.b * 0.114;\n        var j = 255 - i < g ? \"Black\" : \"White\";\n        return j;\n      };\n\n      c = b(this.hexToRgba(f, 0.7));\n      return {\n        background: e,\n        color: c,\n        border: d\n      };\n    },\n    getColors: function (g) {\n      if (g == -1) {\n        g = 0;\n      }\n\n      var c = \"\";\n      var e = \"\";\n      var f = \"\";\n      var i = this.resources ? this.resources.colorScheme : null;\n\n      if (!i) {\n        i = \"scheme01\";\n      }\n\n      var b = new Array();\n\n      for (var d = 0; d < this.colorSchemes.length; d++) {\n        if (this.colorSchemes[d].name == i) {\n          b = this.colorSchemes[d].colors;\n          break;\n        }\n      }\n\n      while (g > b.length - 1) {\n        var j = parseInt(i.substring(6));\n\n        if (j >= 27) {\n          j = 0;\n        }\n\n        b = b.concat(this.colorSchemes[j].colors);\n        j++;\n      }\n\n      c = b[g];\n      c = this.hexToRgba(b[g], this.appointmentOpacity).toString();\n      e = b[g];\n\n      var h = function (l) {\n        var k = 105;\n        var m = l.r * 0.299 + l.g * 0.587 + l.b * 0.114;\n        var n = 255 - m < k ? \"Black\" : \"White\";\n        return n;\n      };\n\n      f = h(this.hexToRgba(b[g], 0.7));\n      return {\n        background: c,\n        color: f,\n        border: e\n      };\n    },\n    getAppointments: function () {\n      var d = this.uiappointments;\n      var b = new Array();\n\n      for (var c = 0; c < d.length; c++) {\n        var e = d[c].boundAppointment;\n        e.toString = e.jqxAppointment.toString;\n        b.push(e);\n      }\n\n      return b;\n    },\n    getDataAppointments: function () {\n      var d = this.uiappointments;\n      var b = new Array();\n\n      for (var c = 0; c < d.length; c++) {\n        var f = d[c].boundAppointment;\n        var e = {};\n        a.each(this.appointmentDataFields, function (h, i) {\n          e[i] = f[h];\n\n          if (h == \"from\" || h == \"to\") {\n            if (\"date\" != a.type(f[h])) {\n              e[i] = f[h].toDate();\n            }\n          }\n\n          if (h == \"recurrencePattern\") {\n            if (f[h]) {\n              e[i] = f[h].toString();\n            }\n          }\n\n          if (h == \"recurrenceException\") {\n            if (f[h]) {\n              e[i] = \"\";\n\n              for (var g = 0; g < f[h].length; g++) {\n                e[i] += f[h][g].toString();\n\n                if (g < f[h].length - 1) {\n                  e[i] += \",\";\n                }\n              }\n            }\n          }\n\n          try {\n            if (JSON) {\n              e.toString = function () {\n                return JSON.stringify(e);\n              };\n            }\n          } catch (k) {}\n        });\n        b.push(e);\n      }\n\n      return b;\n    },\n    _refreshColumns: function () {\n      this._initializeColumns();\n\n      this.columnsheader = this.columnsheader || a('<div style=\"overflow: hidden;\"></div>');\n      this.columnsheader.children().remove();\n      var b = this.columnsHeight;\n      b = this._preparecolumnGroups();\n      this.columnsheader.height(b);\n\n      this._rendercolumnheaders();\n    },\n    _refreshColumnTitles: function () {\n      var p = this._views[this._view].type;\n      var o = this._views[this._view];\n      var l = this;\n      var d = new Array();\n\n      if (l.columns.records[0].timeColumn) {\n        d.push({});\n      }\n\n      if (o.timeRuler && o.timeRuler.timeZones) {\n        for (var v = 0; v < o.timeRuler.timeZones.length; v++) {\n          d.push({});\n        }\n      }\n\n      var q = function (A, G, I) {\n        var B = \"halfHour\";\n\n        if (o.timeRuler && o.timeRuler.scale) {\n          B = o.timeRuler.scale;\n        }\n\n        var K = 24;\n        var z = 0;\n        var J = 23;\n\n        if (o.timeRuler) {\n          if (o.timeRuler.scaleStartHour != undefined) {\n            var z = parseInt(o.timeRuler.scaleStartHour);\n          }\n\n          if (o.timeRuler.scaleEndHour != undefined) {\n            var J = parseInt(o.timeRuler.scaleEndHour);\n          }\n\n          if (z < 0) {\n            z = 0;\n          }\n\n          if (J < 0) {\n            J = 23;\n          }\n\n          if (z > 23) {\n            z = 0;\n          }\n\n          if (J > 23) {\n            J = 23;\n          }\n\n          K = J - z + 1;\n        }\n\n        var D = 60;\n        var H = 2;\n\n        if (B) {\n          switch (B) {\n            case \"sixtyMinutes\":\n            case \"hour\":\n              H = 1;\n              break;\n\n            case \"thirdyMinutes\":\n            case \"halfHour\":\n              H = 2;\n              break;\n\n            case \"fifteenMinutes\":\n            case \"quarterHour\":\n              H = 4;\n              break;\n\n            case \"tenMinutes\":\n              H = 6;\n              break;\n\n            case \"fiveMinutes\":\n              H = 12;\n              break;\n          }\n        }\n\n        var M = new Array();\n        var L = \"auto\";\n\n        if (o.timeRuler && o.timeRuler.formatString) {\n          L = o.timeRuler.formatString;\n        }\n\n        var y = z;\n        var E = K;\n        var j = A.addHours(y);\n\n        if (l.rtl) {\n          var j = A.addHours(J);\n        }\n\n        for (var F = 0; F < E; F++) {\n          var x = j.toDate();\n\n          if (L === \"auto\") {\n            if (x.getHours() == 0 && x.getMinutes() == 0 || x.getHours() == 12 && x.getMinutes() == 0) {\n              var C = \"hh tt\";\n            } else {\n              var C = \"hh:mm\";\n            }\n          } else {\n            if (a.isFunction(L)) {\n              var C = L(x);\n            } else {\n              C = L;\n            }\n          }\n\n          if (a.jqx.dataFormat.isDate(x)) {\n            x = a.jqx.dataFormat.formatdate(x, C, l.schedulerLocalization);\n          }\n\n          if (!l.rtl) {\n            j = j.addMinutes(D);\n          } else {\n            j = j.addMinutes(-D);\n          }\n\n          d.push({});\n          l.columns.records[d.length - 1].text = x;\n        }\n      };\n\n      var k = this.tableColumns;\n\n      for (var t = 0; t < this.tableColumns; t++) {\n        switch (p) {\n          case \"dayView\":\n            var g = this.getViewStart();\n\n            if (false === o.showWeekends) {\n              if (g.dayOfWeek() === 0 || g.dayOfWeek() === 6) {\n                g = g.addDays(1);\n              }\n\n              if (g.dayOfWeek() === 0 || g.dayOfWeek() === 6) {\n                g = g.addDays(1);\n              }\n            }\n\n            d.push({});\n            this.columns.records[d.length - 1].text = this._getDayName(g.dayOfWeek());\n            break;\n\n          case \"weekView\":\n          case \"monthView\":\n            for (var v = 0; v < 7; v++) {\n              var u = this.schedulerLocalization.firstDay + v;\n\n              if (false === o.showWeekends) {\n                if (v === 0 || v === 6) {\n                  continue;\n                }\n              }\n\n              d.push({});\n\n              if (l.rtl) {\n                u = 6 - u;\n              }\n\n              this.columns.records[d.length - 1].text = this._getDayName(u);\n            }\n\n            break;\n\n          case \"timelineDayView\":\n            var f = l._resources[t] ? l._resources[t] : \"Resource\" + t;\n            q(l.getViewStart(), f);\n            break;\n\n          case \"timelineWeekView\":\n            for (var v = 0; v < 7; v++) {\n              var u = this.schedulerLocalization.firstDay + v;\n\n              if (false === o.showWeekends) {\n                if (v === 0 || v === 6) {\n                  continue;\n                }\n              }\n\n              if (l.rtl) {\n                u = 6 - u;\n              }\n\n              q(l.getViewStart().addDays(v), this._getDayName(u));\n            }\n\n            break;\n\n          case \"timelineMonthView\":\n            var n = l.getViewStart();\n            var w = \"auto\";\n\n            if (o.timeRuler && o.timeRuler.formatString) {\n              w = o.timeRuler.formatString;\n            }\n\n            for (var v = 0; v < 41; v++) {\n              var u = n.dayOfWeek();\n\n              if (false === o.showWeekends) {\n                if (u === 0 || u === 6) {\n                  continue;\n                }\n              }\n\n              if (l.rtl) {\n                u = 6 - u;\n              }\n\n              var r = n.toDate();\n\n              if (w === \"auto\") {\n                var c = \"dd\";\n                r = n.toDate();\n\n                if (r.getDate() === 1) {\n                  c = \"MMM dd\";\n                }\n              } else {\n                if (a.isFunction(w)) {\n                  var c = w(r);\n                } else {\n                  c = w;\n                }\n              }\n\n              if (a.jqx.dataFormat.isDate(r)) {\n                r = a.jqx.dataFormat.formatdate(r, c, l.schedulerLocalization);\n              }\n\n              n = n.addDays(1);\n              d.push({});\n              l.columns.records[d.length - 1].text = r;\n            }\n\n            break;\n        }\n      }\n\n      var h = l.columnsHeight;\n\n      var b = function (j, x) {\n        var i = l.columnGroupslevel * l.columnsHeight;\n        i = i - x.level * l.columnsHeight;\n        return i;\n      };\n\n      var s = 0;\n\n      for (var v = 0; v < this.columns.records.length; v++) {\n        var e = this.columns.records[v];\n\n        if (e.timeColumn) {\n          continue;\n        }\n\n        if (l.columnGroups) {\n          if (l.columnGroups.length) {\n            h = b(e.datafield, e);\n          }\n        }\n\n        var m = e.renderer != null ? e.renderer(e.text, e.align, h) : l._rendercolumnheader(e.text, e.align, h, e);\n\n        if (m == null) {\n          m = l._rendercolumnheader(e.text, e.align, h, l);\n        }\n\n        if (e.renderer != null) {\n          m = a(m);\n        }\n\n        a(e.element).html(m);\n      }\n    },\n    _editDialogLabel: function () {\n      if (this.theme) {\n        return \"jqx-scheduler-edit-dialog-label jqx-scheduler-edit-dialog-label-\" + this.theme;\n      }\n\n      return \"jqx-scheduler-edit-dialog-label\";\n    },\n    _editDialogField: function () {\n      if (this.theme) {\n        return \"jqx-scheduler-edit-dialog-field jqx-scheduler-edit-dialog-field-\" + this.theme;\n      }\n\n      return \"jqx-scheduler-edit-dialog-field\";\n    },\n    initRepeatPanels: function (p, i, c) {\n      var h = this;\n      var b = a(\"<div></div>\");\n      i.append(b);\n      var j = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatString + \"</div>\").appendTo(b);\n      var l = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(b);\n      var k = a(\"<div></div>\").appendTo(l);\n      var r = a(\"<div></div>\");\n      i.append(r);\n      var m = a(\"<div></div>\");\n      r.append(m);\n\n      var o = function (H, A) {\n        var u = a(\"<div></div>\").appendTo(H);\n        var E = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatEndString + \"</div>\").appendTo(u);\n        var D = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(u);\n        var G = a(\"<div style='top: 3px; position:relative; float:left;'><span style='margin-left:2px;'>\" + h.schedulerLocalization.editDialogRepeatNeverString + \"</span></div>\").appendTo(D);\n        G.jqxRadioButton({\n          rtl: h.rtl,\n          groupName: \"end\" + A,\n          theme: h.theme,\n          width: 200,\n          checked: true\n        });\n        h.editDialogFields[A].repeatEndNever = G;\n        h.editDialogFields[A].repeatEndNeverLabel = E;\n        var z = a(\"<div class='\" + h._editDialogLabel() + \"'></div>\").appendTo(u);\n        var y = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(u);\n        var F = a(\"<div style='top: 3px;  position:relative;  float:left;'><span style='margin-left:2px;'>\" + h.schedulerLocalization.editDialogRepeatAfterString + \"</span></div>\").appendTo(y);\n        F.jqxRadioButton({\n          rtl: h.rtl,\n          groupName: \"end\" + A,\n          theme: h.theme,\n          width: 60,\n          checked: false\n        });\n        var B = a(\"<div style='margin-left: 3px; float:left;'></div>\").appendTo(y);\n        B.jqxNumberInput({\n          rtl: h.rtl,\n          decimal: 10,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        var v = a(\"<div style='float: left; top: 3px;  margin-left: 5px; line-height:25px;'>\" + h.schedulerLocalization.editDialogRepeatOccurrencesString + \"</div>\").appendTo(y);\n        h.editDialogFields[A].repeatEndAfter = F;\n        h.editDialogFields[A].repeatEndAfterValue = B;\n        h.editDialogFields[A].repeatEndAfterLabel = z;\n        var x = a(\"<div class='\" + h._editDialogLabel() + \"'></div>\").appendTo(u);\n        var w = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(u);\n        var t = a(\"<div style='top: 3px; position:relative; float:left;'><span style='margin-left:2px;'>\" + h.schedulerLocalization.editDialogRepeatOnString + \"</span></div>\").appendTo(w);\n        t.jqxRadioButton({\n          rtl: h.rtl,\n          groupName: \"end\" + A,\n          theme: h.theme,\n          width: 60,\n          checked: false\n        });\n        var C = a(\"<div style='margin-left: 3px; float:left;'></div>\").appendTo(w);\n        C.jqxDateTimeInput({\n          dropDownWidth: 220,\n          dropDownHeight: 220,\n          rtl: h.rtl,\n          localization: h._getDateTimeInputLocalization(),\n          firstDayOfWeek: h.schedulerLocalization.firstDay,\n          todayString: h.schedulerLocalization.todayString,\n          clearString: h.schedulerLocalization.clearString,\n          value: c,\n          formatString: h.editDialogDateFormatString,\n          width: 150,\n          theme: h.theme\n        });\n        var s = C.jqxDateTimeInput(\"getInstance\");\n        h.editDialogFields[A].repeatEndOn = t;\n        h.editDialogFields[A].repeatEndOnValue = C;\n        h.editDialogFields[A].repeatEndOnLabel = x;\n        return u;\n      };\n\n      m.detach();\n      h.editDialogFields.repeatEndPanel = {};\n      h.editDialogFields.repeatEndPanelContainer = m;\n      o(m, \"repeatEndPanel\");\n\n      var q = function () {\n        var z = a(\"<div style='visibility: hidden;'></div>\").appendTo(a(document.body));\n        var ad = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatEveryString + \"</div>\").appendTo(z);\n        var ay = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(z);\n        var am = a(\"<div style='float:left;'></div>\").appendTo(ay);\n        am.jqxNumberInput({\n          rtl: h.rtl,\n          decimal: 1,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        var V = a(\"<div style='float: left; margin-left: 5px; line-height:25px;'>\" + h.schedulerLocalization.editDialogRepeatEveryDayString + \"</div>\").appendTo(ay);\n        h.editDialogFields.daily = {};\n        h.editDialogFields.daily.repeatDayInterval = am;\n        h.editDialogFields.daily.repeatDayLabel = ad;\n        h.editDialogFields.daily.panel = z;\n        z.detach();\n        h.editDialogFields.weekly = {};\n        var E = a(\"<div style='visibility: hidden;'></div>\").appendTo(a(document.body));\n        var ag = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatEveryString + \"</div>\").appendTo(E);\n        var t = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(E);\n        var at = a(\"<div style='float:left;'></div>\").appendTo(t);\n        at.jqxNumberInput({\n          rtl: h.rtl,\n          decimal: 1,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        var W = a(\"<div style='float: left; margin-left: 5px; line-height:25px;'>\" + h.schedulerLocalization.editDialogRepeatEveryWeekString + \"</div>\").appendTo(t);\n        h.editDialogFields.weekly.repeatWeekInterval = at;\n        h.editDialogFields.weekly.repeatWeekIntervalLabel = ag;\n        var F = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatOnString + \"</div>\").appendTo(E);\n        var Z = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(E);\n        var T = a(\"<div style='float:left;'></div>\").appendTo(Z);\n        h.editDialogFields.weekly.repeatDaysLabel = F;\n        h.editDialogFields.weekly.repeatDays = new Array();\n\n        for (var aw = 0; aw < 7; aw++) {\n          var P = h._getDayName(aw, \"firstTwoLetters\");\n\n          var B = a(\"<div style='position:relative; top: 6px; float:left;'><span style='margin-left:2px;'>\" + P + \"</span></div>\");\n          T.append(B);\n          var Y = aw == 1 ? true : false;\n          B.jqxCheckBox({\n            rtl: h.rtl,\n            checked: Y,\n            width: 50,\n            theme: h.theme\n          });\n          h.editDialogFields.weekly.repeatDays.push(B);\n        }\n\n        h.editDialogFields.weekly.panel = E;\n        E.detach();\n        h.editDialogFields.monthly = {};\n        var U = a(\"<div style='visibility: hidden;'></div>\").appendTo(a(document.body));\n        var av = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatEveryString + \"</div>\").appendTo(U);\n        var M = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(U);\n        var A = a(\"<div style='float:left;'></div>\").appendTo(M);\n        A.jqxNumberInput({\n          rtl: h.rtl,\n          decimal: 1,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        var ai = a(\"<div style='float: left; margin-left: 5px; line-height:25px;'>\" + h.schedulerLocalization.editDialogRepeatEveryMonthString + \"</div>\").appendTo(M);\n        h.editDialogFields.monthly.repeatMonth = A;\n        h.editDialogFields.monthly.repeatMonthLabel = av;\n        var an = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatOnString + \"</div>\").appendTo(U);\n        var H = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(U);\n        var x = a(\"<div style='float:left;'></div>\").appendTo(H);\n        var al = a(\"<div style='position:relative; top: 6px; float:left;'><span style='margin-left:2px;'>\" + h.schedulerLocalization.editDialogRepeatEveryMonthDayString + \"</span></div>\").appendTo(x);\n        al.jqxRadioButton({\n          rtl: h.rtl,\n          groupName: \"month\",\n          width: 60,\n          checked: true,\n          theme: h.theme\n        });\n        var ao = a(\"<div style='float:left;'></div>\").appendTo(x);\n        ao.jqxNumberInput({\n          rtl: h.rtl,\n          decimal: 1,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        h.editDialogFields.monthly.repeatMonthDay = ao;\n        h.editDialogFields.monthly.repeatMonthDayBool = al;\n        h.editDialogFields.monthly.repeatMonthDayLabel = an;\n        var O = a(\"<div class='\" + h._editDialogLabel() + \"'></div>\").appendTo(U);\n        var aj = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(U);\n        var aa = a(\"<div style='float:left;'></div>\").appendTo(aj);\n        var G = a(\"<div style='position:relative; top: 6px; float:left;'><span style='margin-left:2px;'></span></div>\").appendTo(aa);\n        G.jqxRadioButton({\n          groupName: \"month\",\n          width: 25,\n          checked: false,\n          theme: h.theme\n        });\n        var L = a(\"<div style='float:left;'></div>\").appendTo(aa);\n        var Q = new Array();\n        Q.push(h.schedulerLocalization.editDialogRepeatFirstString);\n        Q.push(h.schedulerLocalization.editDialogRepeatSecondString);\n        Q.push(h.schedulerLocalization.editDialogRepeatThirdString);\n        Q.push(h.schedulerLocalization.editDialogRepeatFourthString);\n        Q.push(h.schedulerLocalization.editDialogRepeatLastString);\n        L.jqxDropDownList({\n          height: 27,\n          dropDownWidth: 150,\n          selectedIndex: 0,\n          source: Q,\n          autoDropDownHeight: true,\n          width: \"auto\",\n          theme: h.theme\n        });\n        var S = a(\"<div style='margin-left: 5px; float:left;'></div>\").appendTo(aa);\n        var ac = new Array();\n\n        for (var aw = 0; aw < 7; aw++) {\n          var P = h._getDayName(aw);\n\n          ac.push(P);\n        }\n\n        S.jqxDropDownList({\n          height: 27,\n          rtl: h.rtl,\n          dropDownWidth: 150,\n          autoDropDownHeight: true,\n          selectedIndex: 1,\n          source: ac,\n          width: \"auto\",\n          theme: h.theme\n        });\n        h.editDialogFields.monthly.repeatDayOfWeekBool = G;\n        h.editDialogFields.monthly.repeatDayOfWeek = S;\n        h.editDialogFields.monthly.repeatDayOfWeekLabel = O;\n        h.editDialogFields.monthly.repeatDayOfWeekType = L;\n        h.editDialogFields.monthly.panel = U;\n        U.detach();\n        h.editDialogFields.yearly = {};\n        var aq = a(\"<div style='visibility: hidden;'></div>\").appendTo(a(document.body));\n        var R = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatEveryString + \"</div>\").appendTo(aq);\n        var ak = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(aq);\n        var ab = a(\"<div style='float:left;'></div>\").appendTo(ak);\n        ab.jqxNumberInput({\n          decimal: 1,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        var D = a(\"<div style='float: left; margin-left: 5px; line-height:25px;'>\" + h.schedulerLocalization.editDialogRepeatEveryYearString + \"</div>\").appendTo(ak);\n        h.editDialogFields.yearly.repeatYear = ab;\n        h.editDialogFields.yearly.repeatYearLabel = R;\n        var N = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogRepeatOnString + \"</div>\").appendTo(aq);\n        var ah = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(aq);\n        var X = a(\"<div style='float:left;'></div>\").appendTo(ah);\n        var af = a(\"<div style='position:relative; top: 6px; float:left;'></span></div>\").appendTo(X);\n        af.jqxRadioButton({\n          rtl: h.rtl,\n          groupName: \"year\",\n          width: 25,\n          checked: true,\n          theme: h.theme\n        });\n        h.editDialogFields.yearly.repeatYearBool = af;\n        h.editDialogFields.yearly.repeatYearBoolLabel = N;\n        var v = a(\"<div style='float:left;'></div>\").appendTo(X);\n        var ap = new Array();\n\n        for (var aw = 0; aw < 12; aw++) {\n          var ax = h.schedulerLocalization.months.names[aw];\n          ap.push(ax);\n        }\n\n        v.jqxDropDownList({\n          height: 27,\n          selectedIndex: 0,\n          dropDownWidth: 150,\n          width: \"auto\",\n          source: ap,\n          theme: h.theme\n        });\n        h.editDialogFields.yearly.repeatYearMonth = v;\n        var y = a(\"<div style='margin-left: 5px; float:left;'></div>\").appendTo(X);\n        y.jqxNumberInput({\n          height: 25,\n          decimal: 1,\n          min: 1,\n          inputMode: \"simple\",\n          width: 50,\n          spinButtons: true,\n          decimalDigits: 0,\n          theme: h.theme\n        });\n        h.editDialogFields.yearly.repeatYearDay = y;\n        var ae = a(\"<div class='\" + h._editDialogLabel() + \"'></div>\").appendTo(aq);\n        var s = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(aq);\n        var ar = a(\"<div style='float:left;'></div>\").appendTo(s);\n        var C = a(\"<div style='position:relative; top: 6px; float:left;'><span style='margin-left:2px;'></span></div>\").appendTo(ar);\n        C.jqxRadioButton({\n          rtl: h.rtl,\n          groupName: \"year\",\n          width: 25,\n          checked: false,\n          theme: h.theme\n        });\n        var au = a(\"<div style='float:left;'></div>\").appendTo(ar);\n        h.editDialogFields.yearly.repeatDayOfWeekBool = C;\n        h.editDialogFields.yearly.repeatDayOfWeekType = au;\n        h.editDialogFields.yearly.repeatDayOfWeekLabel = ae;\n        var K = new Array();\n        K.push(h.schedulerLocalization.editDialogRepeatFirstString);\n        K.push(h.schedulerLocalization.editDialogRepeatSecondString);\n        K.push(h.schedulerLocalization.editDialogRepeatThirdString);\n        K.push(h.schedulerLocalization.editDialogRepeatFourthString);\n        K.push(h.schedulerLocalization.editDialogRepeatLastString);\n        au.jqxDropDownList({\n          height: 27,\n          dropDownWidth: 150,\n          selectedIndex: 0,\n          source: K,\n          autoDropDownHeight: true,\n          width: \"auto\",\n          theme: h.theme\n        });\n        var I = a(\"<div style='margin-left: 5px; float:left;'></div>\").appendTo(ar);\n        h.editDialogFields.yearly.repeatDayOfWeek = I;\n        var u = new Array();\n\n        for (var aw = 0; aw < 7; aw++) {\n          var P = h._getDayName(aw);\n\n          u.push(P);\n        }\n\n        I.jqxDropDownList({\n          height: 27,\n          rtl: h.rtl,\n          dropDownWidth: 150,\n          selectedIndex: 1,\n          autoDropDownHeight: true,\n          source: u,\n          width: \"auto\",\n          theme: h.theme\n        });\n        var ap = new Array();\n        var J = a(\"<div style='line-height:25px; height: 25px; margin-left: 5px; float:left;'>\" + h.schedulerLocalization.editDialogRepeatOfString + \"</div>\").appendTo(ar);\n        var w = a(\"<div style='margin-left: 5px; float:left;'></div>\").appendTo(ar);\n\n        for (var aw = 0; aw < 12; aw++) {\n          var ax = h.schedulerLocalization.months.names[aw];\n          ap.push(ax);\n        }\n\n        h.editDialogFields.yearly.repeatDayOfWeekMonth = w;\n        w.jqxDropDownList({\n          height: 27,\n          rtl: h.rtl,\n          dropDownWidth: 150,\n          selectedIndex: 0,\n          source: ap,\n          width: \"auto\",\n          theme: h.theme\n        });\n        h.editDialogFields.yearly.panel = aq;\n        aq.detach();\n      };\n\n      if (h.editAppointment && h.editAppointment.rootAppointment) {\n        q();\n      } else {\n        q();\n      }\n\n      var g = a(\"<div></div>\");\n      i.append(g);\n      var f = a(\"<div class='\" + h._editDialogLabel() + \"'>\" + h.schedulerLocalization.editDialogExceptionsString + \"</div>\").appendTo(g);\n      var e = a(\"<div class='\" + h._editDialogField() + \"'></div>\").appendTo(g);\n      var d = a(\"<div style='position:relative; top:2px;'>\" + h.schedulerLocalization.editDialogResetExceptionsString + \"</div>\").appendTo(e);\n      d.jqxCheckBox({\n        width: \"100%\",\n        theme: h.theme\n      });\n      g.hide();\n      h.editDialogFields.resetExceptions = d;\n      h.editDialogFields.resetExceptionsLabel = f;\n      h.editDialogFields.resetExceptionsContainer = g;\n      var n = new Array();\n      n.push(h.schedulerLocalization.editDialogRepeatNeverString);\n      n.push(h.schedulerLocalization.editDialogRepeatDailyString);\n      n.push(h.schedulerLocalization.editDialogRepeatWeeklyString);\n      n.push(h.schedulerLocalization.editDialogRepeatMonthlyString);\n      n.push(h.schedulerLocalization.editDialogRepeatYearlyString);\n      k.jqxDropDownList({\n        rtl: h.rtl,\n        height: 27,\n        width: \"100%\",\n        autoDropDownHeight: true,\n        theme: h.theme,\n        source: n,\n        selectedIndex: 0\n      });\n      h.editDialogFields.repeat = k;\n      h.editDialogFields.repeatLabel = j;\n      h.editDialogFields.repeatContainer = b;\n      h.editDialogFields.repeatPanel = r;\n      this.addHandler(k, \"change\", function (u) {\n        var t = u.args.item.index;\n\n        var s = function () {\n          r.children().detach();\n\n          switch (t) {\n            case 0:\n              break;\n\n            case 1:\n              h.editDialogFields.daily.panel.css(\"visibility\", \"visible\");\n              r.append(h.editDialogFields.daily.panel);\n              break;\n\n            case 2:\n              h.editDialogFields.weekly.panel.css(\"visibility\", \"visible\");\n              r.append(h.editDialogFields.weekly.panel);\n              break;\n\n            case 3:\n              h.editDialogFields.monthly.panel.css(\"visibility\", \"visible\");\n              r.append(h.editDialogFields.monthly.panel);\n              break;\n\n            case 4:\n              h.editDialogFields.yearly.panel.css(\"visibility\", \"visible\");\n              r.append(h.editDialogFields.yearly.panel);\n              break;\n          }\n\n          r.append(m);\n\n          if (t == 0) {\n            h.editDialogFields.repeatEndPanelContainer.hide();\n          } else {\n            h.editDialogFields.repeatEndPanelContainer.show();\n          }\n\n          if (!h.isTouchDevice()) {\n            p.jqxWindow({\n              height: 150\n            });\n            p.jqxWindow({\n              height: i[0].scrollHeight + 40\n            });\n          }\n        }();\n      });\n    },\n    _initMenu: function () {\n      var c = this;\n\n      if (this.host.jqxMenu) {\n        if (this.menu) {\n          if (this._hasOpenedMenu) {\n            return;\n          }\n\n          this.removeHandler(this.menu, \"keydown\");\n          this.removeHandler(this.menu, \"closed\");\n          this.removeHandler(this.menu, \"itemclick\");\n          this.menu.jqxMenu(\"destroy\");\n          this.menu.removeData();\n          this.menu.remove();\n        }\n\n        this.menuitemsarray = new Array();\n        this.menu = a('<div id=\"menu.jqxscheduler' + this.element.id + '\" style=\"white-space: nowrap; z-index: 9999999999999;\"></div>');\n        this.host.append(this.menu);\n        this.addHandler(a(window), \"orientationchange.jqxscheduler\" + this.element.id, function () {\n          c.menu.jqxMenu(\"close\");\n          c._hasOpenedMenu = false;\n        });\n        this.addHandler(a(window), \"orientationchanged.jqxscheduler\" + this.element.id, function () {\n          c.menu.jqxMenu(\"close\");\n          c._hasOpenedMenu = false;\n        });\n        this.removeHandler(this.menu, \"keydown\");\n        this.addHandler(this.menu, \"keydown\", function (e) {\n          if (e.keyCode == 27) {\n            c.menu.jqxMenu(\"close\");\n            c._hasOpenedMenu = false;\n            c.focus();\n          }\n        });\n        this.addHandler(this.menu, \"open\", function (e) {\n          if (c.contextMenuOpen) {\n            c.contextMenuOpen(c.menu, c.selectedJQXAppointment ? c.selectedJQXAppointment.boundAppointment : null, e);\n          }\n\n          c._raiseEvent(\"contextMenuOpen\", {\n            menu: c.menu,\n            appointment: c.selectedJQXAppointment ? c.selectedJQXAppointment.boundAppointment : null\n          });\n\n          c._removeFeedbackAndStopResize();\n        });\n        this.addHandler(this.menu, \"close\", function (e) {\n          if (c.contextMenuClose) {\n            c.contextMenuClose(c.menu, c.selectedJQXAppointment ? c.selectedJQXAppointment.boundAppointment : null, e);\n          }\n\n          c._hasOpenedMenu = false;\n\n          if (document.activeElement && document.activeElement.className.indexOf(\"jqx-menu\") >= 0 && !c.menuOpening) {\n            c.focus();\n          }\n\n          c._raiseEvent(\"contextMenuClose\", {\n            menu: c.menu,\n            appointment: c.selectedJQXAppointment ? c.selectedJQXAppointment.boundAppointment : null\n          });\n        });\n        this.addHandler(this.host, \"contextmenu\", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        });\n        this.addHandler(this.menu, \"itemclick\", function (h) {\n          var g = c.menu.jqxMenu(\"getItem\", h.args.id);\n\n          c._raiseEvent(\"contextMenuItemClick\", {\n            item: g,\n            menu: c.menu,\n            appointment: c.selectedJQXAppointment ? c.selectedJQXAppointment.boundAppointment : null\n          });\n\n          if (c.contextMenuItemClick) {\n            var f = c.contextMenuItemClick(c.menu, c.selectedJQXAppointment ? c.selectedJQXAppointment.boundAppointment : null, h);\n\n            if (f == true) {\n              if (new Date() - c.renderedTime > 500) {\n                c._renderrows();\n              }\n\n              c.menu.jqxMenu(\"close\");\n              c._hasOpenedMenu = false;\n              return;\n            }\n          }\n\n          if (g.id == \"createAppointment\") {\n            c._initDialog();\n\n            c._openDialog();\n\n            if (h.args.clickType == \"keyboard\") {\n              c.menu.jqxMenu(\"close\");\n              c._hasOpenedMenu = false;\n            }\n          } else {\n            if (g.id == \"editAppointment\") {\n              var e = c.getJQXAppointmentByElement(c.selectedAppointment);\n\n              if (!e.readOnly) {\n                var f = c._initDialog(e);\n\n                if (f !== false) {\n                  c._openDialog();\n                }\n              }\n\n              if (h.args.clickType == \"keyboard\") {\n                c.menu.jqxMenu(\"close\");\n                c._hasOpenedMenu = false;\n              }\n            } else {\n              if (h.args.clickType == \"keyboard\") {\n                c.menu.jqxMenu(\"close\");\n                c._hasOpenedMenu = false;\n              }\n\n              return true;\n            }\n          }\n        });\n        var d = new Array();\n        d.push({\n          label: this.schedulerLocalization.contextMenuEditAppointmentString,\n          id: \"editAppointment\"\n        });\n        d.push({\n          label: this.schedulerLocalization.contextMenuCreateAppointmentString,\n          id: \"createAppointment\"\n        });\n        var b = {\n          rtl: this.rtl,\n          keyboardNavigation: true,\n          source: d,\n          popupZIndex: 999999,\n          autoOpenPopup: false,\n          mode: \"popup\",\n          theme: this.theme,\n          animationShowDuration: 0,\n          animationHideDuration: 0,\n          animationShowDelay: 0\n        };\n\n        if (c.contextMenuCreate) {\n          c.contextMenuCreate(c.menu, b);\n        }\n\n        c._raiseEvent(\"contextMenuCreate\", {\n          menu: c.menu,\n          settings: b\n        });\n\n        this.menu.jqxMenu(b);\n      }\n    },\n    _initDialog: function (b, c) {\n      var m = this;\n      var k = null;\n\n      if (b && b.isRecurrentAppointment() && !m.editRecurrenceDialog.jqxWindow(\"isOpen\")) {\n        var l = m.host.coord();\n        var o = l.top + m.host.height() / 2 - m.editRecurrenceDialog.height() / 2;\n        var g = l.left + m.host.width() / 2 - m.editRecurrenceDialog.width() / 2;\n        m.editRecurrenceDialog.find(\"button:first\").focus();\n        setTimeout(function () {\n          m.editRecurrenceDialog.find(\"button:first\").focus();\n        }, 25);\n        m.editRecurrenceDialog.jqxWindow(\"move\", g, o);\n        m.editRecurrenceDialog.jqxWindow(\"open\");\n\n        m.editSeries = function (i) {\n          if (i) {\n            m._initDialog(b.rootAppointment);\n\n            m._openDialog();\n          } else {\n            m._initDialog(b);\n\n            m._openDialog();\n          }\n        };\n\n        m.overlay.show();\n        m.overlay.width(m.host.width());\n        m.overlay.height(m.host.height());\n        var l = m.host.coord();\n        m.overlay.offset(l);\n\n        if (!m._editDialog) {\n          m._initDialog();\n        }\n\n        return false;\n      }\n\n      m.editAppointment = b;\n\n      if (!b) {\n        k = m.getSelection();\n\n        if (!k) {\n          m.focus();\n\n          if (!m.focusedCell) {\n            m._updateFocusedCell();\n          }\n\n          if (m.focusedCell) {\n            m.focusedCell.setAttribute(\"data-selected\", \"true\");\n            m._lastSelectedCell = m.focusedCell;\n\n            m._updateCellsSelection(m.focusedCell);\n\n            k = m.getSelection();\n          }\n        }\n      }\n\n      if (k || b) {\n        var d = k ? k.from : b.from;\n        var h = k ? k.to : b.to;\n        var n = m.getSelectedCells();\n\n        if (n.length > 0) {\n          var f = n[n.length - 1].getAttribute(\"data-end-date\");\n\n          if (f) {\n            h = a.jqx.scheduler.utilities.getEndOfDay(h);\n          }\n        }\n\n        m._editStart = d;\n        m._editEnd = h;\n      }\n\n      if (m.editDialogFields && m.editDialogFields.resourceContainer && m._resources.length > 0) {\n        var e = new Array();\n\n        for (var j = 0; j < m._resources.length; j++) {\n          e.push(m._resources[j]);\n        }\n\n        var r = true;\n\n        if (e.length > 10) {\n          r = false;\n        }\n\n        m.editDialogFields.resource.jqxDropDownList({\n          source: e,\n          selectedIndex: 0,\n          autoDropDownHeight: r\n        });\n\n        if (!b) {\n          m.editDialogFields.resource.val(k.resourceId);\n        }\n      }\n\n      if (m.editDialogFields && m.editDialogFields.repeatContainer) {\n        if (b && b.rootAppointment) {\n          m.editDialogFields.repeatContainer.hide();\n          m.editDialogFields.repeatPanel.hide();\n        } else {\n          m.editDialogFields.repeatContainer.show();\n          m.editDialogFields.repeatPanel.show();\n        }\n      }\n\n      if (m._editDialog == null) {\n        m._editDialog = null;\n        var p = b == null ? m.schedulerLocalization.editDialogCreateTitleString : m.schedulerLocalization.editDialogTitleString;\n        var q = a(\"<div><div>\" + p + \"</div><div id='dialog\" + this.element.id + \"'></div></div>\");\n        a(q).jqxWindow({\n          rtl: m.rtl,\n          autoFocus: false,\n          autoOpen: false,\n          animationType: \"none\",\n          theme: m.theme,\n          width: 540,\n          maxHeight: 800,\n          minHeight: 110,\n          resizable: false,\n          initContent: function () {\n            m.editDialogFields = {};\n\n            if (d == null && h == null && m._editStart && m._editEnd) {\n              d = m._editStart;\n              h = m._editEnd;\n            }\n\n            q.jqxWindow(\"setTitle\", p);\n            var H = a(q.children()[1]);\n            var A = a(\"<div></div>\");\n            H.append(A);\n            var C = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogSubjectString + \"</div>\").appendTo(A);\n            var ad = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(A);\n            var U = a(\"<input type='text'/>\").appendTo(ad);\n            U.jqxInput({\n              height: 25,\n              rtl: m.rtl,\n              width: \"100%\",\n              theme: m.theme\n            });\n            U.css(\"box-sizing\", \"border-box\");\n            m.editDialogFields.subject = U;\n            m.editDialogFields.subjectLabel = C;\n            m.editDialogFields.subjectContainer = A;\n            var P = a(\"<div></div>\");\n            H.append(P);\n            var z = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogLocationString + \"</div>\").appendTo(P);\n            var Z = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(P);\n            var T = a(\"<input type='text'/>\").appendTo(Z);\n            T.jqxInput({\n              height: 25,\n              rtl: m.rtl,\n              width: \"100%\",\n              theme: m.theme\n            });\n            T.css(\"box-sizing\", \"border-box\");\n            m.editDialogFields.location = T;\n            m.editDialogFields.locationLabel = z;\n            m.editDialogFields.locationContainer = P;\n            var L = a(\"<div></div>\");\n            H.append(L);\n            var X = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogFromString + \"</div>\").appendTo(L);\n            var av = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(L);\n            var aq = a(\"<div></div>\").appendTo(av);\n            var V = null;\n\n            if (!d) {\n              var ay = new Date();\n              ay.setHours(9, 0, 0);\n              V = ay;\n              d = new a.jqx.date(ay);\n            } else {\n              V = d.toDate();\n            }\n\n            aq.jqxDateTimeInput({\n              height: 27,\n              dropDownWidth: 220,\n              dropDownHeight: 220,\n              rtl: m.rtl,\n              localization: m._getDateTimeInputLocalization(),\n              firstDayOfWeek: m.schedulerLocalization.firstDay,\n              todayString: m.schedulerLocalization.todayString,\n              clearString: m.schedulerLocalization.clearString,\n              value: V,\n              formatString: m.editDialogDateTimeFormatString,\n              width: \"100%\",\n              showTimeButton: true,\n              theme: m.theme\n            });\n            m.editDialogFields.from = aq;\n            m.editDialogFields.fromLabel = X;\n            m.editDialogFields.fromContainer = L;\n            var aC = a(\"<div></div>\");\n            H.append(aC);\n            var y = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogToString + \"</div>\").appendTo(aC);\n            var Y = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(aC);\n            var S = a(\"<div></div>\").appendTo(Y);\n            var x = null;\n\n            if (!h) {\n              var ay = new Date();\n              ay.setHours(10, 0, 0);\n              x = ay;\n              h = new a.jqx.date(ay);\n            } else {\n              x = h.toDate();\n            }\n\n            S.jqxDateTimeInput({\n              height: 27,\n              dropDownWidth: 220,\n              dropDownHeight: 220,\n              rtl: m.rtl,\n              localization: m._getDateTimeInputLocalization(),\n              firstDayOfWeek: m.schedulerLocalization.firstDay,\n              todayString: m.schedulerLocalization.todayString,\n              clearString: m.schedulerLocalization.clearString,\n              value: x,\n              formatString: m.editDialogDateTimeFormatString,\n              width: \"100%\",\n              showTimeButton: true,\n              theme: m.theme\n            });\n            m.editDialogFields.to = S;\n            m.editDialogFields.toLabel = y;\n            m.editDialogFields.toContainer = aC;\n            m._changeFromUser = true;\n            m.addHandler(aq, \"change\", function (aH) {\n              if (!m._changeFromUser) {\n                return;\n              }\n\n              var aF = aH.args;\n              var aK = aH.args.oldValue;\n              var aJ = S.val(\"date\");\n              var aE = new a.jqx.date(aJ) - new a.jqx.date(aK);\n\n              if (aE > 0) {\n                var aG = aE * 10000;\n                var aI = a.jqx.timeSpan(aG);\n                var i = new a.jqx.date(aH.args.newValue).add(aI);\n                S.val(i.toDate());\n              }\n            });\n            m.addHandler(S, \"change\", function (aE) {\n              if (!m._changeFromUser) {\n                return;\n              }\n\n              var i = aE.args;\n              var aG = aE.args.oldValue;\n              var aF = S.val(\"date\");\n\n              if (aq.val(\"date\") >= aF) {\n                S.val(aG);\n              }\n            });\n            var t = a(\"<div></div>\");\n            H.append(t);\n            var R = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogAllDayString + \"</div>\").appendTo(t);\n            var ar = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(t);\n            var ai = a(\"<div style='top: 8px; position:relative;'></div>\").appendTo(ar);\n            ai.jqxCheckBox({\n              rtl: m.rtl,\n              width: 25,\n              theme: m.theme\n            });\n            m.editDialogFields.allDay = ai;\n            m.editDialogFields.allDayLabel = R;\n            m.editDialogFields.allDayContainer = t;\n            m.addHandler(t, \"change\", function (i) {\n              if (i.args.checked) {\n                S.jqxDateTimeInput({\n                  showTimeButton: false,\n                  formatString: m.editDialogDateFormatString\n                });\n                aq.jqxDateTimeInput({\n                  showTimeButton: false,\n                  formatString: m.editDialogDateFormatString\n                });\n              } else {\n                S.jqxDateTimeInput({\n                  showTimeButton: true,\n                  formatString: m.editDialogDateTimeFormatString\n                });\n                aq.jqxDateTimeInput({\n                  showTimeButton: true,\n                  formatString: m.editDialogDateTimeFormatString\n                });\n              }\n            });\n\n            if (a.jqx.scheduler.utilities.getStartOfDay(d).equals(d) && a.jqx.scheduler.utilities.getEndOfDay(h).equals(h)) {\n              m.editDialogFields.allDay.val(true);\n            }\n\n            if (m._views[m._view].type.indexOf(\"month\") >= 0 || d && d.equals(h) || h && h.equals(a.jqx.scheduler.utilities.getEndOfDay(h)) && d && d.equals(a.jqx.scheduler.utilities.getStartOfDay(d))) {\n              m.editDialogFields.allDay.val(true);\n            }\n\n            var w = a(\"<div></div>\");\n            H.append(w);\n            var W = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogTimeZoneString + \"</div>\").appendTo(w);\n            var at = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(w);\n            var ao = a(\"<div></div>\").appendTo(at);\n            var u = new Array();\n            u.push({\n              displayName: m.schedulerLocalization.editDialogSelectTimeZoneString,\n              id: null\n            });\n            u = u.concat(m.timeZones);\n\n            for (var aw = 0; aw < u.length; aw++) {\n              var au = u[aw];\n              var G = au.displayName.indexOf(\")\");\n\n              if (G >= 0) {\n                var af = au.displayName.substring(2 + G);\n              } else {\n                var af = au.displayName;\n              }\n\n              au.searchName = af;\n            }\n\n            ao.jqxDropDownList({\n              height: 27,\n              rtl: m.rtl,\n              placeHolder: m.schedulerLocalization.editDialogSelectTimeZoneString,\n              width: \"100%\",\n              theme: m.theme,\n              searchMember: \"searchName\",\n              source: u,\n              displayMember: \"displayName\",\n              valueMember: \"id\"\n            });\n            m.editDialogFields.timeZone = ao;\n            m.editDialogFields.timeZoneLabel = W;\n            m.editDialogFields.timeZoneContainer = w;\n            m.initRepeatPanels(q, H, h.toDate());\n\n            if (m.editDialogFields && m.editDialogFields.repeatContainer) {\n              if (m.editAppointment && m.editAppointment.rootAppointment) {\n                m.editDialogFields.repeatContainer.hide();\n                m.editDialogFields.repeatPanel.hide();\n              } else {\n                m.editDialogFields.repeatContainer.show();\n                m.editDialogFields.repeatPanel.show();\n              }\n            }\n\n            var K = a(\"<div></div>\");\n            H.append(K);\n            var aA = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogDescriptionString + \"</div>\").appendTo(K);\n            var O = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(K);\n            var D = a(\"<textarea type='text' resizable='off' style='position:relative; top: 3px; padding:3px;'></textarea>\").appendTo(O);\n            D.jqxInput({\n              rtl: m.rtl,\n              height: 40,\n              width: \"100%\",\n              theme: m.theme\n            });\n            D.css(\"box-sizing\", \"border-box\");\n            m.editDialogFields.description = D;\n            m.editDialogFields.descriptionLabel = aA;\n            m.editDialogFields.descriptionContainer = K;\n            var ac = a(\"<div></div>\");\n            H.append(ac);\n            var aD = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogColorString + \"</div>\").appendTo(ac);\n            var Q = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(ac);\n            var F = a(\"<div></div>\").appendTo(Q);\n\n            var I = function (aE) {\n              if (aE == -1) {\n                return \"\";\n              }\n\n              var i = m.colors[aE];\n              var aF = \"\";\n              var aF = \"\";\n              aF += \"<div style='margin-top: 1px; float: left; border-radius: 3px; width: 96%; height: 20px; border: none; background:\" + i + \"; margin-left: 2%;'></div>\";\n              return aF;\n            };\n\n            var an = function (aG, aE) {\n              if (aE < 0) {\n                aG.css(\"top\", \"4px\");\n                aG.css(\"position\", \"relative\");\n                return aG[0].outerHTML;\n              }\n\n              var i = m.colors[aE];\n              var aF = \"\";\n              aF += \"<div style='margin-top: 2px; float: left; border-radius: 3px; width: 96%; height: 20px; border: none; background:\" + i + \"; margin-left: 2%;'></div>\";\n              return aF;\n            };\n\n            F.jqxDropDownList({\n              height: 27,\n              rtl: m.rtl,\n              selectedIndex: -1,\n              placeHolder: m.schedulerLocalization.editDialogColorPlaceHolderString,\n              selectionRenderer: an,\n              renderer: I,\n              source: m.colors,\n              width: \"100%\",\n              theme: m.theme\n            });\n            m.editDialogFields.color = F;\n            m.editDialogFields.colorLabel = aD;\n            m.editDialogFields.colorContainer = ac;\n            var ah = a(\"<div></div>\");\n            H.append(ah);\n            var az = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogStatusString + \"</div>\").appendTo(ah);\n            var N = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(ah);\n            var B = a(\"<div></div>\").appendTo(N);\n            B.jqxDropDownList({\n              height: 27,\n              rtl: m.rtl,\n              selectedIndex: 2,\n              autoDropDownHeight: true,\n              source: m.schedulerLocalization.editDialogStatuses,\n              width: \"100%\",\n              theme: m.theme\n            });\n            m.editDialogFields.status = B;\n            m.editDialogFields.statusLabel = az;\n            m.editDialogFields.statusContainer = ah;\n            var ag = a(\"<div></div>\");\n            H.append(ag);\n            var M = a(\"<div class='\" + m._editDialogLabel() + \"'>\" + m.schedulerLocalization.editDialogResourceIdString + \"</div>\").appendTo(ag);\n            var am = a(\"<div class='\" + m._editDialogField() + \"'></div>\").appendTo(ag);\n            var ab = a(\"<div></div>\").appendTo(am);\n            var E = new Array();\n\n            for (var aw = 0; aw < m._resources.length; aw++) {\n              E.push(m._resources[aw]);\n            }\n\n            var v = true;\n\n            if (E.length > 10) {\n              v = false;\n            }\n\n            ab.jqxDropDownList({\n              height: 27,\n              rtl: m.rtl,\n              source: E,\n              selectedIndex: 0,\n              autoDropDownHeight: v,\n              width: \"100%\",\n              theme: m.theme\n            });\n            m.editDialogFields.resource = ab;\n            m.editDialogFields.resourceLabel = M;\n            m.editDialogFields.resourceContainer = ag;\n\n            if (E.length == 0) {\n              ag.hide();\n            }\n\n            if (!b && k) {\n              m.editDialogFields.resource.val(k.resourceId);\n            }\n\n            var ae = a(\"<div></div>\");\n            H.append(ae);\n            var al = a(\"<div style='width:100%;' class='\" + m._editDialogField() + \"'></div>\").appendTo(ae);\n            var ap = a(\"<button style='margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogCancelString + \"</button>\").appendTo(al);\n            var aj = a(\"<button style='margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogDeleteString + \"</button>\").appendTo(al);\n            var ak = a(\"<button style='display: none; margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogRepeatDeleteSeriesString + \"</button>\").appendTo(al);\n            var J = a(\"<button style='display: none; margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogRepeatDeleteString + \"</button>\").appendTo(al);\n            var aa = a(\"<button style='margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogSaveString + \"</button>\").appendTo(al);\n            var aB = a(\"<button style='display: none; margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogRepeatSaveSeriesString + \"</button>\").appendTo(al);\n            var s = a(\"<button style='display: none; margin-left: 5px; float:right;'>\" + m.schedulerLocalization.editDialogRepeatSaveString + \"</button>\").appendTo(al);\n            var ax = 25;\n\n            if (m.isTouchDevice()) {\n              ax = null;\n            }\n\n            aj.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            ak.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            J.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            aa.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            ap.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            aB.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            s.jqxButton({\n              rtl: m.rtl,\n              theme: m.theme\n            });\n            aB.hide();\n            s.hide();\n            m.editDialogFields.saveOccurrenceButton = s;\n            m.editDialogFields.saveSeriesButton = aB;\n            m.editDialogFields.saveButton = aa;\n            m.editDialogFields.cancelButton = ap;\n            m.editDialogFields.deleteButton = aj;\n            m.editDialogFields.deleteSeriesButton = ak;\n            m.editDialogFields.deleteExceptionsButton = J;\n            m.editDialogFields.buttons = al;\n            m.addHandler(aj, \"click\", function () {\n              q.jqxWindow(\"close\");\n              m.overlay.hide();\n\n              m._deleteAppointment(m.editAppointment);\n            });\n            m.addHandler(ap, \"click\", function () {\n              q.jqxWindow(\"close\");\n              m.overlay.hide();\n            });\n            m.addHandler(s, \"click\", function () {\n              if (!m.editAppointment.isException()) {\n                if (m.editAppointment.rootAppointment != null) {\n                  m.editAppointment.rootAppointment.exceptions.push(m.editAppointment);\n                  m.editAppointment.rootAppointment.recurrenceException.push(m.editAppointment.occurrenceFrom);\n                } else {\n                  m.editAppointment.exceptions.push(m.editAppointment);\n                  m.editAppointment.recurrenceException.push(m.editAppointment.occurrenceFrom);\n                }\n              } else {\n                var aG = m.editAppointment.rootAppointment ? m.editAppointment.rootAppointment.exceptions : m.editAppointment.exceptions;\n\n                for (var aF = 0; aF < aG.length; aF++) {\n                  if (aG[aF].occurrenceFrom.equals(m.editAppointment.occurrenceFrom)) {\n                    aG[aF] = m.editAppointment;\n                    break;\n                  }\n                }\n              }\n\n              var aE = m._setAppointmentPropertiesFromDialog(m.editAppointment, \"occurrence\");\n\n              if (!aE) {\n                return;\n              }\n\n              m.changedAppointments[m.editAppointment.id] = {\n                type: \"Update\",\n                appointment: m.editAppointment.boundAppointment\n              };\n\n              m._raiseEvent(\"appointmentChange\", {\n                appointment: m.editAppointment.boundAppointment\n              });\n\n              m._renderrows();\n\n              q.jqxWindow(\"close\");\n              m.overlay.hide();\n            });\n            m.addHandler(aB, \"click\", function () {\n              var aE = m.editAppointment;\n\n              if (aE.rootAppointment) {\n                aE = aE.rootAppointment;\n              }\n\n              var i = m._setAppointmentPropertiesFromDialog(aE, \"series\");\n\n              if (!i) {\n                return;\n              }\n\n              m.changedAppointments[aE.id] = {\n                type: \"Update\",\n                appointment: aE.boundAppointment\n              };\n\n              m._raiseEvent(\"appointmentChange\", {\n                appointment: aE.boundAppointment\n              });\n\n              m._renderrows();\n\n              q.jqxWindow(\"close\");\n              m.overlay.hide();\n            });\n            m.addHandler(aa, \"click\", function () {\n              var i = true;\n\n              if (m.editAppointment == null) {\n                var aE = new a.jqx.scheduler.appointment();\n                i = m._setAppointmentPropertiesFromDialog(aE, \"none\");\n\n                if (i) {\n                  m.addAppointment(aE);\n                }\n              } else {\n                if (m.editAppointment.rootAppointment) {\n                  s.trigger(\"click\");\n                  i = false;\n                } else {\n                  if (m.editAppointment.isRecurrentAppointment()) {\n                    aB.trigger(\"click\");\n                    i = false;\n                  } else {\n                    i = m._setAppointmentPropertiesFromDialog(m.editAppointment, \"none\");\n\n                    if (i) {\n                      m.changedAppointments[m.editAppointment.id] = {\n                        type: \"Update\",\n                        appointment: m.editAppointment ? m.editAppointment.boundAppointment : null\n                      };\n\n                      m._raiseEvent(\"appointmentChange\", {\n                        appointment: m.editAppointment.boundAppointment\n                      });\n\n                      m._renderrows();\n                    }\n                  }\n                }\n              }\n\n              if (i) {\n                q.jqxWindow(\"close\");\n                m.overlay.hide();\n              }\n            });\n            m.addHandler(q, \"close\", function (i) {\n              m.overlay.hide();\n              m.focus();\n\n              if (m.editDialogClose) {\n                m.editDialogClose(q, m.editDialogFields, m.editAppointment ? m.editAppointment.boundAppointment : null);\n              }\n\n              m._raiseEvent(\"editDialogClose\", {\n                dialog: q,\n                fields: m.editDialogFields,\n                appointment: m.editAppointment ? m.editAppointment.boundAppointment : null\n              });\n            });\n\n            if (m.editDialogCreate) {\n              m.editDialogCreate(q, m.editDialogFields, m.editAppointment);\n            }\n\n            m._raiseEvent(\"editDialogCreate\", {\n              dialog: q,\n              fields: m.editDialogFields,\n              appointment: m.editAppointment ? m.editAppointment.boundAppointment : null\n            });\n\n            q.jqxWindow({\n              height: H[0].scrollHeight + 40\n            });\n          }\n        });\n        m._editDialog = q;\n      }\n\n      if (!m.dialogOpenings) {\n        m.dialogOpenings = 0;\n      }\n\n      m.removeHandler(m._editDialog, \"open\");\n      m.addHandler(m._editDialog, \"open\", function (t) {\n        if (m.editDialogOpen && m.editDialogFields) {\n          var i = m.editDialogOpen(q, m.editDialogFields, m.editAppointment ? m.editAppointment.boundAppointment : null);\n\n          if (i == true) {\n            return;\n          }\n        }\n\n        if (m.rtl) {\n          m._editDialog.find(\".jqx-scheduler-edit-dialog-label\").addClass(m.toThemeProperty(\"jqx-scheduler-edit-dialog-label-rtl\"));\n\n          m._editDialog.find(\".jqx-scheduler-edit-dialog-field\").addClass(m.toThemeProperty(\"jqx-scheduler-edit-dialog-field-rtl\"));\n\n          m.editDialogFields.saveOccurrenceButton.css(\"float\", \"left\");\n          m.editDialogFields.saveSeriesButton.css(\"float\", \"left\");\n          m.editDialogFields.saveButton.css(\"float\", \"left\");\n          m.editDialogFields.cancelButton.css(\"float\", \"left\");\n          m.editDialogFields.deleteButton.css(\"float\", \"left\");\n          m.editDialogFields.deleteSeriesButton.css(\"float\", \"left\");\n          m.editDialogFields.deleteExceptionsButton.css(\"float\", \"left\");\n          m.editDialogFields.buttons.css(\"width\", \"auto\");\n          m.editDialogFields.allDay.css(\"float\", \"right\");\n        }\n\n        setTimeout(function () {\n          var v = m.editAppointment ? m.editAppointment.boundAppointment : null;\n\n          if (m.editAppointment && m.editAppointment.rootAppointment) {\n            v = m.editAppointment.rootAppointment.boundAppointment;\n          }\n\n          m._raiseEvent(\"editDialogOpen\", {\n            dialog: m._editDialog,\n            fields: m.editDialogFields,\n            appointment: v\n          });\n        });\n\n        var s = function () {\n          setTimeout(function () {\n            if (!c) {\n              m.editDialogFields.subject.focus();\n              m.editDialogFields.subject.select();\n            } else {\n              m.editDialogFields.deleteButton.focus();\n            }\n          }, 1);\n        };\n\n        var u = m.editAppointment == null ? m.schedulerLocalization.editDialogCreateTitleString : m.schedulerLocalization.editDialogTitleString;\n\n        m._editDialog.jqxWindow({\n          title: u\n        });\n\n        if (0 == m.dialogOpenings && !b) {\n          m.dialogOpenings++;\n\n          if (!m.isTouchDevice()) {\n            m._editDialog.jqxWindow({\n              height: 150\n            });\n\n            m._editDialog.jqxWindow({\n              height: a(m._editDialog.children())[1].scrollHeight + 40\n            });\n          }\n\n          m.editDialogFields.deleteButton.hide();\n          s();\n          return;\n        }\n\n        if (m.editDialogFields) {\n          m.editDialogFields.subject.val(\"\");\n          m.editDialogFields.location.val(\"\");\n          s();\n          m.editDialogFields.resetExceptions.val(false);\n          m.editDialogFields.description.val(\"\");\n\n          if (!b) {\n            m.editDialogFields.deleteButton.hide();\n          }\n\n          if (b) {\n            m.dialogOpenings++;\n            m.editDialogFields.deleteButton.show();\n            m.editDialogFields.subject.val(b.subject);\n            m.editDialogFields.location.val(b.location);\n            m.editDialogFields.description.val(b.description);\n            m.editDialogFields.timeZone.val(b.timeZone);\n\n            if (m.colors.indexOf(b.borderColor) >= 0) {\n              m.editDialogFields.color.val(b.borderColor);\n            } else {\n              m.editDialogFields.color.jqxDropDownList(\"clearSelection\");\n            }\n\n            m.editDialogFields.allDay.val(b.allDay);\n            m.editDialogFields.resource.val(b.resourceId);\n            m.editDialogFields.status.val(b.status);\n\n            if (b.timeZone) {\n              b.from = b.from.toTimeZone(b.timeZone);\n              b.to = b.to.toTimeZone(b.timeZone);\n            }\n\n            d = b.from;\n            h = b.to;\n\n            if (a.jqx.scheduler.utilities.getStartOfDay(d).equals(d) && a.jqx.scheduler.utilities.getEndOfDay(h).equals(h)) {\n              m.editDialogFields.allDay.val(true);\n            }\n\n            m._setAppointmentPropertiesToDialog(b, d, h, k ? k.resourceId : null);\n          } else {\n            m.editDialogFields.saveButton.show();\n\n            m._setAppointmentPropertiesToDialog(null, d, h, k ? k.resourceId : null);\n          }\n\n          if (d && h) {\n            m._changeFromUser = false;\n            m.editDialogFields.from.val(d.toDate());\n            m.editDialogFields.to.val(h.toDate());\n            m._changeFromUser = true;\n          }\n\n          if (!m.isTouchDevice()) {\n            m._editDialog.jqxWindow({\n              height: 150\n            });\n\n            m._editDialog.jqxWindow({\n              height: a(m._editDialog.children())[1].scrollHeight + 40\n            });\n          }\n        }\n      });\n      m.removeHandler(m._editDialog, \"keydown\");\n      m.addHandler(m._editDialog, \"keydown\", function (s) {\n        if (m.editDialogKeyDown) {\n          var i = m.editDialogKeyDown(q, m.editDialogFields, m.editAppointment, s);\n\n          if (i != undefined) {\n            return i;\n          }\n        }\n\n        if (s.keyCode == 13) {\n          if (a(document.activeElement).ischildof(m._editDialog)) {\n            if (document.activeElement.nodeName.toLowerCase() == \"button\") {\n              return true;\n            }\n\n            if (b) {\n              if (b.isException() || b.rootAppointment) {\n                m.editDialogFields.saveOccurrenceButton.trigger(\"click\");\n              } else {\n                if (b.isRecurrentAppointment()) {\n                  m.editDialogFields.saveSeriesButton.trigger(\"click\");\n                } else {\n                  m.editDialogFields.saveButton.trigger(\"click\");\n                }\n              }\n            } else {\n              m.editDialogFields.saveButton.trigger(\"click\");\n            }\n          }\n        } else {\n          if (s.keyCode == 27) {\n            m.editDialogFields.cancelButton.trigger(\"click\");\n          }\n        }\n      });\n    },\n    openMenu: function (e, c) {\n      var d = this;\n\n      if (!d.menu) {\n        d._initMenu();\n      }\n\n      var b = d._views[d._view].type;\n\n      if (d.contextMenu && d.menu) {\n        if (!d.selectedAppointment) {\n          d.menu.jqxMenu(\"hideItem\", \"editAppointment\");\n        } else {\n          d.menu.jqxMenu(\"showItem\", \"editAppointment\");\n        }\n\n        if (arguments.length < 2) {\n          if (d.selectedAppointment) {\n            var f = d.selectedAppointment.coord();\n            e = f.left;\n            c = f.top;\n          } else {\n            if (d.focusedCell) {\n              var f = a(d.focusedCell).coord();\n            }\n          }\n\n          e = f.left;\n          c = f.top;\n        }\n\n        d.menu.jqxMenu(\"open\", e, c);\n        d._hasOpenedMenu = true;\n      }\n    },\n    closeMenu: function () {\n      var b = this;\n\n      if (b.contextMenu && b.menu) {\n        setTimeout(function () {\n          b.menu.jqxMenu(\"close\");\n        });\n      }\n    },\n    closeDialog: function () {\n      var b = this;\n\n      b._editDialog.jqxWindow(\"close\");\n    },\n    openDialog: function (d, e) {\n      var f = this;\n      var c = f._views[f._view].type;\n\n      if (f.selectedJQXAppointment) {\n        var b = f._initDialog(f.selectedJQXAppointment);\n\n        if (b !== false) {\n          f._openDialog(d, e);\n        }\n      } else {\n        if (f.getSelection() == null) {\n          f.focus();\n          f.focusedCell.setAttribute(\"data-selected\", \"true\");\n          f._lastSelectedCell = f.focusedCell;\n\n          f._updateCellsSelection(f.focusedCell);\n        }\n\n        f._initDialog();\n\n        f._openDialog(d, e);\n      }\n    },\n    _openDialog: function (d, c) {\n      var f = this;\n      var j = f._views[f._view].type;\n\n      if (!f.editDialog) {\n        return;\n      }\n\n      var e = f.host.coord();\n      f.overlay.show();\n      f.overlay.css(\"z-index\", 9999999);\n      f.overlay.width(f.host.width());\n      f.overlay.height(f.host.height());\n      f.overlay.offset(e);\n      var g = f.isTouchDevice();\n\n      if (g) {\n        f._editDialog.jqxWindow(\"move\", e.left, e.top);\n\n        f._editDialog.jqxWindow({\n          draggable: false,\n          maxWidth: f.host.width(),\n          maxHeight: f.host.height()\n        });\n\n        f._editDialog.jqxWindow({\n          width: f.host.width(),\n          height: f.host.height()\n        });\n\n        f._editDialog.jqxWindow(\"open\");\n\n        f._editDialog.jqxWindow(\"move\", e.left, e.top);\n      } else {\n        if (d != undefined && c != undefined) {\n          f._editDialog.jqxWindow(\"move\", d, c);\n\n          f._editDialog.jqxWindow(\"open\");\n        } else {\n          var i = f._editDialog.height();\n\n          if (i < 400) {\n            i = 400;\n          }\n\n          var h = e.top + f.host.height() / 2 - i / 2;\n          var b = e.left + f.host.width() / 2 - f._editDialog.width() / 2;\n\n          f._editDialog.jqxWindow(\"move\", b, h);\n\n          f._editDialog.jqxWindow(\"open\");\n        }\n      }\n\n      setTimeout(function () {\n        f.overlay.css(\"z-index\", 999);\n      }, 50);\n    },\n    _setAppointmentPropertiesFromDialog: function (c, d) {\n      var e = this;\n\n      var b = function (n) {\n        var x = e._views[e._view].type;\n        var u = e._views[e._view];\n        var A = e.editDialogFields.from.val(\"date\");\n        var h = e.editDialogFields.to.val(\"date\");\n\n        if (A > h) {\n          e.editDialogFields.from.jqxDateTimeInput(\"focus\");\n          return false;\n        }\n\n        if (A == h) {\n          if (x.indexOf(\"month\") >= 0) {\n            return true;\n          }\n\n          return false;\n        }\n\n        n.resourceId = e.editDialogFields.resource.val();\n\n        if (e.editDialogFields.resourceContainer.css(\"display\") == \"none\") {\n          n.resourceId = \"\";\n        }\n\n        n.description = e.editDialogFields.description.val();\n        n.allDay = e.editDialogFields.allDay.val();\n        n.status = e.editDialogFields.status.val();\n        n.location = e.editDialogFields.location.val();\n        n.timeZone = e.editDialogFields.timeZone.val();\n\n        if (n.timeZone == \"\" && e.timeZone != \"\") {\n          n.timeZone = e.timeZone;\n        }\n\n        n.from = new a.jqx.date(A, n.timeZone);\n        n.to = new a.jqx.date(h, n.timeZone);\n\n        if (e.timeZone) {\n          n.from = n.from.toTimeZone(e.timeZone);\n          n.to = n.to.toTimeZone(e.timeZone);\n        } else {\n          n.from = n.from.toTimeZone(null);\n          n.to = n.to.toTimeZone(null);\n        }\n\n        if (n.allDay) {\n          n.from = a.jqx.scheduler.utilities.getStartOfDay(n.from);\n          n.to = a.jqx.scheduler.utilities.getEndOfDay(n.to);\n        }\n\n        if (e.editDialogFields.color.val()) {\n          var v = e.getAppointmentColors(e.editDialogFields.color.val());\n          n.color = v.color;\n          n.background = v.background;\n          n.borderColor = v.border;\n        }\n\n        n.subject = e.editDialogFields.subject.val();\n        var f = e.editDialogFields.repeat.jqxDropDownList(\"selectedIndex\");\n        var r = new a.jqx.scheduler.recurrencePattern();\n        var j = e.editDialogFields.repeatEndPanel;\n        r.timeZone = e.timeZone;\n        r.from = n.from.clone();\n\n        if (d == \"occurrence\") {\n          if (n.rootAppointment) {\n            r.from = n.rootAppointment.from.clone();\n          }\n        }\n\n        if (e.editDialogFields.resetExceptions.val()) {\n          n.exceptions = new Array();\n          n.recurrenceException = new Array();\n        }\n\n        if (j.repeatEndNever.val()) {\n          r.count = 1000;\n          r.to = new a.jqx.date(9999, 12, 31);\n        } else {\n          if (j.repeatEndAfter.val()) {\n            r.count = j.repeatEndAfterValue.val();\n            r.to = new a.jqx.date(9999, 12, 31);\n          } else {\n            if (j.repeatEndOn.val()) {\n              r.count = 1000;\n              var h = new a.jqx.date(j.repeatEndOnValue.jqxDateTimeInput(\"getDate\"), e.timeZone);\n              r.to = h;\n            }\n          }\n        }\n\n        switch (f) {\n          case 0:\n          default:\n            n.clearRecurrence();\n            break;\n\n          case 1:\n            var k = e.editDialogFields.daily;\n            var F = k.repeatDayInterval.val();\n            r.interval = F;\n            r.freq = \"daily\";\n            break;\n\n          case 2:\n            var w = e.editDialogFields.weekly;\n            var F = w.repeatWeekInterval.val();\n            var q = [{\n              Sunday: 0\n            }, {\n              Monday: 1\n            }, {\n              Tuesday: 2\n            }, {\n              Wednesday: 3\n            }, {\n              Thursday: 4\n            }, {\n              Friday: 5\n            }, {\n              Saturday: 6\n            }];\n            var p = w.repeatDays;\n            var o = new Array();\n            r.weekDays = {};\n\n            for (var C = 0; C < 7; C++) {\n              var B = p[C].val();\n\n              if (B) {\n                if (C == 0) {\n                  o.push(6);\n                } else {\n                  o.push(C - 1);\n                }\n\n                a.extend(r.weekDays, q[C]);\n              }\n            }\n\n            r.freq = \"weekly\";\n            r.byweekday = o;\n            r.interval = F;\n            break;\n\n          case 3:\n            var D = e.editDialogFields.monthly;\n            var F = D.repeatMonth.val();\n\n            if (D.repeatMonthDayBool.val()) {\n              r.day = D.repeatMonthDay.val();\n              r.bymonthday = new Array();\n              r.bymonthday.push(r.day);\n            } else {\n              var y = D.repeatDayOfWeek.jqxDropDownList(\"selectedIndex\");\n              var s = new Array();\n\n              if (y == 0) {\n                y = 6;\n              } else {\n                y--;\n              }\n\n              var l = D.repeatDayOfWeekType.jqxDropDownList(\"selectedIndex\");\n              var E = \"\";\n\n              switch (l) {\n                case 0:\n                  E = 1;\n                  break;\n\n                case 1:\n                  E = 2;\n                  break;\n\n                case 2:\n                  E = 3;\n                  break;\n\n                case 3:\n                  E = 4;\n                  break;\n\n                case 4:\n                  E = -1;\n                  break;\n              }\n\n              s.push([y, E]);\n              r.bynweekday = s;\n            }\n\n            r.freq = \"monthly\";\n            r.interval = F;\n            break;\n\n          case 4:\n            var G = e.editDialogFields.yearly;\n            var F = G.repeatYear.val();\n\n            if (G.repeatYearBool.val()) {\n              r.day = G.repeatYearDay.val();\n              r.month = G.repeatYearMonth.jqxDropDownList(\"selectedIndex\");\n              r.bymonth = new Array();\n              r.bymonth.push(1 + r.month);\n              r.byyearday = new Array();\n              r.byyearday.push(r.day);\n            } else {\n              r.month = G.repeatDayOfWeekMonth.jqxDropDownList(\"selectedIndex\");\n              r.bymonth = new Array();\n              r.bymonth.push(1 + r.month);\n              var y = G.repeatDayOfWeek.jqxDropDownList(\"selectedIndex\");\n              var s = new Array();\n\n              if (y == 0) {\n                y = 6;\n              } else {\n                y--;\n              }\n\n              var l = G.repeatDayOfWeekType.jqxDropDownList(\"selectedIndex\");\n              var E = \"\";\n\n              switch (l) {\n                case 0:\n                  E = 1;\n                  break;\n\n                case 1:\n                  E = 2;\n                  break;\n\n                case 2:\n                  E = 3;\n                  break;\n\n                case 3:\n                  E = 4;\n                  break;\n\n                case 4:\n                  E = -1;\n                  break;\n              }\n\n              s.push([y, E]);\n              r.bynweekday = s;\n            }\n\n            r.freq = \"yearly\";\n            r.interval = F;\n            break;\n        }\n\n        if (n.rootAppointment) {\n          n.rootAppointment.recurrencePattern = r;\n        } else {\n          if (f > 0) {\n            n.recurrencePattern = r;\n          }\n        }\n\n        var m = {};\n        var t = {};\n\n        for (var H in e.appointmentDataFields) {\n          var g = e.appointmentDataFields[H];\n          var z = n[H];\n          m[H] = z;\n\n          if (H == \"from\" || H == \"to\") {\n            z = z.toDate();\n          }\n\n          t[g] = z;\n        }\n\n        m.originalData = t;\n        m.jqxAppointment = n;\n        n.boundAppointment = m;\n        return true;\n      }(c);\n\n      return b;\n    },\n    _setAppointmentPropertiesToDialog: function (e, h, d, g) {\n      var f = this;\n\n      var c = function () {\n        var p = f.editDialogFields.repeatEndPanel;\n        p.repeatEndNever.jqxRadioButton({\n          checked: true\n        });\n        p.repeatEndAfter.jqxRadioButton({\n          checked: false\n        });\n        p.repeatEndAfterValue.val(1);\n        p.repeatEndOnValue.val(l);\n        var l = d.toDate();\n\n        if (f.editDialogFields.daily) {\n          var j = f.editDialogFields.daily;\n          j.repeatDayInterval.val(1);\n        }\n\n        if (f.editDialogFields.weekly) {\n          var o = f.editDialogFields.weekly;\n\n          for (var m = 0; m < o.repeatDays.length; m++) {\n            if (m == 1) {\n              o.repeatDays[m].jqxCheckBox({\n                checked: true\n              });\n            } else {\n              o.repeatDays[m].jqxCheckBox({\n                checked: false\n              });\n            }\n          }\n\n          o.repeatWeekInterval.val(1);\n        }\n\n        if (f.editDialogFields.monthly) {\n          var n = f.editDialogFields.monthly;\n          n.repeatDayOfWeek.jqxDropDownList(\"selectIndex\", 1);\n          n.repeatDayOfWeekBool.jqxRadioButton({\n            checked: false\n          });\n          n.repeatDayOfWeekType.jqxDropDownList(\"selectIndex\", 0);\n          n.repeatMonthDayBool.jqxRadioButton({\n            checked: true\n          });\n          n.repeatMonthDay.val(1);\n          n.repeatMonth.val(1);\n        }\n\n        if (f.editDialogFields.yearly) {\n          var k = f.editDialogFields.yearly;\n          k.repeatDayOfWeekMonth.jqxDropDownList(\"selectIndex\", 0);\n          k.repeatDayOfWeekBool.jqxRadioButton({\n            checked: false\n          });\n          k.repeatDayOfWeekType.jqxDropDownList(\"selectIndex\", 0);\n          k.repeatDayOfWeek.jqxDropDownList(\"selectIndex\", 1);\n          k.repeatYear.val(1);\n          k.repeatYearMonth.jqxDropDownList(\"selectIndex\", 0);\n          k.repeatYearDay.val(1);\n          k.repeatYearBool.val(true);\n        }\n      };\n\n      c();\n\n      if (e && e.isRecurrentAppointment()) {\n        if (!e.rootAppointment) {\n          f.editDialogFields.resetExceptionsContainer.show();\n        } else {\n          f.editDialogFields.resetExceptionsContainer.hide();\n        }\n      } else {\n        if (e) {\n          f.editDialogFields.resetExceptionsContainer.hide();\n          f.editDialogFields.repeat.jqxDropDownList(\"selectIndex\", 0);\n        }\n      }\n\n      if (!e) {\n        f.editDialogFields.timeZone.jqxDropDownList(\"clearSelection\");\n\n        if (!g) {\n          f.editDialogFields.resource.jqxDropDownList(\"selectIndex\", 0);\n        } else {\n          f.editDialogFields.resource.val(g);\n        }\n\n        f.editDialogFields.allDay.val(false);\n\n        if (f._views[f._view].type.indexOf(\"month\") >= 0 || h && h.equals(d) || d && d.equals(a.jqx.scheduler.utilities.getEndOfDay(d)) && h && h.equals(a.jqx.scheduler.utilities.getStartOfDay(h))) {\n          f.editDialogFields.allDay.val(true);\n        }\n\n        f.editDialogFields.color.jqxDropDownList(\"clearSelection\");\n        f.editDialogFields.description.val(\"\");\n        f.editDialogFields.subject.val(\"\");\n        f.editDialogFields.repeat.jqxDropDownList(\"selectIndex\", 0);\n        return;\n      }\n\n      var b = function (j) {\n        var r = j.recurrencePattern;\n\n        if (j.rootAppointment) {\n          var r = j.rootAppointment.recurrencePattern;\n        }\n\n        if (r == null) {\n          return;\n        }\n\n        var k = r.freq;\n        var p = 0;\n\n        if (k == \"daily\") {\n          p = 1;\n        }\n\n        if (k == \"weekly\") {\n          p = 2;\n        }\n\n        if (k == \"monthly\") {\n          p = 3;\n        }\n\n        if (k == \"yearly\") {\n          p = 4;\n        }\n\n        var n = f.editDialogFields.repeatEndPanel;\n\n        if (r.count != 1000) {\n          n.repeatEndNever.jqxRadioButton({\n            checked: false\n          });\n          n.repeatEndAfter.jqxRadioButton({\n            checked: true\n          });\n          n.repeatEndAfterValue.val(r.count);\n        } else {\n          if (r.to.year() != 9999) {\n            n.repeatEndOn.jqxRadioButton({\n              checked: true\n            });\n            n.repeatEndOnValue.val(r.to.toDate());\n          } else {\n            n.repeatEndNever.jqxRadioButton({\n              checked: true\n            });\n          }\n        }\n\n        f.editDialogFields.repeat.jqxDropDownList(\"selectIndex\", p);\n\n        switch (p) {\n          case 1:\n            var l = r.interval;\n            var q = f.editDialogFields.daily;\n            q.repeatDayInterval.val(l);\n            break;\n\n          case 2:\n            var l = r.interval;\n            var z = f.editDialogFields.weekly;\n            z.repeatWeekInterval.val(l);\n            var y = r.byweekday;\n\n            for (var o = 0; o < 7; o++) {\n              var w = z.repeatDays[o];\n              w.val(false);\n            }\n\n            for (var o = 0; o < y.length; o++) {\n              var w = y[o];\n\n              if (w == 6) {\n                z.repeatDays[0].val(true);\n              } else {\n                z.repeatDays[w + 1].val(true);\n              }\n            }\n\n            break;\n\n          case 3:\n            var u = f.editDialogFields.monthly;\n            u.repeatMonth.val(r.interval);\n\n            if (r.bymonthday && r.bymonthday.length > 0) {\n              u.repeatMonthDayBool.jqxRadioButton({\n                checked: true\n              });\n              u.repeatMonthDay.val(r.day);\n            } else {\n              u.repeatDayOfWeekBool.jqxRadioButton({\n                checked: true\n              });\n              var s = r.bynweekday;\n              var m = s[0][0];\n              m++;\n\n              if (m == 7) {\n                m = 0;\n              }\n\n              u.repeatDayOfWeek.jqxDropDownList(\"selectIndex\", m);\n              var x = s[0][1];\n              var v = \"\";\n\n              switch (x) {\n                case 1:\n                  v = 0;\n                  break;\n\n                case 2:\n                  v = 1;\n                  break;\n\n                case 3:\n                  v = 2;\n                  break;\n\n                case 4:\n                  v = 3;\n                  break;\n\n                case -1:\n                  v = 4;\n                  break;\n              }\n\n              u.repeatDayOfWeekType.jqxDropDownList(\"selectIndex\", v);\n            }\n\n            break;\n\n          case 4:\n            var t = f.editDialogFields.yearly;\n\n            if (r.byyearday && r.byyearday.length > 0) {\n              t.repeatYearDay.val(r.byyearday[0]);\n              t.repeatYearBool.val(true);\n            }\n\n            if (r.bymonth && r.bymonth.length > 0) {\n              t.repeatYearMonth.val(r.bymonth[0]);\n              t.repeatYearBool.val(true);\n            }\n\n            if (!r.byyearday || r.byyearday && r.byyearday.length == 0) {\n              t.repeatDayOfWeekMonth.val(r.bymonth[0]);\n              t.repeatDayOfWeekBool.jqxRadioButton({\n                checked: true\n              });\n              var s = r.bynweekday;\n              var m = s[0][0];\n              m++;\n\n              if (m == 7) {\n                m = 0;\n              }\n\n              t.repeatDayOfWeek.jqxDropDownList(\"selectIndex\", m);\n              var x = s[0][1];\n              var v = \"\";\n\n              switch (x) {\n                case 1:\n                  v = 0;\n                  break;\n\n                case 2:\n                  v = 1;\n                  break;\n\n                case 3:\n                  v = 2;\n                  break;\n\n                case 4:\n                  v = 3;\n                  break;\n\n                case -1:\n                  v = 4;\n                  break;\n              }\n\n              t.repeatDayOfWeekType.jqxDropDownList(\"selectIndex\", v);\n            }\n\n            break;\n        }\n      };\n\n      b(e);\n    }\n  });\n\n  a.jqx.scheduler.column = function (b, c) {\n    this.owner = b;\n    this.datafield = null;\n    this.displayfield = null;\n    this.text = \"\";\n    this.sortable = true;\n    this.editable = true;\n    this.hidden = false;\n    this.hideable = true;\n    this.groupable = true;\n    this.renderer = null;\n    this.cellsRenderer = null;\n    this.columntype = null;\n    this.cellsFormat = \"\";\n    this.align = \"center\";\n    this.cellsalign = \"center\";\n    this.width = \"auto\";\n    this.minwidth = 60;\n    this.maxwidth = \"auto\";\n    this.pinned = false;\n    this.visibleindex = -1;\n    this.filterable = true;\n    this.filter = null;\n    this.resizable = true;\n    this.draggable = true;\n    this.initeditor = null;\n    this.createeditor = null;\n    this.destroyeditor = null;\n    this.geteditorvalue = null;\n    this.autoCellHeight = true;\n    this.validation = null;\n    this.classname = \"\";\n    this.cellclassname = \"\";\n    this.rendered = null;\n    this.exportable = true;\n    this.nullable = true;\n    this.columngroup = null;\n    this.columntype = \"textbox\";\n    this.getcolumnproperties = function () {\n      return {\n        nullable: this.nullable,\n        sortable: this.sortable,\n        hidden: this.hidden,\n        groupable: this.groupable,\n        width: this.width,\n        align: this.align,\n        editable: this.editable,\n        minwidth: this.minwidth,\n        maxwidth: this.maxwidth,\n        resizable: this.resizable,\n        datafield: this.datafield,\n        text: this.text,\n        exportable: this.exportable,\n        cellsalign: this.cellsalign,\n        pinned: this.pinned,\n        cellsFormat: this.cellsFormat,\n        columntype: this.columntype,\n        classname: this.classname,\n        cellclassname: this.cellclassname,\n        menu: this.menu\n      };\n    }, this.setproperty = function (d, e) {\n      if (this[d]) {\n        var f = this[d];\n        this[d] = e;\n\n        this.owner._columnPropertyChanged(this, d, e, f);\n      } else {\n        if (this[d.toLowerCase()]) {\n          var f = this[d.toLowerCase()];\n          this[d.toLowerCase()] = e;\n\n          this.owner._columnPropertyChanged(this, d.toLowerCase(), e, f);\n        }\n      }\n    };\n\n    this._initfields = function (e) {\n      if (e != null) {\n        var d = this;\n\n        if (a.jqx.hasProperty(e, \"dataField\")) {\n          this.datafield = a.jqx.get(e, \"dataField\");\n        }\n\n        if (a.jqx.hasProperty(e, \"displayField\")) {\n          this.displayfield = a.jqx.get(e, \"displayField\");\n        } else {\n          this.displayfield = this.datafield;\n        }\n\n        if (a.jqx.hasProperty(e, \"columnType\")) {\n          this.columntype = a.jqx.get(e, \"columnType\");\n        }\n\n        if (a.jqx.hasProperty(e, \"validation\")) {\n          this.validation = a.jqx.get(e, \"validation\");\n        }\n\n        if (a.jqx.hasProperty(e, \"autoCellHeight\")) {\n          this.autoCellHeight = a.jqx.get(e, \"autoCellHeight\");\n        }\n\n        if (a.jqx.hasProperty(e, \"text\")) {\n          this.text = a.jqx.get(e, \"text\");\n        } else {\n          this.text = this.displayfield;\n        }\n\n        if (a.jqx.hasProperty(e, \"sortable\")) {\n          this.sortable = a.jqx.get(e, \"sortable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"hidden\")) {\n          this.hidden = a.jqx.get(e, \"hidden\");\n        }\n\n        if (a.jqx.hasProperty(e, \"groupable\")) {\n          this.groupable = a.jqx.get(e, \"groupable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"renderer\")) {\n          this.renderer = a.jqx.get(e, \"renderer\");\n        }\n\n        if (a.jqx.hasProperty(e, \"align\")) {\n          this.align = a.jqx.get(e, \"align\");\n        }\n\n        if (a.jqx.hasProperty(e, \"cellsAlign\")) {\n          this.cellsalign = a.jqx.get(e, \"cellsAlign\");\n        }\n\n        if (a.jqx.hasProperty(e, \"cellsFormat\")) {\n          this.cellsFormat = a.jqx.get(e, \"cellsFormat\");\n        }\n\n        if (a.jqx.hasProperty(e, \"width\")) {\n          this.width = a.jqx.get(e, \"width\");\n        }\n\n        if (a.jqx.hasProperty(e, \"minWidth\")) {\n          this.minwidth = a.jqx.get(e, \"minWidth\");\n        }\n\n        if (a.jqx.hasProperty(e, \"maxWidth\")) {\n          this.maxwidth = a.jqx.get(e, \"maxWidth\");\n        }\n\n        if (a.jqx.hasProperty(e, \"cellsRenderer\")) {\n          this.cellsRenderer = a.jqx.get(e, \"cellsRenderer\");\n        }\n\n        if (a.jqx.hasProperty(e, \"columnType\")) {\n          this.columntype = a.jqx.get(e, \"columnType\");\n        }\n\n        if (a.jqx.hasProperty(e, \"pinned\")) {\n          this.pinned = a.jqx.get(e, \"pinned\");\n        }\n\n        if (a.jqx.hasProperty(e, \"filterable\")) {\n          this.filterable = a.jqx.get(e, \"filterable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"filter\")) {\n          this.filter = a.jqx.get(e, \"filter\");\n        }\n\n        if (a.jqx.hasProperty(e, \"resizable\")) {\n          this.resizable = a.jqx.get(e, \"resizable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"draggable\")) {\n          this.draggable = a.jqx.get(e, \"draggable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"editable\")) {\n          this.editable = a.jqx.get(e, \"editable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"initEditor\")) {\n          this.initeditor = a.jqx.get(e, \"initEditor\");\n        }\n\n        if (a.jqx.hasProperty(e, \"createEditor\")) {\n          this.createeditor = a.jqx.get(e, \"createEditor\");\n        }\n\n        if (a.jqx.hasProperty(e, \"destroyEditor\")) {\n          this.destroyeditor = a.jqx.get(e, \"destroyEditor\");\n        }\n\n        if (a.jqx.hasProperty(e, \"getEditorValue\")) {\n          this.geteditorvalue = a.jqx.get(e, \"getEditorValue\");\n        }\n\n        if (a.jqx.hasProperty(e, \"className\")) {\n          this.classname = a.jqx.get(e, \"className\");\n        }\n\n        if (a.jqx.hasProperty(e, \"cellClassName\")) {\n          this.cellclassname = a.jqx.get(e, \"cellClassName\");\n        }\n\n        if (a.jqx.hasProperty(e, \"rendered\")) {\n          this.rendered = a.jqx.get(e, \"rendered\");\n        }\n\n        if (a.jqx.hasProperty(e, \"exportable\")) {\n          this.exportable = a.jqx.get(e, \"exportable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"nullable\")) {\n          this.nullable = a.jqx.get(e, \"nullable\");\n        }\n\n        if (a.jqx.hasProperty(e, \"columnGroup\")) {\n          this.columngroup = a.jqx.get(e, \"columnGroup\");\n        }\n\n        if (!e instanceof String && !(typeof e == \"string\")) {\n          for (var f in e) {\n            if (!d.hasOwnProperty(f)) {\n              if (!d.hasOwnProperty(f.toLowerCase())) {\n                b.host.remove();\n                throw new Error(\"jqxScheduler: Invalid property name - \" + f + \".\");\n              }\n            }\n          }\n        }\n      }\n    };\n\n    this._initfields(c);\n\n    return this;\n  };\n\n  a.jqx.schedulerDataCollection = function (b) {\n    this.records = new Array();\n    this.owner = b;\n    this.updating = false;\n\n    this.beginUpdate = function () {\n      this.updating = true;\n    };\n\n    this.resumeupdate = function () {\n      this.updating = false;\n    };\n\n    this.clear = function () {\n      this.records = new Array();\n    };\n\n    this.replace = function (d, c) {\n      this.records[d] = c;\n    };\n\n    this.isempty = function (c) {\n      if (this.records[c] == undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.initialize = function (c) {\n      if (c < 1) {\n        c = 1;\n      }\n\n      this.records[c - 1] = -1;\n    };\n\n    this.length = function () {\n      return this.records.length;\n    };\n\n    this.indexOf = function (c) {\n      return this.records.indexOf(c);\n    };\n\n    this.add = function (c) {\n      if (c == null) {\n        return false;\n      }\n\n      this.records[this.records.length] = c;\n      return true;\n    };\n\n    this.insertAt = function (d, c) {\n      if (d == null || d == undefined) {\n        return false;\n      }\n\n      if (c == null) {\n        return false;\n      }\n\n      if (d >= 0) {\n        if (d < this.records.length) {\n          this.records.splice(d, 0, c);\n          return true;\n        } else {\n          return this.add(c);\n        }\n      }\n\n      return false;\n    };\n\n    this.remove = function (d) {\n      if (d == null || d == undefined) {\n        return false;\n      }\n\n      var c = this.records.indexOf(d);\n\n      if (c != -1) {\n        this.records.splice(c, 1);\n        return true;\n      }\n\n      return false;\n    };\n\n    this.removeAt = function (d) {\n      if (d == null || d == undefined) {\n        return false;\n      }\n\n      if (d < 0) {\n        return false;\n      }\n\n      if (d < this.records.length) {\n        var c = this.records[d];\n        this.records.splice(d, 1);\n        return true;\n      }\n\n      return false;\n    };\n\n    return this;\n  };\n\n  a.jqx.scheduler.dataView = function (b) {\n    this.that = this;\n    this.scheduler = null;\n    this.records = [];\n    this.rows = [];\n    this.columns = [];\n    this.filters = new Array();\n    this.pagesize = 0;\n    this.pagenum = 0;\n    this.source = null;\n\n    this.databind = function (c, i) {\n      var l = this;\n\n      if (a.isArray(c)) {\n        l.update(c);\n        return;\n      }\n\n      var j = c._source ? true : false;\n      var e = null;\n      this._sortData = null;\n      this._sortHierarchyData = null;\n\n      if (j) {\n        e = c;\n        c = c._source;\n      } else {\n        e = new a.jqx.dataAdapter(c, {\n          autoBind: false\n        });\n      }\n\n      var f = function (p) {\n        e.recordids = [];\n        e.records = new Array();\n        e.cachedrecords = new Array();\n        e.originaldata = new Array();\n        e._options.totalrecords = p.totalrecords;\n        e._options.originaldata = p.originaldata;\n        e._options.recordids = p.recordids;\n        e._options.cachedrecords = new Array();\n        e._options.pagenum = p.pagenum;\n        e._options.pageable = p.pageable;\n\n        if (c.type != undefined) {\n          e._options.type = c.type;\n        }\n\n        if (c.formatdata != undefined) {\n          e._options.formatData = c.formatdata;\n        }\n\n        if (c.contenttype != undefined) {\n          e._options.contentType = c.contenttype;\n        }\n\n        if (c.async != undefined) {\n          e._options.async = c.async;\n        }\n\n        if (c.updaterow != undefined) {\n          e._options.updaterow = c.updaterow;\n        }\n\n        if (c.addrow != undefined) {\n          e._options.addrow = c.addrow;\n        }\n\n        if (c.deleterow != undefined) {\n          e._options.deleterow = c.deleterow;\n        }\n\n        if (p.pagesize == 0) {\n          p.pagesize = 10;\n        }\n\n        e._options.pagesize = p.pagesize;\n      };\n\n      var m = function (p) {\n        p.originaldata = e.originaldata;\n        p.records = e.records;\n        p.hierarchy = e.hierarchy;\n\n        if (!p.scheduler.serverProcessing) {\n          p._sortData = null;\n          p._sortfield = null;\n          p._filteredData = null;\n          p._sortHierarchyData = null;\n        }\n\n        if (!p.hierarchy) {\n          p.hierarchy = new Array();\n          e.hierarchy = new Array();\n        }\n\n        if (e._source.totalrecords) {\n          p.totalrecords = e._source.totalrecords;\n        } else {\n          if (e._source.totalRecords) {\n            p.totalrecords = e._source.totalRecords;\n          } else {\n            if (p.hierarchy.length !== 0) {\n              p.totalrecords = p.hierarchy.length;\n            } else {\n              p.totalrecords = p.records.length;\n            }\n          }\n        }\n\n        p.cachedrecords = e.cachedrecords;\n      };\n\n      f(this);\n      this.source = c;\n\n      if (i !== undefined) {\n        var n = i;\n      }\n\n      var l = this;\n\n      switch (c.datatype) {\n        case \"local\":\n        case \"array\":\n        default:\n          if (c.localdata == null) {\n            c.localdata = [];\n          }\n\n          if (c.localdata != null) {\n            e.unbindBindingUpdate(b + l.scheduler.element.id);\n\n            if (!l.scheduler.autoBind && l.scheduler.isInitialized || l.scheduler.autoBind) {\n              e.dataBind();\n            }\n\n            var k = function () {\n              m(l);\n              l.update(e.records);\n            };\n\n            k();\n            e.bindBindingUpdate(b + l.scheduler.element.id, k);\n          }\n\n          break;\n\n        case \"ics\":\n        case \"json\":\n        case \"jsonp\":\n        case \"xml\":\n        case \"xhtml\":\n        case \"script\":\n        case \"text\":\n        case \"csv\":\n        case \"tab\":\n          if (c.localdata != null) {\n            e.unbindBindingUpdate(b + l.scheduler.element.id);\n\n            if (!l.scheduler.autoBind && l.scheduler.isInitialized || l.scheduler.autoBind) {\n              e.dataBind();\n            }\n\n            var k = function (p) {\n              m(l);\n              l.update(e.records);\n            };\n\n            k();\n            e.bindBindingUpdate(b + l.scheduler.element.id, k);\n            return;\n          }\n\n          var h = {};\n          var g = 0;\n          var o = {};\n          var d = e._options.data;\n\n          if (e._options.data) {\n            a.extend(e._options.data, o);\n          } else {\n            if (c.data) {\n              a.extend(o, c.data);\n            }\n\n            e._options.data = o;\n          }\n\n          var k = function () {\n            var q = a.jqx.browser.msie && a.jqx.browser.version < 9;\n\n            var r = function () {\n              m(l);\n              l.update(e.records);\n            };\n\n            if (q) {\n              try {\n                r();\n              } catch (p) {}\n            } else {\n              r();\n            }\n          };\n\n          e.unbindDownloadComplete(b + l.scheduler.element.id);\n          e.bindDownloadComplete(b + l.scheduler.element.id, k);\n\n          e._source.loaderror = function (r, p, q) {\n            k();\n          };\n\n          if (!l.scheduler.autoBind && l.scheduler.isInitialized || l.scheduler.autoBind) {\n            e.dataBind();\n          }\n\n          e._options.data = d;\n      }\n    };\n\n    this.addFilter = function (f, e) {\n      this._sortData = null;\n      this._sortHierarchyData = null;\n      var d = -1;\n\n      for (var c = 0; c < this.filters.length; c++) {\n        if (this.filters[c].datafield == f) {\n          d = c;\n          break;\n        }\n      }\n\n      if (d == -1) {\n        this.filters[this.filters.length] = {\n          filter: e,\n          datafield: f\n        };\n      } else {\n        this.filters[d] = {\n          filter: e,\n          datafield: f\n        };\n      }\n    };\n\n    this.removeFilter = function (d) {\n      this._sortData = null;\n      this._sortHierarchyData = null;\n\n      for (var c = 0; c < this.filters.length; c++) {\n        if (this.filters[c].datafield == d) {\n          this.filters.splice(c, 1);\n          break;\n        }\n      }\n    };\n\n    this._compare = function (d, c, f) {\n      var d = d;\n      var c = c;\n\n      if (d === undefined) {\n        d = null;\n      }\n\n      if (c === undefined) {\n        c = null;\n      }\n\n      if (d === null && c === null) {\n        return 0;\n      }\n\n      if (d === null && c !== null) {\n        return 1;\n      }\n\n      if (d !== null && c === null) {\n        return 1;\n      }\n\n      d = d.toString();\n      c = c.toString();\n\n      if (a.jqx.dataFormat) {\n        if (f && f != \"\") {\n          switch (f) {\n            case \"number\":\n            case \"int\":\n            case \"float\":\n              if (d < c) {\n                return -1;\n              }\n\n              if (d > c) {\n                return 1;\n              }\n\n              return 0;\n\n            case \"date\":\n            case \"time\":\n              if (d < c) {\n                return -1;\n              }\n\n              if (d > c) {\n                return 1;\n              }\n\n              return 0;\n\n            case \"string\":\n            case \"text\":\n              d = String(d).toLowerCase();\n              c = String(c).toLowerCase();\n              break;\n          }\n        } else {\n          if (a.jqx.dataFormat.isNumber(d) && a.jqx.dataFormat.isNumber(c)) {\n            if (d < c) {\n              return -1;\n            }\n\n            if (d > c) {\n              return 1;\n            }\n\n            return 0;\n          } else {\n            if (a.jqx.dataFormat.isDate(d) && a.jqx.dataFormat.isDate(c)) {\n              if (d < c) {\n                return -1;\n              }\n\n              if (d > c) {\n                return 1;\n              }\n\n              return 0;\n            } else {\n              if (!a.jqx.dataFormat.isNumber(d) && !a.jqx.dataFormat.isNumber(c)) {\n                d = String(d).toLowerCase();\n                c = String(c).toLowerCase();\n              }\n            }\n          }\n        }\n      }\n\n      try {\n        if (d < c) {\n          return -1;\n        }\n\n        if (d > c) {\n          return 1;\n        }\n      } catch (e) {\n        var g = e;\n      }\n\n      return 0;\n    };\n\n    this._equals = function (d, c) {\n      return this._compare(d, c) === 0;\n    };\n\n    this.evaluate = function (l) {\n      if (this.scheduler.serverProcessing) {\n        return l;\n      }\n\n      var c = new Array();\n\n      if (this.filters.length) {\n        var f = new Array();\n\n        var k = function (o, s) {\n          for (var q = 0; q < o.length; q++) {\n            var r = o[q];\n            r._visible = true;\n            var m = undefined;\n\n            for (var p = 0; p < this.filters.length; p++) {\n              var n = this.filters[p].filter;\n              var t = r[this.filters[p].datafield];\n              var u = n.evaluate(t);\n\n              if (m == undefined) {\n                m = u;\n              } else {\n                if (n.operator == \"or\") {\n                  m = m || u;\n                } else {\n                  m = m && u;\n                }\n              }\n            }\n\n            r._visible = false;\n\n            if (m || r.aggregate) {\n              r._visible = true;\n              s.push(r);\n              f[r.uid] = r;\n            }\n          }\n        };\n\n        if (!this._filteredData) {\n          if (this.source.hierarchy || this.scheduler.source.hierarchy && this.scheduler.source.hierarchy.length > 0) {\n            var j = new Array();\n\n            var g = function (n, o) {\n              for (var m = 0; m < o.length; m++) {\n                var p = o[m];\n                j.push(p);\n\n                if (p.records && p.records.length > 0) {\n                  g(p, p.records);\n                }\n              }\n            };\n\n            g(null, l);\n            k.call(this, j, c);\n\n            for (var d = 0; d < c.length; d++) {\n              var e = c[d];\n\n              while (e.parent) {\n                var h = e.parent;\n\n                if (!f[h.uid]) {\n                  h._visible = true;\n                  f[h.uid] = h;\n                }\n\n                e = h;\n              }\n            }\n\n            c = l;\n          } else {\n            k.call(this, l, c);\n          }\n\n          this._filteredData = c;\n          this.rows = c;\n        } else {\n          this.rows = this._filteredData;\n        }\n      } else {\n        this.rows = l;\n      }\n\n      return this.rows;\n    };\n\n    this.getid = function (j, d, e) {\n      if (a(j, d).length > 0) {\n        return a(j, d).text();\n      }\n\n      if (this.rows && j != \"\" && j != undefined && this.rows.length > 0) {\n        var h = this.rows[this.rows.length - 1][j];\n\n        if (h == null) {\n          h = null;\n        }\n\n        for (var f = 1; f <= 100; f++) {\n          var g = this.scheduler.appointmentsByKey[f + h];\n\n          if (!g) {\n            if (this.scheduler && this.scheduler.treeGrid && this.scheduler.treescheduler.virtualModeCreateRecords) {\n              var g = this.scheduler.appointmentsByKey[\"jqx\" + h + f];\n\n              if (g) {\n                continue;\n              }\n\n              return \"jqx\" + h + f;\n            }\n\n            return h + f;\n          }\n        }\n      }\n\n      if (j != undefined) {\n        if (j.toString().length > 0) {\n          var c = a(d).attr(j);\n\n          if (c != null && c.toString().length > 0) {\n            if (this.scheduler && this.scheduler.treeGrid && this.scheduler.treescheduler.virtualModeCreateRecords) {\n              return \"jqx\" + c;\n            }\n\n            return c;\n          }\n        }\n      }\n\n      if (this.rows && this.rows.length > 0) {\n        var g = this.scheduler.appointmentsByKey[e];\n\n        if (g) {\n          var h = this.rows[this.rows.length - 1][j];\n\n          if (h == null) {\n            h = \"\";\n          }\n\n          for (var f = 1; f <= 1000; f++) {\n            var g = this.scheduler.appointmentsByKey[f + h];\n\n            if (!g) {\n              if (this.scheduler && this.scheduler.treeGrid && this.scheduler.treescheduler.virtualModeCreateRecords) {\n                var g = this.scheduler.appointmentsByKey[\"jqx\" + h + f];\n\n                if (g) {\n                  continue;\n                }\n\n                return \"jqx\" + h + f;\n              }\n\n              return h + f;\n            }\n          }\n        }\n      }\n\n      if (this.scheduler && this.scheduler.treeGrid && this.scheduler.treescheduler.virtualModeCreateRecords) {\n        var g = this.scheduler.appointmentsByKey[\"jqx\" + e];\n\n        if (!g) {\n          return \"jqx\" + e;\n        } else {\n          for (var f = e + 1; f <= 100; f++) {\n            var g = this.scheduler.appointmentsByKey[\"jqx\" + f];\n\n            if (!g) {\n              var g = this.scheduler.appointmentsByKey[\"jqx\" + f];\n\n              if (g) {\n                continue;\n              }\n\n              return \"jqx\" + f;\n            }\n          }\n        }\n      }\n\n      return e;\n    };\n\n    this.generatekey = function () {\n      var c = function () {\n        return (1 + Math.random()) * 16 | 0;\n      };\n\n      return \"\" + c() + c() + \"-\" + c() + \"-\" + c() + \"-\" + c() + \"-\" + c();\n    };\n\n    return this;\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}