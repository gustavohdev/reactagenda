{"ast":null,"code":"/*\r\njQWidgets v8.3.2 (2019-Oct)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxDropDownList\", \"\", {});\n  a.extend(a.jqx._jqxDropDownList.prototype, {\n    defineInstance: function () {\n      var b = {\n        disabled: false,\n        width: null,\n        height: null,\n        items: new Array(),\n        selectedIndex: -1,\n        source: null,\n        scrollBarSize: 15,\n        arrowSize: 17,\n        enableHover: true,\n        enableSelection: true,\n        autoItemsHeight: false,\n        visualItems: new Array(),\n        groups: new Array(),\n        equalItemsWidth: true,\n        itemHeight: -1,\n        visibleItems: new Array(),\n        emptyGroupText: \"Group\",\n        checkboxes: false,\n        openDelay: 250,\n        closeDelay: 300,\n        dropDownContainer: \"default\",\n        animationType: \"default\",\n        autoOpen: false,\n        dropDownWidth: \"auto\",\n        dropDownHeight: \"200px\",\n        autoDropDownHeight: false,\n        keyboardSelection: true,\n        enableBrowserBoundsDetection: false,\n        dropDownHorizontalAlignment: \"left\",\n        dropDownVerticalAlignment: \"bottom\",\n        displayMember: \"\",\n        valueMember: \"\",\n        groupMember: \"\",\n        searchMember: \"\",\n        searchMode: \"startswithignorecase\",\n        incrementalSearch: true,\n        incrementalSearchDelay: 700,\n        renderer: null,\n        placeHolder: \"\",\n        promptText: \"Please Choose:\",\n        emptyString: \"\",\n        rtl: false,\n        selectionRenderer: null,\n        listBox: null,\n        popupZIndex: 2000,\n        renderMode: \"default\",\n        touchMode: \"auto\",\n        _checkForHiddenParent: true,\n        autoBind: true,\n        ready: null,\n        focusable: true,\n        filterable: false,\n        filterHeight: 27,\n        filterPlaceHolder: \"Looking for\",\n        filterDelay: 100,\n        hint: true,\n        template: \"default\",\n        aria: {\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        },\n        events: [\"open\", \"close\", \"select\", \"unselect\", \"change\", \"checkChange\", \"bindingComplete\", \"itemAdd\", \"itemRemove\", \"itemUpdate\"]\n      };\n\n      if (this === a.jqx._jqxDropDownList.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (b) {\n      this.render();\n    },\n    render: function () {\n      var o = this;\n\n      if (!o.width) {\n        o.width = 200;\n      }\n\n      if (!o.height) {\n        o.height = 25;\n      }\n\n      o.host.addClass(o.toThemeProperty(\"jqx-dropdownlist\"));\n      var b = o.element.nodeName.toLowerCase();\n\n      if (b == \"select\" || b == \"ul\" || b == \"ol\") {\n        o.field = o.element;\n\n        if (o.field.className) {\n          o._className = o.field.className;\n        }\n\n        var h = {\n          title: o.field.title\n        };\n\n        if (o.field.id.length) {\n          h.id = o.field.id.replace(/[^\\w]/g, \"_\") + \"_jqxDropDownList\";\n        } else {\n          h.id = a.jqx.utilities.createId() + \"_jqxDropDownList\";\n        }\n\n        var f = a(\"<div></div>\", h);\n\n        if (!o.width) {\n          o.width = a(o.field).width();\n        }\n\n        if (!o.height) {\n          o.height = a(o.field).outerHeight();\n        }\n\n        f[0].style.cssText = o.field.style.cssText;\n        a(o.field).hide().after(f);\n        var u = o.host.data();\n        o.host = f;\n        o.host.data(u);\n        o.element = f[0];\n        o.element.id = o.field.id;\n        o.field.id = h.id;\n\n        if (o._className) {\n          o.host.addClass(o._className);\n          a(o.field).removeClass(o._className);\n        }\n\n        if (o.field.tabIndex) {\n          var d = o.field.tabIndex;\n          o.field.tabIndex = -1;\n          o.element.tabIndex = d;\n        }\n\n        var k = a.jqx.parseSourceTag(o.field);\n        o.source = k.items;\n\n        if (o.selectedIndex == -1) {\n          o.selectedIndex = k.index;\n        }\n      } else {\n        if (o.host.find(\"li\").length > 0 || o.host.find(\"option\").length > 0) {\n          var k = a.jqx.parseSourceTag(o.element);\n          o.source = k.items;\n        }\n      }\n\n      o.element.innerHTML = \"\";\n      o.isanimating = false;\n      o.id = o.element.id || a.jqx.utilities.createId();\n      o.host.attr(\"role\", \"combobox\");\n      a.jqx.aria(o, \"aria-autocomplete\", \"both\");\n      a.jqx.aria(o, \"aria-readonly\", false);\n      var m = \"<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='overflow: hidden; outline: none; background-color: transparent; border: none; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' unselectable='on' style='outline: none; background-color: transparent; border: none; float: left; position: relative;'></div><div id='dropdownlistArrow' unselectable='on' style='background-color: transparent; border: none; float: right; position: relative;'><div unselectable='on'></div></div></div></div>\";\n\n      if (a.jqx._jqxListBox == null || a.jqx._jqxListBox == undefined) {\n        throw new Error(\"jqxDropDownList: Missing reference to jqxlistbox.js.\");\n      }\n\n      if (o.host.attr(\"tabindex\")) {} else {\n        o.host.attr(\"tabindex\", 0);\n      }\n\n      var t = o;\n      o.touch = a.jqx.mobile.isTouchDevice();\n      o.comboStructure = m;\n      o.element.innerHTML = m;\n      o.dropdownlistWrapper = a(o.element.firstChild.firstChild);\n      o.dropdownlistArrow = a(o.dropdownlistWrapper[0].firstChild.nextSibling);\n      o.arrow = a(o.dropdownlistArrow[0].firstChild);\n      o.dropdownlistContent = a(o.dropdownlistWrapper[0].firstChild);\n      o.dropdownlistContent.addClass(o.toThemeProperty(\"jqx-dropdownlist-content jqx-disableselect\"));\n\n      if (o.rtl) {\n        o.dropdownlistContent.addClass(o.toThemeProperty(\"jqx-rtl jqx-dropdownlist-content-rtl\"));\n      }\n\n      o.addHandler(o.dropdownlistWrapper, \"selectstart\", function () {\n        return false;\n      });\n      o.dropdownlistWrapper[0].id = \"dropdownlistWrapper\" + o.element.id;\n      o.dropdownlistArrow[0].id = \"dropdownlistArrow\" + o.element.id;\n      o.dropdownlistContent[0].id = \"dropdownlistContent\" + o.element.id;\n\n      o._addInput();\n\n      var j = a(\"<label></label\");\n\n      if (this.hint) {\n        j[0].innerHTML = this.placeHolder;\n      }\n\n      j.addClass(o.toThemeProperty(\"jqx-input-label\"));\n      o.dropdownlistWrapper.append(j);\n      o.label = j;\n      var r = a(\"<span></span>\");\n      o.dropdownlistWrapper.append(r);\n      r.addClass(o.toThemeProperty(\"jqx-input-bar\"));\n      o.bar = r;\n      o.bar.css(\"top\", this.host.height());\n      var i = this;\n\n      if (i.template) {\n        i.bar.addClass(i.toThemeProperty(\"jqx-\" + i.template));\n        i.label.addClass(i.toThemeProperty(\"jqx-\" + i.template));\n      }\n\n      if (o.promptText != \"Please Choose:\") {\n        o.placeHolder = o.promptText;\n      }\n\n      var c = o.toThemeProperty(\"jqx-widget\") + \" \" + o.toThemeProperty(\"jqx-dropdownlist-state-normal\") + \" \" + o.toThemeProperty(\"jqx-rc-all\") + \" \" + o.toThemeProperty(\"jqx-fill-state-normal\");\n      o.element.className += \" \" + c;\n      o._firstDiv = a(o.element.firstChild);\n\n      try {\n        var q = \"listBox\" + o.id;\n        var g = a(a.find(\"#\" + q));\n\n        if (g.length > 0) {\n          g.remove();\n        }\n\n        a.jqx.aria(o, \"aria-owns\", q);\n        a.jqx.aria(o, \"aria-haspopup\", true);\n        var l = a(\"<div style='overflow: hidden; background-color: transparent; border: none; position: absolute;' id='listBox\" + o.id + \"'><div id='innerListBox\" + o.id + \"'></div></div>\");\n        l.hide();\n        l.addClass(\"jqx-listbox-container\");\n\n        if (o.dropDownContainer == \"element\") {\n          l.appendTo(o.host);\n        } else {\n          l.appendTo(document.body);\n        }\n\n        o.container = l;\n        o.listBoxContainer = a(a.find(\"#innerListBox\" + o.id));\n        var p = o.width;\n\n        if (o.dropDownWidth != \"auto\") {\n          p = o.dropDownWidth;\n        }\n\n        if (p == null) {\n          p = o.host.width();\n\n          if (p == 0) {\n            p = o.dropDownWidth;\n          }\n        }\n\n        if (o.dropDownHeight == null) {\n          o.dropDownHeight = 200;\n        }\n\n        var t = o;\n        o.container.width(parseInt(p) + 25);\n        o.container.height(parseInt(o.dropDownHeight) + 25);\n        o._ready = false;\n        o.addHandler(o.listBoxContainer, \"bindingComplete\", function (e) {\n          if (!o.listBox) {\n            o.listBox = a.data(o.listBoxContainer[0], \"jqxListBox\").instance;\n          }\n\n          if (o.selectedIndex != o.listBoxContainer.jqxListBox(\"selectedIndex\")) {\n            o.listBox = a.data(o.listBoxContainer[0], \"jqxListBox\").instance;\n            o.listBoxContainer.jqxListBox({\n              selectedIndex: o.selectedIndex\n            });\n            o.renderSelection(\"mouse\");\n          } else {\n            o.renderSelection(\"mouse\");\n          }\n\n          if (!o._ready) {\n            if (o.ready) {\n              o.ready();\n            }\n\n            o._ready = true;\n          }\n\n          o._raiseEvent(\"6\");\n        });\n        o.addHandler(o.listBoxContainer, \"itemAdd\", function (e) {\n          o._raiseEvent(\"7\", e.args);\n        });\n        o.addHandler(o.listBoxContainer, \"itemRemove\", function (e) {\n          o._raiseEvent(\"8\", e.args);\n        });\n        o.addHandler(o.listBoxContainer, \"itemUpdate\", function (e) {\n          o._raiseEvent(\"9\", e.args);\n        });\n        o.listBoxContainer.jqxListBox({\n          filterHeight: o.filterHeight,\n          filterPlaceHolder: o.filterPlaceHolder,\n          filterDelay: o.filterDelay,\n          autoItemsHeight: o.autoItemsHeight,\n          filterable: o.filterable,\n          allowDrop: false,\n          allowDrag: false,\n          autoBind: o.autoBind,\n          _checkForHiddenParent: false,\n          focusable: o.focusable,\n          touchMode: o.touchMode,\n          checkboxes: o.checkboxes,\n          rtl: o.rtl,\n          _renderOnDemand: true,\n          emptyString: o.emptyString,\n          itemHeight: o.itemHeight,\n          width: p,\n          searchMode: o.searchMode,\n          incrementalSearch: o.incrementalSearch,\n          incrementalSearchDelay: o.incrementalSearchDelay,\n          groupMember: o.groupMember,\n          searchMember: o.searchMember,\n          displayMember: o.displayMember,\n          valueMember: o.valueMember,\n          height: o.dropDownHeight,\n          autoHeight: o.autoDropDownHeight,\n          scrollBarSize: o.scrollBarSize,\n          selectedIndex: o.selectedIndex,\n          source: o.source,\n          theme: o.theme,\n          rendered: function () {\n            if (o.selectedIndex != o.listBoxContainer.jqxListBox(\"selectedIndex\")) {\n              o.listBox = a.data(o.listBoxContainer[0], \"jqxListBox\").instance;\n              o.listBoxContainer.jqxListBox({\n                selectedIndex: o.selectedIndex\n              });\n              o.renderSelection(\"mouse\");\n            } else {\n              o.renderSelection(\"mouse\");\n            }\n          },\n          renderer: o.renderer,\n          filterChange: function (e) {\n            if (o.autoDropDownHeight) {\n              o.container.height(o.listBoxContainer.height() + 25);\n            }\n          }\n        });\n\n        if (o.dropDownContainer === \"element\") {\n          o.listBoxContainer.css({\n            position: \"absolute\",\n            top: 0,\n            left: 0\n          });\n        } else {\n          o.listBoxContainer.css({\n            position: \"absolute\",\n            zIndex: o.popupZIndex,\n            top: 0,\n            left: 0\n          });\n        }\n\n        if (o.template) {\n          o.listBoxContainer.addClass(o.toThemeProperty(\"jqx-\" + o.template + \"-item\"));\n        }\n\n        o.listBox = a.data(o.listBoxContainer[0], \"jqxListBox\").instance;\n        o.listBox.enableSelection = o.enableSelection;\n        o.listBox.enableHover = o.enableHover;\n        o.listBox.equalItemsWidth = o.equalItemsWidth;\n        o.listBox.selectIndex(o.selectedIndex);\n\n        o.listBox._arrange();\n\n        o.listBoxContainer.addClass(o.toThemeProperty(\"jqx-popup\"));\n\n        if (a.jqx.browser.msie) {\n          o.listBoxContainer.addClass(o.toThemeProperty(\"jqx-noshadow\"));\n        }\n\n        o.addHandler(o.listBoxContainer, \"unselect\", function (e) {\n          o._raiseEvent(\"3\", {\n            index: e.args.index,\n            type: e.args.type,\n            item: e.args.item\n          });\n        });\n        o.addHandler(o.listBoxContainer, \"change\", function (e) {\n          if (e.args) {\n            if (e.args.type != \"keyboard\") {\n              o._raiseEvent(\"4\", {\n                index: e.args.index,\n                type: e.args.type,\n                item: e.args.item\n              });\n            } else {\n              if (e.args.type == \"keyboard\") {\n                if (!o.isOpened()) {\n                  o._raiseEvent(\"4\", {\n                    index: o.selectedIndex,\n                    type: \"keyboard\",\n                    item: o.getItem(o.selectedIndex)\n                  });\n                }\n              }\n            }\n          }\n        });\n\n        if (o.animationType == \"none\") {\n          o.container.css(\"display\", \"none\");\n        } else {\n          o.container.hide();\n        }\n      } catch (s) {\n        if (console) {\n          console.log(s);\n        }\n      }\n\n      var o = o;\n\n      o.propertyChangeMap.disabled = function (e, w, v, x) {\n        if (x) {\n          e.host.addClass(o.toThemeProperty(\"jqx-dropdownlist-state-disabled\"));\n          e.host.addClass(o.toThemeProperty(\"jqx-fill-state-disabled\"));\n          e.dropdownlistContent.addClass(o.toThemeProperty(\"jqx-dropdownlist-content-disabled\"));\n        } else {\n          e.host.removeClass(o.toThemeProperty(\"jqx-dropdownlist-state-disabled\"));\n          e.host.removeClass(o.toThemeProperty(\"jqx-fill-state-disabled\"));\n          e.dropdownlistContent.removeClass(o.toThemeProperty(\"jqx-dropdownlist-content-disabled\"));\n        }\n\n        a.jqx.aria(e, \"aria-disabled\", e.disabled);\n      };\n\n      if (o.disabled) {\n        o.host.addClass(o.toThemeProperty(\"jqx-dropdownlist-state-disabled\"));\n        o.host.addClass(o.toThemeProperty(\"jqx-fill-state-disabled\"));\n        o.dropdownlistContent.addClass(o.toThemeProperty(\"jqx-dropdownlist-content-disabled\"));\n      }\n\n      if (o.dropDownVerticalAlignment == \"top\") {\n        o.arrow.addClass(o.toThemeProperty(\"jqx-icon-arrow-up\"));\n      } else {\n        o.arrow.addClass(o.toThemeProperty(\"jqx-icon-arrow-down\"));\n      }\n\n      o.arrow.addClass(o.toThemeProperty(\"jqx-icon\"));\n\n      if (o.renderMode === \"simple\") {\n        o.arrow.remove();\n        o.host.removeClass(o.toThemeProperty(\"jqx-fill-state-normal\"));\n        o.host.removeClass(o.toThemeProperty(\"jqx-rc-all\"));\n      }\n\n      if (o.template) {\n        o.host.addClass(o.toThemeProperty(\"jqx-\" + o.template));\n      }\n\n      o._updateHandlers();\n\n      o._setSize();\n\n      o._arrange();\n\n      if (o.listBox) {\n        o.renderSelection();\n      }\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        if (o.host.parents(\".jqx-window\").length > 0) {\n          var n = o.host.parents(\".jqx-window\").css(\"z-index\");\n          l.css(\"z-index\", n + 10);\n          o.listBoxContainer.css(\"z-index\", n + 10);\n        }\n      }\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n\n      this._setSize();\n\n      this._arrange();\n    },\n    val: function (c) {\n      if (!this.dropdownlistContent) {\n        return \"\";\n      }\n\n      var d = function (f) {\n        for (var e in f) {\n          if (f.hasOwnProperty(e)) {\n            return false;\n          }\n        }\n\n        if (typeof c == \"number\") {\n          return false;\n        }\n\n        if (typeof c == \"date\") {\n          return false;\n        }\n\n        if (typeof c == \"boolean\") {\n          return false;\n        }\n\n        if (typeof c == \"string\") {\n          return false;\n        }\n\n        return true;\n      };\n\n      if (this.input && (d(c) || arguments.length == 0)) {\n        return this.input.val();\n      }\n\n      var b = this.getItemByValue(c);\n\n      if (b != null) {\n        this.selectItem(b);\n      }\n\n      if (this.input) {\n        return this.input.val();\n      }\n    },\n    focus: function () {\n      try {\n        var d = this;\n\n        var c = function () {\n          if (d.host) {\n            d.host.focus();\n\n            if (d._firstDiv) {\n              d._firstDiv.focus();\n            }\n          }\n        };\n\n        c();\n        setTimeout(function () {\n          c();\n        }, 10);\n      } catch (b) {}\n    },\n    _addInput: function () {\n      var b = this.host.attr(\"name\");\n      this.input = a(\"<input type='hidden'/>\");\n      this.host.append(this.input);\n\n      if (b) {\n        this.input.attr(\"name\", b);\n      }\n    },\n    getItems: function () {\n      if (!this.listBox) {\n        return new Array();\n      }\n\n      return this.listBox.items;\n    },\n    getVisibleItems: function () {\n      return this.listBox.getVisibleItems();\n    },\n    _setSize: function () {\n      var b = window.getComputedStyle(this.element);\n      var c = parseInt(b.borderLeftWidth) * 2;\n      var h = b.boxSizing;\n\n      if (this.element.offsetWidth === 0) {\n        c = 2;\n      }\n\n      if (h === \"border-box\" || isNaN(c)) {\n        c = 0;\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = parseInt(this.width) - c + \"px\";\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = parseInt(this.width) - c + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = parseInt(this.height) - c + \"px\";\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = parseInt(this.height) - c + \"px\";\n        }\n      }\n\n      var g = false;\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        g = true;\n        this.element.style.width = this.width;\n\n        if (c > 0) {\n          this.host.css(\"box-sizing\", \"border-box\");\n          this.listBoxContainer.css(\"box-sizing\", \"border-box\");\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        g = true;\n        this.element.style.height = this.height;\n      }\n\n      var e = this;\n\n      var f = function () {\n        e._arrange();\n\n        if (e.dropDownWidth == \"auto\") {\n          var i = e.host.width() + 2;\n          e.listBoxContainer.jqxListBox({\n            width: i\n          });\n          e.container.width(parseInt(i) + 25);\n        }\n      };\n\n      if (g) {\n        var d = this.host.width() + 2;\n\n        if (this.dropDownWidth != \"auto\") {\n          d = this.dropDownWidth;\n        }\n\n        this.listBoxContainer.jqxListBox({\n          width: d\n        });\n        this.container.width(parseInt(d) + 25);\n      }\n\n      a.jqx.utilities.resize(this.host, function () {\n        f();\n      }, false, this._checkForHiddenParent);\n    },\n    isOpened: function () {\n      var c = this;\n      var b = a.data(document.body, \"openedJQXListBox\" + this.id);\n\n      if (b != null && b == c.listBoxContainer) {\n        return true;\n      }\n\n      return false;\n    },\n    _updateHandlers: function () {\n      var c = this;\n      var d = false;\n      this.removeHandlers();\n\n      if (!this.touch) {\n        this.addHandler(this.host, \"mouseenter\", function () {\n          if (!c.disabled && c.enableHover && c.renderMode !== \"simple\") {\n            d = true;\n            c.host.addClass(c.toThemeProperty(\"jqx-dropdownlist-state-hover\"));\n\n            if (c.dropDownVerticalAlignment == \"top\") {\n              c.arrow.addClass(c.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n            } else {\n              c.arrow.addClass(c.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n            }\n\n            c.host.addClass(c.toThemeProperty(\"jqx-fill-state-hover\"));\n          }\n        });\n        this.addHandler(this.host, \"mouseleave\", function () {\n          if (!c.disabled && c.enableHover && c.renderMode !== \"simple\") {\n            c.host.removeClass(c.toThemeProperty(\"jqx-dropdownlist-state-hover\"));\n            c.host.removeClass(c.toThemeProperty(\"jqx-fill-state-hover\"));\n            c.arrow.removeClass(c.toThemeProperty(\"jqx-icon-arrow-down-hover\"));\n            c.arrow.removeClass(c.toThemeProperty(\"jqx-icon-arrow-up-hover\"));\n            d = false;\n          }\n        });\n      }\n\n      if (this.host.parents()) {\n        this.addHandler(this.host.parents(), \"scroll.dropdownlist\" + this.element.id, function (e) {\n          var f = c.isOpened();\n\n          if (f) {\n            c.close();\n          }\n        });\n      }\n\n      var b = \"mousedown\";\n\n      if (this.touch) {\n        b = a.jqx.mobile.getTouchEventName(\"touchstart\");\n      }\n\n      this.addHandler(this.dropdownlistWrapper, b, function (f) {\n        if (!c.disabled) {\n          var e = c.container.css(\"display\") == \"block\";\n\n          if (!c.isanimating) {\n            if (e) {\n              c.hideListBox();\n              return false;\n            } else {\n              c.showListBox();\n\n              if (!c.focusable) {\n                if (f.preventDefault) {\n                  f.preventDefault();\n                }\n              } else {\n                c.focus();\n              }\n            }\n          }\n        }\n      });\n\n      if (c.autoOpen) {\n        this.addHandler(this.host, \"mouseenter\", function () {\n          var e = c.isOpened();\n\n          if (!e && c.autoOpen) {\n            c.open();\n            c.host.focus();\n          }\n        });\n        a(document).on(\"mousemove.\" + c.id, function (e) {\n          var l = c.isOpened();\n\n          if (l && c.autoOpen) {\n            var i = c.host.coord();\n            var j = i.top;\n            var h = i.left;\n            var f = c.container.coord();\n            var m = f.left;\n            var k = f.top;\n            var g = true;\n\n            if (e.pageY >= j && e.pageY <= j + c.host.height()) {\n              if (e.pageX >= h && e.pageX < h + c.host.width()) {\n                g = false;\n              }\n            }\n\n            if (e.pageY >= k && e.pageY <= k + c.container.height()) {\n              if (e.pageX >= m && e.pageX < m + c.container.width()) {\n                g = false;\n              }\n            }\n\n            if (g) {\n              c.close();\n            }\n          }\n        });\n      }\n\n      if (this.touch) {\n        this.addHandler(a(document), a.jqx.mobile.getTouchEventName(\"touchstart\") + \".\" + this.id, c.closeOpenedListBox, {\n          me: this,\n          listbox: this.listBox,\n          id: this.id\n        });\n      } else {\n        this.addHandler(a(document), \"mousedown.\" + this.id, c.closeOpenedListBox, {\n          me: this,\n          listbox: this.listBox,\n          id: this.id\n        });\n      }\n\n      this.addHandler(this.host, \"keydown\", function (f) {\n        var e = c.container.css(\"display\") == \"block\";\n\n        if (c.host.css(\"display\") == \"none\") {\n          return true;\n        }\n\n        if (f.keyCode == \"13\" || f.keyCode == \"9\") {\n          if (!c.isanimating) {\n            if (e) {\n              c.renderSelection();\n\n              if (f.keyCode == \"13\" && c.focusable) {\n                c._firstDiv.focus();\n              }\n\n              c.hideListBox();\n\n              if (!c.keyboardSelection) {\n                c._raiseEvent(\"2\", {\n                  index: c.selectedIndex,\n                  type: \"keyboard\",\n                  item: c.getItem(c.selectedIndex)\n                });\n              }\n\n              if (f.keyCode == \"13\") {\n                c._raiseEvent(\"4\", {\n                  index: c.selectedIndex,\n                  type: \"keyboard\",\n                  item: c.getItem(c.selectedIndex)\n                });\n              }\n            }\n\n            if (e && f.keyCode != \"9\") {\n              return false;\n            }\n\n            return true;\n          }\n        }\n\n        if (f.keyCode == 115) {\n          if (!c.isanimating) {\n            if (!c.isOpened()) {\n              c.showListBox();\n            } else {\n              if (c.isOpened()) {\n                c.hideListBox();\n              }\n            }\n          }\n\n          return false;\n        }\n\n        if (f.altKey) {\n          if (c.host.css(\"display\") == \"block\") {\n            if (f.keyCode == 38) {\n              if (c.isOpened()) {\n                c.hideListBox();\n                return true;\n              }\n            } else {\n              if (f.keyCode == 40) {\n                if (!c.isOpened()) {\n                  c.showListBox();\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        if (f.keyCode == \"27\") {\n          if (!c.ishiding) {\n            if (c.isOpened()) {\n              c.hideListBox();\n\n              if (c.tempSelectedIndex != undefined) {\n                c.selectIndex(c.tempSelectedIndex);\n              }\n            }\n\n            return true;\n          }\n        }\n\n        if (!c.disabled) {\n          c._kbnavigated = c.listBox._handleKeyDown(f);\n          return c._kbnavigated;\n        }\n      });\n      this.addHandler(this.listBoxContainer, \"checkChange\", function (e) {\n        c.renderSelection();\n\n        c._updateInputSelection();\n\n        c._raiseEvent(5, {\n          label: e.args.label,\n          value: e.args.value,\n          checked: e.args.checked,\n          item: e.args.item\n        });\n      });\n      this.addHandler(this.listBoxContainer, \"select\", function (e) {\n        if (!c.disabled) {\n          if (!e.args) {\n            return;\n          }\n\n          if (e.args.type == \"keyboard\" && !c.isOpened()) {\n            c.renderSelection();\n          }\n\n          if (e.args.type != \"keyboard\" || c.keyboardSelection) {\n            c.renderSelection();\n\n            c._raiseEvent(\"2\", {\n              index: e.args.index,\n              type: e.args.type,\n              item: e.args.item,\n              originalEvent: e.args.originalEvent\n            });\n\n            if (e.args.type == \"mouse\") {\n              if (!c.checkboxes) {\n                c.hideListBox();\n\n                if (c._firstDiv && c.focusable) {\n                  c._firstDiv.focus();\n                }\n              }\n            }\n          }\n        }\n      });\n\n      if (this.listBox) {\n        if (this.listBox.content) {\n          this.addHandler(this.listBox.content, \"click\", function (e) {\n            if (!c.disabled) {\n              if (c.listBox.itemswrapper && e.target === c.listBox.itemswrapper[0]) {\n                return true;\n              }\n\n              c.renderSelection(\"mouse\");\n\n              if (!c.touch) {\n                if (!c.ishiding) {\n                  if (!c.checkboxes) {\n                    c.hideListBox();\n\n                    if (c._firstDiv && c.focusable) {\n                      c._firstDiv.focus();\n                    }\n                  }\n                }\n              }\n\n              if (!c.keyboardSelection) {\n                if (c._kbnavigated === false) {\n                  if (c.tempSelectedIndex != c.selectedIndex) {\n                    c._raiseEvent(\"4\", {\n                      index: c.selectedIndex,\n                      type: \"mouse\",\n                      item: c.getItem(c.selectedIndex)\n                    });\n                  }\n\n                  c._kbnavigated = true;\n                }\n\n                if (c._oldSelectedInd == undefined) {\n                  c._oldSelectedIndx = c.selectedIndex;\n                }\n\n                if (c.selectedIndex != c._oldSelectedIndx) {\n                  c._raiseEvent(\"2\", {\n                    index: c.selectedIndex,\n                    type: \"keyboard\",\n                    item: c.getItem(c.selectedIndex)\n                  });\n\n                  c._oldSelectedIndx = c.selectedIndex;\n                }\n              }\n            }\n          });\n        }\n      }\n\n      this.addHandler(this.host, \"focus\", function (e) {\n        if (c.renderMode !== \"simple\") {\n          c.host.addClass(c.toThemeProperty(\"jqx-dropdownlist-state-focus\"));\n          c.host.addClass(c.toThemeProperty(\"jqx-fill-state-focus\"));\n        }\n\n        c.bar.addClass(\"focused\");\n        c.label.addClass(\"focused\");\n      });\n      this.addHandler(this.host, \"blur\", function () {\n        if (c.renderMode !== \"simple\") {\n          c.host.removeClass(c.toThemeProperty(\"jqx-dropdownlist-state-focus\"));\n          c.host.removeClass(c.toThemeProperty(\"jqx-fill-state-focus\"));\n        }\n\n        c.bar.removeClass(\"focused\");\n        c.label.removeClass(\"focused\");\n      });\n      this.addHandler(this._firstDiv, \"focus\", function (e) {\n        if (c.renderMode !== \"simple\") {\n          c.host.addClass(c.toThemeProperty(\"jqx-dropdownlist-state-focus\"));\n          c.host.addClass(c.toThemeProperty(\"jqx-fill-state-focus\"));\n        }\n\n        c.bar.addClass(\"focused\");\n        c.label.addClass(\"focused\");\n      });\n      this.addHandler(this._firstDiv, \"blur\", function () {\n        if (c.renderMode !== \"simple\") {\n          c.host.removeClass(c.toThemeProperty(\"jqx-dropdownlist-state-focus\"));\n          c.host.removeClass(c.toThemeProperty(\"jqx-fill-state-focus\"));\n        }\n\n        c.bar.removeClass(\"focused\");\n        c.label.removeClass(\"focused\");\n      });\n    },\n    removeHandlers: function () {\n      var c = this;\n      var b = \"mousedown\";\n\n      if (this.touch) {\n        b = a.jqx.mobile.getTouchEventName(\"touchstart\");\n      }\n\n      this.removeHandler(this.dropdownlistWrapper, b);\n\n      if (this.listBox) {\n        if (this.listBox.content) {\n          this.removeHandler(this.listBox.content, \"click\");\n        }\n      }\n\n      this.removeHandler(this.host, \"loadContent\");\n      this.removeHandler(this.listBoxContainer, \"checkChange\");\n      this.removeHandler(this.host, \"keydown\");\n      this.removeHandler(this.host, \"focus\");\n      this.removeHandler(this.host, \"blur\");\n      this.removeHandler(this._firstDiv, \"focus\");\n      this.removeHandler(this._firstDiv, \"blur\");\n      this.removeHandler(this.host, \"mouseenter\");\n      this.removeHandler(this.host, \"mouseleave\");\n      this.removeHandler(a(document), \"mousemove.\" + c.id);\n    },\n    getItem: function (b) {\n      var c = this.listBox.getItem(b);\n      return c;\n    },\n    getItemByValue: function (c) {\n      var b = this.listBox.getItemByValue(c);\n      return b;\n    },\n    selectItem: function (b) {\n      if (this.listBox != undefined) {\n        this.listBox.selectItem(b);\n        this.selectedIndex = this.listBox.selectedIndex;\n        this.renderSelection(\"mouse\");\n      }\n    },\n    unselectItem: function (b) {\n      if (this.listBox != undefined) {\n        this.listBox.unselectItem(b);\n        this.renderSelection(\"mouse\");\n      }\n    },\n    checkItem: function (b) {\n      if (this.listBox != undefined) {\n        this.listBox.checkItem(b);\n      }\n    },\n    uncheckItem: function (b) {\n      if (this.listBox != undefined) {\n        this.listBox.uncheckItem(b);\n      }\n    },\n    indeterminateItem: function (b) {\n      if (this.listBox != undefined) {\n        this.listBox.indeterminateItem(b);\n      }\n    },\n    renderSelection: function () {\n      if (this.listBox == null) {\n        return;\n      }\n\n      if (this.height && this.height.toString().indexOf(\"%\") != -1) {\n        this._arrange();\n      }\n\n      var r = this.listBox.visibleItems[this.listBox.selectedIndex];\n\n      if (this.filterable) {\n        if (this.listBox.selectedIndex == -1) {\n          for (var e in this.listBox.selectedValues) {\n            var l = this.listBox.selectedValues[e];\n            var b = this.listBox.getItemByValue(l);\n\n            if (b) {\n              r = b;\n            }\n          }\n        }\n      }\n\n      var u = this;\n\n      if (this.checkboxes) {\n        var v = this.getCheckedItems();\n\n        if (v != null && v.length > 0) {\n          r = v[0];\n        } else {\n          r = null;\n        }\n      }\n\n      if (this.hint) {\n        if (this.label) {\n          this.label[0].innerHTML = this.placeHolder;\n        }\n\n        if (r != null) {\n          this.element.setAttribute(\"hint\", true);\n        } else {\n          this.element.removeAttribute(\"hint\");\n        }\n      }\n\n      this.bar.css(\"top\", this.host.height());\n\n      if (r == null) {\n        var j = a('<span unselectable=\"on\" style=\"color: inherit; border: none; background-color: transparent;\"></span>');\n        j.appendTo(a(document.body));\n        j.addClass(this.toThemeProperty(\"jqx-widget\"));\n        j.addClass(this.toThemeProperty(\"jqx-listitem-state-normal\"));\n        j.addClass(this.toThemeProperty(\"jqx-item\"));\n        a.jqx.utilities.html(j, this.placeHolder);\n\n        if (this.isMaterialized() && !this.element.getAttribute(\"default-placeholder\") && this.hint) {\n          j[0].innerHTML = \"\";\n\n          if (this.label) {\n            this.label[0].innerHTML = this.placeHolder;\n          }\n        }\n\n        var s = this.dropdownlistContent.css(\"padding-top\");\n        var x = this.dropdownlistContent.css(\"padding-bottom\");\n        j.css(\"padding-top\", s);\n        j.css(\"padding-bottom\", x);\n        var q = j.outerHeight();\n        j.remove();\n        j.removeClass();\n        a.jqx.utilities.html(this.dropdownlistContent, j);\n        var h = this.host.height();\n\n        if (this.height != null && this.height != undefined) {\n          if (this.height.toString().indexOf(\"%\") === -1) {\n            h = parseInt(this.height);\n          }\n        }\n\n        var f = parseInt((parseInt(h) - parseInt(q)) / 2);\n\n        if (this.host.css(\"box-sizing\") === \"border-box\") {\n          f = parseInt((parseInt(h - 2) - parseInt(q)) / 2);\n        }\n\n        if (f > 0) {\n          this.dropdownlistContent.css(\"margin-top\", f + \"px\");\n          this.dropdownlistContent.css(\"margin-bottom\", f + \"px\");\n        }\n\n        if (this.selectionRenderer) {\n          a.jqx.utilities.html(this.dropdownlistContent, this.selectionRenderer(j, -1, \"\", \"\"));\n          this.dropdownlistContent.css(\"margin-top\", \"0px\");\n          this.dropdownlistContent.css(\"margin-bottom\", \"0px\");\n\n          this._updateInputSelection();\n        } else {\n          this._updateInputSelection();\n        }\n\n        this.selectedIndex = this.listBox.selectedIndex;\n\n        if (this.width === \"auto\") {\n          this._arrange();\n        }\n\n        if (this.focusable && this.isOpened()) {\n          this.focus();\n        }\n\n        return;\n      }\n\n      this.selectedIndex = this.listBox.selectedIndex;\n      var j = a(document.createElement(\"span\"));\n      j[0].setAttribute(\"unselectable\", \"on\");\n\n      try {\n        j[0].style.color = \"inherit\";\n      } catch (t) {}\n\n      j[0].style.borderWidth = \"0px\";\n      j[0].style.backgroundColor = \"transparent\";\n      j.appendTo(a(document.body));\n      j.addClass(this.toThemeProperty(\"jqx-widget jqx-listitem-state-normal jqx-item\"));\n      var p = false;\n\n      try {\n        if (r.html != undefined && r.html != null && r.html.toString().length > 0) {\n          a.jqx.utilities.html(j, r.html);\n        } else {\n          if (r.label != undefined && r.label != null && r.label.toString().length > 0) {\n            a.jqx.utilities.html(j, r.label);\n          } else {\n            if (r.label === null || r.label === \"\") {\n              p = true;\n              a.jqx.utilities.html(j, \"\");\n            } else {\n              if (r.value != undefined && r.value != null && r.value.toString().length > 0) {\n                a.jqx.utilities.html(j, r.value);\n              } else {\n                if (r.title != undefined && r.title != null && r.title.toString().length > 0) {\n                  a.jqx.utilities.html(j, r.title);\n                } else {\n                  if (r.label == \"\" || r.label == null) {\n                    p = true;\n                    a.jqx.utilities.html(j, \"\");\n                  }\n                }\n              }\n            }\n          }\n        }\n      } catch (n) {\n        var m = n;\n      }\n\n      var s = this.dropdownlistContent[0].style.paddingTop;\n      var x = this.dropdownlistContent[0].style.paddingBottom;\n\n      if (s === \"\") {\n        s = \"0px\";\n      }\n\n      if (x === \"\") {\n        x = \"0px\";\n      }\n\n      j[0].style.paddingTop = s;\n      j[0].style.paddingBottom = x;\n      var q = j.outerHeight();\n\n      if (q === 0) {\n        q = 16;\n      }\n\n      if ((r.label == \"\" || r.label == null) && p) {\n        a.jqx.utilities.html(j, \"\");\n      }\n\n      var c = this.width && this.width.toString().indexOf(\"%\") <= 0;\n      j.remove();\n      j.removeClass();\n\n      if (this.selectionRenderer) {\n        a.jqx.utilities.html(this.dropdownlistContent, this.selectionRenderer(j, r.index, r.label, r.value));\n\n        if (this.focusable && this.isOpened()) {\n          this.focus();\n        }\n      } else {\n        if (this.checkboxes) {\n          var g = this.getCheckedItems();\n          var k = \"\";\n\n          for (var o = 0; o < g.length; o++) {\n            if (o == g.length - 1) {\n              k += g[o].label;\n            } else {\n              k += g[o].label + \",\";\n            }\n          }\n\n          j.text(k);\n\n          if (c) {\n            j.css(\"max-width\", this.host.width() - 30);\n          }\n\n          j.css(\"overflow\", \"hidden\");\n          j.css(\"display\", \"block\");\n\n          if (!this.rtl) {\n            if (c) {\n              j.css(\"width\", this.host.width() - 30);\n            }\n          }\n\n          j.css(\"text-overflow\", \"ellipsis\");\n          j.css(\"padding-bottom\", 1 + parseInt(x));\n          this.dropdownlistContent.html(j);\n\n          if (this.focusable && this.isOpened()) {\n            this.focus();\n          }\n        } else {\n          var d = this.host.width() - this.arrowSize - 1;\n\n          if (this.width && this.width !== \"auto\") {\n            if (c) {\n              if (!this.rtl) {\n                j.css(\"max-width\", d + \"px\");\n              }\n            }\n\n            j[0].style.overflow = \"hidden\";\n            j[0].style.display = \"block\";\n            j[0].style.paddingTop = 1 + parseInt(x) + \"px\";\n\n            if (!this.rtl) {\n              if (c) {\n                if (d < 0) {\n                  d = 0;\n                }\n\n                j[0].style.width = d + \"px\";\n              }\n            }\n\n            j[0].style.textOverflow = \"ellipsis\";\n          }\n\n          this.dropdownlistContent[0].innerHTML = j[0].innerHTML;\n\n          if (this.focusable && this.isOpened()) {\n            this.focus();\n          }\n        }\n      }\n\n      var h = this.host.height();\n\n      if (this.height != null && this.height != undefined) {\n        if (this.height.toString().indexOf(\"%\") === -1) {\n          h = parseInt(this.height);\n        }\n      }\n\n      var f = parseInt((parseInt(h) - parseInt(q)) / 2);\n\n      if (this.host.css(\"box-sizing\") === \"border-box\") {\n        f = parseInt((parseInt(h - 2) - parseInt(q)) / 2);\n      }\n\n      if (f >= 0) {\n        this.dropdownlistContent[0].style.marginTop = f + \"px\";\n        this.dropdownlistContent[0].style.marginBottom = f + \"px\";\n      }\n\n      if (this.selectionRenderer) {\n        this.dropdownlistContent[0].style.marginTop = \"0px\";\n        this.dropdownlistContent[0].style.marginBottom = \"0px\";\n      }\n\n      if (this.dropdownlistContent && this.input) {\n        this._updateInputSelection();\n      }\n\n      if (this.listBox && this.listBox._activeElement) {\n        a.jqx.aria(this, \"aria-activedescendant\", this.listBox._activeElement.id);\n      }\n\n      if (this.width === \"auto\") {\n        this._arrange();\n      }\n    },\n    _updateInputSelection: function () {\n      if (this.input) {\n        var c = new Array();\n\n        if (this.selectedIndex == -1) {\n          this.input.val(\"\");\n        } else {\n          var f = this.getSelectedItem();\n\n          if (f != null) {\n            this.input.val(f.value);\n            c.push(f.value);\n          } else {\n            this.input.val(this.dropdownlistContent.text());\n          }\n        }\n\n        if (this.checkboxes) {\n          var b = this.getCheckedItems();\n          var g = \"\";\n\n          if (b != null) {\n            for (var d = 0; d < b.length; d++) {\n              var e = b[d].value;\n\n              if (e == undefined) {\n                continue;\n              }\n\n              if (d == b.length - 1) {\n                g += e;\n              } else {\n                g += e + \",\";\n              }\n\n              c.push(e);\n            }\n          }\n\n          this.input.val(g);\n        }\n      }\n\n      if (this.field && this.input) {\n        if (this.field.nodeName.toLowerCase() == \"select\") {\n          a.each(this.field, function (h, i) {\n            a(this).removeAttr(\"selected\");\n            this.selected = c.indexOf(this.value) >= 0;\n\n            if (this.selected) {\n              a(this).attr(\"selected\", true);\n            }\n          });\n        } else {\n          a.each(this.items, function (h, i) {\n            a(this.originalItem.originalItem).removeAttr(\"data-selected\");\n            this.selected = c.indexOf(this.value) >= 0;\n\n            if (this.selected) {\n              a(this.originalItem.originalItem).attr(\"data-selected\", true);\n            }\n          });\n        }\n      }\n    },\n    setContent: function (b) {\n      a.jqx.utilities.html(this.dropdownlistContent, b);\n\n      this._updateInputSelection();\n    },\n    dataBind: function () {\n      this.listBoxContainer.jqxListBox({\n        source: this.source\n      });\n      this.renderSelection(\"mouse\");\n\n      if (this.source == null) {\n        this.clearSelection();\n      }\n    },\n    clear: function () {\n      this.listBoxContainer.jqxListBox({\n        source: null\n      });\n      this.clearSelection();\n    },\n    clearSelection: function (b) {\n      this.selectedIndex = -1;\n\n      this._updateInputSelection();\n\n      this.listBox.clearSelection();\n      this.renderSelection();\n\n      if (!this.selectionRenderer && !this.hint && !this.isMaterialized()) {\n        a.jqx.utilities.html(this.dropdownlistContent, this.placeHolder);\n      }\n    },\n    unselectIndex: function (b, c) {\n      if (isNaN(b)) {\n        return;\n      }\n\n      this.listBox.unselectIndex(b, c);\n      this.renderSelection();\n    },\n    selectIndex: function (b, d, e, c) {\n      this.listBox.selectIndex(b, d, e, c, \"api\");\n    },\n    getSelectedIndex: function () {\n      return this.selectedIndex;\n    },\n    getSelectedItem: function () {\n      return this.listBox.getVisibleItem(this.selectedIndex);\n    },\n    getCheckedItems: function () {\n      return this.listBox.getCheckedItems();\n    },\n    checkIndex: function (b) {\n      this.listBox.checkIndex(b);\n    },\n    uncheckIndex: function (b) {\n      this.listBox.uncheckIndex(b);\n    },\n    indeterminateIndex: function (b) {\n      this.listBox.indeterminateIndex(b);\n    },\n    checkAll: function () {\n      this.listBox.checkAll();\n      this.renderSelection(\"mouse\");\n    },\n    uncheckAll: function () {\n      this.listBox.uncheckAll();\n      this.renderSelection(\"mouse\");\n    },\n    addItem: function (b) {\n      return this.listBox.addItem(b);\n    },\n    insertAt: function (c, b) {\n      if (c == null) {\n        return false;\n      }\n\n      return this.listBox.insertAt(c, b);\n    },\n    removeAt: function (c) {\n      var b = this.listBox.removeAt(c);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    removeItem: function (c) {\n      var b = this.listBox.removeItem(c);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    updateItem: function (c, d) {\n      var b = this.listBox.updateItem(c, d);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    updateAt: function (d, c) {\n      var b = this.listBox.updateAt(d, c);\n      this.renderSelection(\"mouse\");\n      return b;\n    },\n    ensureVisible: function (b) {\n      return this.listBox.ensureVisible(b);\n    },\n    disableAt: function (b) {\n      return this.listBox.disableAt(b);\n    },\n    enableAt: function (b) {\n      return this.listBox.enableAt(b);\n    },\n    disableItem: function (b) {\n      return this.listBox.disableItem(b);\n    },\n    enableItem: function (b) {\n      return this.listBox.enableItem(b);\n    },\n    _findPos: function (c) {\n      while (c && (c.type == \"hidden\" || c.nodeType != 1 || a.expr.filters.hidden(c))) {\n        c = c.nextSibling;\n      }\n\n      var b = a(c).coord(true);\n      return [b.left, b.top];\n    },\n    testOffset: function (h, f, c) {\n      var g = h.outerWidth();\n      var j = h.outerHeight();\n      var i = a(window).width() + a(window).scrollLeft();\n      var e = a(window).height() + a(window).scrollTop();\n\n      if (f.left + g > i) {\n        if (g > this.host.width()) {\n          var d = this.host.coord().left;\n          var b = g - this.host.width();\n          f.left = d - b + 2;\n        }\n      }\n\n      if (f.left < 0) {\n        f.left = parseInt(this.host.coord().left) + \"px\";\n      }\n\n      f.top -= Math.min(f.top, f.top + j > e && e > j ? Math.abs(j + c + 22) : 0);\n      return f;\n    },\n    open: function () {\n      this.showListBox();\n    },\n    close: function () {\n      this.hideListBox();\n    },\n    _getBodyOffset: function () {\n      var c = 0;\n      var b = 0;\n\n      if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n        c = parseInt(a(\"body\").css(\"border-top-width\"));\n\n        if (isNaN(c)) {\n          c = 0;\n        }\n      }\n\n      if (a(\"body\").css(\"border-left-width\") != \"0px\") {\n        b = parseInt(a(\"body\").css(\"border-left-width\"));\n\n        if (isNaN(b)) {\n          b = 0;\n        }\n      }\n\n      return {\n        left: b,\n        top: c\n      };\n    },\n    showListBox: function () {\n      a.jqx.aria(this, \"aria-expanded\", true);\n\n      if (this.listBox._renderOnDemand) {\n        this.listBoxContainer.jqxListBox({\n          _renderOnDemand: false\n        });\n      }\n\n      if (this.dropDownWidth == \"auto\" && this.width != null && this.width.indexOf && (this.width.indexOf(\"%\") != -1 || this.width.indexOf(\"auto\") != -1)) {\n        if (this.listBox.host.width() != this.host.width()) {\n          var p = this.element.offsetWidth;\n          this.listBoxContainer.jqxListBox({\n            width: p\n          });\n          this.container.width(parseInt(p) + 25);\n        }\n      }\n\n      if (this.dropDownWidth == \"auto\" && this.host.css(\"border-left-width\") === \"0px\") {\n        var p = this.element.offsetWidth;\n        this.listBoxContainer.jqxListBox({\n          width: p + 1\n        });\n        this.container.width(parseInt(p) + 25);\n      }\n\n      var n = this;\n      var g = this.listBoxContainer;\n      var u = this.listBox;\n      var e = a(window).scrollTop();\n      var f = a(window).scrollLeft();\n      var l = parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + \"px\";\n      var d,\n          o = parseInt(Math.round(this.host.coord(true).left));\n      d = o + \"px\";\n\n      if (this.dropDownContainer === \"element\") {\n        l = parseInt(this.host.outerHeight()) - 1 + \"px\";\n        d = 0;\n      }\n\n      var s = false;\n\n      if (this.listBox == null) {\n        return;\n      }\n\n      this.ishiding = false;\n\n      if (!this.keyboardSelection) {\n        this.listBox.selectIndex(this.selectedIndex);\n        this.listBox.ensureVisible(this.selectedIndex);\n      }\n\n      this.tempSelectedIndex = this.selectedIndex;\n\n      if (this.autoDropDownHeight) {\n        this.container.height(this.listBoxContainer.height() + 25);\n      }\n\n      if (s != null && s) {\n        d = a.jqx.mobile.getLeftPos(this.element);\n        l = a.jqx.mobile.getTopPos(this.element) + parseInt(this.host.outerHeight());\n\n        if (a(\"body\").css(\"border-top-width\") != \"0px\") {\n          l = parseInt(l) - this._getBodyOffset().top + \"px\";\n        }\n\n        if (a(\"body\").css(\"border-left-width\") != \"0px\") {\n          d = parseInt(d) - this._getBodyOffset().left + \"px\";\n        }\n      }\n\n      g.stop();\n\n      if (this.renderMode !== \"simple\") {\n        this.host.addClass(this.toThemeProperty(\"jqx-dropdownlist-state-selected\"));\n        this.host.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n\n        if (this.dropDownVerticalAlignment == \"top\") {\n          this.arrow.addClass(this.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n        } else {\n          this.arrow.addClass(this.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n        }\n      }\n\n      this.container.css(\"left\", d);\n      this.container.css(\"top\", l);\n\n      u._arrange();\n\n      var c = true;\n      var b = false;\n\n      if (this.dropDownHorizontalAlignment == \"right\" || this.rtl) {\n        var i = this.container.outerWidth();\n        var q = -2 + Math.abs(i - this.host.width());\n\n        if (i > this.host.width()) {\n          this.container.css(\"left\", 25 + parseInt(Math.round(o)) - q + \"px\");\n        } else {\n          this.container.css(\"left\", 25 + parseInt(Math.round(o)) + q + \"px\");\n        }\n      }\n\n      if (this.dropDownVerticalAlignment == \"top\") {\n        var r = g.height();\n        b = true;\n        g.css(\"top\", 23);\n        g.addClass(this.toThemeProperty(\"jqx-popup-up\"));\n        var k = parseInt(this.host.outerHeight());\n        var j = parseInt(l) - Math.abs(r + k + 23);\n        this.container.css(\"top\", j);\n      }\n\n      if (this.enableBrowserBoundsDetection) {\n        var h = this.testOffset(g, {\n          left: parseInt(this.container.css(\"left\")),\n          top: parseInt(l)\n        }, parseInt(this.host.outerHeight()));\n\n        if (parseInt(this.container.css(\"top\")) != h.top) {\n          b = true;\n          g.css(\"top\", 23);\n          g.addClass(this.toThemeProperty(\"jqx-popup-up\"));\n        } else {\n          g.css(\"top\", 0);\n        }\n\n        this.container.css(\"top\", h.top);\n\n        if (parseInt(this.container.css(\"left\")) != h.left) {\n          this.container.css(\"left\", h.left);\n        }\n      }\n\n      if (this.animationType == \"none\") {\n        this.container.css(\"display\", \"block\");\n        a.data(document.body, \"openedJQXListBoxParent\", n);\n        a.data(document.body, \"openedJQXListBox\" + this.id, g);\n        g.css(\"margin-top\", 0);\n        g.css(\"opacity\", 1);\n\n        u._renderItems();\n\n        n._raiseEvent(\"0\", u);\n      } else {\n        this.container.css(\"display\", \"block\");\n        n.isanimating = true;\n\n        if (this.animationType == \"fade\") {\n          g.css(\"margin-top\", 0);\n          g.css(\"opacity\", 0);\n          g.animate({\n            opacity: 1\n          }, this.openDelay, function () {\n            a.data(document.body, \"openedJQXListBoxParent\", n);\n            a.data(document.body, \"openedJQXListBox\" + n.id, g);\n            n.ishiding = false;\n            n.isanimating = false;\n\n            u._renderItems();\n\n            n._raiseEvent(\"0\", u);\n          });\n        } else {\n          g.css(\"opacity\", 1);\n          var m = g.outerHeight();\n\n          if (b) {\n            g.css(\"margin-top\", m);\n          } else {\n            g.css(\"margin-top\", -m);\n          }\n\n          g.animate({\n            \"margin-top\": 0\n          }, this.openDelay, function () {\n            a.data(document.body, \"openedJQXListBoxParent\", n);\n            a.data(document.body, \"openedJQXListBox\" + n.id, g);\n            n.ishiding = false;\n            n.isanimating = false;\n\n            u._renderItems();\n\n            n._raiseEvent(\"0\", u);\n          });\n        }\n      }\n\n      if (!b) {\n        this.host.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n        g.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      } else {\n        this.host.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n        g.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n      }\n\n      if (this.renderMode !== \"simple\") {\n        g.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n        this.host.addClass(this.toThemeProperty(\"jqx-dropdownlist-state-focus\"));\n        this.host.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      }\n\n      this.element.setAttribute(\"opened\", true);\n    },\n    hideListBox: function () {\n      a.jqx.aria(this, \"aria-expanded\", false);\n      var f = this.listBoxContainer;\n      var g = this.listBox;\n      var c = this.container;\n      var d = this;\n      this.element.removeAttribute(\"opened\");\n      a.data(document.body, \"openedJQXListBox\" + this.id, null);\n\n      if (this.animationType == \"none\") {\n        this.container.css(\"display\", \"none\");\n      } else {\n        if (!d.ishiding) {\n          f.stop();\n          var b = f.outerHeight();\n          f.css(\"margin-top\", 0);\n          d.isanimating = true;\n          var e = -b;\n\n          if (parseInt(this.container.coord().top) < parseInt(this.host.coord().top)) {\n            e = b;\n          }\n\n          if (this.animationType == \"fade\") {\n            f.css({\n              opacity: 1\n            });\n            f.animate({\n              opacity: 0\n            }, this.closeDelay, function () {\n              c.css(\"display\", \"none\");\n              d.isanimating = false;\n              d.ishiding = false;\n            });\n          } else {\n            f.animate({\n              \"margin-top\": e\n            }, this.closeDelay, function () {\n              c.css(\"display\", \"none\");\n              d.isanimating = false;\n              d.ishiding = false;\n            });\n          }\n        }\n      }\n\n      this.ishiding = true;\n      this.host.removeClass(this.toThemeProperty(\"jqx-dropdownlist-state-selected\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n      this.arrow.removeClass(this.toThemeProperty(\"jqx-icon-arrow-down-selected\"));\n      this.arrow.removeClass(this.toThemeProperty(\"jqx-icon-arrow-up-selected\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n      f.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));\n      f.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));\n      f.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-dropdownlist-state-focus\"));\n      this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));\n\n      this._raiseEvent(\"1\", g);\n    },\n    closeOpenedListBox: function (e) {\n      var d = e.data.me;\n      var b = a(e.target);\n      var c = e.data.listbox;\n\n      if (c == null) {\n        return true;\n      }\n\n      if (a(e.target).ischildof(e.data.me.host)) {\n        return true;\n      }\n\n      if (!d.isOpened()) {\n        return true;\n      }\n\n      if (a(e.target).ischildof(d.listBoxContainer)) {\n        return true;\n      }\n\n      var f = d;\n      var g = false;\n      a.each(b.parents(), function () {\n        if (this.className != \"undefined\") {\n          if (this.className.indexOf) {\n            if (this.className.indexOf(\"jqx-listbox\") != -1) {\n              g = true;\n              return false;\n            }\n\n            if (this.className.indexOf(\"jqx-dropdownlist\") != -1) {\n              if (d.element.id == this.id) {\n                g = true;\n              }\n\n              return false;\n            }\n          }\n        }\n      });\n\n      if (c != null && !g && d.isOpened()) {\n        d.hideListBox();\n      }\n\n      return true;\n    },\n    clearFilter: function () {\n      this.listBox.clearFilter();\n    },\n    loadFromSelect: function (b) {\n      this.listBox.loadFromSelect(b);\n    },\n    refresh: function (b) {\n      if (b !== true) {\n        this._setSize();\n\n        this._arrange();\n\n        if (this.listBox) {\n          this.renderSelection();\n        }\n      }\n    },\n    _arrange: function () {\n      var h = this;\n      var d = parseInt(h.host.width());\n      var j = parseInt(h.host.height());\n      var f = h.arrowSize;\n      var g = h.arrowSize;\n      var i = 3;\n      var b = d - g - 2 * i;\n\n      if (b > 0 && h.width !== \"auto\") {\n        h.dropdownlistContent[0].style.width = b + \"px\";\n      } else {\n        if (b <= 0) {\n          h.dropdownlistContent[0].style.width = \"0px\";\n        }\n      }\n\n      if (h.width === \"auto\") {\n        h.dropdownlistContent.css(\"width\", \"auto\");\n        d = 2 + h.dropdownlistContent.width() + g + 2 * i;\n\n        if (d < 47) {\n          d = 47;\n        }\n\n        h.host.width(d);\n      }\n\n      h.dropdownlistContent[0].style.height = j + \"px\";\n      h.dropdownlistContent[0].style.left = \"0px\";\n      h.dropdownlistContent[0].style.top = \"0px\";\n      h.dropdownlistArrow[0].style.width = g + \"px\";\n\n      if (h.width && h.width.toString().indexOf(\"%\") >= 0) {\n        var e = g * 100 / d;\n        var c = b * 100 / d;\n        h.dropdownlistArrow[0].style.width = e + \"%\";\n        h.dropdownlistContent[0].style.width = c + \"%\";\n      }\n\n      h.dropdownlistArrow[0].style.height = j + \"px\";\n\n      if (h.rtl) {\n        h.dropdownlistArrow.css(\"float\", \"left\");\n        h.dropdownlistContent.css(\"float\", \"right\");\n      }\n    },\n    destroy: function () {\n      a.jqx.utilities.resize(this.host, null, true);\n      this.removeHandler(this.listBoxContainer, \"select\");\n      this.removeHandler(this.listBoxContainer, \"unselect\");\n      this.removeHandler(this.listBoxContainer, \"change\");\n      this.removeHandler(this.dropdownlistWrapper, \"selectstart\");\n      this.removeHandler(this.dropdownlistWrapper, \"mousedown\");\n      this.removeHandler(this.host, \"keydown\");\n      this.removeHandler(this.listBoxContainer, \"select\");\n      this.removeHandler(this.listBox.content, \"click\");\n      this.removeHandler(this.listBoxContainer, \"bindingComplete\");\n\n      if (this.host.parents()) {\n        this.removeHandler(this.host.parents(), \"scroll.dropdownlist\" + this.element.id);\n      }\n\n      this.removeHandlers();\n      this.listBoxContainer.jqxListBox(\"destroy\");\n      this.listBoxContainer.remove();\n      this.host.removeClass();\n      this.removeHandler(a(document), \"mousedown.\" + this.id, this.closeOpenedListBox);\n\n      if (this.touch) {\n        this.removeHandler(a(document), a.jqx.mobile.getTouchEventName(\"touchstart\") + \".\" + this.id);\n      }\n\n      this.dropdownlistArrow.remove();\n      delete this.dropdownlistArrow;\n      delete this.dropdownlistWrapper;\n      delete this.listBoxContainer;\n      delete this.input;\n      delete this.arrow;\n      delete this.dropdownlistContent;\n      delete this.listBox;\n      delete this._firstDiv;\n      this.container.remove();\n      delete this.container;\n      var b = a.data(this.element, \"jqxDropDownList\");\n\n      if (b) {\n        delete b.instance;\n      }\n\n      this.host.removeData();\n      this.host.remove();\n      delete this.comboStructure;\n      delete this.host;\n      delete this.element;\n    },\n    _raiseEvent: function (g, c) {\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[g];\n      var e = c;\n      e.owner = this;\n      var f = new a.Event(d);\n      f.owner = this;\n\n      if (g == 2 || g == 3 || g == 4 || g == 5 || g == 6 || g == 7 || g == 8 || g == 9) {\n        f.args = c;\n      }\n\n      var b = this.host.trigger(f);\n      return b;\n    },\n    propertiesChangedHandler: function (b, c, e) {\n      if (e.width && e.height && Object.keys(e).length == 2) {\n        b._setSize();\n\n        if (c == \"width\") {\n          if (b.dropDownWidth == \"auto\") {\n            var d = b.host.width();\n            b.listBoxContainer.jqxListBox({\n              width: d\n            });\n            b.container.width(parseInt(d) + 25);\n          }\n        }\n\n        b._arrange();\n\n        b.close();\n      }\n    },\n    propertyChangedHandler: function (b, c, f, e) {\n      if (b.isInitialized == undefined || b.isInitialized == false) {\n        return;\n      }\n\n      if (b.batchUpdate && b.batchUpdate.width && b.batchUpdate.height && Object.keys(b.batchUpdate).length == 2) {\n        return;\n      }\n\n      if (c == \"template\") {\n        b.listBoxContainer.removeClass(b.toThemeProperty(\"jqx-\" + f + \"-item\"));\n        b.listBoxContainer.addClass(b.toThemeProperty(\"jqx-\" + b.template + \"-item\"));\n        b.host.removeClass(b.toThemeProperty(\"jqx-\" + f + \"\"));\n        b.host.addClass(b.toThemeProperty(\"jqx-\" + b.template + \"\"));\n      }\n\n      if (c == \"dropDownVerticalAlignment\") {\n        b.close();\n        b.arrow.removeClass(b.toThemeProperty(\"jqx-icon-arrow-up\"));\n        b.arrow.removeClass(b.toThemeProperty(\"jqx-icon-arrow-down\"));\n\n        if (b.dropDownVerticalAlignment == \"top\") {\n          b.arrow.addClass(b.toThemeProperty(\"jqx-icon-arrow-up\"));\n        } else {\n          b.arrow.addClass(b.toThemeProperty(\"jqx-icon-arrow-down\"));\n        }\n\n        b.listBoxContainer.css(\"top\", 0);\n        b.listBoxContainer.removeClass(this.toThemeProperty(\"jqx-popup-up\"));\n      }\n\n      if (c == \"autoItemsHeight\") {\n        b.listBoxContainer.jqxListBox({\n          autoItemsHeight: e\n        });\n      }\n\n      if (c == \"filterable\") {\n        b.listBoxContainer.jqxListBox({\n          filterable: e\n        });\n      }\n\n      if (c == \"filterHeight\") {\n        b.listBoxContainer.jqxListBox({\n          filterHeight: e\n        });\n      }\n\n      if (c == \"filterPlaceHolder\") {\n        b.listBoxContainer.jqxListBox({\n          filterPlaceHolder: e\n        });\n      }\n\n      if (c == \"filterDelay\") {\n        b.listBoxContainer.jqxListBox({\n          filterDelay: e\n        });\n      }\n\n      if (c == \"enableSelection\") {\n        b.listBoxContainer.jqxListBox({\n          enableSelection: e\n        });\n      }\n\n      if (c == \"enableHover\") {\n        b.listBoxContainer.jqxListBox({\n          enableHover: e\n        });\n      }\n\n      if (c == \"autoOpen\") {\n        b._updateHandlers();\n      }\n\n      if (c == \"emptyString\") {\n        b.listBox.emptyString = b.emptyString;\n      }\n\n      if (c == \"itemHeight\") {\n        b.listBoxContainer.jqxListBox({\n          itemHeight: e\n        });\n      }\n\n      if (c == \"renderer\") {\n        b.listBoxContainer.jqxListBox({\n          renderer: e\n        });\n      }\n\n      if (c == \"rtl\") {\n        if (e) {\n          b.dropdownlistArrow.css(\"float\", \"left\");\n          b.dropdownlistContent.css(\"float\", \"right\");\n        } else {\n          b.dropdownlistArrow.css(\"float\", \"right\");\n          b.dropdownlistContent.css(\"float\", \"left\");\n        }\n\n        b.listBoxContainer.jqxListBox({\n          rtl: b.rtl\n        });\n      }\n\n      if (c == \"source\") {\n        b.listBoxContainer.jqxListBox({\n          source: b.source\n        });\n        b.listBox.selectedIndex = -1;\n        b.listBox.selectIndex(this.selectedIndex);\n        b.renderSelection();\n\n        if (e == null) {\n          b.clear();\n        }\n      }\n\n      if (c == \"displayMember\" || c == \"valueMember\") {\n        b.listBoxContainer.jqxListBox({\n          displayMember: b.displayMember,\n          valueMember: b.valueMember\n        });\n        b.renderSelection();\n      }\n\n      if (c == \"placeHolder\") {\n        b.renderSelection();\n      }\n\n      if (c == \"theme\" && e != null) {\n        b.listBoxContainer.jqxListBox({\n          theme: e\n        });\n        b.listBoxContainer.addClass(b.toThemeProperty(\"jqx-popup\"));\n        a.jqx.utilities.setTheme(f, e, b.host);\n      }\n\n      if (c == \"autoDropDownHeight\") {\n        b.listBoxContainer.jqxListBox({\n          autoHeight: b.autoDropDownHeight\n        });\n\n        if (b.autoDropDownHeight) {\n          b.container.height(b.listBoxContainer.height() + 25);\n        } else {\n          b.listBoxContainer.jqxListBox({\n            height: b.dropDownHeight\n          });\n          b.container.height(parseInt(b.dropDownHeight) + 25);\n        }\n\n        b.listBox._arrange();\n\n        b.listBox._updatescrollbars();\n      }\n\n      if (c == \"searchMode\") {\n        b.listBoxContainer.jqxListBox({\n          searchMode: b.searchMode\n        });\n      }\n\n      if (c == \"incrementalSearch\") {\n        b.listBoxContainer.jqxListBox({\n          incrementalSearch: b.incrementalSearch\n        });\n      }\n\n      if (c == \"incrementalSearchDelay\") {\n        b.listBoxContainer.jqxListBox({\n          incrementalSearchDelay: b.incrementalSearchDelay\n        });\n      }\n\n      if (c == \"dropDownHeight\") {\n        if (!b.autoDropDownHeight) {\n          b.listBoxContainer.jqxListBox({\n            height: b.dropDownHeight\n          });\n          b.container.height(parseInt(b.dropDownHeight) + 25);\n        }\n      }\n\n      if (c == \"dropDownWidth\" || c == \"scrollBarSize\") {\n        var d = b.width;\n\n        if (b.dropDownWidth != \"auto\") {\n          d = b.dropDownWidth;\n        }\n\n        b.listBoxContainer.jqxListBox({\n          width: d,\n          scrollBarSize: b.scrollBarSize\n        });\n        b.container.width(parseInt(d) + 25);\n      }\n\n      if (c == \"width\" || c == \"height\") {\n        if (e != f) {\n          this.refresh();\n\n          if (c == \"width\") {\n            if (b.dropDownWidth == \"auto\") {\n              var d = 2 + b.host.width();\n              b.listBoxContainer.jqxListBox({\n                width: d\n              });\n              b.container.width(parseInt(d) + 25);\n            }\n          }\n\n          b.close();\n        }\n      }\n\n      if (c == \"checkboxes\") {\n        b.listBoxContainer.jqxListBox({\n          checkboxes: b.checkboxes\n        });\n      }\n\n      if (c == \"selectedIndex\") {\n        if (b.listBox != null) {\n          b.listBox.selectIndex(parseInt(e));\n          b.renderSelection();\n        }\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}